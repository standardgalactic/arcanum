FUNCTIONAL DECOMPOSITION AND
MEREOLOGY IN ENGINEERING
Pieter Vermaas and Pawel Garbacz
1
INTRODUCTION
A key characteristic of the engineering sciences is that their descriptions of phys-
ical objects and processes are cast not only in structural terms but in functional
terms as well. The engineering sciences share this characteristic with biology and
with some of the humanities. If, however, it is added that these functional de-
scriptions express the aims for which objects and processes can be employed, the
characteristic becomes more discriminative to the engineering sciences.
Functional descriptions in the engineering sciences have been analysed in philos-
ophy. The focus of these analyses has largely been on determining what is meant
when an individual technical object or process is ascribed a function.1 Functional
descriptions in the engineering sciences are, however, much richer than individual
ascriptions of functions. Design methodologists, for instance, often characterise
the initial conceptual phase of engineering designing as one in which engineers
reason from a required overall function of some product-to-be to a number of sub-
functions that can make up this overall function.2 In reverse engineering and other
explanatory tasks the reasoning may be the other way round, deriving an over-
all function from a series of subfunctions. And in engineering knowledge bases,
functional descriptions of technical objects, processes and their parts are related
to one another.3 This functional reasoning in the engineering sciences leads to
descriptions of technical systems in which diﬀerent functions are related to one
another. Functional reasoning leads in particular to functional decompositions,
which are descriptions in which one overall function is related to a series of sub-
functions that, together, make up the overall function. And functional reasoning
can be taken to deﬁne what can be called a functional part-whole relationship by
identifying the subfunctions in a functional decomposition as parts of the over-
all function that they make up. These interrelated functional descriptions have
1See Beth Preston’s chapter “Philosophical Theories of Artifact Function” in this Handbook.
2E.g., [Pahl and Beitz, 1996, Section 2.1; Umeda and Tomiyama, 1997; Chittaro and Kumar,
1998; Stone and Wood, 2000; Chakrabarti and Bligh, 2001; Kitamura et al., 2005/2006; Bell et
al., 2007]. See also Peter Kroes’ chapter “Foundational Issues of Engineering Design” in this
Handbook.
3See William H. Wood’s chapter “Computational Representations of Function in Engineering
Design” in this Handbook, in which reverse engineering also plays a role.
Handbook of the Philosophy of Science. Volume 9: Philosophy of Technology and Engineering
Sciences.
Volume editor: Anthonie Meijers. General editors: Dov M. Gabbay, Paul Thagard and John
Woods.
c⃝2009 Elsevier BV. All rights reserved.

236
Pieter Vermaas and Pawel Garbacz
received little to no philosophical attention, which probably becomes more clear
when it is noted that they are about functions only. In functional decomposi-
tions overall functions are related to subfunctions and not to, say, the structural
parts (the components) of the technical systems that have the overall functions.
The functional part-whole relationship described above is similarly a part-whole
relationship directly between functions and not a functionally-deﬁned structural
part-whole relationship between technical systems and their structural parts. A
wall, for instance, may be a functionally-deﬁned structural part of a house but
the wall is not a subfunction part of the function of the house; rather the function
to support is a functional part of the function to provide shelter. In this chapter
we consider interrelated functional descriptions of technical systems, speciﬁcally
functional decompositions and the functional part-whole relationship that such
decompositions deﬁne.4 Yet, given the embryonic stage of research, we cannot do
more than announcing them as a topic for philosophical analysis; in this chapter
we give a ﬁrst explorative analysis and an incomprehensive sketch of what this
analysis may have in store.
1.1
Functional descriptions in engineering
To pin down functional descriptions, functional decompositions and the functional
part-whole relationship to which they lead, we introduce some initial notation, an-
ticipating a more thorough exposition in Section 2. Let Φ be the function that is
decomposed and let φ1, φ2, . . ., φn be the subfunctions into which Φ is decomposed.
We write this down as Decomp(Φ, Org(φ1, φ2, . . ., φn)), where Org(φ1, φ2, . . ., φn)
refers to a functional organisation, that is, a set of functional orderings of the
subfunctions φ1, φ2, . . ., φn. This organisation is introduced, and in Section 2 we
do this more systematically, in order to capture that the ordering of subfunctions
matters in functional decompositions. If, for instance, the functions φ1 to heat
with 150 degrees centigrade and φ2 to cool with 150 degrees centigrade are tempo-
rally ordered, one has two possibilities, which lead to diﬀerent overall functions:
in the area of food processing, the ordering “φ1 and then φ2” may make up the
function to bake; and the ordering “φ2 and then φ1” may make up the func-
tion to refrigerate. Hence, an initial reading of Decomp(Φ, Org(φ1, φ2, . . ., φn)) is
that the subfunctions φ1, φ2, . . ., φn ordered by the organisation Org(φ1, φ2, . . ., φn)
provide a decomposition of the function Φ. In general there exist in engineer-
ing more than one decompositions of a given function Φ, hence a reading of
Decomp(Φ, Org(φ1, φ2, . . ., φn)) in which the subfunctions φ1, φ2, . . ., φn ordered
by Org(φ1, φ2, . . ., φn) are presented as the unique decomposition of Φ, is to be
avoided.
A decomposition Decomp(Φ, Org(φ1, φ2, . . ., φn)) is a description in
which the subfunctions φ1, φ2, . . ., φn are related to one another by the organi-
sation Org(φ1, φ2, . . ., φn), and are in that organisation making up the function Φ.
Moreover, the subfunctions φ1, φ2, . . ., φn can be taken as the functional parts of
the overall function Φ.
4See [Simons and Dement, 1996] for an analysis of the structural part-whole relations between
technical systems.

Functional Decomposition and Mereology in Engineering
237
With this notation Decomp(Φ, Org(φ1, φ2, . . ., φn)), functional decomposition
is analysed in primarily functional terms. The analysis is made broader by also in-
cluding the objects and processes that are described in functional descriptions. Let
S be a technical system that is described functionally by Φ, and let s1, s2, . . ., sn
be the systems that are described by φ1, φ2, . . ., φn, respectively (the systems
s1, s2, . . ., sn are functionally-deﬁned structural parts of S; in Section 2.1 we discuss
the relation between the systems s1, s2, . . ., sn and S in detail). With references
to these systems we can, for instance, characterise more precisely the engineering
activities in which functional descriptions play a role.
Conceptual designing, for instance, can be analysed as follows. The starting
point of conceptual designing is an overall function Φ and the aim is to determine
the physical description of a system S, that is, the product-to-be, that can per-
form this function Φ. Assuming that this aim cannot be realised immediately by
the engineers, i.e., assuming that they cannot derive the physical description of S
directly from the description of the overall function, engineers reason by the follow-
ing intermediate steps. First, they determine a series of subfunctions φ1, φ2, . . ., φn
and an organisation Org(φ1, φ2, . . ., φn) that deﬁnes a decomposition Decomp(Φ,
Org(φ1, φ2, . . ., φn)) of the overall function. Second, engineers determine objects
and processes s1, s2, . . ., sn that can perform these subfunctions φ1, φ2, . . ., φn, re-
spectively. And, ﬁnally, they arrive at a physical description of S from the or-
ganisation Org(φ1, φ2, . . ., φn) of the subfunctions5 and the physical descriptions
of s1, s2, . . ., sn.6 If the description of the overall function Φ is very detailed, one
may assume that the entity S consists of only the entities s1, s2, . . ., sn, but if this
description is a coarse-grained one, say when Φ is only the primary function of the
product-to-be, then S may also contain other entities. Think, for instance, of an
aeroplane. If Φ is merely the primary function to ﬂy, then the subfunctions in a
functional decomposition Decomp(Φ, Org(φ1, φ2, . . ., φn)) of this overall function
do not single out the systems that enable emergency evacuations of the passengers
and crew. But if Φ refers to the more detailed function of to ﬂy safely, then a
functional decomposition should identify more of these latter systems.
In reverse engineering the overall function Φ and the physical description of
the system S are initially known, and the aim is to derive the subfunctions
φ1, φ2, . . ., φn, their organisation Org(φ1, φ2, . . ., φn) and the systems s1, s2, . . ., sn
that perform these subfunctions.7
5De Ridder [2007, Chapter 4] has argued that functional decompositions help engineers in
reasoning from a purely functional description Φ of a product-to-be S to its physical descrip-
tion since especially the organisation of the subfunctions φ1, φ2, . . ., φn gives engineers early in
the design process information about the spatiotemporal structure of the product: even if the
systems s1, s2, . . ., sn are still only functionally characterised by φ1, φ2, . . ., φn, the organisation
Org(φ1, φ2, . . ., φn) ﬁxes how these systems s1, s2, . . ., sn are spatiotemporally related.
6Conceptual designing is not a process in which these three steps are taken one after the
other; in engineering design literature it is emphasised that designing is an iterative process.
7In reverse engineering some of the systems s1, s2, . . ., sn may also be known initially. The
objects in the set {s1, s2, . . ., sn} are technical components of S, and it seems reasonable to assume
that engineers are able to recognise some of those components. The processes in {s1, s2, . . ., sn}
may, however, be more diﬃcult to identify.

238
Pieter Vermaas and Pawel Garbacz
In engineering knowledge bases, functional descriptions of technical systems
contain all functions Φ, φ1, φ2, . . ., φn related to one another through organisations
Org(φ1, φ2, . . ., φn) and decompositions Decomp(Φ, Org(φ1, φ2, . . ., φn)).8 These
functional description may also contain the systems S, s1, s2, . . ., sn, and, con-
versely and more typically, descriptions in engineering knowledge bases are de-
scriptions of the systems S, s1, s2, . . ., sn to which the functions Φ, φ1, φ2, . . ., φn
are added.
With these characterisations of engineering activities, one can also to some ex-
tent formulate criteria that functional descriptions and functional reasoning should
meet in order to be useful. In conceptual designing the subfunctions φ1, φ2, . . ., φn
should be ones for which, given the technological state of the art, one has avail-
able or can ﬁnd easily the systems s1, s2, . . ., sn that can perform them (see also
Section 5). Decomposing, for instance, a function to emit light into the subfunc-
tions to collect acoustic energy and to convert acoustic energy in light does not
help in ﬁnding via the entities s1 and s2 a physical description of a light source
S: currently systems s2 that can perform the function to convert acoustic en-
ergy in light are technologically not available. In reverse engineering, assuming
that the description of the overall function Φ is suﬃciently detailed, the systems
s1, s2, . . ., sn should make up together a substantial part of S, in order to avoid
the conclusion that the original designers of S added all kinds of spurious systems
to their design of S. Finally, one of the goals for developing knowledge bases is to
enhance communication about functional descriptions among engineers of diﬀerent
disciplinary backgrounds, between engineers and computer tools like CAD/CAM
systems, and among computer systems. For achieving this goal, at least the sub-
functions φ1, φ2, . . ., φn can be chosen from a standardised set (cf. [Hirtz et al.,
2002]; see also Section 5).
1.2
Relevance
The analysis of functional descriptions will be of relevance to a number of existing
topics in philosophy, thus providing new and renewed links between the philosophy
of the engineering sciences and other more classical domains in philosophy. We see
four of such domains: philosophy of technology and philosophy of biology, both
speciﬁcally with respect to accounts of functions, and epistemology and mereology.
Existing philosophical accounts of the concept of technical functions provide
input to the analysis of functional descriptions, and this analysis can in turn
be seen as a next step in developing these accounts. The analysis of functional
descriptions may in this way yield criteria for judging the accounts, for it is not
yet clear if all these accounts can provide for a basis suﬃcient for taking this next
step (we come back to this point in Section 3).
8Alternatively one can analyse functional descriptions in engineering knowledge bases
as descriptions containing functions Φ, φ1, φ2, . . ., φn related to one another through or-
ganisations Org(φ1, φ2, . . ., φn) and a composition
function (in the mathematical sense)
Comp(Org(φ1, φ2, . . ., φn)) = Φ expressing that the subfunctions φ1, φ2, . . ., φn ordered by
Org(φ1, φ2, . . ., φn) make up Φ. We introduce this composition relation in Section 2.

Functional Decomposition and Mereology in Engineering
239
Since the analysis of technical functions is typically related and contrasted to
the analysis of biological functions, it is to be expected that the analysis of func-
tional descriptions establishes a similar interaction with philosophy of biology.9
In that domain there already is attention for the biological counterpart of func-
tional decompositions (e.g., [Wimsatt, 2002]), which is especially manifested in the
philosophy of science and epistemology literature on mechanistic explanations. In
that literature scientiﬁc discoveries in biology and other sciences are interpreted as
discoveries and explanation of mechanisms [Machamer et al., 2000; Craver, 2001;
Bechtel and Abrahamsen, 2005], where the concept of mechanisms is sometimes
explicitly introduced by means of technical artefacts [Craver and Bechtel, 2006].
In such explanations activities of mechanisms are analysed in terms of the organ-
ised10 objects and activities that make up mechanisms. Mechanistic explanations
and functional descriptions in engineering are clearly related (Bechtel and Abra-
hamsen [2005, pp. 432—433] even speak about functional decompositions in the
context of mechanistic explanations). A mechanism can arguably be interpreted
in engineering as the entity S, the mechanism’s activity as the overall functions
Φ, and the entities and activities that make up the mechanism as the objects and
processes s1, s2, . . ., sn, revealing the epistemic dimension of functional decompo-
sitions as explanations. Functional reasoning in engineering is thus a form of ex-
planatory reasoning, albeit one that provides more types of explanations than the
one referred to in mechanistic explanations. In conceptual designing a functional
decomposition of the overall function Φ of the product-to-be S implies also an
explanation of the function Φ in terms of the organised subfunctions φ1, φ2, . . ., φn
of the systems s1, s2, . . ., sn (see [de Ridder, 2006]). In reverse engineering and
in knowledge bases, functional descriptions may, however, represent reasoning in
which the subfunctions φ1, φ2, . . ., φn and their organisation are, in reverse order,
explained in terms of overall functions Φ. We will not further develop these links
between engineering functional descriptions, functional descriptions in biology and
functional reasoning in epistemology,11 apart from a few isolated remarks in our
concluding Section 6.
Functional decompositions deﬁne in two ways part-whole relationships and their
analysis may contribute to logic and speciﬁcally mereology. First, functional de-
compositions deﬁne a part-whole relation between the systems S and s1, s2, . . ., sn,
with S taking the role of whole and s1, s2, . . ., sn taking the role of parts. These
parts are called functional components by Peter Simons and Charles Dement [1996,
p. 264] and we called them functionally-deﬁned structural parts. Simons and De-
ment have argued that this part-whole relationship is diﬀerent to a number of
other part-whole relationships that are in use in engineering, and that it is not
9Through this interaction with biological theories of functions, it may be expected that the
analysis of functional decompositions in engineering will eventually also interact with philosophy
of mind and the philosophy of the cognitive sciences, since accounts of biological functions are
applied in these two domains.
10Our notion of the organisation of functions Org(φ1, φ2, . . ., φn) is adapted from the notion
of organisation as used in the literature on mechanistic explanations.
11See [Houkes, 2006] for a broader discussion of functional reasoning in engineering.

240
Pieter Vermaas and Pawel Garbacz
coinciding with the standard notion of the part-whole relationship as deﬁned in
mereology. Second, functional decompositions deﬁne a part-whole relation directly
on the level of functions, that is, between the functions Φ and φ1, φ2, . . ., φn, with
Φ taking the role of whole and φ1, φ2, . . ., φn taking the role of parts. We called this
the functional part-whole relationship and this second relationship is to our knowl-
edge not yet considered in mereology even though it may be taken as inducing the
ﬁrst structural part-whole relationship between the systems S and s1, s2, . . ., sn,
since these systems are singled out by the functions Φ and φ1, φ2, . . ., φn (we come
back to the functional part-whole relationship in Section 4).
In addition to being relevant to philosophy, the analysis of functional descrip-
tions can also be of beneﬁt to engineering. Clearly engineering is initially primarily
a source to this analysis. But when it will advance, philosophical analysis may
contribute to the diﬀerent engineering uses of functional descriptions. Conceptual
clarity provided by the diﬀerent accounts of technical functions may be of beneﬁt to
engineering as a whole; research on the epistemology of functional decompositions
will be more of use to design methodology and to functional reasoning, whereas re-
search on mereology may prove to be of value for developing engineering ontologies
for knowledge bases (we come back to these points in Section 5).
1.3
Our plan
In the next section we develop our characterisation of functional descriptions by
deﬁning the organisation Org(φ1, φ2, . . ., φn) of sets of functions and the compo-
sition Comp(Org(φ1, φ2, . . ., φn)) of such sets. Then we discuss in Section 3 the
extent to which existing philosophical accounts of technical functions provide al-
ready means for carrying out the analysis and how these accounts may in turn
be aﬀected by the analysis. In Section 4 we focus on mereology and in Section 5
we consider engineering work on functional decompositions and illustrate how this
may interact with philosophical research on the topic.
2
FUNCTIONAL ORGANISATION AND FUNCTIONAL COMPOSITION
In the previous section we introduced functional decomposition as a relation
Decomp(Φ, Org(φ1, φ2, . . . , φn)) that is to be read as that the subfunctions
φ1, φ2, . . . , φn ordered by the organisation Org(φ1, φ2, . . . , φn) provide a de-
composition of the function Φ. For deﬁning this relation more formally, we here
describe functional descriptions in general and more systematically. We start by
introducing organisations Org(φ1, φ2, . . . , φn) of functions, then we introduce
compositions Comp(Org(φ1, φ2, . . . , φn)) of such organisations of functions, and
ﬁnally we deﬁne decompositions Decomp(Φ, Org(φ1, φ2, . . . , φn)) in terms of such
compositions.
Let, ﬁrstly, F be the set of all functions of technical systems. This set contains
thus both the overall function Φ and the subfunctions φ1, φ2, . . . , φn in the case
of a decomposition Decomp(Φ, Org(φ1, φ2, . . . , φn)).

Functional Decomposition and Mereology in Engineering
241
Deﬁne, secondly, “→” as a relation of functional ordering between two functions
φ and φ′ in F that expresses that functional output of φ is functional input to φ′.
Functional input and output of a function are for now primitive terms; in Section 5
we discuss an engineering approach to functional decomposition in which this input
and output consist of ﬂows of materials, signals and energies, yet other choices —
the functional input and output may consist of forces and ﬁelds — are not ruled
out. But, having this approach in mind, we assume that a functional ordering
φ →φ′ implies the temporal ordering that φ is not later than φ′. The ordering
is in general neither symmetric nor reﬂexive, but for speciﬁc functions φ and φ′
it may hold that φ →φ′ and φ′ →φ, or that φ →φ: a force can be functional
output of φ and functional input to φ′, while the reaction force is output of φ′
and input to φ; heat may be functional output of φ and functional input to other
functions but also input to φ itself. A functional ordering φ →φ′ is represented
by an ordered pair ⟨φ, φ′⟩that belongs to the Cartesian product F×F.
Deﬁne, thirdly, a functional organisation Org(φ1, φ2, . . ., φn) of a set {φ1, φ2, . . .,
φn} of functions as a set {φi →φj} of functional orderings of φ1, φ2, . . ., φn. A
functional organisation Org(φ1, φ2, . . ., φn) is thus a, not necessarily connected,
network of orderings between the functions φ1, φ2, . . ., φn, as depicted in the ﬁgures
1 and 2.
A functional organisation Org(φ1, φ2, . . ., φn) is represented by a set
{⟨φi, φj⟩} of ordered pairs from the Cartesian product F×F.
Figure 1. A linear functional organisation
Networks of organised sets {φ1, φ2, . . ., φn} of functions in F, like those depicted
in ﬁgures 1 and 2, are in engineering taken as making up other functions Φ in F.
We capture this by deﬁning, fourthly, functional composition Comp(Org(φ1, φ2,
. . ., φn)) which maps the functions φ1, φ2, . . ., φn in their organisation Org(φ1, φ2,
. . ., φn) to this function Φ, that is, Comp(Org(φ1, φ2, . . ., φn)) = Φ. Formally, the
general notion of functional composition is represented by a set of ordered pairs
⟨{⟨φi, φj⟩}, Φ⟩that contains a set {⟨φi, φj⟩} of ordered functions from F×F and
a function Φ deﬁned on F.
Yet, functional composition Comp does not map every set {⟨φi, φj⟩} in F×F
onto another function Φ in F. Engineering constraints rule out some ordered
pairs ⟨φk, φl⟩as representing possible functional orderings φk →φl, and if a set

242
Pieter Vermaas and Pawel Garbacz
Figure 2. A more complex functional organisation
{⟨φi, φj⟩} is containing one or more of such impossible orderings, then this set
{⟨φi, φj⟩} neither represents a functional organisation Org(φ1, φ2, . . ., φn), nor is
mapped by Comp to another function in F. A general example of an engineering
constraint on functional orderings φk →φl is that φk is not later than φl since
then functional output of φk cannot possibly be functional input to φl. And in
the approach in which functional inputs and outputs are ﬂows of materials, sig-
nals and energies, one can derive more speciﬁc constraints: if, for instance, φk has
electricity as its functional output, it cannot provide input to a function φl that
has only water as its functional input.
With functional composition deﬁned, we are now able to deﬁne the general
notion of functional decomposition as a relation Decomp(Φ, Org(φ1, φ2, . . ., φn))
represented by a set of ordered pairs ⟨Φ, {⟨φi, φj⟩}⟩such that a function Φ from
F occupies their ﬁrst argument place and a set {⟨φi, φj⟩} of ordered functions
from F×F occupies the second argument place. For this relation it holds that
Decomp(Φ, Org(φ1, φ2, . . ., φn)) if and only if Comp(Org(φ1, φ2, . . ., φn)) = Φ. In
other words, the relation Decomp is the inverse relation to Comp. A more verbose
reading of this decomposition relation Decomp(Φ, Org(φ1, φ2, . . ., φn)) is thus that
the subfunctions φ1, φ2, . . ., φn ordered by the organisation Org(φ1, φ2, . . ., φn) pro-
vide a decomposition of the function Φ, since the composition Comp(Org(φ1, φ2,
. . ., φn)) of φ1, φ2, . . ., φn ordered by Org(φ1, φ2, . . ., φn) is equal to Φ.
We assume that functional composition Comp(Org(φ1, φ2, . . ., φn)) is unique in
the sense that a set of functions {φ1, φ2, . . ., φn} organised by Org(φ1, φ2, . . ., φn)
composes one function Φ. Yet we assume also that other compositions Comp(Org
(φ′
1, φ′
2, . . ., φ′
n′)) may compose that same function Φ as well; engineering practices

Functional Decomposition and Mereology in Engineering
243
provide evidence for this latter assumption. Hence, a given function Φ may be
decomposable in more than one way, meaning that Decomp(Φ, Org(φ1, φ2, . . ., φn))
should indeed not be read as that the set of functions {φ1, φ2, . . ., φn} ordered by
Org(φ1, φ2, . . ., φn) is the unique decomposition of Φ.
In sum, both functional
composition Comp and functional decomposition Decomp are relations, but only
the former is in the mathematical sense a function.
2.1
Technical systems
With the above concepts and deﬁnitions, the analysis of functional descriptions
is given in primarily functional terms; only in the functional ordering relation
between two functions φ and φ′ there is a reference to the temporal ordering: φ is
not later than φ′. The functions in functional descriptions are, however, functions
of technical systems, and we now broaden our analysis to those systems to make
the concepts and deﬁnitions more tangible.
Let s be the system that is described by the function φ, and adopt the convention
that s1, s2, . . ., sn and S are the systems described by the functions φ1, φ2, . . ., φn
and Φ, respectively.12 In general a function φ does not single out uniquely one sys-
tem s due to the underdetermination that exists between functional and structural
descriptions of systems; a function φ rather ﬁxes a set of entities {s} that have
that function: the function to conduct an electric current can be performed by a
copper wire, but also by other technical systems. Conversely, for a system s there
exists in general a set {φ} of functions it can perform: a copper pipe can conduct
electricity but also guide a ﬂuid or gas. A technical system s can, moreover, be
an endurant or a perdurant;13 up to now we sloppily alluded to this distinction
by distinguishing between technical systems that are objects and those that are
processes, respectively. A consequence of these observations is that a functional
organisation of a set of functions {φ1, φ2, . . ., φn} does not in general translate
straightforwardly into an associated spatiotemporal organisation of a set of sys-
tems {s1, s2, . . ., sn}, and vice versa. There exist, for instance, functions φ that
can describe both endurants and perdurants: the function to prevent depletion of
soil, for instance, describes fertilizers (endurants) and rotary crop systems (perdu-
rants).14 A functional organisation of a set of functions {φ1, φ2, . . ., φn} containing
12In the examples discussed in this chapter the entities s1, s2, . . ., sn are all diﬀerent systems:
system si is thus by our convention straightforwardly described by the function φi. More complex
cases are possible as well. Two functions φj and φk, may, for instance, describe the same system,
which then implies that the associated systems sj and sk are one and the same.
13We use the terms “endurant” and “perdurant” in the standard philosophical sense, i.e., an
endurant is an entity that persists through time by being wholly present at more than one time
and a perdurant is entity that persists through time by having diﬀerent temporal parts or stages
at diﬀerent times (cf., for instance, [Lewis, 1986]). Nonetheless, we do not want to engage in the
debate between threedimensionalism and fourdimensionalim, in which these terms are applied.
Without accepting or rejecting the actual existence of endurants and perdurants, we just provide
a theoretically broad framework, which makes room for both types of entities.
14One can distinguish in general three types of functions: functions φ that single out only
endurants {s} (the function to support the back and bottoms of humans, for instance, seems to

244
Pieter Vermaas and Pawel Garbacz
such a “hybrid” function, clearly deﬁnes spatiotemporal organisations of the set
of systems s1, s2, . . ., sn, that may be mutually quite diﬀerent. And two ordered
or unordered functions φ1 and φ2 may be performed by one system (the two func-
tions to conduct an electrical current and to guide water may be performed by one
single copper pipe), meaning that the functional organisation may even be lost all
together.
For analysing relationships between functional organisations of sets of functions
and the associated organisations of the sets of technical systems, we continue
by considering four special cases deﬁned by the ontological opposition between
endurants and perdurants. We sketch how in these examples the functional or-
ganisation of the functions φ1, φ2, . . ., φn is related to the spatiotemporal organ-
isation of the systems s1, s2, . . ., sn.
In the ﬁrst two cases the systems in the
set {s1, s2, . . ., sn} are all endurants and each si is functionally described by one
separate function φi from the set of functions {φ1, φ2, . . ., φn}. In the ﬁrst case
the function Φ that composes φ1, φ2, . . ., φn in their functional organisation, i.e.,
Φ = Comp(Org(φ1, φ2, . . ., φn)), describes a system S that is an endurant as well;
in the second case this function describes a system S that is a perdurant. In the
third and fourth case the systems {s1, s2, . . ., sn} are all perdurants, is each si
functionally described by one separate function φi, and is the composite function
Φ describing an endurant S or a perdurant S, respectively.
Table 1. The four special cases
s1, s2, . . . , sn
S
Case 1
endurants
endurant
Case 2
endurants
perdurant
Case 3
perdurants
endurant
Case 4
perdurants
perdurant
So, let us start with considering the ﬁrst two cases in which the functions
φ1, φ2, . . ., φn are all functions of diﬀerent endurants s1, s2, . . ., sn. These endurants
are spatially positioned relative to one another and this positioning determines
which of the endurants s1, s2, . . ., sn can physically interact with one another in a
technological relevant way.15 There may, for instance, be a technologically relevant
single out diﬀerent chairs but not processes); functions φ that single out only perdurants (say,
the function to provide health care); and functions for which the set {s} contains both endurants
and perdurants (to prevent depletion of soil, as argued in the main text). Further examples of
the third type reveal also that a function φ of an endurant s may sometimes be reinterpretable as
a function φ of a perdurant s′ that takes place in that endurant s, and vice versa: the function
to tear down city walls of the endurant “cannon”, for instance, can be taken alternatively as a
function of the perdurant “shooting cannon balls” with that cannon, and vice versa.
15Engineering determines what technologically relevant physical interactions are. In electrical
engineering, electromagnetic interactions are relevant, in mechanical engineering, action and
reaction forces are relevant, and so on.

Functional Decomposition and Mereology in Engineering
245
interaction between the endurants s1 and s2, but not between s1 and s3, and so on.
Let us now capture this spatial positioning by the set of unordered pairs {{si, sj}}
of endurants that do interact and call this the spatial organisation of the endurants
{s1, s2, . . ., sn}. Assuming that the functional output of one function φ can only be
the functional input to another function φ′ through physical interactions between
the systems s and s′ that these functions are describing, this spatial organisation of
{s1, s2, . . ., sn} puts a direct constraint on the functional ordering of the functions
φ1, φ2, . . ., φn and thus on their functional organisation: Org(φ1, φ2, . . ., φn) can
consist of only a set {φi →φj} of functional orderings for which holds that for
each element φi →φj the pair {si, sj} is an element of the spatial ordering of the
endurants {s1, s2, . . ., sn}.
The system S that is functionally described by the function Φ=Comp(Org(φ1,
φ2, . . ., φn)), is now in its turn either an endurant or a perdurant.
If S is an
endurant, it is to be taken as an endurant that contains the physical composite
of the endurants s1, s2, . . ., sn in their spatial organisation.16 If S is a perdurant,
it is to be taken as a perdurant in which an endurant that contains that physical
composite participates.
An example of the ﬁrst case is the composition of the three functions to attach
to the seabed (φ1), to ﬁx distance (φ2) and to attach to the vessel (φ3) of the
three endurants “anchor”, “rope” and “knot”, yielding the function to ﬁx the
location of a vessel in open sea of an endurant “anchoring system”. The right
spatial positioning of the anchor, rope and knot, allows action and reaction forces
between the anchor and rope, and between the rope and the knot. Hence the
spatial organisation of these endurants is captured by the set {{anchor, rope},
{rope, knot}}. The functional organisation Org(φ1, φ2, φ3) of the three functions
is {φ1 →φ2, φ2 →φ1, φ2 →φ3, φ3 →φ2} with the functional inputs and outputs
all forces, and this organisation satisﬁes the constraint that the spatial organisation
puts on it. The endurant S consisting of anchor, rope and knot in their spatial
organisation can perform the function Comp(Org(φ1, φ2, φ3)) = Φ of ﬁxing a ship.
An example of the second case is the composition of the functions to remove
solid particles (φ1), to absorb particles in solution (φ2) and to sieve bacteria (φ3)
of the diﬀerent reservoirs s1, s2 and s3 (which are assumed to be endurants) part of
a wastewater plant, yielding the function to purify water of the perdurant “ water
treatment” (i.e., the process) that is performed by the plant. Assuming a linear
spatial positioning of the reservoirs, ﬂuids can ﬂow from s1 to s2, and from s2 to
s3 letting the spatial organisation be equal to {{s1, s2}, {s2, s3}}. The functional
organisation of the three functions is {φ1 →φ2, φ2 →φ3} (see also Figure 1) with
the functional inputs and outputs all ﬂuids in diﬀerent phases of cleansing, and
this organisation satisﬁes the constraint that the spatial organisation puts on it.
The perdurant S is the water treatment process that takes place in the reservoirs
16One may assume that the endurant S is just the physical composite of the endurants
{s1, s2, . . ., sn}. This assumption is however challenged by the occurrence of all types of back-up
systems and other safety systems in technical systems. It thus seems more tenable to hold that
the physical composite of {s1, s2, . . ., sn} is part of S.

246
Pieter Vermaas and Pawel Garbacz
in their linear spatial organisation and this process can perform the composite
function Φ to purify water.
In the third and fourth case that we consider, the functions φ1, φ2, . . ., φn are all
functions of diﬀerent perdurants s1, s2, . . ., sn. These perdurants are spatiotem-
porally positioned relative to one another and this positioning again determines
which pairs of perdurants can physically interact with one another in a techno-
logical relevant way. If two perdurants si and sj take place simultaneously and
in one another’s vicinity, such an interaction can take place from si to sj and
fromsj to si. Such bidirectional interactions are represented in the spatiotemporal
organisation of the perdurants s1, s2, . . ., sn by unordered pairs {si, sj}, similar
to the interactions between the endurants discussed in the ﬁrst two cases. If a
perdurant sk takes place before another sl, interaction is possible only from sk
to sl. These unidirectional interactions are particular to sets of perdurants and
we represent them by ordered pairs ⟨sk, sl⟩.
The spatiotemporal organisation
of the perdurants s1, s2, . . ., sn thus has the form {{si, sj}, ⟨sk, sl⟩}. Assuming
again that the functional output of one function can only be the functional in-
put to another function through a physical interaction, this spatial organisation
of {s1, s2, . . ., sn} puts again a constraint on the functional organisation of these
functions: Org(φ1, φ2, . . ., φn) can consist of only a set {φi →φj} of functional
orderings for which holds that for each element φi →φj the pair {si, sj} or ⟨si, sj⟩
is an element of the spatiotemporal ordering of the perdurants {s1, s2, . . ., sn}.
The system S that is functional described by the function Φ=Comp(Org(φ1, φ2,
. . ., φn)) is an endurant or a perdurant. If S is an endurant, it is to be taken
as an endurant which participates (possibly only partially) in the perdurants
s1, s2, . . ., sn in their spatiotemporal organisation.
If S is a perdurant, it is to
be taken as a perdurant that consists of the perdurants {s1, s2, . . ., sn} in their
spatiotemporal organisation.
An example of the third case is the composition of the functional organisa-
tion of the functions to spin (φ1), to collect water (φ2), to produce hot dry air
(φ3) and to vent humid air (φ4) of the four processes s1, s2, s3 and s4 that per-
form them in a drying machine (the endurant S), yielding the function Φ to dry
clothes of that machine. The four processes can take place simultaneously, giv-
ing a spatiotemporal organisation containing every possible combination {si, sj}.
The functional organisation Org(φ1, φ2, φ3, φ4) is {φ1 →φ2, φ3 →φ4} with the
functional inputs and outputs all consisting of water, and this organisation sat-
isﬁes clearly the constraint that the spatiotemporal organisation of the processes
{s1, s2, s3, s4} puts on it. The endurant S “drying machine” can perform the func-
tion Comp(Org(φ1, φ2, φ3, φ4)) = Φ of drying clothes.
indent An example of the fourth and ﬁnal case is the composition of the func-
tions to emit radio waves with a speciﬁc frequency (φ1), to detect radio waves
with the same frequency (φ2) and to display the direction and the delay of the
reﬂected waves (φ3) of processes s1, s2 and s3 (perdurants) that take place in
the radar equipment, yielding the function to detect plane positions of a process
S (also a perdurant) that includes these three (sub)processes {s1, s2, s3}. If the

Functional Decomposition and Mereology in Engineering
247
processes s1, s2 and s3 take place one after the other, their spatiotemporal organ-
isation is given by {⟨s1, s2⟩, ⟨s2, s3⟩}. The functional organisation Org(φ1, φ2, φ3)
is {φ1 →φ2, φ2 →φ3} with the functional inputs and outputs all signals, and this
organisation satisﬁes the constraint that the spatiotemporal organisation of the
perdurants {s1, s2, s3} puts on it. The perdurant S containing the three processes
s1, s2 and s3 can perform the function Comp(Org(φ1, φ2, φ3)) = Φ of detecting
the positions of planes.
These four special cases suggest the following generalisation. For a functional
description of the technical systems {s1, s2, . . ., sn, S} by means of the functions
{φ1, φ2, . . ., φn, Φ}, where Comp(Org(φ1, φ2, . . ., φn)) = Φ and where the tech-
nologically relevant physical interactions between the systems {s1, s2, . . ., sn} are
given by the spatiotemporal organisation {{si, sj}, ⟨sk, sl⟩}, the following con-
straint on the functional organisation holds: Org(φ1, φ2, . . ., φn) can consist of
only a set {φi →φj} of functional orderings for which holds that for each element
φi →φj the pair {si, sj} or the pair ⟨si, sj⟩is an element of the spatiotemporal
ordering of the perdurants {s1, s2, . . ., sn}. This constraint is most probably not
the only one that is possible or reasonable. One can envisage also that in engi-
neering one wants to limit the number of technological relevant (and irrelevant)
physical interactions between the systems {s1, s2, . . ., sn} that are not required by
the functional organisation Org(φ1, φ2, . . ., φn); such ‘spurious’ interactions may,
for instance, lead to unintended eﬀects. Moreover, the systems {s1, s2, . . ., sn} are
all systems that have by deﬁnition functions, meaning that the endurants and
perdurants part of S that do not have functions are ignored; including such non-
functional systems in the description will most probably again amount to all kinds
of constraints.
3
FUNCTIONAL DESCRIPTIONS AND PHILOSOPHICAL ACCOUNTS OF
TECHNICAL FUNCTIONS
Philosophy has, as we have noted, produced a number of accounts that spell out
what it means to describe individual technical objects or processes functionally.17
These accounts may be taken as a starting point for the analysis of functional de-
scriptions, and this analysis can in turn be seen as a next step in the development
of the accounts. We present here three archetypical approaches towards techni-
cal functions18 and assess them for their ability to be developed to also describe
more complex functional descriptions. The analysis of functional descriptions be-
comes as such also a criterion for judging the versatility of the existing accounts
of technical functions to incorporating engineering activities such as functional
decomposition.
In the ﬁrst approach functions of technical systems are analysed in terms of the
intentions of their designers or of their users: the function of a system is taken as
17See Preston’s chapter Philosophical Theories of Artifact Function in this Handbook.
18[Houkes and Vermaas, 2009].

248
Pieter Vermaas and Pawel Garbacz
the capacity or goal for which it is designed or for which it is used. This approach
can be called the intentionalist approach. An example is the account of technical
functions by Karen Neander in which “the function of an artifact is the purpose
or end for which it was designed, made, or (minimally) put in place or retained by
an agent” [1991a; 1991b, p. 462]. The second approach emphasises the physical
structure of technical systems and identiﬁes the functions of parts of a system
as the parts’ actual physical capacities that, together, causally contribute to a
physical capacity of that system. This approach can be called the causal-role ap-
proach (the systems functions approach may be an alternative) and it was Robert
Cummins [1975] who put it forward in detail. The third approach towards tech-
nical functions is one that deﬁnes functions relative to long-term developmental
histories of technical systems. It takes distance from individual design processes
of technical systems and individual uses, and focuses instead on their cultural dis-
semination. It identiﬁes the function of a system with the capacity for which the
system is reproduced for a longer period of time. This ﬁnal approach can be called
the evolutionist approach.19 The example is now Ruth Garrett Millikan’s notion
of proper function [1984; 1993].
Of these three approaches especially the causal-role approach provides more
than just an analysis of what it means to describe individual systems functionally.
In this approach a set of actual capacities c1, c2, . . ., cn of a set of parts s1, s2, . . ., sn
of a technical system that, together, causally contribute to a physical capacity C of
that system, are all simultaneously taken as the functions φ1, φ2, . . ., φn of the parts
s1, s2, . . ., sn. Hence, in this approach one has at once a functional description that
consists of multiple functions {φ1, φ2, . . ., φn} and of a spatiotemporal organisa-
tion of the parts s1, s2, . . ., sn that puts constraints on the functional organisation
Org(φ1, φ2, . . ., φn) of these functions.
Moreover, the interactions between the
parts s1, s2, . . ., sn required for letting the capacities c1, c2, . . ., cn causally con-
tribute to the physical capacity C, provides more deﬁnite information about the
functional organisation Org(φ1, φ2, . . ., φn).20
Conversely, functional descriptions containing the functions φ1, φ2, . . . , φn and
Φ with Comp(Org(φ1, φ2, . . . , φn))=Φ, and describing sets of technical systems
{s1, s2, . . . , sn, S}, plausibly ﬁt the causal-role account. In this account the func-
tions φ1, φ2, . . . , φn, Φ single out capacities c1, c2, . . . , cn, C of the systems s1, s2,
. . . , sn, S for which has to hold that, ﬁrstly, the systems s1, s2, . . . , sn are parts
of S and, secondly, the capacities c1, c2, . . . , cn contribute causally to the capacity
19The evolutionist approach has its origin in the analysis of biological functions and theories
that fall under this approach are called etiological theories in that domain. In Preston’s chap-
ter in this handbook, the evolutionist approach falls under the heading of non-intentionalist
reproduction views.
20In the causal-role approach a system s can have more than one function: s may have a
capacity c as its function φ since c causally contributes to a capacity C of a system S, s may
have a capacity c′, diﬀerent to c, as its function φ′ since c′ causally contributes to a capacity C′
of a system S′, and so on. We here ignore questions about the relations between these multiple
functions and consider only the organisation of the functions that parts s1, s2, . . ., sn have on the
basis of their causal contributions to one capacity C of one system S.

Functional Decomposition and Mereology in Engineering
249
C. On the basis of the discussion of the four cases of functional composition given
in section 2.1, the ﬁrst condition plausibly holds and the second also although it
introduces an explicit commitment that functions compose overall functions due
to causal contributions. Consider, for instance, the example of the composition of
the three functions to attach to the seabed, to ﬁx distance and to attach to the ves-
sel of anchor, rope and knot, yielding the function to ﬁx the location of a vessel in
open sea of an anchoring system. This example ﬁts the causal-role approach, since
the anchor, rope and knot are parts of the anchoring system and the capacities
corresponding to their functions are causally contributing to the capacity “ﬁxing
the location of a vessel in open sea” of the anchoring system as a whole.
Intentionalist approaches, in which users determine by their intentions the func-
tions of technical systems, provide less means to analyse functional descriptions;
intentionalist approaches that put designers at centre stage in determining func-
tions, fare better. A technical system that is used for a speciﬁc capacity can in a
user-intentionalist approach be ascribed that capacity as a function. Yet, for also
ascribing functions to parts of that system, one has to assume that these parts
are also intentionally used for speciﬁc capacities. This latter assumption seems,
however, in general less tenable. In the anchoring-system example, for instance,
it can be maintained that the system as a whole is intentionally used to ﬁx the
location of a vessel in open sea, but it is less tenable to maintain that a sailor
who is throwing out an anchor line, uses the anchor for its capacity to attach
to the seabed, the rope for its capacity to ﬁx distance, and the knot for its ca-
pacity to attach to the vessel. Hence, user-intentionalist approaches provide for
descriptions consisting of single functions ascribed to single systems, but may fail
to give more complex functional descriptions. A designer-intentionalist approach
can create such complex functional descriptions, since it can be maintained that
designers in addition to designing technical systems as wholes, also design their
parts intentionally. In the anchoring-system example, for instance, it can be said
that the system as a whole, and the anchor, rope and knot were designed for the
capacities to ﬁx the location of a vessel in open sea, to attach to the seabed, to
ﬁx distance and to attach to the vessel, respectively. A ﬁrst conclusion about the
intentionalist approach seems therefore that it should de-emphasise the relevance
of user intentions in the determination of functions of technical systems, in favour
of designer intentions: designer-intentionalist approaches seem better equipped
to incorporate more complex engineering functional descriptions. The account of
technical functions as put forward by Wybo Houkes and Pieter Vermaas,21 is an
example of a designer-intentionalist approach (it incorporates also elements of the
causal-role and evolutionist approaches). In this account engineers can ascribe a
capacity C as a function Φ to a technical system S as a whole, ascribe capacities
c1, c2, . . . , cn as functions φ1, φ2, . . . , φn to parts s1, s2, . . . , sn of S, and relate
these functions [Vermaas, 2006]. The diﬀerence with the causal-role approach is
that in the Houkes-Vermaas account the entities S and s1, s2, . . . , sn need not
actually have the capacities C and c1, c2, . . . , cn, respectively; the engineers need
21[Houkes and Vermaas, 2004; Vermaas and Houkes, 2006].

250
Pieter Vermaas and Pawel Garbacz
only to have justiﬁed beliefs about S and s1, s2, . . . , sn having these capacities
and about the capacities c1, c2, . . . , cn contributing to the capacity c.
Conversely, functional descriptions containing the functions {φ1, φ2, . . . , φn, Φ}
with Comp(Org(φ1, φ2, . . . , φn))=Φ, and describing sets of technical systems {s1,
s2, . . . , sn, S}, plausibly ﬁt designer-intentionalist approaches, since, for instance,
such functional descriptions can be taken as supported by the beliefs of designers.
For evaluating the construction of functional descriptions in evolutionist ap-
proaches, again a distinction is to be made between approaches that put users at
centre stage and those that favour designers. Let a designer-evolutionist approach
be one in which a function φ of a technical system s is the capacity c for which
designers reproduce s’s, say by including s’s repeatedly in their designs as systems
that can perform the capacity c.
Such evolutionist approaches can provide for functional descriptions like func-
tional compositions. Anchor systems are repeatedly included in designs of ships
for the capacity to ﬁx the location of a vessel in open sea, so this capacity be-
comes the anchor system’s function Φ in a designer-evolutionist approach. And
also anchors, ropes and knots are repeatedly included in designs for the capacities
to attach to the seabed, to ﬁx distance and to attach to the vessel, respectively, so
also these capacities become the functions φ1, φ2 and φ3 of the anchor, rope and
knot part of the anchoring system.
In a user-evolutionist approach, in which a function φ of a technical system s
is the capacity c for which users (let) reproduce s’s by using s’s repeatedly for
the capacity c, more complex functional descriptions may in general be harder to
create. The reason for this is that it is less tenable to maintain that users (let)
reproduce parts s of larger systems S for a speciﬁc capacity c. Consider again the
anchoring system S and the anchor s1, rope s2 and knot s3. The reproduction of
the whole system S due to user demands does now not necessarily imply that the
parts s1, s2 and s3 are also reproduced due to user demands. Due to the underde-
termination that exists between functions and systems, a technological innovation
may make that at some point in time some of the parts of the anchoring system
are changed. The rope s2 may, for instance, be changed into a chain s′
2 and the
knot s3 by a welded joint s′
3. In an extreme case there may exist for a speciﬁc
system S with a ﬁxed function Φ a number of diﬀerent sets {s1, s2, . . . , sn},
{s′
1, s′
2, . . . , s′
n}, . . . of parts by means of which S can be constructed, showing
that reproduction of S need not imply reproduction of its parts. This conclusion
may be rejected by taking systems consisting of diﬀerent parts also as diﬀerent
systems: one could take the position that the anchoring system consisting of the
anchor s1, chain s′
2 and welded joint s′
3 is a diﬀerent system S′ as compared to
the anchoring system S consisting of the anchor s1, rope s2 and knot s3. By that
position reproduction of the old anchoring system S still implies reproduction of
the anchor s1, rope s2 and knot s3 as well, and reproduction of the new anchor-
ing system S′ implies reproductions of the anchor s1, chain s′
2 and welded joint
s′
3. For anchoring systems this position may be tenable, but from an engineering
perspective this position is less plausible for more complex technical systems. In

Functional Decomposition and Mereology in Engineering
251
technical systems like cars and industrial plants, simple parts like wires, pipes and
switches can typically be replaced by alternative parts, and this replacement does
not immediately turn those systems from an engineering point of view into new
systems. The conclusion that this reproduction of technical systems S due to user
demands does not in general imply that the parts of S are reproduced by those
user demands as well, may also be rejected by noting that in the case of parts
the users should be identiﬁed with the designers of the system S: user demands
make that whole systems are reproduced and make that designers reproduce the
parts of those systems. This position, however, turns a user-evolutionist approach
towards functions into a designer-evolutionist approach. Hence, our ﬁrst conclu-
sion about evolutionist approaches is that they should de-emphasise the relevance
of the reproduction of systems due to user demands in the determination of their
functions, in favour of the reproduction of those systems by designers.22
Conversely, functional descriptions containing the functions {φ1, φ2, . . . , φn, Φ}
with Comp(Org(φ1, φ2, . . . , φn))=Φ, and describing sets of technical systems {s1,
s2, . . . , sn, S}, plausibly ﬁt designer-evolutionist approaches. In those approaches
the systems {s1, s2, . . . , sn, S} have the their functions {φ1, φ2, . . . , φn, Φ} only
if designers have reproduced for a longer period those systems for the capacities
corresponding to their functions {φ1, φ2, . . . , φn, Φ}, and the fact that designers
did so, provides support to the conclusion that the functions φ1, φ2, . . . , φn
compose in their functional organisation to Φ.
Our assessment of the three philosophical approaches towards technical func-
tions is clearly a preliminary one that needs to be developed. This development
is bound to correct our conclusions that the causal-role approach is suitable to an
analysis of functional decomposition, and that the intentionalist and evolutionist
approaches are so only if they de-emphasise the role of user intentions and of user
demands in their respective analyses of functions of technical systems.
4
THE FUNCTIONAL PART-WHOLE RELATIONSHIP AND MEREOLOGY
Functional descriptions, and speciﬁcally functional decompositions Decomp(Φ,
Org(φ1, φ2, . . . , φn)) and compositions Comp(Org(φ1, φ2, . . . , φn))=Φ, amount
to a part-whole relation directly on the level of functions, where the overall func-
tion Φ takes the role of whole and the subfunctions φ1, φ2, . . . , φn take the role
22Another attempt to save user-evolutionist approaches may consist of an argument that draws
on the distinction between “selection for” and “selection of” as made in [Sober, 1993] in the
context of biological evolutionary theory. One may assume that the evolution of technical systems
can be described by a technological version of this theory and then argue that user demands
amounts to a selection of systems S “for” the capacities corresponding to their functions Φ, which
in turn amounts to a selection “of” the parts s1, s2, . . . , sn with the capacities corresponding
to their functions {φ1, φ2, . . . , φn}.
This argument seems, however, again blocked by the
underdetermination phenomenon that a particular system S can in principle be constructed
from diﬀerent sets {s1, s2, . . . , sn}, {s′
1, s′
2, . . . , s′
n}, . . .
of parts: a selection of S “for” the
capacity corresponding to its function Φ does not unambiguously amount to a selection “of” a
speciﬁc set of parts s1, s2, . . . , sn.

252
Pieter Vermaas and Pawel Garbacz
of parts. This analysis of functional descriptions faces, however, a serious problem
with the understanding of the term “part”. If we understand the relation of part-
hood in the sense establish by standard mereology, then one can derive a number
of consequences for subfunctions and overall functions that at least at ﬁrst sight
are incompatible with the engineering understanding of functional descriptions.
In this section we present this problem and discuss possible solutions. First, we
brieﬂy sketch one of the possible axiomatisations of mereology. Then we expose the
consequences involved in expressing the relation of being a subfunction in terms of
the mereological relation of parthood. Finally, we try to investigate whether the
current state of the art in philosophy and logic provides with some feasible means
to work around the problem.
So let us start with mereology itself. We cannot provide here a comprehensive
exposition of the formal theory of mereology.23
The following axiomatisation,
which is one among a number of equivalent systems, is given just for the sake of
reference.
Alfred Tarski formalised the standard mereology originally formulated by Sta-
nislaw Le´sniewski (cf.
the English translation of his works in [Srzednicki and
Rickey, 1984]) by means of one primitive term: the relation of (improper) part-
hood denoted here by “≤”, where “x ≤y” is to be read as “x is an improper part
of y”. Tarski’s axiomatisation contains two axioms:
(4.1)
If x ≤y and y ≤z, then x ≤z.
(4.2)
If X ̸= ∅, then there exists exactly one x such that x SUM X.
The expression “x SUM X” means that x is the mereological sum of the set X.
The relation SUM is deﬁned as follows:24
(4.3)
x SUM X ≡∀y ∈X (y ≤x) ∧¬∃y (y ≤x ∧∀z ∈Xy ∫z).
(4.4)
x ∫y ≡¬∃z(z ≤x ∧z ≤y).
The expression “x ∫y” is to be read as: x is disjoint from y. The complement
of the relation of disjointness is the relation of overlap, which is usually denoted
by “⃝”.
The problem now arises when we assume that axioms 4.1 and 4.2 apply to
the domain of technical functions. If mereology is to be considered as a useful
tool in analysing the part-whole relationship between subfunctions and overall
functions, we must assume some kind of correspondence between this relationship
and mereological terms. A suitable candidate mereological term for establishing
this correspondence seems to be the relation SUM.
(4.5)
The functions {φ1, φ2, . . ., φn} are subfunctions of the function Φ iﬀΦ SUM
{φ1, φ2, . . ., φn}.
23An interested reader may consult [Simons, 1987] and [Casati and Varzi, 1999].
24Cf. [Tarski, 1956].

Functional Decomposition and Mereology in Engineering
253
There are, however, a number of reasons to reject this choice. First, one can argue
that SUM is not the proper relation to connect subfunctions and overall functions.
Axiom 4.2 guarantees that for any non-empty set of functions, there exists the
mereological sum of these functions. By means of 4.5 one thus has for any set of
functions {φ1, φ2, . . . , φn} an overall function Φ that has them as subfunctions,
meaning that for any set of functions {φ1, φ2, . . . , φn} there is a function Φ that
can count as the composition of these functions. Yet, one can envisage sets of
functions for which this will not be the case. Consider, for instance, the set {to
maintain a pressure of 1 atmosphere in vessel x at time t, to maintain a pressure
of 2 atmosphere in vessel x at time t}; by their intentional meaning it seems
impossible to compose these two functions.25 Using the terminology deﬁned in
Section 2, we can explicate this fact by saying that for some sets of functions there
does not exist any organisation by which they can be composed: an organisation
of the function to maintain a pressure of 1 atmosphere in vessel x at time t and
the functions to maintain a pressure of 2 atmosphere in vessel x at time t does not
exist since these two functions cannot be temporally ordered one after the other,
nor ordered simultaneously.
Second, also if sets of functions {φ1, φ2, . . . , φn} properly compose overall
functions Φ by SUM, there may be scientiﬁc and engineering reasons to neverthe-
less deny that they deﬁne reasonable compositions. The functions in the set {to
cool, to allow a magnetic degree of freedom, to process a login request signal, to
sand} may be taken as composing the overall function to smooth surfaces. But
that composition seems also technologically nonsensical by the spurious ﬁrst three
elements. The reason for this embarrass de richesse is the fact that mereology
lacks the conceptual tools needed to express any kind of scientiﬁc or engineering
constraint or standard.
Again, using the terminology deﬁned in Section 2, we
can formulate this second fact by saying that for some sets of functions speciﬁc
organisations are from a scientiﬁc or engineering point of view (better) ruled out.
Third, Axiom 4.3 guarantees that any non-empty set of functions composes
exactly one other function. Consequently, if there are two engineering models in
which the same set of subfunctions composes diﬀerent functions due to diﬀerent
orderings between the subfunctions, the embedding of the functional part-whole
relationship into mereology by 4.5 turns out to be inadequate. That such sets
exist was brieﬂy indicated at the beginning of section 1.1. Let φ1 be the function
to heat with 150 degrees centigrade, let φ2 be to keep the temperature ﬁxed, and
let φ3 be to cool with 150 degrees centigrade. If these functions are performed
sequentially in the order given, they may be taken as composing the function
Φ1 to bake, but if they are performed in reverse order, they compose the overall
function Φ2 to refrigerate. Again, the source of this incongruity seems to be the
25[Simons, 2006] is one of the recent attempts at restricting the general principle of composition.
Simons proposes to restrict this principle to the equivalence classes of mereologically disjoint
objects. That is to say, if X is an equivalence class of this kind, then there exists such x that
x SUM X. For instance, if we deﬁne in the set of protons and neutrons the relation: x exchanges
gluons with y, then this relation will yield the equivalence classes of protons and neutrons such
that each such class compose a single nucleus.

254
Pieter Vermaas and Pawel Garbacz
fact that we cannot express in mereology any kind of order among subfunctions,
whereas ordering seems vital to functional composition and was therefore part
to our characterisation of it. Using the terminology deﬁned in Section 2, we can
formulate this consequence by saying that for some sets of functions there can exist
more than one organisation by which the functions in these set compose mutually
diﬀerent overall functions: for the functions {φ1, φ2, φ3} introduced above one
has, for instance, Org1(φ1, φ2, φ3) given by the orderings {φ1 →φ2, φ2 →φ3},
which deﬁnes the composition Comp(Org1(φ1, φ2, φ3))=Φ1, and Org2(φ1, φ2, φ3)
given by {φ3→φ2, φ2→φ1}, which deﬁnes Comp(Org2(φ1, φ2, φ3)) = Φ2 ̸= Φ1.
In sum, 4.5 is not a plausible candidate for a conceptual bridge between mere-
ology and the functional part-whole relationship. Now the problem with applying
mereology to functional descriptions is that there are not many alternatives to
4.5 available.26 The above consequences derived from 4.5 suggest replacing the
SUM relation with a more ﬂexible expressive composition relation since some sets
of functions do not (reasonably) compose27 whereas other sets of functions have
more than one composition.
In a recent proposal to describe components of technical systems in mereolog-
ical terms as given by Peter Simons and Charles Dement [1996] this ﬂexibility
may seem to be present.28 Their proposal presupposes one of the strategies of
reconciling mereology with the real world, consisting of proclaiming that besides
the notion of parthood deﬁned in standard mereology, there are a number of more
speciﬁc relations of parthood, e.g., being a functional part or being a component
(cf. [Casati and Varzi, 1999, pp. 33—36]). These more speciﬁc relations need
not satisfy all the requirements imposed by Le´sniewski on the general relation of
parthood.
First, we need to emphasise that Simons and Dement focus on functional parts
of technical systems and not on subfunctions part of overall functions. Thus, their
theory applies to what we have called the functionally-deﬁned structural part-
whole relationship between physical systems.
Being in a seminal way sensitive to the gap between standard mereology and
actual engineering, Simons and Dement suggest substituting the general notion of
part with a more speciﬁc notion that would be applicable to technical systems.
The latter notion is tensed: x is part of y at time t. The following axioms establish
the formal properties of the relation that captures this speciﬁc notion:
(4.6)
If x exists at time t, then x is part of x at t.
26The problems with applying mereology outside the domain of mathematics are well inves-
tigated (cf. Rescher [1955], Casati and Varzi [1999], Pribbenow [2002], Johansson [2004]). But,
due to the fact that functional descriptions have not received much philosophical attention, there
are not yet solutions available that deal speciﬁcally with the problems associated with applying
mereology to functional descriptions.
27[Simons, 2006] takes this approach in mereology, as is described in an above footnote.
28Other attempts at deﬁning the notion of parthood suitable for technical systems may be found
in [Tzouvaras, 1993], [Salustri and Lockledge, 1999], [Johansson, 2004] and [Vieu and Aurnague,
2005]. Nonetheless, none of these accounts concerns functional descriptions as discussed of this
chapter.

Functional Decomposition and Mereology in Engineering
255
(4.7)
If x is part of y at time t, then x exists at t.
(4.8)
If x is part of y at time t and y is part of z at t, then x is part of z at t.
(4.9)
If x is a proper part of y at time t, then there exists z such that z is a
proper part of y at t and x is disjoint from (i.e., does not overlap) z at t.
Simons and Dement deﬁne the relation of proper parthood and the relation of
overlap in the following way.
(4.10) x is a proper part of y at time t iﬀx is part of y at t and y is not part of x
at t.
(4.11) x overlaps y at time t iﬀthere exists some z such that z is part of x at t
and z is part of y at t.
If one ignores for a moment the tensed character of the relation parthood in
question, the theory developed in [Simons and Dement, 1996] might be seen as
a weaker version of standard mereology. In particular, we do not ﬁnd here the
counterpart of Axiom 4.2, so none of the aforementioned mereological paradoxes
occurs here.
Simons and Dement claim further that the relation they deﬁne provides the
most general framework for speaking about the mereology of technical systems.
From a philosophical point of view, we may distinguish within this framework the
following kinds of parts:
• assembly components, which are those parts that are manipulated as units
during the processes of assembly or manufacturing,
• functional components, which are those parts that perform certain functions,
• maintenance components, which are those parts that are manipulated as
units during the process of repairing,
and a number of other kinds.
The actual engineering practice involves however more speciﬁc notions. Simons
and Dement draw our attention to three kinds of mereological structures related
to three diﬀerent engineering speciﬁcations of parts of technical systems.
The
engineering bill of materials represents the mereological components of the ab-
stract physical architecture of a given system. The manufacturing bill of materials
represents the mereological structure determined by a manufacturing schema for
constructing the technical system in question. Finally, the logistic bill of materials
speciﬁes those components of the system that are salient for maintaining it in a
state of readiness (cf. [Simons and Dement, 1996, pp. 268—271]).
Despite its conceptual complexity and despite the fact that it avoids the afore-
mentioned paradoxes of standard mereology, Simons and Dement’s theory of the
mereological structure of technical systems is not meant to be applied to the mod-
elling of functional part-whole relations, and seems also not to be applicable to

256
Pieter Vermaas and Pawel Garbacz
it. Their theory does not make room for our notion of organisation or for some
similar notion, which we believe is an indispensable aspect of any adequate con-
ception of the functional part-whole relation. As a result, they can say neither
that two parts of a technical system are sometimes not meaningfully or consis-
tently combinable, nor that two subfunctions are sometimes not meaningfully or
consistently combinable. And as a result, Simons and Dement cannot say that two
parts of a technical system, or two subfunctions, are sometimes in multiple ways
meaningfully and consistently combinable.
As we can see again, mereological language as available in the literature is not
expressive enough to capture functional part-whole relationship. In our charac-
terisation of functional descriptions we introduced the concept of organisation to
create this expressiveness. A way to improve on the conceptual bridge 4.5 be-
tween the functional part-whole relationship and mereology, may now seem be one
in which this concept is explicitly introduced into the bridge. Using the notation
deﬁned in Section 2, we can rewrite 4.5 as 4.5*.
(4.5*) Comp(Org(φ1, φ2, . . . , φn))=Φ iﬀΦ SUM {φ1, φ2, . . . , φn}.
4.5* clearly implies 4.12.29
(4.12) For any set of functions φ1, φ2, . . . , φn,
(i)
there is an organisation Org of these functions such that there exists
a function Φ, for which it holds that Comp(Org(φ1, φ2, . . . , φn))=Φ,
and
(ii) for any two organisations of those functions Org1 and Org2, if Comp
(Org1(φ1, φ2, . . . , φn))=Φ1, and Comp(Org2(φ1, φ2, . . . , φn))=Φ2,
then Φ1=Φ2.
In general, 4.12 is false. As we argued above, for some sets of functions there do
not exist organisations or reasonable organisations of the functions and for other
sets of functions there exist more than one (meaningful) organisation relative to
which they compose mutually diﬀerent functions. Still, in some restricted domains
of engineering the speciﬁc organisation of subfunctions might not be that relevant,
i.e., it may not aﬀect the overall functions to which these subfunctions compose.
If one describes a domain of this sort, then 4.5 can be seen as a deﬁnition of the
purely mereological type of functional part-whole relation (within this domain).
The example of the purely temporally organised functions to heat with 150 degrees
centigrade, to keep the temperature ﬁxed and to cool with 150 degrees centigrade,
shows that temporal functional part-whole relations are in general not of such a
mereological type. But more special cases of such temporal functional part-whole
relations, or of speciﬁc spatial functional part-whole relations may be. Obviously,
all these types are borderline cases of the more general spatiotemporal part-whole
relationship deﬁned in Section 2 and this general relationship is not mereological
in the standard sense.
29The implication from the left-hand side to the right-hand side in 4.5* is innocent; it is the
reverse implication that should be blamed here.

Functional Decomposition and Mereology in Engineering
257
5
AN ENGINEERING APPROACH TO FUNCTIONAL DECOMPOSITIONS
Engineering designing is, as we mentioned in the introduction, one of the engineer-
ing domains in which functional descriptions are in use. In the ﬁrst conceptual
phase of designing initial requirements about the product-to-be — user needs and
additional speciﬁcation about, for instance, safety — are translated into overall
functions of the product and these functions are then by functional decompositions
analysed in terms of series of subfunctions. Yet, the description of conceptual de-
signing is far from being unambiguous: the initial design requirements are rarely
standardised and often acknowledged to change during the unfolding of the design
process, and the resulting overall functions and their decompositions are usually
expressed in informal terms, not meeting rigorous constraints. As a result design
methodologists interested in analysing and improving conceptual designing, are
facing the problem how to deﬁne and represent functions and their decomposi-
tions more rigorously, a problem that has become increasingly important by the
growing use of computers systems, such as CAD/CAM tools, to support engineer-
ing design. Among the diﬀerent conceptual models that are devised to solve this
problem,30 we report here about what has become known as the Functional Mod-
elling approach, since it provides relatively well-deﬁned descriptions of functional
decompositions, by which we can illustrate how engineering and philosophical re-
search on functional decompositions can beneﬁt from one another. The origin of
this approach can be located in the fundamental work of Gerhard Pahl and Wolf-
gang Beitz [1996]; current research centres on a framework proposed by Robert
Stone and Kristin Wood [2000]. We start by discussing Pahl and Beitz’ original
ideas of associating functions with ﬂows, and then move to current research on
what has become known as the Reconciled Functional Basis.31
Pahl and Beitz deﬁne a function as a relation between an input and an output
of a technical system (under a speciﬁc goal) and claim that technical functions are
derived from ﬂows [1996, p. 31]. A ﬂow is either a conversion of material (e.g., a
chunk of clay being converted into a vase), a conversion of energy (e.g., electrical
energy being converted into heat), or a conversion of signal (e.g., a safety buzz
indicating the high pressure of a vapour).
Pahl and Beitz do not spell out what it means that functions are derived from
ﬂows. But in their deﬁnitions and examples they presuppose that any function
boils down to a ﬂow, for instance, when they refer to a function denoted by the
expression “transfer torque”, which clearly is a ﬂow of torque.
30Research in design methodology is not converging to a single approach to functional descrip-
tions or to functional decomposition. Authors use, and acknowledged to use, diﬀerent notions
of functions of technical systems and diﬀerent ways of representing systems (see, e.g., [Umeda
and Tomiyama, 1997; Chittaro and Kumar, 1998; Hubka and Eder, 2001]) and arrive at diﬀerent
models of, for instance, functional modelling (see, e.g., [Chandrasekaran, 2005; Far and Elamy,
2005; Van Eck et al., 2007] for surveys).
31The functional modelling approach is also discussed in William H. Wood’s chapter “Compu-
tational Representations of Function in Engineering Design” in this Handbook.

258
Pieter Vermaas and Pawel Garbacz
Pahl and Beitz then continue with observing that an overall function of a tech-
nical system can be complex or less complex in three senses: the relationships be-
tween the input and the output of the technical system may be relatively opaque or
rather transparent; the underlying physical processes might be intricate or simple;
and, ﬁnally, the number of assemblies and component might be higher or lower.
They suggest that in the case of functions of high complexity it is advisable to
decompose such functions into subfunctions for three reasons:
• to facilitate the subsequent search for design solutions,
• to obtain simple and unambiguous function structures, and
• to modularise the process of developing technical systems and their subsys-
tems.
These subfunctions are in turn relations between inputs and outputs deﬁned in
terms of the three ﬂows, and are linked to one another by a causal net of such ﬂows.
This structure of subfunctions and ﬂows as a whole should now establish the same
relation between an input and an output as the overall function it decomposes.
Any two subfunctions that are linked together by a certain ﬂow in such a causal
net need to be “compatible” and all subfunctions of a given overall function need
to be combined in a “meaningful” way. Although it is unclear what Pahl and Beitz
mean with these terms, they observe that the relationship between subfunctions
and overall function is very often governed by certain constraints, inasmuch as
some subfunctions have to be satisﬁed before others.
Moreover, the Pahl and
Beitz methodology leads to the question of whether there is a level at which the
decomposition stops or eﬀectively stops. Pahl and Beitz consider ﬁve types of
conversions that they take as reasonably not sub-dividable, being to channel, to
connect, to vary, to change and to store. Together with their distinction between
ﬂows of material, energy and signal, one arrives at a taxonomy of 15 basic functions
occurring at the lower level of functional decompositions. In later developments,
topic of the next part of this section, especially this taxonomy has been changed.
Captured in our terminology, Pahl and Beitz arrive at functional decomposi-
tions Decomp(Φ, Org(φ1, φ2, . . . , φn)), where Pahl and Beitz’ overall function is
Φ, the subfunctions are φ1, φ2, . . . , φn, and the causal net of ﬂows deﬁnes the
organisation Org(φ1, φ2, . . . , φn) of these subfunctions (each ﬂow in the net from
one subfunction φi to another φj, deﬁnes a functional ordering φi →φj, and vice
versa, meaning that Org(φ1, φ2, . . . , φn) represents all connections in the net).
Compared to our analysis of functional descriptions as given in Section 2, Pahl
and Beitz introduce a number of additional assumptions. It seems at ﬁrst sight
that in their methodology the overall function Φ and the subfunctions φ1, φ2, . . . ,
φn in a functional decomposition are all typically describing systems S, s1, s2,
. . . , sn that are perdurants, since conversions of ﬂows refer to processes. However,
the examples mentioned by Pahl and Beitz are functions of endurants — objects
— and not of perdurants. That is, even if a function is a ﬂow, i.e., a subtype

Functional Decomposition and Mereology in Engineering
259
of perdurant, this function is not a function of a perdurant; functions are special
cases of perdurants that are ascribed to endurants.
Second, by taking functions as conversions of ﬂows of materials, energies and
signals, functions seem to have to comply with physical conservation laws for such
ﬂows. The conversion of a signal ﬂow representing a small amount of energy, into
a much larger electromagnetic energy ﬂow, seems not to be a possible function in
Pahl and Beitz’ methodology.32
Finally, in a functional decomposition Decomp(Φ, Org(φ1, φ2, . . . , φn)) the
subfunctions φ1, φ2, . . . , φn, are according to Pahl and Beitz ultimately not just
any functions from the general set F of functions, but to be taken from the set
of 15 conversions that are reasonably not sub-dividable. These subfunctions can
thus only be to channel, to connect, to vary, to change and to store for materials,
energies and signals.
When evaluating our analysis of functional descriptions with the methodology of
Pahl and Beitz, a ﬁrst remark can be that our functional ordering relation φi →φj
may be (too) coarse-grained. In our analysis this relation holds already if there
is “something” that can count as functional output of φi that is functional input
to φj. In the Pahl and Beitz methodology this something is categorised as (types
of) materials, energies and signals. This opens the possibility to develop our anal-
ysis by distinguishing between (associated) diﬀerent types of functional ordering
relations between functions. Other ways of developing our analysis can be drawn
from the second and third additional assumptions sketched above. These assump-
tions are also made in more recent work in the Functional Modelling approach to
functional decompositions, suggesting that our analysis of functional descriptions
as given in Section 2 is too liberal: in order to let it cohere more with engineering
work on functional descriptions, we should incorporate a requirement that func-
tional descriptions comply with physical conservation laws and a requirement that
all functions can be decomposed in terms of what can be called basic functions.
Our analysis does not provide the means to formulate the ﬁrst requirement; for
incorporating the second requirement we can deﬁne a set BF of basic functions
and the condition that for all functions Φ in F there exists a decomposition De-
comp(Φ, Org(φ1, φ2, . . ., φn)) with {φ1, φ2, . . ., φn} ⊆BF.
Taking some distance from the work of Pahl and Beitz, one can, however, doubt
that especially the second additional assumption that functional descriptions have
to comply with physical conservation laws holds for all engineering work on func-
tional decomposition. Bell et al. [2007], for instance, accept functions that have
a signal representing a small amount of energy as their input and a much larger
32That functions in the Functional Modelling approach have to comply with conservation laws
is not explicitly said by Pahl and Beitz or in the key publications on the Reconciled Functional
Basis discussed later in this section. Yet, examples of conversions of material and energy ﬂows
that are clearly violating conservation laws are hard to ﬁnd, and the tracking of (conserved) ﬂows
seems to be an important device in developing functional decomposition in Functional Modelling.
Modarres and Cheon [1999], however, make an explicit link between functions and conservation
laws in (their work on) Functional Modelling.

260
Pieter Vermaas and Pawel Garbacz
electromagnetic energy ﬂow as their output.33 The physics that underlies such a
function will clearly have to comply with conservation laws, but the input-output
description of the function itself does not. The analysis of functional descriptions
as given in Section 2, may therefore also be taken as a more general analysis,
compared to which the additional assumptions in engineering methodologies for
functional decomposition like the ones made by Pahl and Beitz can be analysed.
This brings us to the beneﬁts of philosophical research on functional descriptions to
engineering: a philosophical analysis of such descriptions can help design method-
ologists with making their assumption explicit and with developing their work on
functional decomposition. According to Pahl and Beitz the functions in decom-
positions are functions of endurants, but the examples given in Section 2.1 show
that one can generalise functional decompositions to apply to also functions of
perdurants.
According to Pahl and Beitz functions comply with physical con-
servation laws, but this requirement may be dropped. And also the requirement
that functions always have to be decomposable into functions from a set of basic
functions may be questioned. One can, for instance, argue that this requirement
has a context-dependent meaning. If functional decomposition is considered in
the context of conceptual designing, this requirement may be that functions have
to be decomposable into functions φ1, φ2, . . . , φn from a set of easily solvable
functions, that is, from a set of functions for which, given the technological state
of the art, one has available or can ﬁnd easily the systems s1, s2, . . . , sn that can
perform them (see also Section 1.1). Such a set of easily solvable functions varies
with that technological state of the art. If, however, functional decomposition is
considered in the context of engineering knowledge bases aimed at enhancing com-
munication about functional descriptions among engineers, this requirement may
have the form that functions are to be decomposable into functions φ′
1, φ′
2, . . ., φ′
n′
from a standardised set of functions, irrespectively of whether the functions in this
set are easily solvable. Such a standardised set clearly should not vary (too much)
over time.
5.1
The reconciled functional basis
A more recent research project that originates with the foundational work of Pahl
and Beitz is the Reconciled Functional Basis project. This Reconciled Functional
Basis (RFB, from now on) is the result of an eﬀort towards establishing a standard
taxonomy of basic technical functions (see, e.g., [Hirtz et al., 2002]) by reconciling
two previous taxonomies: the NIST taxonomy (cf. [Szykman, et al., 1999]) and
the older versions of the Functional Basis (developed in [Little et al., 1997; Stone
et al., 1998; McAdams et al., 1999; Stone et al., 1999; Stone and Wood, 2000]).
Each of these taxonomies is a result of empirical generalisation of engineering
speciﬁcations.
RFB analyses the notion of a functional decomposition against the background
of its taxonomy of functions, which is based on a taxonomy of ﬂows. RFB modiﬁes
33See, for instance, their model of a torch [Bell et al., 2007, p. 401].

Functional Decomposition and Mereology in Engineering
261
the meaning of the term “ﬂow” since here “ﬂow” does not mean “a process of
ﬂowing” (e.g., removing debris), but “a thing that ﬂows” (e.g., debris).34 More
precisely speaking, in some papers, e.g., in [Stone and Wood, 2000] this term is
used in both meanings, but the RFB taxonomy of ﬂows is based on the latter sense.
This shift in meaning is, to be sure, justiﬁable since it is hard to see how one might
diﬀerentiate between a process of ﬂowing and a function given the conception of
Pahl and Beitz. The RFB whole taxonomy of ﬂows is depicted in Table 2.
RFB also contains a three-layer classiﬁcation of what are called basic functions.
Each type of function is accompanied by a deﬁnition (in natural language), ex-
ample, and a set of synonymous names. The basic functions are divided in a ﬁrst
layer into eight primary types. Then, some primary basic functions are divided into
types of secondary basic functions, and some of these secondary basic functions
are in turn divided into types of tertiary basic functions. The whole taxonomy is
depicted in Table 3.
Of course, the RFB taxonomy of basic functions is not a model of functional
decomposition. For instance, the fact that Divide and Extract are subtypes of
Separate does not mean that the former are subfunctions of the latter. Moreover
the basic functions are not functions in the sense the overall functions are, since the
overall functions are (complex) modiﬁcations of speciﬁc input ﬂows into speciﬁc
output ﬂows, whereas the basic functions are modiﬁcations generalised for the
ﬂows subjected. Hence, the basic subfunctions are in the RFB to be identiﬁed
with basic functions operating on speciﬁc primary, secondary and tertiary ﬂows.
In RFB a functional decomposition is a conceptual structure that consists of
an overall function that is decomposed, its subfunctions into which the overall
function is decomposed, the ﬂows which are modiﬁed by the subfunctions, and a
net that links these modiﬁcations in an ordered way.
The overall function to be decomposed is deﬁned in terms of the ﬂows it modiﬁes,
which are taken from the RFB taxonomy of ﬂows. Each of its subfunctions is
deﬁned both in terms of the ﬂows the respective subfunction modiﬁes and in terms
of its type of modiﬁcation, which is taken from RFB taxonomy of basic functions.
For instance, the overall function of a screwdriver, which is to tighten/loose screws,
is deﬁned by means of the following ten input ﬂows and nine output ﬂows (see also
Figure 3).
• input ﬂows for the function tighten/loose screws:
– energy ﬂows: electricity, human force, relative rotation and weight;
– material ﬂows: hand, bit and screw;
– signal ﬂows: direction, on/oﬀsignal and manual use signal;
• output ﬂows for the function tighten/loose screws:
– energy ﬂows: torque, human force, heat, noise and weight;
34In engineering design the term “ﬂow” is used in the speciﬁc sense in which it is roughly
equivalent to the term “process”.

262
Pieter Vermaas and Pawel Garbacz
Table 2. The RFB taxonomy of ﬂows [Hirtz et al., 2002]
Primary ﬂow
Secondary ﬂow
Tertiary ﬂow
Material
Human
Gas
Liquid
Solid
Object
Particulate
Composite
Plasma
Mixture
Gas-gas
Liquid-Liquid
Solid-solid
Solid-liquid
Liquid-gas
Solid-gas
Solid-liquid-gas
Colloidal
Signal
Status
Auditory
Olfactory
Tactile
Taste
Visual
Control
Analog
Discrete
Energy
Human
Acoustic
Biological
Chemical
Electrical
Electromagnetic
Optical
Solar
Hydraulic
Magnetic
Mechanical
Rotational
Translational
Pneumatic
Radioactive/Nuclear
Thermal

Functional Decomposition and Mereology in Engineering
263
Table 3. The RFB taxonomy of functions [Hirtz et al., 2002]
Primary functions
Secondary functions
Tertiary functions
Branch
Separate
Divide
Extract
Remove
Distribute
Channel
Import
Export
Transfer
Transport
Transmit
Guide
Translate
Rotate
Allow degree(s) of freedom
Connect
Couple
Join
Link
Mix
Control magnitude
Actuate
Regulate
Increase
Decrease
Change
Increment
Decrement
Shape
Condition
Stop
Prevent
Inhibit
Convert
Convert
Provision
Store
Contain
Collect
Supply
Signal
Sense
Detect
Measure
Indicate
Track
Display
Process
Support
Stabilize
Secure
Position

264
Pieter Vermaas and Pawel Garbacz
Figure 3. The RFB modelling of the overall function of a screwdriver [Stone and
Wood, 2000, Fig. 2]
– material ﬂows: hand, bit and screw;
– signal ﬂows: looseness/tightness.
On the other hand, one of the subfunctions in the functional decomposition of
this overall function tighten/loose screws is called convert electricity to torque (see
Figure 4), which means that it is a function of the convert-type (cf. Table 3), and
modiﬁes one input ﬂow to three output ﬂows:
• input ﬂows for the subfunction convert electricity to torque:
– energy ﬂows: electricity;
– material ﬂows: none;
– signal ﬂows: none.
• output ﬂows for the subfunction convert electricity to torque:
– energy ﬂows: heat, noise and torque;
– material ﬂows: none;
– signal ﬂows: none.

Functional Decomposition and Mereology in Engineering
265
Figure 4. The RFB functional decomposition of a screwdriver [Stone and Wood,
2000, Fig. 4]

266
Pieter Vermaas and Pawel Garbacz
The task of a designer who performs a functional decomposition is to link any
input ﬂow of the overall function to be decomposed with some of the output ﬂows.
Any such link that starts with an input ﬂow of the overall function and ends
with one of its output ﬂows is called a function chain. In RFB one distinguishes
between two types of function chains: sequential and parallel. A function chain is
sequential if it is ordered with respect to time, i.e., if any temporal permutation of
its subfunction may in principle result in failing to perform the overall function.
A parallel function chain is a fusion of sequential function chains that share one
or more ﬂows.
In RFB one assumes that each subfunction of an overall function to be per-
formed by a technical system S is realised by a component of S; however, the
relation between subfunctions and components is many-to-many, i.e., one sub-
function may be realised by several components and one component may realise
more than one subfunction.
The notion of functional decomposition developed within RFB plays an impor-
tant role in what is called the concept generator, which is a web-based computa-
tional tool for enhancing conceptual design.35 The concept generator is to present
a designer with a number of diﬀerent solutions to his or her design problem on the
basis of previously developed (and stored) high-quality designs. One of the input
data to be provided for this tool is a function chain for a product to be newly
developed. The output solutions describe the design solution in terms of the tech-
nical systems whose descriptions are loaded into the knowledge base of the concept
generator. The functional decomposition links the overall function established by
the generator with the conceptual components that compose a general description
of the product that is construed here as a solution of the initial design problem
[Strawbridge et al., 2002; Bryant et al., 2004].
The RFB proposal adds precision and a wealth of empirical details to the
methodology of Pahl and Beitz. Its explicit aim to contribute to the standardisa-
tion of conceptual models in engineering makes it even more valuable for speciﬁ-
cally mereological analysis of functional modelling.
In our terminology, the overall function of an RFB functional decomposition
Decomp(Φ, Org(φ1, φ2, . . ., φn)) may be any function Φ but the subfunctions
φ1, φ2, . . ., φn are to be identiﬁed with RFB basic functions from Table 3 oper-
ating on speciﬁc RFB primary, secondary and tertiary ﬂows from Table 2. The
net of ﬂows between the subfunctions φ1, φ2, . . ., φn deﬁnes their organisation
Org(φ1, φ2, . . ., φn).
In RFB the overall functions Φ and the subfunctions φ1, φ2, . . ., φn in functional
decompositions Decomp(Φ, Org(φ1, φ2, . . ., φn)) may be describing systems S and
s1, s2, . . ., sn that are endurants and perdurants, but like in the methodology of
Pahl and Beitz, again the additional assumptions are made that functions comply
with physical conservation laws for ﬂows, and that the subfunctions φ1, φ2, . . ., φn,
are to be taken from a set of basic functions. A further additional assumption
seems to be that the functional orderings φi →φj making up the organisations
35See http://function.basiceng.umr.edu/delabsite/repository.html.

Functional Decomposition and Mereology in Engineering
267
Org(φ1, φ2, . . ., φn) of the subfunctions, are always asymmetric: ﬂows between two
subfunctions in functional decompositions like depicted in Figure 4, always go in
one direction. The beneﬁt of philosophical research on functional descriptions to
engineering can again lie in making these assumptions explicit and in challenging
them. The requirement that functions always have to be decomposable into RFB
basic functions operating on speciﬁc RFB ﬂows introduces again a tension between
the goal of functional decomposition to facilitate designing and to facilitate com-
munication. Consider, for instance, the basic function convert acoustic energy in
electrical energy. The identiﬁcation of this basic function in a decomposition of
an overall function may be useful to a shared understanding of this overall func-
tion but will not help designers to easily ﬁnd a corresponding design solution. A
requirement that subfunctions are only ordered in one direction may in turn be
helpful in engineering for managing the ﬂow of materials, energies and signals,
but may also be revealed to be an unnecessary constraint to the decomposition of
functions.
6
PROVISIONAL CONCLUSIONS
In this chapter we have introduced interrelated functional descriptions and speciﬁ-
cally functional decompositions as a topic for philosophical analysis. We identiﬁed
conceptual designing, reverse engineering and engineering knowledge bases as the
engineering domains in which such functional descriptions are given. Special cases
of interrelated functional descriptions that are important to engineering are func-
tional decompositions: descriptions in which an overall function Φ of a technical
system S is analysed in terms of a series of mutually ordered subfunctions φ1,
φ2, . . . , φn describing systems s1, s2, . . . , sn part of S. Features of interrelated
functional descriptions that are of interest to philosophy are that they deﬁne two
diﬀerent part-whole relationships: a functionally-deﬁned structural part-whole re-
lationship by which the systems s1, s2, . . . , sn are part of the system S, and a
functional part-whole relationship by which the functions φ1, φ2, . . . , φn are part
of the function Φ.
We introduced in Section 2 a series of formally deﬁned relations for capturing in-
terrelated functional decompositions. A functional ordering φ →φ′ exists between
two functions if functional output of φ is functional input to φ′. The functional
organisation Org(φ1, φ2, . . . , φn) of a set of functions φ1, φ2, . . . , φn is deﬁned
as the set of (pair-wise) functional orderings that exists between these functions.
Functional composition Comp(Org(φ1, φ2, . . . , φn)) maps the functions φ1, φ2,
. . . , φn in their organisation Org(φ1, φ2, . . . , φn) to another function Φ. Func-
tional decomposition was ﬁnally taken as the inverse of composition and captured
as a relation Decomp(Φ, Org(φ1, φ2, . . . , φn)) for which holds that Comp(Org(φ1,
φ2, . . . , φn))=Φ. These relations were, moreover, illustrated with a series of cases
and examples in which also the systems s1, s2, . . . , sn and S described by the
functions φ1, φ2, . . . , φn and Φ, respectively, were considered. The discussion of
these cases/examples suggest that functional organisations in functional descrip-

268
Pieter Vermaas and Pawel Garbacz
tions are constrained by the spatiotemporal ordering of the systems described:
φ →φ′ can hold only if there is a physical interaction from s to s′.
In this chapter we have, moreover, identiﬁed four areas in philosophy that may
beneﬁt from the analysis of functional descriptions: research on functions in phi-
losophy of technology and in philosophy of biology, epistemology and mereology.
Finally, we presented engineering work on functional decompositions, and consid-
ered how it can contribute to and beneﬁt from our ﬁrst exploration of functional
descriptions. Here we sum up our ﬁndings, with the necessary provisos; since the
analysis of engineering functional descriptions is a new topic in philosophy, this
chapter can merely be an appetizer, shaped as well as limited by the directions we
have chosen in our exploration, but hopefully rewarding nevertheless.
The ﬁrst philosophical area that can beneﬁt from the analysis of functional
descriptions is research on the concept of technical functions in philosophy of
technology. Philosophical accounts of technical functions may initially be taken as
mere means to developing the analysis of functional descriptions. We now argued
in Section 3 that of the three archetypical approaches towards such accounts, only
Cummins’ causal-role approach seems fully equipped to provide for such means;
the other two approaches, that is, the intentionalist and the evolutionist ones,
seem to be able to do so only if designers and not users are determining tech-
nical functions by their intentions or by reproduction, respectively.
Hence, as
its precondition, the analysis of functional descriptions requires that the role of
users in the determination of technical functions in these latter two approaches is
de-emphasised in favour of the role of designers.
Analyses of technical functions in philosophy of technology and of biological
functions in philosophy of biology are often in interaction, for instance, by using
them as contrasts to one another, or by attempting to unify them. By this interac-
tion, it may be assumed that the analysis of functional descriptions in engineering
may also have an impact on philosophy of biology. We have not elaborated on the
possible results of this interaction.
In Section 4 we considered the area of mereology. We considered in particular
the functional part-whole relationship between the functions φ1, φ2, . . . , φn and
the overall function Φ given by their composition Comp(Org(φ1, φ2, . . . , φn)). We
have argued that this functional part-whole relationship cannot be understood with
standard mereology, but requires a modelling in mereology that can accommodate
organisations of the subfunctions.
In Section 5 we presented an engineering approach to functional decompositions,
called functional modelling and described it in terms of the concepts part of our
analysis of functional descriptions. Relative to this analysis functional modelling
introduced a number of additional requirements. The more important ones were
that functional descriptions have to comply with physical conservation laws, that
there exists a set of basic functions into which other functional can be decomposed,
and that functional ordering are always asymmetric functional orderings.
We
argued that these additional requirements could be incorporated into our analysis
but could also be taken as assumptions in engineering approaches to functional

Functional Decomposition and Mereology in Engineering
269
descriptions that can be questioned, thus establishing the worth of philosophical
analyses to engineering.
The remaining philosophical area to which the analysis of functional descrip-
tions can contribute is epistemology. We have described in Section 1 the relations
between functional descriptions, functional reasoning and explanation, and linked
especially functional decomposition to the literature on mechanistic explanation,
a link that establishes another relation between analysing functional descriptions
and philosophy of biology. Yet, we did not delve deeper into these relations. One
reason for not considering epistemology in detail is that we still have to acknowl-
edge that the analysis of functional descriptions is currently in a ﬁrst phase. We
hope to have shown with our analysis and with the presentation of the engineering
approach to functional decomposition that a philosophical analysis of engineering
functional descriptions is feasible and beneﬁciary. Yet, our analysis is still a ﬁrst
step aimed primarily at clarity on conceptual and mereological aspects of func-
tional descriptions, and — hopefully — opening the way to a versatile and more
broader analysis of functional decomposition in the engineering sciences.
ACKNOWLEDGMENTS
Research by Pieter Vermaas was supported by the Netherlands Organization for
Scientiﬁc Research (NWO).
BIBLIOGRAPHY
[Bechtel and Abrahamsen, 2005] W. Bechtel and A. Abrahamsen. Explanation: A mechanist
alternative. Studies in History and Philosophy of Biological and Biomedical Sciences, 36,
421—441, 2005.
[Bell et al., 2007] J. Bell, N. Snooke, and C. Price. A language for functional interpretation of
model based simulation. Advanced Engineering Informatics, 21, 398—409, 2007.
[Bryant et al., 2004] C. Bryant, D. McAdams, R. Stone, T. Kurtoglu, and M. A. Campbell. A
computational technique for concept generation. In Proceedings of IDETC/CIE 2005, Long
Beach, CA, paper no. DETC2005-85323, ASME, 2004.
[Casati and Varzi, 1999] R. Casati and A. Varzi. Parts and Places. MIT, 1999.
[Chakrabarti and Bligh, 2001] A. Chakrabarti and T. P. Bligh. A scheme for functional reason-
ing in conceptual design. Design Studies, 22, pp. 493—517, 2001.
[Chandrasekaran, 2005] B. Chandrasekaran. Representing function: Relating Functional Rep-
resentation and Functional Modeling research streams. Artiﬁcial Intelligence for Engineering
Design, Analysis and Manufacturing, 19, 65—74, 2005.
[Chittaro and Kumar, 1998] L. Chittaro and A. N. Kumar. Reasoning about function and its
application to engineering, Artiﬁcial Intelligence in Engineering, 12, 331—336, 1998.
[Craver, 2001] C. F. Craver. Role functions, mechanisms, and hierarchy. Philosophy of Science,
68, 53—74, 2001.
[Craver and Bechtel, 2006] C. Craver and W. Bechtel. Mechanisms. In The Philosophy of Sci-
ence: An Encyclopedia, S. Sarkar and J. Pfeifer, eds., pp. 469—478. Routledge, 2006.
[Cummins, 1975] R. Cummins. Functional analysis. Journal of Philosophy, 72, 741—765, 1975.
[de Ridder, 2006] J. de Ridder. Mechanistic artefact explanations. Studies in History and Phi-
losophy of Science, 37, 81—96, 2006.
[de Ridder, 2007] J. de Ridder. Reconstructing Design, Explaining Artifacts: Philosophical Re-
ﬂections on the Design and Explanation of Technical Artifacts. Simon Stevin Series in the
Philosophy of Technology, Vol 4 (Delft University of Technology Ph.D. Thesis). 2007.

270
Pieter Vermaas and Pawel Garbacz
[Far and Elamy, 2005] B. H. Far and A. H. Elamy. Functional reasoning theories: Problems and
perspectives. Artiﬁcial Intelligence for Engineering Design, Analysis, and Manufacturing, 19,
75—88, 2005.
[Hirtz et al., 2002] J. Hirtz, R. Stone, D. McAdams, S. Szykman, and K. Wood. A functional ba-
sis for engineering design: Reconciling and evolving previous eﬀorts. Research in Engineering
Design, 13, 65—82, 2002.
[Houkes, 2006] W. Houkes. Knowledge of artefact functions. Studies in History and Philosophy
of Science, 37, 102—113, 2006.
[Houkes and Vermaas, 2004] W. Houkes and P. E. Vermaas. Actions versus functions: A plea
for an alternative metaphysics of artefacts. Monist, 87, 52—71, 2004.
[Houkes and Vermaas, 2009] W. Houkes and P. E. Vermaas. Useful Material: An Action-Theory
of Artefacts and Their Functions, Delft/Eindhoven Universities of Technology manuscript.
2009.
[Hubka and Eder, 2001] V. Hubka and W. E. Eder. Functions revisited. In International Con-
ference on Engineering Design, ICED 01-C586/102, Glasgow, Scotland, August 21-23, pp.
69—76. 2001.
[Johansson, 2004] L. Johansson. On the transitivity of the parthood relations. In Relations and
Predicates. H. Hochberg and K. Mulligan, eds., pp. 161—181. Ontos Verlag, 2004.
[Kitamura et al., 2005/2006] Y. Kitamura, Y. Koji, and R. Mizoguchi. An ontological model of
device function: Industrial deployment and lessons learned. Applied Ontology, 1, 237—262,
2005/2006.
[Lewis, 1986] D. Lewis. On the Plurality of Worlds. Blackwell, 1986.
[Little et al., 1997] A. Little, K. Wood, and D. McAdams. Functional analysis: A fundamen-
tal empirical study for reverse engineering, benchmarking and redesign. In Proceedings of
the ASME Design Theory and Methodology Conference, Sacramento, CA, paper no. 97-
DETC/DTM-3879, ASME, 1997.
[Machamer et al., 2000] P. Machamer, L. Darden, and C. F. Craver. Thinking about Mecha-
nisms. Philosophy of Science, 67, 1—25, 2000.
[McAdams et al., 1999] D. McAdams, R. Stone, and K. Wood. Functional interdependence and
product similarity based on customer needs. The Journal of Research in Engineering Design,
11, 1—19, 1999.
[Millikan, 1984] R. G. Millikan. Language, Thought, and Other Biological Categories:
New
Foundations for Realism. MIT, 1984.
[Millikan, 1993] R. G. Millikan. White Queen Psychology and Other Essays for Alice. MIT,
1993.
[Modarres and Cheon, 1999] M. Modarres and S. W. Cheon. Function-centered modeling of en-
gineering systems using the goal tree–success tree technique and functional primitives. Relia-
bility Engineering and System Safety, 64, 181–200, 1999.
[Neander, 1991a] K. Neander. Functions as selected eﬀects: The conceptual analyst’s defense.
Philosophy of Science, 58, 168–184, 1991.
[Neander, 1991b] K. Neander. The teleological notion of “function”. Australasian Journal of
Philosophy, 69, 454—468, 1991.
[Pahl and Beitz, 1996] G. Pahl and W. Beitz. Engineering Design: A Systematic Approach.
Springer, 1996.
[Pribbenow, 2002] S. Pribbenow. Meronymic relationships: From classical mereology to complex
part-whole relations. In The Semantics of Relationships: An Interdisciplinary Perspective, R.
Green, C. Bean and S. Myaeng, eds., pp. 35—50, Kluwer, 2002.
[Rescher, 1955] N. Rescher. Axioms for the part relation. Philosophical Studies, 6, 8–11, 1955.
[Salustri and Lockledge, 1999] F. Salustri and J. Lockledge. Towards a formal theory of products
including mereology. In Proceedings of the 12 th International Conference on Engineering De-
sign, Birkhofer, Meerkamm, and Vajna, eds., pp. 1125–1130. Technische Universit¨at M¨unchen,
1999.
[Simons, 1987] P. Simons. Parts: A Study in Ontology. Clarendon, 1987.
[Simons, 2006] P. Simons. Real Wholes, Real Parts: Mereology Without Algebra. Journal of
Philosophy, 103, 597–613, 2006.
[Simons and Dement, 1996] P. Simons and C. Dement. Aspects of the mereology of artifacts.
In Formal Ontology, Volume 53 of NijhoﬀInternational Philosophy Series, R. Poli and P.
Simons, eds., pp. 255–276. Kluwer, 1996.

Functional Decomposition and Mereology in Engineering
271
[Sober, 1993] E. Sober. The Nature of Selection: Evolutionary Theory in Philosophical Focus.
University of Chicago Press, 1993.
[Srzedncki and Rickey, 1984] J. Srzednicki and V. Rickey, eds. Lesniewski’s Systems: Ontology
and Mereology. Kluwer, 1984.
[Stone and Wood, 2000] R. Stone and K. Wood. Development of a functional basis for design.
Journal of Mechanical Design, 122, 359–370, 2000.
[Stone et al., 1998] R. Stone, K. Wood, and R. Crawford. A heuristic method to identify modules
from a functional description of a product. In Proceedings of DETC98, Atlanta, GA, paper
no. DETC98/DTM-5642, ASME, 1998.
[Stone et al., 1999] R. Stone, K. Wood, and R. Crawford. Product architecture development
with quantitative functional models. In Proceedings of DETC99, Las Vegas, NV, paper no.
DETC99/DTM-8764, ASME, 1999.
[Strawbridge et al., 2002] Z. Strawbridge,
D. McAdams,
and R. Stone. A computational
approach
to
conceptual
design.
In
Proceedings
of
DETC
02,
Montreal,
paper
no.
DETC2002/DTM-34001, ASME, 2002.
[Szykman et al., 1999] S. Szykman, J. Racz, and R. Sriram. The representation of function
in computer-based design. In Proceedings of the 1999 ASME Design Engineering Technical
Conferences, Las Vegas, NV, paper no. DETC99/DTM-8742, ASME, 1999.
[Tarski, 1956] A. Tarski. Foundations of geometry of solids. In Logic, Semantics, Metamathe-
matics, A. Tarski, pp. 24–29, Oxford University Press, 1956.
[Tzouvaras, 1993] A. Tzouvaras. Signiﬁcant parts and identity of artifacts. Notre Dame Journal
of Philosophy, 34, 445–452, 1993.
[Umeda and Tomiyama, 1997] Y. Umeda and T. Tomiyama. Functional reasoning in design.
IEEE Expert, 12(2), 42–48, 1997.
[van Eck et al., 2007] D. van Eck, D. McAdams, and P. E. Vermaas. Functional decomposition
in engineering: A survey. In 2007 ASME International Design Engineering Technical Con-
ferences and Computers and Information in Engineering Conference DETC2007, September
4-7, 2007, Las Vegas, NV, paper no. DETC2007-34232, ASME, 2007.
[Vermaas, 2006] P. E. Vermaas. The physical connection: Engineering function ascriptions to
technical artefacts and their components. Studies in History and Philosophy of Science, 37,
62–75, 2006.
[Vermaas and Houkes, 2006] P. E. Vermaas and W. Houkes. Technical functions: A drawbridge
between the intentional and structural natures of technical artefacts. Studies in History and
Philosophy of Science, 37, 5–18, 2006.
[Vieu and Aurnague, 2005] L. Vieu. and M. Aurnague. Part-of relations, functionality and de-
pendence. In Categorization of Spatial Entities in Language and Cognition. M. Aurnague, M.
Hickmann and L. Vieu, eds., pp. 483–509. John Benjamins, 2005.
[Wimsatt, 2002] W. Wimsatt. Functional organization, analogy, and inference. In Functions:
New Essays in the Philosophy of Psychology and Biology. A. Ariew, R. Cummins and M.
Perlman, eds., pp. 173–221. Oxford University Press, 2002.

This page intentionally left blank

