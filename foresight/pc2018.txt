Continuity in constructive mathematics using Agda
Mart´ın H¨otzel Escard´o
University of Birmingham, UK
Autumn school Proof and Computation, 16-22 September 2018, Fischbachau

Organizers request
“give a 3 hour tutorial on continuity in constructive analysis (using Agda)”.
I take the liberty to move the emphasis from analysis to Agda.

Continuity in constructive mathematics using Agda
1. Continuity = ﬁnite amounts of output depend only on ﬁnite amounts of input.
▶Example. To know a ﬁnite decimal approximation of f(x) for a continuous function
f : R →R, it is enough to know a ﬁnite decimal approximation of x.
▶This is equivalent to the usual ϵ −δ notion of continuity for the function f.
2. Constructive = implicit computational content.
Knowledge comes with implicit algorithms.
3. Agda = computer implementation of a Martin-L¨of type theory. u
▶Programming language (computes by evaluating terms to normal form).
Dependently typed functional programming language.
▶So-called proof assistant.
I prefer to see it as a languague for writing deﬁnitions, theorems, proofs and constructions.
Perhaps computer referee would be a more faithful description of what Agda is.

Plan (or maybe wish list)
1. Learn Agda mainly on the ﬂy, after a short introduction.
2. Based on “Continuity of Godel’s system T functionals via eﬀectful forcing” (MFPS’2013).
▶Deﬁne G¨odel’s system T in Agda.
▶Deﬁne its set-theoretical model in Agda.
▶Deﬁne an alternative dialogue model.
▶Establish a so-called logical relation between them.
▶Use this to conclude that the deﬁnable functions (N →N) →N of the set model are
continuous.
▶Run some examples.
▶Internalize the model to get a translation of T into iself, to show that the dialogue tree of
such a T-deﬁnable function is itself T deﬁnable, and hence the modulus of continuity is
T-deﬁnable too.

Plan
1. Agda.
2. “Continuity of Godel’s system T functionals via eﬀectful forcing” (MFPS’2013).
3. “The inconsistency of a Brouwerian continuity principle with the Curry-Howard
interpretation” (TLCA’2015).
▶Prove the negation of “all functions (N →N) →N are continuous” in Curry-Howard logic in
Agda.
▶Observe that there are (topos) models of MLTT in which all functions are continuous.
▶Understand that there is no contradiction.
▶Show how univalent logic gives a consistent formulation of “all functions are (N →N) →N
are continuous”.
▶Things are radically diﬀerent with functions (N →2) →N.
“all functions (N →2) →N are uniformly continuous” is consistent in both Curry-Howard
and univalent/topos logic, and the two statements are logically equivalent types (but not
isomorphic types).

Plan
1. Agda.
2. “Continuity of Godel’s system T functionals via eﬀectful forcing” (MFPS’2013).
3. “The inconsistency of a Brouwerian continuity principle with the Curry-Howard
interpretation” (TLCA’2015, with Chuangjie Xu).
4. “A constructive manifestation of the Kleene-Kreisel continuous functionals” (APAL’2016,
with Chuangjie Xu)
▶A model of type theory in type theory that validates “all functions (N →2) →N are
uniformly continuous”.
▶Classically equivalently to the Kleene-Kreisel continuous functionals.
▶But constructively developed.
▶Coquand et al. recently showed how to add universes to this model.

Plan summary
1. Agda.
2. “Continuity of Godel’s system T functionals via eﬀectful forcing” (MFPS’2013).
3. “The inconsistency of a Brouwerian continuity principle with the Curry-Howard
interpretation” (TLCA’2015, with Chuangjie Xu).
4. “A constructive manifestation of the Kleene-Kreisel continuous functionals” (APAL’2016,
with Chuangjie Xu)
Probably too ambitious.
Let’s see how far we get in three lectures.

Materials
http://www.cs.bham.ac.uk/~mhe/pc2018/

