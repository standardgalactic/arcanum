Artificial Intelligence 
Applications in Chemistry 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.fw001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.fw001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

ACS SYMPOSIUM SERIES 
306 
Artificial Intelligence 
Applications in Chemistry 
Thomas H. Pierce, EDITOR 
Rohm and Haas Company 
Bruce A. Hohne, EDITOR 
Rohm and Haas Company 
Developed from a symposium sponsored by 
the Division of Computers in Chemistry 
at the 190th Meeting 
of the American Chemical Society, 
Chicago, Illinois, September 8-13, 1985 
American Chemical Society, Washington, DC 1986 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.fw001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

Library of Congress Cataloging-in-Publication Data 
Artificial intelligence applications in chemistry. 
(ACS symposium series, ISSN 0097-6156; 306) 
"Developed from a symposium sponsored by the 
Division of Computers in Chemistry at the 190th 
meeting of the American Chemical Society, Chicago, 
Illinois, September 8-13, 1985." 
Includes bibliographies and indexes. 
1. Chemistry—Data processing—Congresses. 
2. Artificial intelligence—Congresses. 
I. Pierce, Thomas H., 1952- 
. II. Hohne, Bruce 
Α., 1954- 
.III. American Chemical Society. 
Division of Computers in Chemistry. IV. American 
Chemical Society. Meeting (190th: 1985: Chicago, 111.) 
V. Series. 
QD39.3.E46A78 
1986 
542'.8 
86-3315 
ISBN 0-8412-0966-9 
Copyright © 1986 
American Chemical Society 
All Rights Reserved. The appearance of the code at the bottom of the first page of each 
chapter in this volume indicates the copyright owner's consent that reprographic copies of the 
chapter may be made for personal or internal use or for the personal or internal use of specific 
clients. This consent is given on the condition, however, that the copier pay the stated per 
copy fee through the Copyright Clearance Center, Inc., 27 Congress Street, Salem, MA 01970, 
for copying beyond that permitted by Sections 107 or 108 of the U.S. Copyright Law. This 
consent does not extend to copying or transmission by any means—graphic or electronic—for 
any other purpose, such as for general distribution, for advertising or promotional purposes, 
for creating a new collective work, for resale, or for information storage and retrieval systems. 
The copying fee for each chapter is indicated in the code at the bottom of the first page of the 
chapter. 
The citation of trade names and/or names of manufacturers in this publication is not to be 
construed as an endorsement or as approval by ACS of the commercial products or services 
referenced herein; nor should the mere reference herein to any drawing, specification, chemical 
process, or other data be regarded as a license or as a conveyance of any right or permission, 
to the holder, reader, or any other person or corporation, to manufacture, reproduce, use, or 
sell any patented invention or copyrighted work that may in any way be related thereto. 
Registered names, trademarks, etc., used in this publication, even without specific indication 
thereof, are not to be considered unprotected by law. 
PRINTED IN THE UNITED STATES OF AMERICA 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.fw001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

ACS Symposium Series 
M. Joan Comstock, Series Editor 
Advisory Board 
Harvey W. Blanch 
University of California—Berkeley 
Alan Elzerman 
Clemson University 
John W. Finley 
Nabisco Brands, Inc. 
Marye Anne Fox 
The University of Texas—Austin 
Martin L. Gorbaty 
Exxon Research and Engineering Co. 
Roland F. Hirsch 
U.S. Department of Energy 
Rudolph J. Marcus 
Consultant, Computers & 
Chemistry Research 
Donald E. Moreland 
USDA, 
Agricultural Research Service 
W. H. Norton 
J. T. Baker Chemical Company 
James C. Randall 
Exxon Chemical Company 
W. D. Shults 
Oak Ridge National Laboratory 
Geoffrey K. Smith 
Rohm & Haas Co. 
Charles S.Tuesday 
General Motors Research Laboratory 
Douglas B. Walters 
National Institute of 
Environmental Health 
Vincent D. McGinniss 
Battelle Columbus Laboratories 
C. Grant Willson 
IBM Research Department 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.fw001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

FOREWORD 
The ACS S Y M P O S I U M S E R I E S was founded in 1974 to provide a 
medium for publishing symposia quickly in book form. The 
format of the Series parallels that of the continuing A D V A N C E S 
IN C H E M I S T R Y 
S E R I E S except that, in order to save time, the 
papers are not typeset but are reproduced as they are submitted 
by the authors in camera-ready form. Papers are reviewed under 
the supervision of the Editors with the assistance of the Series 
Advisory Board and are selected to maintain the integrity of the 
symposia; however, verbatim reproductions of previously pub-
lished papers are not accepted. Both reviews and reports of 
research are acceptable, because symposia may embrace both 
types of presentation. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.fw001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

PREFACE 
.ARTIFICIAL I N T E L L I G E N C E (AI) is not a new field, as AI dates back to the 
beginnings of computer science. It is not even new to the field of chemistry, 
as the DENDRAL project dates back to the early 1960s. AI is, however, just 
beginning to emerge from the ivory towers of academia. To many people it is 
still just a buzz word associated with no real applications. Because AI work 
involves people from multiple disciplines, the work is difficult to locate and 
the application is sometimes difficult to understand. 
We decided that now would be a good time for an AI book for several 
reasons: (1) enough applications can now be presented to expose newcomers 
to many of the possibilities that AI has to offer, (2) showing what everyone 
else is doing with AI should generate new interest in the field, and (3) we felt 
an overview was needed to collect the different areas of AI applications to 
help people who are starting to apply AI techniques to their disciplines. The 
final and possibly most important reason is our personal interest in the field. 
Chemistry is an ideal field for applications in AI. Chemists have been 
using computers for years in their day-to-day work and are quite willing to 
accept the aid of a computer. In addition, the DENDRAL project, 
throughout its long history, has graduated many chemists already trained in 
AI. It is not surprising that chemistry is one of the leading areas for AI 
applications. Scientists have been developing the theories of chemistry for 
centuries, but the standard approach taken by a chemist to solve a problem 
is heuristic; past experience and rules of thumb are used. AI offers a method 
to combine theory with these rules. These systems will not replace chemists, 
as is commonly thought; but rather, these programs will assist chemists in 
performing their daily work. 
Computer applications developed from theoretical chemistry tend to be 
algorithmic and numerical by nature. AI applications tend to be heuristic 
and symbolic by nature. Multilevel expert systems combine these techniques 
to use the heuristic power of expert systems to direct numerical calculations. 
They can also use the results of numerical calculations in their symbolic 
processing. The problems faced by chemists today are so complex that most 
require the added power of the multilevel approach to solve them. 
Defining exactly which applications constitute AI is difficult in any 
field. The problem in chemistry is even worse because chemical applications 
that use AI methods often use numerical calculations. Some applications 
that are strictly numerical accomplish tasks similar to AI programs. The key 
feature used to limit the scope of this book was symbolic processing. The 
work presented includes expert systems, natural language applications, and 
manipulation of chemical structures. 
ix 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.pr001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

The book is divided into five sections. The first chapter is outside this 
structure and is an overview of the technology of expert systems. 
The book's first section, on expert systems, is a collection of expert-
system applications. Expert systems can simplistically be thought of as 
computerized clones of an expert in a particular specialty. Various schemes 
are used to capture the expert's knowledge of the specialty in a manner that 
the computer can use to solve problems in that field. Expert-systems 
technology is the most heavily commercialized area in AI as shown by the 
wide variety of applications that use this technology. These applications help 
show the breadth of problems to which AI has been applied. Much of the 
work from other sections of the book also uses expert-system techniques in 
some manner. 
The second section, on computer algebra, details chemical applications 
whose emphasis is on the mathematical nature of chemistry. As chemical 
theories become increasingly complex, the mathematical equations have 
become more difficult to apply. Symbolic processing simplifies the construc­
tion of mathematical descriptions of chemical phenomena and helps chemists 
apply numerical techniques to simulate chemical systems. Not only does 
computer algebra help with complex equations, but the techniques can also 
help students learn how to manipulate mathematical structures. 
The third section, on handling molecular structures, presents the 
interface between algebra and chemical reactions. The storage of molecular 
representations in a computer gives the chemist the ability to manipulate 
abstract molecular structures, functional groups, and substructures. The 
rules that govern the changes in the molecular representations vary with each 
approach. Molecules can be described as connected graphs, and the 
theorems of graph theory can be used to define their similarity. Another 
approach uses heuristic rules for chemical substructures to define and display 
molecules. 
The fourth section, on organic synthesis, discusses methods to construct 
complex organic syntheses using simple one-step reactions. Many groups 
have used the computer to search for synthetic pathways for chemical 
synthesis in the past. Each approach must deal with the problem of multiple 
possible pathways for each step in the reaction. The chapters in this section 
apply AI techniques to select "good" paths in the synthesis. 
The final section, on analytical chemistry, is a combination of structure-
elucidation techniques and instrumental optimizations. Instrumental analysis 
can be broken into several steps: method development, instrumental 
optimization, data collection, and data analysis. The trend today in 
analytical instrumentation is computerization. Data collection and analysis 
are the main reasons for this. The chapters in this section cover all aspects of 
the process except data collection. Organic structure elucidation is really an 
extension of data analysis. These packages use spectroscopic data to 
determine what structural fragments are present and then try to determine 
χ 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.pr001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

how those fragments are connected. Different people have used both 
individual spectroscopic techniques and combinations of techniques to solve 
this very difficult problem. This area holds great promise for future work in 
AI. 
We gratefully acknowledge the efforts of all the authors who contrib-
uted their time and ideas to the symposium from which this book was 
developed. We also thank the staff of the ACS Books Department for their 
helpful advice. Finally, we acknowledge the encouragement and support we 
received from our management at Rohm and Haas Company. 
THOMAS H. PIERCE 
Rohm and Haas Company 
Spring House, PA 19477 
BRUCE A. HOHNE 
Rohm and Haas Company 
Spring House, PA 19477 
January 13, 1986 
XI 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.pr001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

1 
Artificial Intelligence: The Technology of Expert Systems 
Dennis H. Smith 
Biotechnology Research and Development, IntelliGenetics, Inc., Mountain View, 
CA 94040 
Expert systems represent a branch of artificial intelligence that has 
received enormous publicity in the last two to three years. 
Many 
companies have been formed to produce computer software for what is 
predicted to be a substantial market. This paper describes what is meant 
by the term expert system and the kinds of problems that currently appear 
amenable to solution by such systems. 
The physical sciences and 
engineering disciplines are areas for application that are receiving 
considerable attention. The reasons for this and several examples of recent 
applications are discussed. The synergism of scientists and engineers with 
machines supporting expert systems has important implications for the 
conduct of chemical research in the future; some of these implications are 
described. 
Expert systems represent a sub-discipline of artificial intelligence (AI). Before beginning a 
detailed discussion of such systems, I want to outline my paper so that the focus and 
objectives are clear. The structure of the paper is simple. I will: 
• Describe the technology of expert systems 
• Discuss some areas of application related to chemistry 
• Illustrate these areas with some examples 
Although the structure of the paper is simple, my goal is more complex. It is simply 
stated, but harder to realize: 
I want to demystify the technology of applied artificial 
intelligence and expert systems. 
The word mystify means "to involve in mystery, to make difficult to understand, to 
puzzle, to bewilder." Therefore, I will try to remove some of the mystery, to make things 
easier to understand, to clarify what the technology is and what it can (and cannot) do. 
I am going to discuss a special kind of computer software, but software nonetheless. 
0097-6156/ 86/0306-0001 $06.00/ 0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

2 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Everything I will describe could be built from the ground up using assembly language, 
BASIC or any other computer language. In the future, some expert systems will certainly 
be built using languages such as Fortran, C or PASCAL as opposed to LISP and PROLOG 
which are currently in vogue. So there is no mystery here. What is different, but is still 
not mysterious, is the approach taken by AI techniques toward solving symbolic, as opposed 
to numeric, problems. I discuss this difference in more detail, below. Most readers of this 
collection of papers will be scientists and engineers, engaged in research, business or both. 
They expect new technologies to have some substantial practical value to them in their 
work, or they will not buy and use them. So I will stress the practicality of the technology. 
Where is the technology currently? 
Several descriptions of the marketplace have 
appeared over the last year. Annual growth rates for companies involved in marketing 
products based on AI exceed 300%, far outstripping other new computer-based applications, 
such as control and management of information networks, private telephone networks, 
automation of the home and factory. Of course, those are growth rates, not market sizes or 
dollar volumes. The technology will ultimately be successful only to the extent that it does 
useful work, by some measure. In this paper I illustrate some areas where useful work can 
be, and is being, done. 
There are many expert systems under development at major 
corporations, in the areas of chemistry, chemical engineering, molecular biology and so 
forth. Because many of these systems are still proprietary, the examples I will discuss are 
drawn from work that is in the public domain. However, the casual reader will easily be 
able to generalize from my examples to his or her own potential applications. 
The Technology of Expert Systems 
I am going to begin my discussion of the technology of expert systems with two provocative 
statements. The first is: 
Knowledge engineering is the technology base of the "Second Computer Age" 
It is possible to use knowledge, for example, objects, facts, data, rules, to manipulate 
knowledge, and to cast it in a form in which it can be used easily in computer programs, 
thereby creating systems that solve important problems. 
The second statement is: 
What's on the horizon is not just the Second Computer Age, it's the 
important one! 
We are facing a second computer revolution while still in the midst of the first one! 
And it's probably the important revolution. 
Characteristics and Values of Expert Systems. What leads me to make such bold and risky 
statements? The answer can be summarized as follows. First, knowledge is power. You 
can't solve problems using any technology unless you have some detailed knowledge about 
the problem and how to solve it. This fact seems so obvious that it is unnecessary to state 
it. Many systems will fail, however, because the builders will attempt to build such systems 
to solve i l l - d e f i n e d problems. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

1. 
SMITH 
The Technology of Expert Systems 
3 
Second, processing of this knowledge will become a major, perhaps dominant part of 
the computer industry. 
Why? 
Simply because most of the world's problem solving 
activities involve symbolic reasoning, not calculation and data processing. 
We have 
constructed enormously powerful computers for performing calculations, our number 
crunchers. We devote huge machines with dozens of disk drives to database management 
systems. 
Our need for such methods of computing will not disappear in the future. 
However, when we have to fix our car, or determine why a processing plant has shut down, 
or plan an organic synthesis, we don't normally solve sets of differential equations or pose 
queries to a large database. We might use such numerical solutions or the results of such 
queries to help solve the problem, but we are mainly reasoning, not calculating. 
How do we construct programs that aid us in reasoning as opposed to calculating? AI 
is the underlying science. It has several sub-disciplines, including, for example, robotics, 
machine vision, natural language understanding and expert systems, each of which will 
make a contribution to the second computer age. My focus is on expert systems. 
Knowledge engineering is the technology behind construction of expert systems, or 
knowledge systems, or expert support systems. Such systems are designed to advise, inform 
and solve problems. They can perform at the level of experts, and in some cases exceed 
expert performance. They do so not because they are "smarter" but because they represent 
the collective expertise of the builders of the systems. 
They are more systematic and 
thorough. 
And they can be replicated and used throughout a laboratory, company or 
industry at low cost. 
There are three major components to an expert system: 
• the knowledge base of facts and heuristics 
• the problem-solving and inference engine 
• an appropriate human-machine interface 
The contents of a knowledge base, the facts and rules, or heuristics, about a problem 
will be discussed shortly. The problem-solving and inference engine is the component of 
the system that allows rules and logic to be applied to facts in the knowledge base. For 
example, in rule-based expert systems, "IF-THEN" rules (production rules) in a knowledge 
base may be analyzed in two ways: 
• in the forward, or data-driven direction, to solve problems by asserting new 
facts, or conditions, and examining the consequences, or conclusions 
• in the backward, or goal-driven direction, to solve problems by hypothesizing 
conclusions and examining the conditions to determine if they are true. 
For the purposes of this paper, I will not describe the inference procedures further. I 
will also say very little about the human-machine interface. However, since expert systems 
are designed to be built by experts and used by experts and novices alike, the interface is of 
crucial importance. 
The examples discussed later illustrate how powerful interfaces are 
implemented through use of high resolution bit-mapped graphics, menu and "button" 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

4 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
driven operations, a "mouse" as a pointing device, familiar icons to represent objects such 
as schematics, valves, tanks, and so forth. 
The Knowledge Base. The knowledge base holds symbolic knowledge. To be sure, the 
knowledge base can also contain tables of numbers, ranges of numerical values, and some 
numerical procedures where appropriate. 
But the major content consists of facts and 
heuristics. 
The facts in a knowledge base include descriptions of objects, their attributes and 
corresponding data values, in the area to which the expert system is to be applied. In a 
process control application, for example, the factual knowledge might include a description 
of a physical plant or a portion thereof, characteristics of individual components, values 
from sensor data, composition of feedstocks and so forth. 
The heuristics, or rules, consist of the judgemental knowledge used to reason about 
the facts in order to solve a particular problem. 
Such knowledge is often based on 
experience, is used effectively by experts in solving problems and is often privately held. 
Knowledge engineering has been characterized as the process by which this knowledge is 
"mined and refined" by builders of expert systems. 
Again, using the motif of process 
control, such knowledge might include rules on how to decide when to schedule a plant or 
subsystem for routine maintenance, rules on how to adjust feedstocks based on current 
pricing, or rules on how to diagnose process failures and provide advice on corrective 
action. 
Expert systems create value for groups of people, ranging from laboratory units to 
entire companies, in several ways, by: 
• capturing, refining, packaging, distributing expertise; an "an expert at your 
fingertips"; 
• solving problems whose complexity exceeds human capabilities; 
• solving problems where the required scope of knowledge exceeds any 
individual's; 
• solving problems that require the knowledge and expertise of several fields 
(fusion); 
• preserving the group's most perishable asset, the organizational memory; 
• creating a competitive edge with a new technology. 
The packaging of complex knowledge bases leads to powerful performance. 
This 
performance is possible due to the thoroughness of the machine and the synthesis of 
expertise from several experts. 
Similarly, if the knowledge base cuts across several 
disciplines, the fusion of such knowledge creates additional value. An obvious value of 
expert systems is what is referred to above as preserving the organizational memory. Many 
organizations will have to confront the loss of some of their most valuable experts over the 
next few years, whether through graduation, death, a new job, or retirement. 
Several 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

1. 
SMITH 
The Technology of Expert Systems 
5 
companies are turning to expert systems in order to capture the problem-solving expertise 
of their most valuable people. 
This preserves the knowledge and makes it available in 
easily accessible ways to those who must assume the responsibilities of the departing 
experts. 
Considering commercial applications of the technology, expert systems can create 
value through giving a company a competitive edge. This consideration means that the 
first companies to exploit this technology to build useful products will obviously be some 
steps ahead of those that do not. 
Some Areas of Application. 
I next summarize some areas of application where expert 
systems exist or are being developed, usually by several laboratories. Some of these areas 
are covered in detail in other presentations as part of this symposium. I want to emphasize 
that this is a partial list primarily of scientific and engineering applications. A similar list 
could easily be generated for operations research, economics, law, and so forth. Some of the 
areas are outside strict definitions of the fields of chemistry and chemical engineering, but I 
have included them to illustrate the breadth of potential applications in related disciplines. 
• Medical diagnosis and treatment 
• Chemical synthesis and analysis 
• Molecular biology and genetic engineering 
• Manufacturing: planning and configuration 
• Signal processing: several industries 
• Equipment fault diagnosis: several industries 
• Mineral exploration 
• Intelligent CAD 
• Instrumentation: set-up, monitoring, data analysis 
• Process control: several industries 
Many readers will have read about medical applications, the MYCIN and 
INTERNIST programs. There are many systems being developed to diagnose equipment 
failures. 
Layout and planning of manufacturing facilities are obvious applications. 
Chemistry and molecular biology systems were among the earliest examples of expert 
systems and are now embodied in commercial systems. 
There is a suite of related applications involving signal processing. Whether the data 
are from images, oil well-logging devices, or military sensor systems, the problems are the 
same; vast amounts of data, only some of which are amenable to numerical analysis. Yet 
experts derive valid interpretations from the data. 
Systems have already been built to 
capture this expertise. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

6 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
There are many diagnosis and/or advisory systems under development, applied to 
geology, nuclear reactors, software debugging and use, manufacturing and related financial 
services. 
There are several applications to scientific and engineering instrumentation which 
especially relevant to chemistry and chemical engineering. 
These include building into 
instruments expertise in instrument control and data interpretation, to attempt to minimize 
the amount of staff time required to perform routine analyses and to optimize the 
performance of a system. There are several efforts underway in process control, focused 
currently in the electrical power and chemical industries. 
Before looking at some applications in more detail, let me briefly describe why the 
number and scope of applications is increasing so dramatically. 
The Technology is Maturing Rapidly. The work that computers are being required to do is 
increasingly knowledge intensive. For example, instrument manufacturers are producing 
more powerful computer systems that are integral to their product lines. These systems are 
expected to perform more complex tasks all the time, i.e., to be in some sense "smarter". 
Two developments are proceeding in parallel with this requirement for "smarter" systems. 
The software technology for building expert systems is maturing rapidly. At the same 
time, workstations that support AI system development are making a strong entry into the 
computer market. For the first time, the hardware and software technology are at a point 
where development of systems can take place rapidly. 
Beginning in 1970, programming languages such as LISP became available. Such 
languages made representation and manipulation of symbolic knowledge much simpler than 
use of conventional languages. 
Around 1975, programming environments became 
available. 
In the case of LISP, its interactive environment, INTERLISP, made system 
construction, organization and debugging much more efficient. In 1980, research work led 
to systems built on top of LISP that removed many of the requirements for programming, 
allowing system developers to focus on problem solving rather than writing code. Some of 
these research systems have now evolved to become commercial products that dramatically 
simplify development of expert systems. 
Such products, often referred to as tools, are 
specifically designed to aid in the construction of expert systems and are engineered to be 
usable by experts who may not be programmers. 
Supporting evidence for the effects of these developments is found by examining the 
approximate system development time for some well known expert systems. Systems begun 
in the mid-1960's, DENDRAL and MACSYMA required of the order of 40-80 man-years to 
develop. Later systems of similar scope required less and less development time, of the 
order of several man years, as programming languages and system building tools matured. 
With current, commercially available tools, developers can expect to build a prototype of a 
system, with some assistance, in the order of one month. 
The prototype that results 
already performs at a significant level of expertise and may represent the core of a 
subsequent, much larger system (examples are shown below). Such development times were 
simply impossible to achieve with the limited tools that existed before mid-1984. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

1. 
SMITH 
The Technology of Expert Systems 
1 
Developing Expert Systems. 
How has such rapid progress been achieved? 
The 
improvement in hardware and software technologies is obviously important. 
Another 
important factor is that people are becoming more experienced in actually building systems. 
There has emerged, from the construction of many systems designed for diverse 
applications, a strong model for the basic steps required in constructing an expert system. 
The four major steps are as follows: 
• Select an appropriate application 
• Prototype a "narrow vertical slice" 
• Develop the full system 
• Field the system, including maintenance and updates 
First, one must select an appropriate application. There are applications that are so 
simple, that require so little expertise, that it is not worth the time and money to emulate 
human performance in a machine. At the other end of the spectrum, there are many 
problems whose methods of solution are poorly understood. For several reasons, these are 
not good candidates either. In between, there are many good candidates, and in the next 
section I summarize some of the rules for choosing them. 
Second, a prototype of a final system is built. This prototype is specifically designed 
to have limited, but representative, functionality. During development of the prototype, 
many important issues are resolved, for example, the details of the knowledge 
representation, the man-machine interface, and the complexity of the rules required for high 
performance. 
Rapid prototyping is already creeping into the jargon of the community. 
The latest expert system building tools are sufficiently powerful that one can sit down and 
try various ideas on how to approach the problem, find out what seems logical and what 
doesn't, reconstruct the knowledge base into an entirely different form, step through 
execution of each rule and correct the rules interactively. 
This approach differs 
substantially from traditional methods of software engineering. 
The third step, however, reminds us that we do have to pay attention to good 
software development practices if a generally used, and useful system is to result from the 
prototype. Development of a full system, based at least in part on the prototype, proceeds 
with detailed specifications as the system architects define and construct its final form. 
The last step is just as crucial as its predecessors. The system must be tested in the 
field, and the usual requirements in the software industry for maintenance and updates 
pertain. 
The primary differences, then, between development of expert systems and more 
traditional software engineering are found in steps one and two, above. First, the problems 
chosen will involve symbolic reasoning, and will require the transfer of expertise from 
experts to a knowledge base. Second, rapid prototyping, the "try it and see how it works, 
then fix it or throw it away" approach will play an important role in system development. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

8 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
The only phase of development of expert systems that I will say any more about is 
the first, and in many ways the most crucial, step for those who are contemplating building 
expert systems for the first time. 
How do you go about selecting an appropriate 
application? Here are the basic criteria: 
• Symbolic reasoning 
• Availability and commitment of expert 
• Importance of problem 
• Scope of problem 
• General agreement among specialists 
• Data and test cases available 
• Incremental progress possible 
First, the application should involve symbolic reasoning. There is no point in trying 
to develop an expert system to perform numerical calculations, for example, Fourier 
transforms. 
Second, there should be experts available that can solve the problems involved in the 
selected application and they must be committed to spend their time working with the 
system and other experts in developing the knowledge base. 
If such experts are not 
available, or will not commit to the effort, forget the application. 
Third, the problem must be important. It must be a problem whose computer-aided 
solution creates value by some measure. Such problems may require substantial expertise, 
or they may be simple, repetitive, and labor intensive, test. No one will invest in a system 
if the problems are infrequently encountered and can be solved quickly by persons of 
normal intelligence. 
Fourth, the scope of the application must be bounded. 
There must be some 
specification of the functionality of the expert system and characteristics of the problems it 
is expected to solve. Trying to build an expert system to solve the world's economic 
problems is not a good application to choose. However, selecting a product mix from an oil 
refinery based on the current state of supply and demand in the world's energy markets 
might be a good application. 
Fifth, there must be general agreement among experts on how to solve the problem, 
on what constitutes the facts in the domain, and what are judgemental rules. Without such 
agreement, the values mentioned previously of extending the knowledge base beyond any 
single individual's contribution, and fusion of expertise across several domains will not be 
realized. 
More practically, without general agreement, other experts will criticize the 
performance of the system. 
Sixth, there must be ample data and test cases available to convince the system 
builders that some defined level of performance has been achieved. Although this may seem 
obvious, some systems have been built and tuned to perform well on a single test case. 
Needless to say, such systems usually fail when confronted with a second test case. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

1. 
SMITH 
The Technology of Expert Systems 
9 
Seventh, it must be possible to build the system incrementally. It must be easy to 
extend the knowledge base and modify its contents, because as you all know, rules often 
change as new evidence is gathered. 
The progress of science and technology are always 
working to make our knowledge inadequate or obsolete. We must learn new things; we 
must be able to instruct the expert system accordingly. 
Selected Applications 
Biological Reactors. In this section I discuss some applications that are at least indirectly 
related to chemical science and engineering. The first example, illustrated in Figure 1, is 
derived from a simulation and diagnosis of a biological reactor that we put together for a 
demonstration. 
Because the expert system was not connected to a real reactor, we built a small table-
driven simulation to model the growth of cells in suspension. The graphical interface 
includes images representing the reactor itself, several feed bins and associated valves. Also 
shown in Figure 1 are several types of gauges, including a strip chart, monitors of various 
states and alarm conditions, temperature, and the on/off state of heaters and coolers. 
The simulation runs through a startup phase, then through an exponential growth 
phase which is inhibited by one of several conditions. The expertise captured in the rules in 
the knowledge base is designed to diagnose one of several possible faults in the system and 
to take action to correct the condition. Growth inhibition may be caused by incorrect 
temperature, depletion of nutrients, incorrect pH or contamination. The system is able to 
diagnose the fault and to take action to adjust temperatures, the pH, add nutrients or 
recommend the batch be discarded due to contamination. A simple example, but one that 
illustrates several points mentioned earlier. The graphical interface is essential for non-
experts. The system was developed rapidly as a prototype. As such, it does useful things, 
it can be examined, criticized, refined, and can represent the beginnings of a larger system. 
Combinations of relatively simple rules can diagnose problems and take specific actions. 
Communication Satellites. The next example illustrates an expert system similar to those 
under development in process control and instrumentation companies. These systems are 
designed to diagnose faults and suggest corrective actions. 
An aerospace company in California monitors telecommunication satellites in 
geosynchronous orbit, 23,000 miles away in space. When something goes wrong on that 
satellite, $50 to $100 million are dependent on taking the right corrective action. This 
company is using expert systems to capture the knowledge of the developers of the satellites 
in diagnosing and correcting problems, and to make this knowledge available to all 
operators responsible for monitoring the condition of on-board systems. 
Like many modern instruments, their instrument, the satellite, is connected to their 
computer systems through an interface, in this case an antenna dish that transfers data 
from the satellite to computers at a ground control center. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

10 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Figure 1. 
Graphics screen for the prototype expert system for 
diagnosing faults i n a b i o l o g i c a l reactor. 
The screen shows a 
schematic of the reactor, together with gauges, s t r i p charts, and 
" t r a f f i c 
l i g h t s " i n d i c a t i n g the state of the reactor obtained from 
sensor readings. (Reproduced with permission. 
Copyright 1983 
I n t e l l i C o r p . ) 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

1. 
SMITH 
The Technology of Expert Systems 
II 
What is especially interesting about their problem of diagnosis of failures and advice 
On corrective measures is their treatment of the alarm conditions that trigger the execution 
of the expert system. The first goal of their rules is to focus on the single, or small set of, 
alarm(s) that are of highest priority, thereby ignoring what may be many lower priority 
alarms for a single problem. This usually allows^ isolation of the problem to a specific 
subsystem, such as the energy storage and heating system shown schematically in Figure 2. 
When the problem is localized, the system provides advice on what actions to take, then 
examines the other alarms to determine if they are of secondary importance or represent 
concurrent, major problems. 
Here, the graphical presentations, for example, Figure 2, 
provide information to the operator on which systems are being examined and where the 
faults may occur. 
Space Stations. The final example I have selected results from work done by the National 
Aeronautics and Space Administration (NASA) in preparation for flying the space station. 
NASA's general problem is that many space station systems must be repairable in orbit by 
astronauts who will not be familiar with the details of all the systems. Therefore, NASA is 
looking to the technology of expert systems to diagnose problems and provide advice to the 
astronauts on how to repair the problems. 
The problem they chose for their prototype is part of the life support system, 
specifically the portion that removes C 0 2 from the cabin atmosphere. This system already 
has been constructed, and NASA engineers are already familiar with its operation and how 
it can fail. Using this information they were able to build as part of their knowledge base a 
simple simulation for the modes of failure of each of the components in the system. The 
life support system is modular, in that portions of it can be replaced, once a problem has 
been isolated. The graphical representation chosen for the instrument schematic and panel 
is shown in Figure 3. 
On the left of Figure 3 is a schematic of the system, with hydrogen gas (the 
consumable resource) flowing through a valve to the six-stage fuel cell. Cabin atmosphere 
enters from the right, excess hydrogen plus C 0 2 exits at the H 2 Sink, and atmosphere 
depleted in C 0 2 exits at the Air Sink. There is a variety of pressure, flow, temperature and 
humidity sensors on the system. The lower subsystem is a coolant loop that maintains 
temperature and humidity in the fuel cell. On the right of Figure 3 is a schematic of an 
instrument panel that contains many of the instruments the astronauts will actually see. 
Each component in the schematic is active. Pointing to any component with a mouse 
yields a menu of possible modes of failure for that component. Selection of a failure results 
in setting parameters in the underlying knowledge base, which are of course reflected in the 
settings of the meters and gauges on the instrument panel. 
Simply pointing to the IDENTIFY button runs the rule system, which diagnoses the 
problem and provides advice on action to take to fix the life support system. 
The 
remainder of the screen is devoted to various switches and output windows that are used to 
build and debug the knowledge base. 
As an indication of how rapidly the technology of expert systems has matured, this 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

Figure 2. 
Graphics screen for a p o r t i o n of the expert system developed for an 
alarm advisory system for communications s a t e l l i t e s . 
This screen d i s p l a y s a p o r t i o n 
of the battery and heater subsystem used to maintain thermal balance on the 
s a t e l l i t e . 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

1. 
SMITH 
The Technology of Expert Systems 
13 
prototype was built in our offices by two people from NASA, one a programmer who knew 
nothing about LISP, the other an expert on the life support system who knew nothing 
about programming. Neither had seen KEE™, our system building tool, before receiving 
training and beginning work on the prototype. The system, including all the graphics, the 
simulation and the rules, was built in four weeks. It is capable of diagnosing many of the 
important modes of failure of this portion of the life support system. Much work remains 
to be done before a final version of the expert system is completed, but this prototype 
provides an important starting point. 
Concluding Remarks 
I have used this paper as an introduction to what amount to revolutionary change in the 
software technologies of expert systems. At the same time, a revolution is occurring in 
hardware technology as well. At the moment, tools for building high performance expert 
systems run on special purpose hardware, LISP machines. These machines have been quite 
expensive, making entry into this area difficult for many laboratory groups. Several things 
are happening that are changing this situation dramatically. First, applications developed 
on LISP machines can now be ported to midi and minicomputers, making replication of a 
developed system much less expensive. Second, hardware vendors such as Xerox have 
recently announced LISP machines at modest prices, just under $10,000 for one such 
machine. Third, Texas Instruments has a contract to produce a VLSI implementation of its 
LISP machine on a chip. Successful development of this chip will further reduce the cost of 
a machine. Fourth, better programming environments are becoming available on midi and 
minicomputers, and in the short run some of these systems will mature to the point where 
significant work can be done, albeit at performances substantially below the LISP machines. 
In the longer term, better hardware for symbolic computation will become available. 
These machines will support large knowledge bases, and be able to perform rapid retrievals 
of data from them. Logical inferences will be performed at much higher rates, approaching 
those now achieved by arithmetic operations. Parallel architectures will further improve 
the speed of symbolic computations, just as they have done for numeric computations. The 
keyboard is already becoming obsolete in expert systems products. 
Menus accessed by 
pointing devices, or special purpose, programmable touchpads are much easier for most 
people to use. 
Speech and picture input is already achievable in simple systems; the 
improvement of this technology will continue to revolutionize human-machine interactions. 
An important characteristic of expert systems technology is that it can be added on to 
existing technologies. 
Such systems are already compatible with modern distributed 
computing environments, and can be networked easily with existing systems. 
Thus, 
investments in hardware and software are protected, and machines of more conventional 
architectures can be used as they are used now, for example, to support large data bases or 
to perform numerical calculations. An expert system can make use of these machines, 
passing requests for retrievals or calculations over a network, and gathering results to be 
used in the problem solving activities. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

KULt.uLASStS's AND. I RACE 
DIAGNOSE ·^ 
RESET 
ON 
RULE.CLASSES's 
Ofl.TRAUC 
RULE-CLASSE S *s STEPPER J400É 
I £ 5 1 . R E S E T T F Q R . R U L E S 
I 
DIAGNOSE '» *tDf-MTT Y 
A L L - E S s CHOOSE MODE 
Γ 
S E T . I M D I V I D U A L . L E V E L S 
I 
SFLtCTJATTfRM 
C S - T s F AULTY.COMPONEN/T 
MIL 
2/04/85 15:25:49 
«Unit (U2H2 CS1) 
2/04/85 15:31: 
NIL 
2/04/85 15:32:24 
«Unit (U2H2 CS1) 
2/04/85 15:48: 
MIL 
2/04x85 16:29:26 
( t v : n o u s e - 1 n i t i a l 1 * e ) 
MIL 
C o n s i d e r g o a l ( f l COMPONENT.FAILURE.TYPE OF ?C0f1P0MENT I S ?FAILURE) 
a t node 2. 
C o n s i d e r H2.SOURCE.RULE t o d e r i v e t h e g o a l . 
C r e a t e node 5. below node 2.. 
ttriOREt»! 
Figure 3. 
Graphics screen f o r the prototype expert system developed by 
N A S A f o r 
d i a g n o s i s and r e p a i r of the l i f e - s u p p o r t system. 
T h i s p o r t i o n of the system 
s t r i p s cabin atmosphere of C02« 
(Reproduced with permission. 
Copyright 
1983 
I n t e l l i C o r p . ) 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

16 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
In my opinion, these technologies will have substantial impact on the practice of 
chemistry and chemical engineering. Everyone is familiar already with the extent to which 
computers have taken over routine tasks of data acquisition, reduction and presentation. 
Machines for data interpretation are now being constructed. Robotics is another discipline 
of AI that is now being used in simple systems to perform repetitive laboratory operations. 
The fusion of vision and expert systems technologies with robotics will make the latter 
much more flexible and adaptable to changing conditions. These changes, and many others 
brought on by the new technologies, will probably not diminish the total number of jobs 
available in the physical sciences, but it certainly will change what work is done in these 
jobs. 
There is already a history of jobs requiring limited skills being displaced by 
computers and automation. Expert systems will create additional displacements. At the 
same time, more jobs related to building and maintaining such systems will become 
available, but these jobs will require substantially more education and skills. 
For jobs that already require substantial skills, expert systems will serve to make the 
people holding these jobs more productive. An analogy has been made to engineers who 
used to calculate trajectories by hand, but now use computers to perform these routine 
tasks, thereby freeing their time for more intellectual pursuits. Chemists and chemical 
engineers will see similar improvements to their own productivity. 
RECEIVED January 24, 1986 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

2 
A Knowledge-Engineering Facility 
for Building Scientific Expert Systems 
Charles E. Riese and J. D. Stuart 
Radian Corporation, Austin, TX 78766-0948 
RuleMaster is a general-purpose software package for 
building and delivering expert systems. Its features 
include 1) knowledge acquisition by inductive learning, 
2) specialized artificial intelligence programming 
skills are not required, and 3) it runs on a wide range 
of micro-computers and mini-computers. RuleMaster was 
developed to enable scientists and engineers to 
incorporate human-like decision making as part of their 
computer applications. One such application is TOGA, an 
expert system to diagnose faults in large transformers 
based on gas chromatographic analysis of the insulating 
oil. 
An expert system i s a computer program which contains the 
captured 
knowledge o f an expert i n some s p e c i f i c domain. 
The program i s a b l e 
t o g i v e a d v i c e w i t h i n the domain i n much the same manner as 
t h e 
human e x p e r t 
w o u l d , 
a s k i n g f o r 
i n f o r m a t i o n as 
i t 
i s 
needed, 
v o l u n t e e r i n g p a r t i a l diagnoses as they are reached, and functioning 
w i t h i n c o m p l e t e or p o s s i b l y erroneous 
i n f o r m a t i o n . 
The 
e x p e r t 
system i s a b l e t o p r o v i d e an e x p l a n a t i o n o f the l i n e o f r e a s o n i n g 
upon demand. 
U n t i l r e c e n t l y , 
most expert system b u i l d i n g took p l a c e i n the 
research departments o f u n i v e r s i t i e s and a few major 
corporations. 
The p r i m a r y emphasis was i n v e s t i g a t i o n o f a r t i f i c i a l i n t e l l i g e n c e 
p r i n c i p l e s , and t h e a p p l i c a t i o n was o f secondary importance. 
The 
expert systems t o o l s used r e f l e c t t h i s i n t e r e s t . 
They are t y p i c a l l y 
stand-alone AI computer systems, using s p e c i a l hardware and software 
environments 
( u s u a l l y Lisp^based) not commonly found i n s c i e n t i f i c 
and engineering organizations. 
But 
a p p l i c a t i o n s u s u a l l y need a d i f f e r e n t type o f computing 
environment. 
The r e a s o n i n g t a s k , a c c o m p l i s h e d by A I t e c h n i q u e s , 
often constitutes ten percent or l e s s o f the code o f an a p p l i c a t i o n . 
The majority o f the code i s for c o n v e n t i o n a l programming tasks, 
such 
as data a c q u i s i t i o n , data base access, 
numerical c a l c u l a t i o n s , and 
g r a p h i c s . 
I n each a p p l i c a t i o n domain, 
computer 
hardware 
and 
s o f t w a r e has been s e l e c t e d t o match t h e needs o f i t s t a s k s . 
I n 
0097-6156/86/0306-0018$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

2. 
RIESE A N D STUART 
A Knowledge-Engineering Facility 
19 
e s t a b l i s h e d f i e l d s 
l i k e c h e m i s t r y , computer s o l u t i o n s have been 
implemented and i n use f o r y e a r s . 
I t i s not r e a s o n a b l e f o r the A I 
component, a r e l a t i v e l y s m a l l a d d i t i o n t o the t o t a l system, 
t o 
d i c t a t e major changes to the computing environment. 
While the o r i g i n a l expert system approaches were s u i t a b l e for 
AI r e s e a r c h , s e v e r a l types o f problems are encountered when t h e 
emphasis i s s h i f t e d t o s c i e n t i f i c 
e x p e r t 
system a p p l i c a t i o n s . 
In the o r i g i n a l approaches, 
e x p e r t system b u i l d i n g i s s l o w and 
e x p e n s i v e due t o the amount o f e x p e r t and knowledge engineer t i m e 
r e q u i r e d t o express and t e s t r u l e s . 
The c o s t o f A I hardware and 
s p e c i a l A I programmers makes s m a l l a p p l i c a t i o n s 
p r o h i b i t i v e l y 
expensive. 
The expert systems are stand-alone programs, and i t 
i s 
d i f f i c u l t 
or impossible to integrate t h e i r reasoning w i t h e x i s t i n g 
s c i e n t i f i c software. 
Sometimes, f i n i s h e d expert systems can not be 
u s e d 
i n t h e 
f i e l d 
b e c a u s e 
t h e y 
a r e 
t o o 
s l o w , 
o r 
r e q u i r e 
i n a p p r o p r i a t e l y expensive hardware. 
B e c a u s e o f t h e 
c u r r e n t 
h i g h 
demand f o r 
e x p e r t 
s y s t e m 
a p p l i c a t i o n s , software packages which are optimized for a p p l i c a t i o n 
b u i l d i n g , 
r a t h e r 
t h a n 
f o r 
A I t e c h n i q u e 
r e s e a r c h , 
have 
been 
d e v e l o p e d . 
One o f t h e s e i s R u l e M a s t e r (l)9 
w h i c h i s d e s i g n e d t o 
extract expert reasoning and to incorporate i t i n t o a wide range o f 
s c i e n t i f i c and e n g i n e e r i n g a p p l i c a t i o n s . 
I n c o n t r a s t w i t h many 
other AI approaches, RuleMaster i s based on contemporary structured 
programming p r i n c i p l e s . 
Conventional micro- and mini-computers may 
be used by any computer p r o f e s s i o n a l t o 
b u i l d 
e x p e r t 
systems 
integrated w i t h e x i s t i n g computer programs. 
A knowledge a c q u i s i t i o n 
system based on i n d u c t i v e l e a r n i n g speeds up the r u l e generation and 
t e s t i n g p r o c e s s . 
A p r o c e d u r a l r e p r e s e n t a t i o n o f the r u l e base i s 
a u t o m a t i c a l l y g e n e r a t e d , p r o v i d i n g c o n s i s t e n c y and completeness 
checking and e f f i c i e n t run-time behavior. 
Embedding expert system 
r e a s o n i n g i n t o e x i s t i n g systems 
i s s u p p o r t e d by two 
f e a t u r e s : 
access to e x t e r n a l user programs from the RuleMaster r u l e language, 
and 
the a u t o m a t i c g e n e r a t i o n o f a C code r e p r e s e n t a t i o n o f t h e 
expert system. 
RuleMaster D e s c r i p t i o n 
H i s t o r y . 
R a d i a n C o r p o r a t i o n i s a t e c h n i c a l c o n s u l t i n g company, 
employing about 1000 people. 
About h a l f o f Radian's business i s i n 
the c h e m i s t r y and c h e m i c a l e n g i n e e r i n g f i e l d s . 
I n 1981, R a d i a n 
management r e a l i z e d that expert systems c a p a b i l i t y c o u l d enhance and 
complement e x i s t i n g c o n s u l t i n g a c t i v i t i e s . 
Radian entered i n t o an 
a g r e e m e n t 
w i t h D o n a l d 
M i c h i e , 
o f E d i n b u r g h U n i v e r s i t y 
and 
I n t e l l i g e n t Terminals Limited (ITL). 
For a number o f years, he had 
done r e s e a r c h i n i n d u c t i v e l e a r n i n g and i n o t h e r e x p e r t 
system 
t e c h n i q u e s , and o f t e n used c o n v e n t i o n a l s t r u c t u r e d programming 
languages 
l i k e P a s c a l . 
He noted that the s p e c i a l AI environments 
were p r i m a r i l y u s e f u l for research i n t o AI techniques, and were not 
n e c e s s a r y f o r an e x p e r t systems package o r i e n t e d toward b u i l d i n g 
a p p l i c a t i o n s . 
R u l e M a s t e r was d e s i g n e d and d e v e l o p e d by I T L and 
R a d i a n d u r i n g 1982 and 1983. 
S i n c e t h e n , 
b o t h companies 
have 
c o n t i n u e d enhancing R u l e M a s t e r , and s e v e r a l dozen e x p e r t system 
a p p l i c a t i o n s are under construction or completed. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

20 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Components. 
The two p r i n c i p l e components o f RuleMaster are: 
R a d i a l : 
a 
p r o c e d u r a l , 
b l o c k s t r u c t u r e d 
language 
f o r 
expressing d e c i s i o n r u l e s , and 
RuleMaker: 
the knowledge a c q u i s i t i o n system; induces d e c i s i o n 
trees from examples o f expert decision-making, and 
expresses 
t h e s e d e c i s i o n s 
t r e e s 
as 
e x e c u t a b l e 
R a d i a l code, 
R u l e M a s t e r e x p e r t systems are represented as R a d i a l programs. 
To 
b u i l d an expert system, domain knowledge i s n o r m a l l y entered i n two 
p a r t s : 
a module s t r u c t u r e 
and the bodies o f t h e modules. 
The 
structure defines the h i e r a r c h i c a l organization of decisions used to 
s o l v e the problem. 
The code w i t h i n each module defines the d e t a i l s 
of one o f these d e c i s i o n s . 
RuleMaker i s a knowledge e x t r a c t i o n u t i l i t y for b u i l d i n g and 
t e s t i n g the d e c i s i o n l o g i c c o n t a i n e d w i t h i n R a d i a l modules. 
The 
l o g i c 
i s 
s p e c i f i e d as 
a t a b l e 
o f examples 
o f c o r r e c t 
e x p e r t 
decisions for each module. 
RuleMaker transforms 
each example 
set 
i n t o an e q u i v a l e n t d e c i s i o n t r e e , 
and a u t o m a t i c a l l y generates 
the 
body o f the module i n the form o f R a d i a l code. 
System b u i l d e r s may 
a l s o choose t o e n t e r R a d i a l code d i r e c t l y , a l t h o u g h t h e y u s u a l l y 
prefer t o work w i t h example t a b l e s . 
C o n s u l t a t i o n o f an expert system i s accomplished by using i t s 
R a d i a l code representation as input t o the R a d i a l interpreter. 
The 
i n t e r p r e t e r 
f i r s t performs completeness and consistency checks, and 
then provides i n t e r a c t i v e run-time support. 
I n d u c t i v e L e a r n i n g ( R u l e M a k e r ) . 
Experts are best a b l e t o e x p l a i n 
complex concepts t o human apprentices 
i m p l i c i t l y by using examples 
o f the expert's decision-making, rather than by e x p l i c i t l y 
s t a t i n g 
fundamental 
t h e o r e t i c a l 
p r i n c i p l e s . 
The a p p r e n t i c e 
q u i c k l y 
generalizes these example decisions t o form working r u l e s , which he 
applies when s i m i l a r s i t u a t i o n s are 
encountered. 
RuleMaster
fs knowledge a c q u i s i t i o n t o o l , 
RuleMaker, employs a 
l e a r n i n g process s i m i l a r t o t h a t o f t h e a p p r e n t i c e . 
To t e a c h a 
concept t o RuleMaker, the expert provides a set o f examples ( c a l l e d 
a t r a i n i n g s e t ) o f c o r r e c t d e c i s i o n s w i t h i n some c o n t e x t . 
Each 
t r a i n i n g set contains a l i s t o f the a t t r i b u t e s which are factors 
for 
determining the choice o f a c t i o n . 
Each example contains a v a l u e for 
each o f the a t t r i b u t e s , t o g e t h e r w i t h the s p e c i f i e d a c t i o n s t o be 
taken when that combination of a t t r i b u t e values i s encountered. 
The 
R u l e M a k e r u t i l i t y checks each t r a i n i n g s e t f o r completeness 
and 
consistency, 
and then generates a procedural representation 
o f the 
knowledge embodied i n the example. 
To i l l u s t r a t e t h i s , t h e example s e t o f F i g u r e 1 shows how a 
simple corona detection d e c i s i o n ( l i k e l y , p o s s i b l e , or u n l i k e l y ) i n 
TOGA (Transformer O i l Gas A n a l y s i s ) might be s p e c i f i e d . 
TOGA i s an 
expert system that diagnoses f a u l t s i n l a r g e e l e c t r i c a l transformers 
and w i l l be d e s c r i b e d i n d e t a i l l a t e r i n t h i s paper. The corona 
d e c i s i o n i s based on four a t t r i b u t e s : 
H2, t h e r m a l , H2/C2H2, and 
temperature. 
The a t t r i b u t e "H2
I ! i s the c o n c e n t r a t i o n o f hydrogen 
gas; i t may be l o w , medium, or h i g h , a c c o r d i n g t o n u m e r i c a l ranges 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

2. 
RIESE AND STUART 
A Know ledge-Engineering Facility 
21 
s e t by the e x p e r t i n another R a d i a l module. 
"Thermal" r e f e r s 
t o 
t h e r m a l l y generated hydrocarbon gases, which may be absent, s l i g h t , 
or d e f i n i t e l y present. 
The other two a t t r i b u t e s 
are the hydrogen-
to-acetylene r a t i o and the estimate o f the temperature at which the 
hydrocarbon gases were generated. 
A hierarchy o f r u l e s s u p p l i e d by 
the expert determines the v a l u e o f each o f these a t t r i b u t e s , 
based 
e v e n t u a l l y on t h e n u m e r i c a l c o n c e n t r a t i o n s r e c e i v e d from the gas 
chromatograph. 
The d e c i s i o n for each example i s expressed as an "action-next 
state" p a i r . 
The "action" i s a reference to executable R a d i a l code, 
which consists o f a sequence o f R a d i a l statements. 
These statements 
may c o n t a i n r e f e r e n c e s t o e x t e r n a l programs i n v a r i o u s 
languages 
(this w i l l 
be discussed further 
l a t e r ) . 
The "next state" describes 
t h e 
c o n t e x t 
t o w h i c h c o n t r o l 
i s 
t o 
pass a f t e r 
t h e 
a c t i o n 
i s 
c o m p l e t e d . 
F o r d i a g n o s t i c e x p e r t systems, such as TOGA, t h e next 
state w i l l u s u a l l y be the "goal" state o f the module. 
This passes 
c o n t r o l back t o the c a l l i n g module. 
For procedural expert 
systems, 
such as r o b o t i c s and i n s t r u m e n t a t i o n c o n t r o l a p p l i c a t i o n s , 
the 
c o n t r o l w i l l be transferred between s e v e r a l states w i t h i n a module 
to implement l o o p i n g . 
The d e c i s i o n t r e e 
f o r 
the 
t r a i n i n g s e t 
o f F i g u r e 1, 
as 
generated by R u l e M a k e r , i s shown i n F i g u r e 2. 
The generated 
t r e e 
agrees w i t h a l l d e c i s i o n s r e p r e s e n t e d 
i n the example s e t , 
and 
g e n e r a l i z e s t o r e a c h d e c i s i o n s f o r u n s p e c i f i e d p o r t i o n s o f 
the 
space. 
The r u l e 
i n d u c t i o n a l g o r i t h m , 
c a l l e d 
ID3 (2), 
uses 
information theoretic techniques t o reduce t h e number o f d e c i s i o n 
nodes i n the generated 
tree. 
Rule Language (Radial). 
RuleMaster expert systems are expressed i n 
R a d i a l , 
a b l o c k s t r u c t u r e d 
i n t e r p r e t e d 
language w i t h a 
s y n t a x 
s i m i l a r t o P a s c a l and ADA. 
R a d i a l i s a s i m p l e , 
e a s y - t o - l e a r n 
l a n g u a g e 
w h i c h 
s u p p o r t s 
t h e 
f u l l 
r a n g e 
o f 
e x p e r t 
s y s t e m 
c a p a b i l i t i e s . 
The b u i l d i n g b l o c k o f R a d i a l , 
c o r r e s p o n d i n g t o the P a s c a l 
procedure, 
i s c a l l e d a "module". 
The syntax w i t h i n each module i s 
based on f i n i t e automata theory, 
to provide the c o n t r o l 
structures 
needed t o support b o t h d i a g n o s t i c and p l a n n i n g a s p e c t s o f e x p e r t 
systems a p p l i c a t i o n s . 
Other language features i n c l u d e r e c u r s i v e 
r o u t i n e c a l l s , argument p a s s i n g , scoped v a r i a b l e and f u n c t i o n s , 
abstract data types, and user-defined overloaded operators. 
B u i l t -
i n data types i n c l u d e s t r i n g , integer, f l o a t i n g point, and boolean. 
The R a d i a l code f o r the d e c i s i o n t r e e o f F i g u r e 2 i s shown i n 
F i g u r e 3. 
T h i s code was generated 
by R u l e M a k e r . 
E x p e r t s 
have 
d i f f i c u l t y c o r r e c t l y generating a deeply nested c o n d i t i o n a l phrase 
l i k e t h i s , but t h e y are a b l e t o i n s p e c t i t f o r p o s s i b l e e r r o r s or 
omissions. 
TOGA uses the b u i l t - i n n u m e r i c a l c a p a b i l i t i e s o f R a d i a l t o 
compute 
f u n c t i o n s 
o f c o n c e n t r a t i o n 
v a l u e s , 
w h i c h a r e 
u s e d 
e x t e n s i v e l y i n t h e r u l e s . 
The r a t i o o f hydrogen t o 
a c e t y l e n e 
concentration i n the corona r u l e i s a simple example o f t h i s . 
User-
defined compound data types are used t o handle blocks o f data as a 
s i n g l e named structure. 
These features are i n v a l u a b l e i n b u i l d i n g 
p r a c t i c a l expert systems, but are not a v a i l a b l e w i t h a l l packages. 
Most R a d i a l code i s constructed by RuleMaker from t r a i n i n g sets 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

22 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
H2 
thermal 
H2/C2H2 
temperature 
a c t i o n 
high 
-
high 
low 
=> 
( l i k e l y , 
med 
absent 
high 
low 
=> 
I : l i k e l y , 
high 
-
high 
moderate 
=> 
< p o s s i b l e , 
med 
absent 
high 
moderate 
=> 
( p o s s i b l e , 
high 
-
high 
high 
=> 
( u n l i k e l y , 
med 
absent 
high 
high 
=> 
( u n l i k e l y , 
med 
present 
-
moderate 
=> 
( u n l i k e l y , 
med 
s l i g h t 
-
moderate 
=> 
( u n l i k e l y , 
low 
-
-
-
=> 
( u n l i k e l y , 
-
— 
low 
— 
=> 
( u n l i k e l y , 
Figure 1. 
Example set for corona r u l e . 
next 
state 
GOAL) 
GOAL) 
unlikely 
unlikely 
marf 
unlikely 
likely 
likely 
unlikely 
( thermal ) 
possible 
absent 
<·" [^^rresent 
possible 
unlikely 
unlikely 
F i g u r e 2. 
D e c i s i o n t r e e f o r corona determination. 
IF (temp) IS 
"low" : I F (H2/C2H2) IS 
"high" : IF (H2) IS 
"low" : ( " u n l i k e l y " -> r e s u l t , GOAL ) 
"med" : ( " l i k e l y " -> r e s u l t , GOAL ) 
ELSE ( " l i k e l y " -> r e s u l t , GOAL ) 
ELSE ( " u n l i k e l y " -> r e s u l t , GOAL ) 
"moderate" : IF (H2/C2H2) IS 
"high" : IF (H2) IS 
"low" : ( " u n l i k e l y " -> r e s u l t , GOAL ) 
"med" : IF (thermal) IS 
"absent" : ( " p o s s i b l e " -> r e s u l t , GOAL ) 
" s l i g h t " : ( " u n l i k e l y " -> r e s u l t , GOAL ) 
ELSE ( " u n l i k e l y " -> r e s u l t , GOAL ) 
ELSE ("possible" -> r e s u l t , GOAL ) 
ELSE ( " u n l i k e l y " -> r e s u l t , GOAL ) 
EI£E ( " u n l i k e l y " -> r e s u l t , GOAL ) 
F i g u r e 3. 
Corona determination r u l e induced from F i g u r e 1 
examples, as expressed i n a u t o m a t i c a l l y generated R a d i a l code. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

2. 
RIESE A N D STUART 
A Know ledge-Engineering Facility 
23 
of 
examples, as described i n the previous section. 
However, R a d i a l 
code can a l s o be entered d i r e c t l y by the system b u i l d e r s , i f they so 
d e s i r e . 
E x p l a n a t i o n . 
A user 
may ask 
f o r 
e x p l a n a t i o n o f t h e 
l i n e o f 
r e a s o n i n g 
at 
any t i m e 
d u r i n g an 
e x p e r t 
system 
c o n s u l t a t i o n . 
R u l e M a s t e r 
p r e s e n t s 
e x p l a n a t i o n 
as 
a 
l i s t 
o f premises 
and 
c o n c l u s i o n s i n E n g l i s h - l i k e t e x t . 
The e x p l a n a t i o n d e s c r i b e s 
the 
execution path which l e d up t o the current c o n c l u s i o n or question. 
Explanation i s presented 
i n proof ordering, which u s u a l l y 
d i f f e r s 
from 
the 
o r d e r 
i n 
w h i c h 
the 
q u e s t i o n s 
and 
c o n c l u s i o n s 
were 
encountered. 
This i s perceived as more r e l e v a n t and 
understandable 
than the time-ordered presentation o f f i r e d r u l e s , 
as i s present i n 
most expert system approaches. 
A sample explanation for the corona d e c i s i o n i s as 
f o l l o w s : 
Since the estimated o i l temperature i s moderate 
when H2/C2H2 i s abovej* 
and the concentration o f H2 i s medium 
and overheating o f o i l i s absent 
i t 
follows that a corona i s possible 
T h i s t e x t was c o n s t r u c t e d at r u n - t i m e by the R a d i a l 
i n t e r p r e t e r 
from t e x t fragments provided beforehand by the system b u i l d e r s . 
I t 
d i s p l a y s , 
i n E n g l i s h , t h e p a t h t h r o u g h the corona d e c i s i o n t r e e 
( F i g u r e 2). 
When e x p l a n a t i o n i s r e q u e s t e d 
at 
i n t e r m e d i a t e 
p o i n t s i n a 
s e s s i o n , 
j u s t 
t h e 
r e a s o n i n g 
f o r the 
c u r r e n t 
d e c i s i o n t r e e 
i s 
p r e s e n t e d . 
By a s k i n g f o r e l a b o r a t i o n , t h e user can i n s p e c t 
t h e 
reasoning u n d e r l y i n g the current r u l e . 
E l a b o r a t i o n o f the 
corona 
d e c i s i o n above would y i e l d d e s c r i p t i o n s o f the l i n e s o f reasoning 
w h i c h determined 
the 
p r e m i s e s : 
t h a t t h e 
o i l temperature 
was 
moderate, that the concentration o f H2 was medium, etc. 
E l a b o r a t i o n 
may be repeated u n t i l the user i s s a t i s f i e d or u n t i l a l l the steps 
have been examined. 
I f 
explanation i s requested at the end o f a session, the 
e n t i r e 
l i n e o f reasoning l e a d i n g up to the l a t e s t t o p - l e v e l c o n c l u s i o n i s 
p r e s e n t e d i n p r o o f o r d e r . 
I n t e r m e d i a t e 
c o n c l u s i o n s are d e r i v e d 
before they are used i n premises. 
The number o f l e v e l s o f explanation a v a i l a b l e depends on the 
nesting o f routine c a l l s at run-time. 
The h i e r a r c h i c a l organization 
o f modules makes i t e a s i e r t o c o n t r o l and understand the r u n - t i m e 
behavior o f r u l e execution. 
E x p l a n a t i o n - d r i v e n e x p e r t system b u i l d i n g l e a d s t o r o b u s t 
systems. 
By t e s t i n g t o ensure t h a t the r i g h t c o n c l u s i o n s 
a r e 
reached f o r the r i g h t r e a s o n s , 
the p r o b a b i l i t y o f the 
r e a s o n i n g 
b e i n g c o r r e c t 
f o r unforeseen 
s i t u a t i o n s 
i s 
enhanced. 
Q u a l i t y 
explanation a l s o makes systems more u s e f u l as teaching t o o l s . 
E x t e r n a l Processes. 
The R a d i a l language supports 
i n t e r f a c i n g t o 
software w r i t t e n i n the various computer languages a v a i l a b l e under 
UNIX: 
F o r t r a n , C, P a s c a l , L i s p , e t c . 
The R a d i a l language t a k e s 
c a r e o f the d e t a i l s 
o f p a s s i n g arguments 
t o and from e x t e r n a l 
r o u t i n e s . 
T h i s c a p a b i l i t y a l l o w s R a d i a l t o be used j u s t f o r 
t h e 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

24 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
reasoning p o r t i o n o f an a p p l i c a t i o n . 
The remainder o f the domain-
dependent code can be w r i t t e n i n whatever language i s most s u i t a b l e . 
E x t e r n a l code may be used t o o b t a i n i n p u t (e.g., 
from 
d a t a 
bases, 
i n s t r u m e n t a t i o n , 
n u m e r i c a l d a t a 
base r o u t i n e s , 
o t h e r 
computers), 
t o 
send output 
(to 
d a t a 
bases, 
p r i n t e r s , 
g r a p h i c 
d e v i c e s ) , or t o p e r f o r m a c t i o n s when d e c i s i o n s a r e reached (e.g., 
instrument c o n t r o l ) . 
The operators for user-defined data types 
w i l l 
u s u a l l y be implemented w i t h e x t e r n a l r o u t i n e s . 
A R u l e M a s t e r program may a l s o be s e t up t o be c a l l e d 
from 
another 
program. 
By c o m b i n i n g s e v e r a l e x p e r t 
systems 
i n t h i s 
manner, 
a l a r g e a p p l i c a t i o n can be modeled as a set o f cooperating 
experts. 
C Code G e n e r a t i o n . 
The p r i m a r y r e p r e s e n t a t i o n o f a R u l e M a s t e r 
e x p e r t system i s as R a d i a l code, much o f w h i c h i s generated 
from 
example t a b l e s . 
The b u i l d i n g and t e s t i n g 
i s 
c a r r i e d out 
by 
i n t e r p r e t i n g t h i s R a d i a l program. 
The advantage o f i n t e r p r e t i n g i s 
speed o f development and support for i n t e r a c t i v e operation. 
Once an a p p l i c a t i o n i s t e s t e d 
and f a i r l y 
s t a b l e , 
another 
d e l i v e r y mechanism i s a v a i l a b l e . 
The system can generate a C source 
code r e p r e s e n t a t i o n 
o f t h e 
e x p e r t 
system. 
When c o m p i l e d and 
executed, the same behavior as the interpreted R a d i a l v e r s i o n o f the 
expert system w i l l be exhibited. 
There are s e v e r a l reasons for using the C v e r s i o n o f an expert 
system. 
A l t h o u g h i n t e r p r e t e d R a d i a l i s a l r e a d y f a s t e r t h a n many 
e x p e r t system approaches, c o m p i l e d C i s f a s t e r s t i l l . 
F o r e x p e r t 
systems w h i c h get i n p u t s from i n s t r u m e n t a t i o n ( r a t h e r t h a n from a 
person at a keyboard) and need t o respond i n r e a l t i m e , t h i s speed 
may be e s s e n t i a l . 
Another advantage i s p o r t a b i l i t y . 
The C code may 
be compiled on computers other than the one on which the system was 
developed. 
The t h i r d advantage i s the s m a l l s i z e o f the compiled 
code. 
F o r l a r g e r a p p l i c a t i o n s , t h e c o m p i l e d o b j e c t code i s about 
one e i g h t h t h e s i z e o f t h e c o r r e s p o n d i n g r e s i d e n t 
code f o r 
t h e 
interpreted v e r s i o n . 
This a l l o w s expert systems to be d e l i v e r e d i n 
systems w i t h 
l i m i t e d computing r e s o u r c e s , 
such as embedded i n 
chemical 
instrumentation. 
E f f i c i e n c y . 
Much o f t h e 
c o m p u t e r 
r e s o u r c e 
r e q u i r e m e n t 
o f 
t r a d i t i o n a l production r u l e expert systems i s used t o decide which 
r u l e s a r e l e g a l f o r f i r i n g a t each s t e p o f a c o n s u l t a t i o n . 
W i t h 
RuleMaster, t h i s part o f the inference engine job i s accomplished at 
e x p e r t system b u i l d i n g t i m e , r a t h e r t h a n a t e x e c u t i o n t i m e . 
For 
every knowledge base and inference engine combination, there i s an 
e q u i v a l e n t p r o c e d u r a l r e p r e s e n t a t i o n . 
R a d i a l i s designed so that 
t h i s procedural representation can be determined at system b u i l d i n g 
time, and pointers between c o n d i t i o n a l branching statements are 
set 
up at that time. 
During a session, i t i s o n l y necessary t o 
t r a v e r s e 
these r u l e pointers. 
The execution speed improvement r e s u l t i n g from 
r u l e compilation increases w i t h the s i z e o f the knowledge base. 
A s i d e 
e f f e c t 
o f t h i s 
a p p r o a c h i s t h e 
c o n s i s t e n c y 
and 
completeness checking which i s performed at b u i l d i n g time when the 
r u l e pointers are being set up. 
Errors and oversights are caught at 
t h i s stage and corrected before the i t e r a t i v e development c y c l e i s 
c o n t i n u e d . 
Most e x p e r t system approaches 
do not support 
e r r o r 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

2. 
RIESE A N D STUART 
A Know ledge-Engineering Facility 
25 
d e t e c t i o n o f t h i s t y p e and i n c o n s i s t e n c y and redundancy i n t h o s e 
knowledge "bases are d i f f i c u l t t o detect. 
For even faster operation, C code versions o f the expert system 
may be used. 
T h i s w i l l r e s u l t i n a t l e a s t an o r d e r o f magnitude 
faster response over the interpreted v e r s i o n . 
P o r t a b i l i t y . 
R u l e M a s t e r i s w r i t t e n i n t h e C language, making i t 
p o r t a b l e to a wide range o f micro- and mini-computers w i t h the UNIX, 
VMS, 
or PC-DOS operating systems. 
By l a t e 1985, RuleMaster had been 
i n s t a l l e d on more than twenty brands o f computers, ranging i n s i z e 
from IBM PCs t o large mini-computers. 
TOGA: 
An Expert System for Transformer F a u l t Diagnosis 
Hartford Steam B o i l e r Inspection and Insurance Company (HSB) insures 
d i s t r i b u t i o n transformers f o r power g e n e r a t i o n u t i l i t y companies. 
The c o s t t o HSB when an i n s u r e d t r a n s f o r m e r f a i l s o f t e n exceeds a 
m i l l i o n d o l l a r s . 
The p o s s i b i l i t y o f losses o f t h i s magnitude has 
g i v e n HSB t h e i n c e n t i v e t o d e v e l o p a t r a n s f o r m e r 
f a u l t 
e a r l y 
detection and diagnosis program, based on chemical a n a l y s i s o f the 
transformer i n s u l a t i n g o i l . 
Diagnostic Approach. 
P o s s i b l e causes of transformer f a i l u r e i n c l u d e 
g e n e r a l i n s u l a t i o n d e t e r i o r a t i o n , o v e r h e a t i n g due t o o v e r l o a d , 
s h o r t i n g at f a i l e d j o i n t s , corona a c t i v i t y near i n s u l a t i o n , a r c i n g , 
and grounded c o r e . 
Each f a i l u r e mode causes h e a t i n g o f t h e o i l , 
which may be l o c a l and intense or widespread and moderate. 
The o i l 
decomposes when s u b j e c t e d t o h e a t , and some o f the d e c o m p o s i t i o n 
products are gases which d i s s o l v e i n the o i l : 
hydrocarbon, carbon 
m o n o x i d e , 
c a r b o n d i o x i d e , 
and h y d r o c a r b o n s . 
The r e l a t i v e 
concentrations o f the various gases depends on the heating h i s t o r y , 
and i s thereby r e l a t e d t o the cause o f f a i l u r e . 
The concentrations 
o f these gases can be a c c u r a t e l y measured w i t h gas chromatographs, 
and t h i s i n f o r m a t i o n used t o diagnose t h e cause o f an i n c i p i e n t 
breakdown p r i o r t o catastrophic 
f a i l u r e . 
Diagnosing a transformer's c o n d i t i o n from chemical a n a l y s i s o f 
i t s 
o i l i s an expert s k i l l which has been developed over the past 20 
y e a r s . 
I t i s r e l a t i v e l y easy t o f i n d s k i l l e d chemists who can 
p r o v i d e the c h e m i c a l a n a l y s i s , but e x p e r t s who can diagnose a 
transformer's c o n d i t i o n from t h i s data are rare. 
The diagnosis i s 
t y p i c a l l y 
based 
on a m i x t u r e o f s c i e n c e and h e u r i s t i c 
r u l e s 
developed from years of experience. 
F u n c t i o n o f TOGA. 
An HSB employee, R i c h a r d I . Lowe, i s one o f the 
handful o f transformer diagnosis experts i n the U.S. His r u l e s have 
been incorporated i n an expert system c a l l e d TOGA, which was b u i l t 
w i t h the RuleMaster expert system b u i l d i n g package. 
The f u n c t i o n o f TOGA i s t o t r a n s f o r m the r e s u l t s o f c h e m i c a l 
a n a l y s i s , together w i t h d e s c r i p t i v e information about a transformer, 
i n t o a diagnosis o f transformer c o n d i t i o n and a recommended a c t i o n . 
The r u l e s were created by a process o f successive refinement, 
using 
the HSB data base o f past transformer h i s t o r i e s as a source o f t e s t 
cases. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

26 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
M o t i v a t i o n . 
TOGA contains o n l y a s m a l l p o r t i o n o f the knowledge of 
the e x p e r t and i t s p o t e n t i a l performance i s l i m i t e d t o something 
l e s s than that o f the expert. 
However, there are s t i l l a number o f 
reasons for b u i l d i n g the system. 
Document Expert Techniques. 
Richard Lowe became an expert by 
making thousands 
o f d i a g n o s t i c d e c i s i o n s o v e r more t h a n 
twenty 
y e a r s . 
Most 
r u l e s 
used 
i n t h i s 
d i a g n o s i s 
a r e 
h e u r i s t i c (rather than based s o l e l y on theory) and they had 
not been w r i t t e n down very w e l l by anyone. 
B u i l d i n g TOGA was 
an e f f e c t i v e method for e l i c i t i n g a consistent, complete, and 
tested d e s c r i p t i o n o f the diagnostic r u l e s . 
V a l u e resides i n 
t h e w r i t t e n e x p r e s s i o n o f t h e r u l e s , and not j u s t i n t h e 
computer program which executes them. 
T r a i n i n g . 
By u s i n g a d i a g n o s t i c s y s t e m b u i l t 
by an 
acknowledged expert, 
novices can q u i c k l y l e a r n t o diagnose 
t r a n s f o r m e r s by o b s e r v i n g d e c i s i o n s w h i c h a r e reached and 
l i n e s o f reasoning. 
D i s t r i b u t e E x p e r t i s e . 
TOGA a l l o w s n o v i c e s t o p e r f o r m as 
e x p e r t s 
a t c h e m i s t r y l a b o r a t o r i e s 
and u t i l i t y 
s i t e s , 
e s p e c i a l l y f o r t h e s i m p l e r and more p r e v a l e n t s i t u a t i o n s 
covered by the r u l e s . 
C o n s i s t e n c y . 
TOGA can be used t o 
i n s u r e t h a t t h e 
same 
diagnosis and recommendation i s made for the same transformer 
data at a l l l o c a t i o n s and times. 
Thus, i t can be a t o o l for 
b o t h 
i n f o r m i n g 
o f 
i m p l e m e n t i n g s t a n d a r d 
d i a g n o s t i c 
procedures. 
Automate Decision-making Process. 
For d a i l y operation, 
TOGA 
i s run a u t o m a t i c a l l y from gas chromatograph output and data 
bases 
(as 
opposed t o 
i n t e r a c t i v e l y ) t o generate 
e x p e r t 
i n t e r p r e t a t i o n o f data, 
t h i s speeds up the d a t a a n a l y s i s 
t a s k and removes t h e element o f human e r r o r from r o u t i n e 
diagnoses. 
A i d E x p e r t W i t h Complex D e c i s i o n s . 
TOGA helps prevent the 
judgment m i s t a k e s w h i c h can o c c u r when r a r e 
t r a n s f o r m e r 
conditions are encountered or when experts are forced t o make 
a h u r r i e d diagnosis. 
V a l i d a t i o n . 
TOGA was v a l i d a t e d by comparing i t s diagnoses t o those 
p r e v i o u s l y made by the expert who s u p p l i e d the r u l e s . 
A set o f 859 
t e s t cases from a h i s t o r i c a l d a t a base were used. 
The d a t a base 
c o n t a i n e d 
t h e 
gas 
a n a l y s i s 
r e s u l t s , 
t r a n s f o r m e r 
d e s c r i p t i v e 
i n f o r m a t i o n , and the e x p e r t ' s d e t a i l e d diagnoses (which had been 
p r e p a r e d s e v e r a l y e a r s b e f o r e TOGA was b u i l t ) . 
None o f the cases 
were used i n r u l e c o n s t r u c t i o n . 
The comparison ( T a b l e I) shows t h a t the e x p e r t system i s an 
e x c e l l e n t representation o f the expert's decision-making process. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

2. 
RIESE AND STUART 
A Know ledge-Engineering Facility 
27 
Table I . 
TOGA V a l i d a t i o n Results 
TOGA and Expert: 
Transformer 
Condition 
Agreed 
Disagreed 
No Problem 
651 
0 
Problem 
20k 
k 
One 
w o u l d a l s o 
l i k e t o compare t h e diagnoses 
w i t h the 
a c t u a l 
t r a n s f o r m e r 
c o n d i t i o n , and not j u s t w i t h the e x p e r t ' s 
p r e v i o u s 
assessment o f the c o n d i t i o n . 
U n f o r t u n a t e l y , t h i s i s u s u a l l y not 
p o s s i b l e , 
i t i s e x p e n s i v e t o remove a t r a n s f o r m e r from s e r v i c e , 
open i t up, and determine i t s condition. 
However, t h i s was done for 
t e n 
o f the 
208 "problem" cases. 
E n g i n e e r s 
o v e r h a u l e d 
t h e s e 
transformers 
and determined the nature and cause o f t h e i r problems. 
For a l l t e n o f t h e s e c a s e s , b o t h t h e e x p e r t system and the 
e x p e r t 
had made the correct diagnosis. 
O p e r a t i o n a l Use. 
TOGA i s 
used 
d a i l y 
by chemists 
i n R a d i a n ' s 
a n a l y t i c a l 
l a b o r a t o r y 
t o 
s c r e e n 
t h e 
a n a l y t i c a l r e s u l t s 
f o r 
i n d i c a t i o n s o f p o s s i b l y f a u l t y transformers. 
This helps insure that 
HSB can t a k e q u i c k a c t i o n when i t i s n e c e s s a r y , 
and a l s o 
h e l p s 
Radian's chemists l e a r n the r e l a t i o n s h i p between various hydrocarbon 
gas concentrations and the transformer condition. 
At HSB, TOGA i s 
a l s o used t o diagnose t r a n s f o r m e r s and prepare r e p o r t s , w h i c h are 
sent to the transformer owner after being v e r i f i e d by the expert. 
Using RuleMaster 
Knowledge E x t r a c t i o n . 
E x p e r t systems a r e u s u a l l y used t o s o l v e 
h a r d 
p r o b l e m s 
f o r w h i c h t h e 
s o l u t i o n m e t h o d o l o g y i s 
n o t 
documented. 
An e x p e r t i s a person who can p r o v i d e the 
h i g h e s t 
q u a l i t y answers or advice for a s p e c i f i c problem domain. 
Unless the 
expert r o u t i n e l y teaches the p r o b l e m - s o l v i n g method, he or she 
w i l l 
probably have d i f f i c u l t y i n c l e a r l y d e s c r i b i n g the method. 
RuleMaster provides an example-based knowledge input mechanism 
which p r a c t i c i n g experts f i n d comfortable t o use. 
For TOGA, a topr-down procedure was used to begin the knowledge 
e x t r a c t i o n p r o c e s s . 
The e x p e r t was i n t e r v i e w e d t o determine 
the 
t e r m i n o l o g y and the c o a r s e framework o f t h e s o l u t i o n method. 
He 
s e l e c t e d a set of kO transformer t e s t cases to jog the memory during 
t h e e x p e r t system b u i l d i n g p r o c e s s . 
Then a l i s t o f p o s s i b l e t o p -
l e v e l decisions or actions was generated t o define the scope o f the 
expert system. 
This consisted of the l i s t o f p o s s i b l e diagnoses (no 
problem, corona, a r c i n g , . . .) and the 
l i s t of recommendations 
(no 
a c t i o n , resample at s p e c i f i e d time, remove transformer from s e r v i c e , 
. 
. 
.) 
Then the e x p e r t was asked about t h e f a c t o r s used t o a r r i v e at 
each d e c i s i o n . 
Sometimes the factors were raw data a v a i l a b l e from 
the gas chromatograph, 
and sometimes the factors were 
intermediate 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

28 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
a t t r i b u t e s yet to be defined ( l i k e presence or absence o f t h e r m a l l y 
g e n e r a t e d 
h y d r o c a r b o n 
g a s e s ) . 
Whenever new q u a n t i t i e s 
were 
introduced, the expert was asked about the factors used to determine 
i t . 
T h i s process was r e p e a t e d r e c u r s i v e l y u n t i l e v e n t u a l l y t h e 
e n t i r e s o l u t i o n was described i n terms o f chromatograph data. 
At t h i s point, there was enough information together t o b u i l d a 
f i r s t prototype. 
Each i n t e r m e d i a t e or f i n a l c o n c l u s i o n d e f i n e d a 
d e c i s i o n module. 
These modules were organized i n t o a h i e r a r c h i c a l 
s t r u c t u r e . 
W i t h i n each module, example t a b l e 
s t r u c t u r e s 
were 
c r e a t e d . 
Based on the i n t e r v i e w i n g r e c o r d s , a f i r s t c u t at 
the 
example sets was entered. 
At t h i s point, a running prototype 
expert 
system e x i s t e d . 
The v a l u e o f t h i s approach i s t h a t a r u n n i n g e x p e r t system i s 
r a p i d l y created, without f o r c i n g the expert to a r t i c u l a t e a general 
p r o b l e m - s o l v i n g procedure. 
The prototype system i s a v a i l a b l e for 
the i t e r a t i v e knowledge r e f i n e m e n t p r o c e s s , w h i c h draws out more 
d e t a i l s 
o f t h e 
d e c i s i o n - m a k i n g procedure 
from the 
e x p e r t 
t o 
gradually b u i l d a complete and tested expert system. 
K n o w l e d g e R e f i n e m e n t . 
The f i r s t 
p r o t o t y p e 
i s o n l y a rough 
approximation o f the expert's d e c i s i o n strategy. 
Many d e t a i l s 
are 
m i s s i n g . 
R e f i n e m e n t 
o f t h e 
p r o t o t y p e 
i s a c c o m p l i s h e d by a 
continuation o f example-based l e a r n i n g steps. 
For 
TOGA, t h e hO t e s t cases formed t h e b a s i s o f knowledge 
r e f i n e m e n t . 
The p r o t o t y p e was e x e r c i s e d f o r each case. 
Wrong 
a d v i c e , 
or correct advice reached for the wrong reasons, 
i n d i c a t e d 
the need for changes t o the knowledge base. 
Whenever one o f these 
e r r o r s was encountered, t h a t t e s t case was stepped s l o w l y t h r o u g h 
t h e p r o t o t y p e e x p e r t system a g a i n . 
The p o i n t where the 
p r o t o t y p e 
r e a s o n i n g d i f f e r e d w i t h t h e e x p e r t ' s r e a s o n i n g s p e c i f i e d e x a c t l y 
where the knowledge base needed to be changed. 
With the problem l o c a l i z e d i n the module hierarchy, the f i x i s 
easy. 
U s u a l l y , i t r e q u i r e d a d d i n g a s i n g l e example (matching the 
t e s t case) or c o r r e c t i n g an e x i s t i n g example. 
Sometimes the 
error 
p o i n t e d 
out 
t h e 
need 
f o r 
more d e t a i l , 
as 
when two 
d i f f e r e n t 
conclusions c o u l d be reached for the same example vectors. 
In these 
cases, the expert was asked t o provide a new a t t r i b u t e , 
which c o u l d 
d i s t i n g u i s h between t h e two c o n c l u s i o n s . 
On r a r e o c c a s i o n s , 
t h e 
expert and knowledge engineer noticed that the module hierarchy no 
longer seems s u i t a b l e . 
This suggests a p o s s i b l e r e - o r g a n i z a t i o n o f 
the module s t r u c t u r e . 
L e a r n i n g from examples i s e s p e c i a l l y e f f e c t i v e because the 
knowledge representation ( i n the form o f example t a b l e s ) i s c l o s e t o 
t h e 
way t h a t 
e x p e r t s 
n o r m a l l y t h i n k about 
t h e i r 
f i e l d . 
The 
t r a n s l a t i o n from the e x p e r t ' s 
n o t a t i o n t o a more a b s t r a c t 
r u l e 
language i s done by the i n d u c t i v e l e a r n i n g algorithm. 
Not o n l y can 
knowledge be generated and tested e f f e c t i v e l y i n the form o f example 
s e t s , but c o l l e a g u e s i n t h e f i e l d o f e x p e r t i s e w i l l be a b l e t o 
e a s i l y and thoroughly understand the reasoning incorporated i n the 
system. 
Programming S k i l l s . 
One o f the f i r s t steps i n b u i l d i n g RuleMaster 
e x p e r t system i s c r e a t i n g t h e module h i e r a r c h y f o r t h e 
p r o t o t y p e . 
This requires 
s k i l l 
i n top-down design and structured programming. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

2. 
RIESE AND STUART 
A Know ledge-Engineering Facility 
29 
P e o p l e w i t h o u t some c o u r s e work and e x p e r i e n c e i n t h e s e computer 
s c i e n c e d i s c i p l i n e s t e n d t o make m i s t a k e s and f l o u n d e r a t 
t h i s 
stage. 
For 
the majority o f the i t e r a t i v e refinement process, however, 
o n l y minimal computer s k i l l s are required. 
The modules are 
s m a l l 
enough so t h e i r l o g i c can be e a s i l y u n d e r s t o o d by anyone f a m i l i a r 
w i t h t h e a p p l i c a t i o n . 
Changes a r e u s u a l l y l i m i t e d t o 
e d i t i n g 
examples, and the example ordering i s not important. 
The i n d u c t i v e 
l e a r n i n g a l g o r i t h m a u t o m a t i c a l l y takes care o f c o n t r o l flow. 
Most 
o f knowledge r e f i n e m e n t can be done by anyone who knows a 
l i t t l e 
e d i t i n g and f i l e management. 
This i s often the expert himself. 
T h e r e f o r e , 
a d d i t i o n a l programmers w i t h h i g h l y s p e c i a l i z e d 
s k i l l s are not required t o add an expert reasoning c a p a b i l i t y to an 
e x i s t i n g computer program. 
The programmers already on the 
project 
can 
a l s o b u i l d the e x p e r t system. 
Not o n l y does t h i s s a v e money, 
but t h e s e p e o p l e understand t h e p r o b l e m and are 
l i k e l y t o do a 
better job than someone whose primary i n t e r e s t l i e s elsewhere. 
Conclusions. 
TOGA i s an expert system b u i l t w i t h RuleMaster which 
has been v a l i d a t e d and i s i n d a i l y use. 
The p r i m a r y b e n e f i t 
from 
b u i l d i n g TOGA i s t h a t t h e t r a n s f o r m e r d i a g n o s t i c knowledge now 
e x i s t s i n a form w h i c h can be used t o pass t h e s k i l l on t o a new 
g e n e r a t i o n 
o f 
e n g i n e e r s . 
HSB w i l l 
not 
l o s e 
i t s 
t r a n s f o r m e r 
d i a g n o s i s 
c a p a b i l i t y when the 
c u r r e n t 
e x p e r t 
r e t i r e s . 
Other 
employees can use the e x p e r t system t o diagnose t r a n s f o r m e r s , 
or 
t h e y can l e a r n the t e c h n i q u e by s t u d y i n g a w r i t t e n v e r s i o n o f the 
knowledge base. 
Other a p p l i c a t i o n s b u i l t w i t h RuleMaster demonstrate a d d i t i o n a l 
reasons for b u i l d i n g expert systems. 
WILLARD (3) i s a severe storms forecasting expert system which 
can 
obtain a l l input data from N a t i o n a l Weather S e r v i c e data l i n e s . 
When severe storm s i t u a t i o n s occur, forecasters become very busy and 
do not have t i m e t o u t i l i z e a l l t h e d a t a w h i c h i s a v a i l a b l e . 
The 
expert system can take over the routine p o r t i o n o f the forecasting, 
l e a v i n g the experts free t o focus on the more d i f f i c u l t and c r i t i c a l 
portions o f the a n a l y s i s . 
TURBOMAC 0 0 diagnoses f a u l t s i n l a r g e r o t a t i n g machinery, such 
as power g e n e r a t i o n t u r b i n e s . 
T h i s e x p e r t system a l l o w s 
f i e l d 
engineers to incorporate the reasoning o f one o f the top experts i n 
v i b r a t i o n diagnosis i n t h e i r maintenance and operational d e c i s i o n s . 
G l o v e A I D (5.) p r e d i c t s t h e most e f f e c t i v e g l o v e m a t e r i a l s t o 
choose f o r p r o t e c t i o n a g a i n s t hazardous c h e m i c a l s . 
There a r e no 
e s t a b l i s h e d e x p e r t s 
i n t h i s 
f i e l d , 
because much o f the p r o t e c t i o n 
e f f e c t i v e n e s s 
measurements 
are j u s t 
now b e i n g performed. 
The 
i n d u c t i v e l e a r n i n g aspect o f RuleMaster i s used to h e l p organize the 
date which i s a v a i l a b l e and to suggest which measurements should be 
performed next. 
The 
o b j e c t i v e o f QualAID 
i s t o p r o v i d e a d v i c e on how much 
and what type o f q u a l i t y assurance (QA) and q u a l i t y c o n t r o l (QC) i s 
needed for various types o f environmental analyses. 
The purpose o f 
t h i s system i s t o provide c o n s i s t e n t l y good advice to chemists whose 
primary f i e l d o f expertise i s other than QA/QC. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

30 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Literature Cited 
1. 
Michie, D.; Muggleton, S.; Riese, C. E.; Zubrick, S. M. 
Proc. of the First Conference on Artificial 
Intelligence 
Applications. IEEE Computer Society; Washington, D.C., 1984, 
pp.591-7. 
2. 
Quinlan, J. R., In Expert Systems in the Micro-electronic 
Age, (D.Michie, ed.), Edinburgh Univ. Press, Edinburgh, 
U. K.; pp 168-201. 
3. 
Zubrick, S. M.; Riese, C. E. 
Proc. 14th Conf. on Severe 
Local Storms, American Meteorology Society; Boston, MA; 
1985; pp 117-122.. 
k. 
Stuart, J. D.; Vinson, J. W. Proc. 1985 AS ME International 
Computers in Engineering Conference, American Society of 
Mechanical Engineers: New York, Ν. Y.; Vol. II, pp 319-328. 
5. 
Keith, L. H; Stuart, J. D. In " A r t i f i c i a l Intelligence 
Applications in Chemistry"; Hohne, B. Pierce, T., Ed.; ACS 
Symposium Series (in print), American Chemical Society: 
Washington, D.C., 1985. 
RECEIVED January 17, 1986 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

3 
A Rule-Induction Program 
for Quality Assurance-Quality Control and Selection 
of Protective Materials 
L. H. Keith and J. D. Stuart 
Radian Corporation, Austin, TX 78766-0948 
This chapter describes two prototype expert systems 
for chemical applications being developed using Rule-
Master. (1) 
The first, QualAId, is a traditional type 
of system where knowledge on how much and what type of 
quality assurance (QA) and quality control (QC) is 
needed for various types of environmental analyses. 
The 
second, GloveAId, is being developed to help 
select 
the best glove material(s) 
for protection 
against 
a wide variety 
of 
hazardous chemicals. 
However, unlike the former example, the knowledge base 
for 
selecting the best glove materials is not yet 
known. 
Therefore, experimental data is being sub-
jected to the rule-induction process of RuleMaster and 
the resulting correlations are examined and tested to 
help formulate the rules which are, in turn, used to 
build the expert system. 
QualAId 
The prototype of QualAId currently i n existence i s one small part of 
the t o t a l framework needed for a useful expert system. The objec-
tive of QualAId i s to provide advice on how much and what type of 
QA/QC i s needed for various types of environmental analyses. The 
rules for determining these needs have been derived from the Ameri-
can Chemical Society (ACS) publication, "Principles of Environmental 
Analysis," (2) and from various protocols and recommendations of the 
U.S. Environmental Protection Agency (EPA). 
This particular demonstration module only incorporates deci-
sions 
involving 
analysis of v o l a t i l e and semivolatile organic 
compounds from water. These compounds are, by d e f i n i t i o n , v o l a t i l e 
enough to be separated by gas chromatography (GC). The complete 
expert system w i l l incorporate decisions based upon any type of 
chemical i n any type of matrix and w i l l also be capable of providing 
advice s p e c i f i c a l l y for selected EPA methods commonly i n use, i . e . , 
EPA Methods 624, 625, 1624, 1625, the various non-mass spectrometric 
600 Methods, etc. (Figure 1). 
0097-6156/ 86/ 0306-0031 $06.00/ 0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Litigation 
Yes 
No 
Q A / Q C 
Importance 
high 
M 
medium 
low 
sampleAId 
^ 
Routine 
. 
/ 
\ 
Advice 
J 
f 
methodAId 
Routine 
J 
Inorganic 
\ 
" * \ 
Routine 
.' 
y 
•( 
Advice j 
Advice 
I 
• I 
"
e
Θ 
A
d
v
i
C
e 
) 
^ 
" ^ 
^ 
V 
• 
Specific 
\ 
f 
* 
Methods 
ι 
• 
Advice 
) 
\ 
Routine 
' 
\ 
y 
Figure 1a. 
Diagram of Modules for QualAId Expert System (first 
half). 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

KEITH AND STUART 
A Rule-Induction Program for QA-QC 
Determine Extent of 
Method Verification 
and Validation 
ι 
Determine Number 
of Samples Planned 
~
i
— 
Determine 
Probable Analyte 
Concentration Range 
Figure 1b. 
Diagram of Modules for QualAId Expert System (second 
half). 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

34 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
The purpose of this expert system i s to provide consistently 
good advice i n both the types and amounts of QA/QC to use. 
There 
are many decisions to make and errors are very expensive i n terms of 
time and money. 
The expert system i s comprised of a series of modules encompas-
sing the many varied aspects of decision-making. 
Information from 
each of these modules i s available to other modules to make deci-
sions where they require interrelated knowledge. 
For example, the f i r s t module. Confidence Level, i s key to many 
of the decisions that w i l l be made i n other modules. The f i r s t 
query by the computer asks the user whether the resulting analytical 
data w i l l be used for enforcement or l i t i g a t i o n actions. I f the 
answer i s "yes," then a high level of confidence w i l l be needed and 
the user i s advised of this assignment. I f the answer i s "no," then 
the user i s asked to specify how important he/she views the accuracy 
and precision of the data. 
Routines awaiting future development w i l l provide advice on the 
best analytical methodology and sampling procedures, QA/QC needs for 
inorganic, nonvolatile organic, and selected methodologies 
(Figure 
1). 
For the present system, these are skipped and the routine for 
general QA/QC advice for v o l a t i l e organics i n water i s entered. 
The second module. Method, involves determining the level of 
v e r i f i c a t i o n and validation to which the user's methodology has been 
subjected. 
V e r i f i c a t i o n i s the general process used to decide 
whether a method i n question i s capable of producing accurate and 
r e l i a b l e data. 
Validation i s an experimental process 
involving 
external corroboration by other laboratories (internal or external) 
of methods or the use of reference materials to evaluate the s u i t -
a b i l i t y of methodology (1). A menu of choices includes: (1) the 
method has only been v e r i f i e d , (2) the method has been both v e r i f i e d 
and 
validated, or (3) the method has been neither v e r i f i e d or 
validated. 
The 
t h i r d module. Samples, queries the user for how many 
samples w i l l be taken and the fourth. Cone ent rat ion, for the expec-
ted range of probable concentration values. The choices of probable 
concentration values are: (1) high [ > 10,000 parts-per-billion 
(ppb) ]; (2) Medium [10-10,000 ppb] ; or (3) Low [< 10 ppb]. The 
f i f t h module, Detector, queries the user for the detector that w i l l 
be used i n conjunction with the GC analysis (Figure 2). 
The information from these five modules i s then used to provide 
a series of advisory statements relating to whether the user w i l l or 
w i l l not meet the stated confidence levels and, i f not, what the 
options are. 
Figure 3 i s the resulting advice for an example of a good QA/QC 
match with the user's needs. In this example, a high level of 
confidence was established, the methodology was both v e r i f i e d and 
validated, two samples were to be taken and analyzed by gas chroma-
tography-mass spectrometry (GC-MS) at levels below 10 parts-per-
b i l l i o n (ppb). 
These conditions might be typical of analyses for 
2»3,7,8-Tetrachloro-£-dioxin (TCDD) i n polluted water. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

3. 
KEITH A N D STUART 
A Rule-Induction Program for 
QA-QC 
35 
We need to establish what instrument you plan to use for the analysis. 
Since the compound(s) you are analyzing are sufficiently volatile to be 
separated by gas chromatography, I am assuming that you will use a GC for 
your separations. 
Here are the detector choices we have to consider: 
a 
= 
Mass spectrometer (general purpose) 
b 
= 
Hall detector (in the halogen, nitrogen or sulfur mode) 
c 
= 
Flame photometric detector (for phosphorous) 
d 
= 
Photo Ionization detector (for olefins and aromatlcs) 
e 
= 
Electron capture detector (for pesticides, halogens, etc.) 
f 
= 
Flame ionization detector (general purpose) 
Choose one of these by typing the corresponding menu letter: 
[a,b,c,d,e,f] a 
Figure 2. Queries for the Module Detector. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

Adν ice: 
You have your methodology both verified and validated as required for measurements needing a high 
level of confidence. 
But, you must also assure that your analyst Is experienced In performing the 
type of analysis you need, that you have standards for the analytes available, and that you have a 
written quality assurance plan that documents good laboratory practice. 
You Indicated that you need a high level of confidence In your data and GC-MS Is an Instrument 
combination that will provide you with the capability of generating that degree of quality. 
You 
should also use capîllary GC columns If at all possible in order to obtain the best chromatographic 
resolution. 
When you have analytes that are completely, or almost completely resolved from other 
compounds, the quality of the mass spectra generated will be better. 
You will also need documenta-
tion that the mass spectrometer is operating and is tuned up correctly and that the resolution 
obtained from the gas chromatograph meets your requirements. 
These requirements should be met with 
QC standards for each instrument prior to analyzing your samples. 
Less than 10 ppb Is the most d i f f i c u l t range of analytes to quantify with a high degree of confi-
dence. 
Quantitative measurements which do not fall within the "Region of Quantitation" cannot be 
reported. 
This region is defined as resulting from signal measurements which are 10 or more 
standard deviation units above the background noise. 
In order to meet this requirement at levels 
below 10 ppb, very good cleanup procedures are usually needed in addition to capillary GC columns 
and experienced analysts. 
All measurements reported must also be within the range of your calibra-
tion curves. 
If you cannot meet these stringent requirements, then you will probably have to lower 
your desired level of confidence in the data. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

For a high level of confidence you will need to have both "field" and "method" blanks. 
Field 
blanks are blanks from a similar source that do not contain the analytes of Interest. 
Control 
sites (uncontamlnated sites) are used to obtain field blanks and If field blanks are not available, 
every effort should be made to obtain blank samples that best simulate a sample that does not 
contain the analyte (such as a simulated or synthetic field blank). 
Your method blanks will 
consist of all solvents, resins, etc. that you will use for extracting, concentrating and cleaning 
up the samples prior to analysis. 
You may want about half of these unsplked and the remainder 
spiked with known levels of your analyte standards. 
Similarly you may want to spike about half of 
your field blanks with known levels of your analyte standards so that any matrix effects wllI be 
Identified during the analysis. 
This plan would provide you with: 
• 
25% unsplked field blanks for control samples, 
• 
25% spiked field blanks for monitoring matrix effects, 
• 
25% unsplked method blanks for workup/Instrument QC, and 
• 
25% spiked method blanks for workup/Instrument QC. 
The total number of blanks you would need, based on the number of samples you plan to take, 
Is: 
4. 
Advice: 
This will give you the required quality control 
(RETURN continues) 
[Note: 
4 blanks were recommended even though only 2 samples were planned.] 
Figure 3. 
Example of Advice Provided f o r a Good QA/QC Match 
with User Needs. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

38 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
GloveAId 
GloveAId i s an expert system being developed for the National Toxi-
cology Program, 
I t has been programmed to choose from seven glove 
materials the one most l i k e l y to provide the greatest protection at 
the cheapest cost against a variety of chemicals. Chemical input i s 
selected by choosing one of seventeen chemical classes. 
Glove 
t a c t i l i t y needs and the desired amount of protection (in units of 
minutes) are also input. The computer provides advice as to the 
probable best glove to select and, i f none meet requested c r i t e r i a , 
i t advises the best choice i t has available and explains the l i m i t a -
tions of that choice with respect to the users request. 
Factors 
used i n making the decisions include: chemical class, molecular 
weight, v o l a t i l i t y 
(boiling point), reaction with glove materials 
(weight change), t a c t i l i t y and glove cost. 
The prototype GloveAId system was developed using a data base 
generated from chemical permeation measurements performed at Radian. 
Experimental data from these tests were entered into a LOTUS-1-2-3 
spreadsheet and sorted by a l l c l a s s i f i a b l e respects i n order to make 
visual correlations with the protective character of seven different 
glove materials. 
The data base consisted of 90 chemicals with 
associated physical properties (molecular weight, boiling point and 
l i n e a r i t y of the molecule), chemical class and measurements of 
breakthrough times, steady-state permeation 
rate and 
degradation 
characteristics. 
The l a t t e r consisted of percent weight change when 
a piece of the material was immersed i n the test chemical for four 
hours. 
Each of the chemicals was tested against a l l seven glove 
materials for weight change but only against four of the glove 
materials for breakthrough and permeation rate data so that 1,300 
measured values and 540 
associated pieces of information were 
available. 
Visual correlation of this data produced the protective 
rating approximations l i s t e d i n Table I. 
I t i s time consuming and d i f f i c u l t for humans to make visual 
comparisons of a numerical data set and draw the simplest possible 
correlations between them; the larger the data set, the more d i f f i -
cult this i s to do. 
A l o t of time and effort was expended to make 
the approximate evaluations l i s t e d i n Table I. When the data set i s 
a dynamic one, i . e . , i t i s changing due to the addition of new data, 
i t simply adds to this problem. 
However, one strength of computer 
usage i s that such tasks can be performed with ease and, when this 
capability i s coupled to the a b i l i t y to induce correlations or 
"rules" from a data set, an extremely powerful tool for evaluating 
data i s created. 
This second way of evaluating the data i s cur-
rently being pursued and i s described i n more detail i n the next 
section. 
The ratings i n Table I are based only on the safety aspects of 
the glove materials; i . e . , protection from exposure to chemicals as 
indicated by the majority of breakthrough times observed within the 
members of a chemical class. However, t a c t i l i t y i s often an addi-
tional important ergonomie factor; i t i s impossible to perform 
delicate tasks with thick, bulky gloves. 
T a c t i l i t y of the gloves 
was rated subjectively using a dime. 
I f the features of a dime 
could be readily f e l t through the glove, i t was assigned a rating of 
"very good." I f the features were not very distinguishable through 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

3. 
KEITH AND STUART 
A Rule-Induction Program for QA-QC 
39 
4J cd 
•J 
ο · 
ο · 
> £ > £ 
> £ 
o* Pu Ρ-ι ο· £4 
> 
P4 
C»- Ol PU Ο· 
P u p u P u P u c ^ c — 
PuP-i 
> 
> 
> 
£ ^ £ 
pU PU Οι pU 
> 
p U P U P U C - O - p Q P U P U 
Pu Ο pU Pu 
φ 
G 
Φ μ α ο 
PU 
[χι ο · 
p q p u O c - c ^ c - P u P u 
pu pu pu pu pE4 
Ρ-ι 
P* pq Pu pq 
p u P n o - c * - P u p q P u P n 
> 
pq pq pq o . pq 
μ 
rH 0) 
pu pu Pu Pu 
p q p q p q p L i p q p q p q p q 
> 
pq Pu ο pq Pu 
> 
a 
ο 
-P 
•H > 
pq pq pq pq 
pqg4pqpuPupqpupq 
Pu * Ο pu 
Ό 
0) 
Cd 
α 
ο 
w 
α ο 
•a cd 
ο ο 
M 
Ό cd 
(D β Ό 
•Ρ Φ Φ 
S
tJO +J 
o cd 
Φ rH (3 
60 CO φ 
00 
rH 
Ο 
(0 -Ρ rH 
fd Ο Q) 
ι
 
G 
Λ 
1 
υ 
•Η Ο 
4J · Η 
Cd -Ρ 
Λ Θ 0 
•Η Ο Ο 
rH Μ 
ο 
•ri 
•Ρ cd 
. . . . μ 
< < < 
8 
θ4 
Φ 
•Η 
Φ 
rH 
*d 
id φ 
rC 
·Η μ 
Φ Ό Ό Μ Φ 
«Ο · Η ·Η Ο 4J 
α (χ ω 
3 3 3 <j pq ρα w w 
r 
«1 
Φ 
•Ρ cd Φ Φ 
φ 
d 
μ 
Η es m 4 
l O v O N C O C ^ O H C M 
en «tf m vo 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

40 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
the glove, but the dime could be easily picked up from a f l a t 
surface, i t was assigned a "moderate" rating. 
I f the dime was 
picked up with d i f f i c u l t y from a f l a t surface, the rating of the 
glove was "poor." 
F i n a l l y , the approximate costs of gloves from the seven materi-
als were also considered. A l l of this information was provided to 
the computer with rules for p r i o r i t i z i n g the choices, i . e . , safety 
f i r s t , t a c t i l i t y second, and cost t h i r d . 
An introductory screen i s printed after log-on into GloveAId. 
This i s followed by a menu from which the chemical class i s chosen. 
Multiple functional groups cannot be handled by the system yet. The 
user i s then queried for the amount of time that the glove needs to 
provide protection. This i s followed by a request for the t a c t i l i t y 
requirements of the user. 
The f i n a l screen summarizes the answers given to the computer 
and provides the best advice possible from the information and rules 
supplied (Figure 4). In this example, there were no gloves that met 
the user's needs, so the computer provided the next best choices. 
The recommended materials are a moderately t a c t i l e ( n i t r i l e ) glove 
with probable short protection time or a thick (butyl rubber) glove 
with poor t a c t i l i t y but probable good protective properties. When 
safety and t a c t i l i t y requirements can be met, then the most cost-
effective choice i s provided. 
This prototype expert system i s currently being tested by 
comparing the GloveAId predictions before a chemical i s tested with 
the best gloves after their performance has been documented. To 
date, 62 additional chemicals have been tested. F i f t y - s i x (56) of 
these (90%) had one or more gloves correctly predicted by the expert 
system. 
Although 
this i s good for a prototype system, we are 
s t r i v i n g to improve the percentage of t o t a l choices. Often, more 
than one glove material w i l l have very good breakthrough protection. 
For example, with the 62 chemicals, there were a t o t a l of 132 gloves 
with good performance. 
The expert system correctly advised only 60 
of these (45%). 
Rule Induction 
The easiest way to describe the rule induction capabilities of Rule-
Master i s to demonstrate i t s use with a relevant set of data. This 
data consists of information on a series of nonhalogenated 
aromatic 
compounds which were tested with f i v e different glove materials. An 
arbitrary protective rating was assigned to each test based on the 
following breakthrough times: 
Protective Rating 
Breakthrough Time 
Very Poor 
Poor 
Fair 
Good 
Best 
<5 min. 
5 - <15 min. 
15 - <100 min. 
100 - <200 min. 
> = 200 min. 
Readily available information for each of the compounds consisted of 
molecular weight and b o i l i n g point. In addition, the compounds were 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

KEITH A N D STUART 
A Rule-Induction Program for 
QA-QC 
The specific glove and protection requirements are: 
Chemical type Is aldehyde 
Protection time requirement In minutes Is 200 
Tactility requirement Is moderate tactile 
There are no glove materials In the data base 
meeting the requirements that you specified. The 
closest are: 
Nltrlle 
Approximate cost Is $3.00 per pair of gloves. 
Protection time Is probably greater than 5 minutes 
Tactility Is moderately tactile 
Butyl Rubber 
Approximate cost Is $10.00 per pair of gloves. 
Protection time (s probably greater than 200 minutes 
Tactility Is not tactile 
Figure 4. Example of Summary and Advice from GloveAId When User 
Needs Are Not Met. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

42 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
assigned a linear (1) or non-linear (0) shape. 
In this example a l l 
compounds were assigned (0) for shape designation since aromatic 
compounds are not linear. 
Other measured data included the steady 
state permeation rate and percent weight gain or loss. 
The permea-
tion rate usually exhibits the reverse trend as the 
breakthrough 
time 
( i . e . as breakthrough 
time 
increases the permeation 
rate 
usually decreases). 
Therefore, permeation rates were not included 
i n the data set since they seldom result i n a different relative 
protective rating than would be derived from breakthrough 
times. 
However, weight gain or loss i s a good indication of a chemical 
either reacting with the protective material or being absorbed 
into 
i t . 
RuleMaker, a subsystem of RuleMaster, induces rules for a l l 
situations from examples that may cover only some of the cases. 
At 
the heart of the induction process i s the creation of an induction 
f i l e , which i n part includes examples indicating what the expert 
system should do under different circumstances. 
Now, i n the example 
above. THE RULES FOR CORRELATING VARIOUS CHEMICAL AND PHYSICAL 
PARAMETERS OF THE HAZARDOUS CHEMICALS TESTED WITH THE PROTECTIVE 
ABILITY OF THE SELECTED GLOVE MATERIALS ARE NOT KNOWN — THEY WILL 
HAVE TO BE INDUCED FROM THE ANALYTICAL DATA. 
The RuleMaster induction f i l e produced from the example data 
set i s shown i n Figure 5. 
The name given to this induction f i l e 
module i s "ClasslO". The STATE i n a module i s essentially the name 
of sub-modules that w i l l carry out actions within a module. In this 
simple example there are no sub-modules so the name given to the 
state i s "only". 
The CONDITIONS section of the module i s comprised of descrip-
tions of the various parameters upon which a decision w i l l be based. 
Each l i n e i n the conditions section i s made up of three parts: 
• 
the name of the decision parameter (for example, glove, 
molecular weight, etc.) 
• 
the specified method of determining the parameters value 
(for 
example the statement 
"integer.read What i s the 
molecular weight?" means the computer w i l l display that 
question and 
w i l l 
expect 
a numerical answer from the 
user); this part i s denoted using square brackets, and 
• 
the allowable values for the parameter. However, i n this 
case we don't know what the allowable values for the para-
meter are so any value i s allowed by typing the word 
"integer". 
Later, after rules have been defined and the 
allowable values are known, they can be used to replace 
any integer. This w i l l be an important part of the second 
phase when the expert system i s refined to include this 
knowledge. 
The experimental data i n this i l l u s t r a t i o n comprise the actual 
rule base for RuleMaker. 
The 
f i r s t column of data i n the EXAMPLE 
section of Figure 5 consists of the glove material tested. 
The 
second column of data consists of the molecular weights, and the 
third column consists of the b o i l i n g points i n degrees centigrade. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

3. 
KEITH A N D STUART 
A Rule-Induction Program for QA-QC 
43 
/· 
CLASSι AROMATIC NOT HALOGENATED 
·/ 
MODULE! c l a s a l O 
STATEt o n l y 
CONDITIONS: 
g l o v e 
[ask "What 1· t h e g l o v e t y p e ? " 
NButyl_Rubbor vN«oproni vN1trUo»PVA vPVC vV1ton
n] 
[ B u t y l j f c i b b e r Neopreno N l t r l l e PVA PVC V i t o n } 
• o l w t 
[ I n t e g e r . r o a d "What l a t h e Molecular w e i g h t ? " ] I n t e g e r 
b o l l p t 
[ I n t o g o r . r o a d "What 1a t h e b o i l i n g p o i n t ? " ] I n t e g e r 
shape 
[ I n t e g e r . r e a d "Whet I s t h e shape?"] I n t e g e r 
change 
[ I n t e g e r . r e e d "Whet l e t h e p e r c e n t change?"] I n t e g e r 
EXAMPLESι 
Butyl_Rubber 
130 
185 
0 
56 
«>lgood,G0AL) 
B u t y l j t a b b e r 
106 
144 
0 
180 
»>(fair,GOAL) 
B u t y l j f a i b b e r 
106 
138 
0 
181 
»>[fe1r,GQAL) 
B u t y l j t u b b e r 
106 
136 
0 
80 
»>(fair,GOAL) 
B u t y l j t u b b o r 
106 
133 
0 
188 
»>{fe1r fGQAL) 
Neoprene 
148 
183 
0 
64 
=>[feir,G0AL) 
N 1 t r 1 l e 
148 
183 
0 
11 
»(best,G0AL) 
N H M l e 
106 
136 
0 
95 
=>(fair,GOAL) 
N 1 t r 1 l o 
106 
144 
0 
60 
*>tpoor,G0AL) 
N l t r l l e 
78 
80 
0 
58 
=>(fair,GOAL] 
N 1 t r 1 l e 
106 
138 
0 
77 
s>(fa1r,GQAL) 
N l t r l l e 
106 
138 
0 
82 
«>(fa1r,G0AL) 
N l t r l l e 
130 
185 
0 
63 
=>(fair,GOAL] 
PVA 
130 
185 
0 
62 
=>[best,GOAL) 
PVA 
148 
183 
0 
0 
=>{beet tGQAL) 
PVA 
106 
138 
0 
3 
=>(beet,G0AL) 
PVA 
106 
144 
0 
0 
=>[best fGQAL] 
PVA 
106 
136 
0 
0 
=>(fair,GOAL] 
PVA 
78 
80 
0 
0 
=>(fa1r,G0AL) 
PVA 
106 
138 
0 
0 
=>{best fG0AL) 
PVC 
78 
80 
0 
40 
=> (νery_poor,GOAL) 
PVC 
106 
138 
0 
8 
=>(ve ry_poo r » GOAL) 
V i t o n 
106 
138 
0 
1 
=>(beet,GOAL) 
V i t o n 
106 
138 
0 
1 
=>(best,G0AL) 
V i t o n 
148 
183 
0 
0 
=>[best fG0AL) 
V i t o n 
78 
80 
0 
3 
=>(baet,G0AL) 
V i t o n 
130 
195 
0 
0 
=>(beet,GQAL) 
V U o n 
106 
136 
0 
0 
=>(ba8t,G0AL) 
V i t o n 
106 
144 
0 
1 
=>(beet,G0AL) 
ACTIONS: 
b e s t 
[ a d v i s e " T h i s g l o v e has a * b e s t * r a t i n g . " ] 
good 
[ a d v i s e " T h i s g l o v e has β *good* r a t i n g . " ) 
f a i r 
[ a d v i s e " T h i s g l o v e has a * f a i r * r a t i n g . " ] 
poor 
[ a d v i s e " T h i s glove hes e •poor* r a t i n g . " ] 
veryj>oor 
[ a d v i s e " T h i a g l o v e hat a *very poor* r a t i n g . " ] 
Figure 
5. 
Induction 
Module for Nonhalogenated 
Aromatic 
Compounds. The symbol => means "then". 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

44 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
The fourth column pertains to the designation of a non-linear shape 
(0), and the l a s t column of data l i s t s the percent change i n weight 
gain or loss when the material i s soaked i n the test chemical for 4 
hours. The data within a row i s associated with a specific compound 
but the compounds were l i s t e d i n random order within a glove materi-
a l group i n order to emphasize an important feature of RuleMaker — 
that information (data) can be entered as i t i s thought of. This i s 
an extremely important (and powerful) difference between RuleMaster 
and other a r t i f i c i a l intelligence programs which are written i n a 
highly structured interrelative fashion. The powerful inductive 
logic of RuleMaker enables this l i m i t a t i o n to be ignored and this 
frees the user to add, change, or delete example data which 
i n f l u -
ence the rulemaking logic easily and at w i l l . 
This feature i s very 
important when working with a growing/ changing data base. 
The part of the example to the right of the arrow (=>), i s an 
action-next-state-pair. 
I t indicates what w i l l happen when the 
specified combination of condition values occur. 
In this example 
the action i s the designation of the relative protection of the 
material (good, f a i r , etc.) and the word "GOAL" which indicates that 
the goal of the module w i l l have been reached when the action 
section of the module has been carried out and the computer can exit 
this particular module. 
Since there i s only one module i n this 
simple example, the program would then end. 
The ACTIONS section of the module i s comprised of two parts: 
• 
the action keyword corresponding to the t h i r d part of the 
EXAMPLE section, and 
• 
the action that i s to be carried out (for example to 
advise the user by a print on the screen and/or a printer 
that "This glove has a *best* glove rating". 
After the information i n the induction module i s entered, the 
program i s assembled by the computer. 
During 
this phase, two 
actions take place automatically with no further input from the 
user: 
1. 
Rules are induced from the examples given the computer, 
and 
2. 
The actual program for running the computer i s COMPILED 
AND WRITTEN by the computer i t s e l f ! 
These two actions by the computer are key to the success of 
this project. 
This i s because i t w i l l be impossible for a human to 
consider a l l the p o s s i b i l i t i e s of a large data set and to deduce the 
best (most simple and therefore cost effective) rules to use i n 
order to choose the best protective materials to use. And when the 
data base i s dynamically growing i t would be impossible to use a 
highly structured a r t i f i c i a l intelligence system where the user had 
to rewrite the program modifications himself every time there was a 
change i n the information. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

3. 
KEITH A N D STUART 
A Rule-Induction Program for QA-QC 
45 
The rules induced by the computer are shown i n Figure 6. The 
program which the computer wrote for i t s e l f (in "Radial" which i s 
similar to a C-type language) i s shown i n Figure 7. Both of these 
abbreviated notations say the same thing which, i n English i s as 
follows: 
"The rules induced from the example data given are: 
1. 
I f the glove material i s PVC, the rating i s VERY POOR. 
2. 
I f the glove material i s n i t r i l e , and compounds have a 
molecular weight <118 and boiling points >= 142°C, the 
rating i s POOR. 
3. 
I f the glove material i s neoprene, the rating i s FAIR. 
4. 
I f the glove material i s PVA, and the compounds have a 
molecular weight <92, the rating i s FAIR. 
5. 
I f the glove material i s butyl rubber, and compounds have 
a molecular weight <118» the rating i s FAIR. 
6. 
I f the glove material i s n i t r i l e , and the compounds have a 
molecular weight between 118-139 or i f the molecular 
weight i s <118 and the boiling point i s <142°C, the rating 
i s FAIR. 
7. 
I f the glove material i s butyl rubber, and the compounds 
have a molecular weight >118, the rating i s GOOD. 
8. 
I f the glove material i s Viton, the rating i s BEST. 
9. 
If the glove material i s n i t r i l e and the molecular weight 
i s >139» the rating i s BEST. 
10. 
I f the glove material i s PVA and the molecular weight i s 
>118 or i f the molecular weight i s 92-118 and the b o i l i n g 
point i s >137°C, the rating i s BEST." 
It i s interesting to correlate these rules with the f i r s t rules 
that were estimated with no help from RuleMaster. 
These were the 
rules used to construct the f i r s t prototype expert system, GloveAId 
for non-halogenated aromatic compounds: 
1. 
If the glove material i s PVC, the rating i s VERY POOR. 
2. 
If the glove material i s n i t r i l e , the rating i s POOR. 
3. 
If the glove material i s butyl rubber, the rating i s FAIR. 
4. 
If the glove material i s PVA, the rating i s FAIR. 
5. 
If the glove material i s neoprene, the rating i s FAIR. 
6. 
If the glove material i s Viton, the rating i s BEST. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
<cless10> 
0 
(all states) 
1 
only 
[glove] 
Butyljfcbber : [molwt] 
<118 ι 
=> ( f a i r , GOAL ) 
>=118 : 
=> ( good, GOAL ] 
Neoprene : 
=> ( f a i r , GOAL ] 
N l t r l l e χ [molwt] 
<92 : 
=> ( f a i r , GOAL ) 
>=92 : [molwt] 
<118 : [bollpt] 
<137 : 
=> ( f a i r , GOAL ] 
>=137 : [bollpt] 
<139 : 
=> ( f a i r , GOAL ] 
>=139 : [boilpt] 
<142 : 
=> ( f a i r , GOAL ] 
>=142 : 
=> ( poor, GOAL ] 
>=118 : [molwt] 
<139 : 
=> ( f a i r , GOAL ) 
>=139 : 
=> ( best, GOAL ] 
PVA : [molwt] 
<92 : 
=> ( f a i r , GOAL ) 
>=92 : [molwt] 
<118 : [bollpt] 
<137 : 
=> ( f a i r , GOAL ) 
>=137 : 
=> ( bast, GOAL ] 
>=118 : 
=> ( best, GOAL ] 
PVC : 
=> [ v e r y j o o r , GOAL ) 
Viton : => ( best, GOAL ] 
The Induced rule has 11 test nodes end 16 leef nodes. 
Figure 6. The Induced Rules f o r Nonhalogenated 
Aromatic 
Compounds. The following are meanings assigned to symbols: 
[...] means " I f ... i s " ; 
=> means "then"; and a colon means 
"and". 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

MODULE : classIO 
STATE: only 
m 
IF [ask "What is the glove type?" 
g 
"Buty l_Rubber,Neoprene,Nitrile,PVA,PVC,V iton"] I S 
> 
"Butyl_Rubber" : IF [ integer.read "What is the molecular weight?" < "118" ] IS 
* 
"Τ" : [ advise "This glove has a * f a i r * rating.", GOAL ] 
^ 
ELSE [ advise "This glove has a *good* rating.", GOAL ] 
Η 
"Neoprene" : C advise This glove has a * f a i r * rating.", GOAL ] 
> 
"Nitrile" 
: IF [ integer.read "What is the molecular weight?" < "92" ] 
IS 
5 
"T" : [ advise "This glove has a * f a i r * rating.", GOAL j 
ELSE IF [ integer.read "What is the molecular weight?" < "118" ] 
IS 
"T" : IF [ integer.read "What is the boiling point?" < "137" ] IS 
X 
"T" : [ advise "This glove has a * f a i r * rating.", GOAL ] 
>3 
ELSE IF [ integer.read "What is the boiling point" < "139" ] IS 
SL 
"T" : [ advise "This glove has a * f a i r * rating.", GOAL ] 
^ 
ELSE IF [ integer.read "What is the boiling point?" < "142" ] 
IS 
"T" : [ advise "This glove has a * f a i r * rating.", GOAL ] 
g 
ELSE [ advise "This glove has a *poor* rating.", GOAL ] 
§· 
ELSE IF [ integer.read "What is the molecular weight?" < "139" ] IS
 
3 
"T" : [ advise "This glove has a * f a i r * rating.", GOAL ] 
^ 
ELSE [ advise "This glove has a *best* rating.", GOAL ] 
<§ 
"PVA" : IF [ integer.read "What is the molecular weight?" < "92" ] IS 
2 
"T" : [ advise "This glove has a * f a i r * rating.", GOAL ]
 
3 
ELSE IF [ integer.read "What is the molecular weight?" < "118" ] IS 
o> 
"T" : IF [ integer.read "What is the boiling point?" < "137" ] IS 
^ 
"T" : [ advise "This glove has a * f a i r * rating.", GOAL ] 
£ 
ELSE [ advise "This glove has a *best* rating.", GOAL ] 
J * 
ELSE [ advise "This glove has a *best* rating.", GOAL ] 
^ 
"PVC" : [ advise "This glove has a *very poor* rating.", GOAL ] 
ELSE [ advise "This glove has a *best* rating.", GOAL ] 
GOAL OF classIO 
Figure 7 · 
The Computer-Generated Program for Using the Rules Induced by RuleMaker 
in 
an Expert 
System for 
Advising Glove Materials 
To Be Used 
for 
Protection 
Against 
Nonhaolgenated Aromatic Compounds. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

48 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
As can be seen by a comparison of the two rule sets, the one 
induced by RuleMaster has s i g n i f i c a n t l y more refinement to i t and 
w i l l come much closer to making accurate predictions than the human 
induced rule set. 
It i s useful to display these rules as a series of bar charts 
i n order to be able to view them i n relation to one another. 
This 
i s presented i n Figure 8 so that the human induced ranges can be 
compared to the ranges induced by RuleMaster. 
I t i s readily seen 
that there i s good agreement between the two ranges i n that a l l of 
the i n i t i a l human assignments are s t i l l present i n the RuleMaster 
assignments. 
The notable difference i s that there i s considerably 
more refinement to the possible choices i n the RuleMaster chart. 
The significance i s that based on the simpler human induced rules i f 
long term protection (more than 1 hour) was needed for working with 
nonhalogenated aromatics, Viton was the only good choice. However, 
Viton gloves are not only very expensive ($30 a p a i r ) , but they have 
poor t a c t i l i t y , so work involving much dexterity i s precluded when 
wearing them. With the RuleMaster information new p o s s i b i l i t i e s are 
now available for consideration: 
• 
I f the compounds have molecular weights >138 then N i t r i l e 
may be used; n i t r i l e gloves offer greater t a c t i l i t y and 
they are much less expensive than Viton. 
• 
I f the molecular weight of the compounds i s <118 or >93 
with b o i l i n g points greater than 137°C, then PVA may 
be 
used; PVA gloves have no better t a c t i l i t y properties than 
Viton gloves but they are cheaper so the expenses could be 
lowered. 
Thus, the rules induced by RuleMaster 
offer 
p o s s i b i l i t i e s for 
reducing cost and allowing more dextrous work to be performed than 
would have been available using the human induced rules. 
The important caveat to remember, however, i s that the computer 
has produced the best rules possible from the data i t was given and 
has extended those rules to cover examples past that data set where 
possible. Thus, u n t i l proven with a s u f f i c i e n t number of examples 
any set of rules must always be viewed simply as the best ADVICE 
available. 
There can always be " o u t l i e r s " caused by 
additional 
factors that have not yet been discovered. 
Once the computer has induced the rules governing a particular 
set of complex data then i t i s easy for a human to check and see i f 
they are true. This can be done i n two ways: 
1. 
a simple Rule Table can be constructed, and 
2. 
additional known examples can be analyzed to challenge the 
rules and see i f they hold true; i f they don»t then addi-
tional data i s given the computer so that modified rules 
can be induced. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

KEITH AND STUART 
A Rule-Induction Program for QA-QC 
Protective Rating Based on Breakthrough Time 
ι 
«*» 
ι 
Good 
| 
Best 
Nitrile 
Neoprene 
Butyl Rubber 
PVA 
K W S S S N N 
Human Induced Protective Ranges 
Butyl Rubber 
\,'.'.'t'.'.'y//////a 
I» » * * IZ3 
RuleMaker Induced Protective Ranges 
Figure 8. Protective Ranges of Six Glove Materials Against Non-
halogenated Compounds. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

50 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
An example of the Rule Table that can be constructed from this 
data set i s Table I I . 
Now, once the Rule Table i s constructed i t i s easy to check the 
data again and visualize these relationships; that i s , to v e r i f y 
that they are true. But, remember the lack of obvious relationships 
when the example data was f i r s t examined. 
The use of a r t i f i c i a l intelligence, and s p e c i f i c a l l y a rule 
inductive program such as RuleMaster 
i s an excellent way 
that 
meaningful relationships can be derived from the large and diverse 
mass of data being produced. 
The use of a r t i f i c i a l intelligence i n 
this way i s referred to as "knowledge manufacturing". 
Thus, the 
strongest features of a computer (to remember and correlate large 
numbers of data) and humans (to be creative and to use reasoning 
capabilities beyond that of a computer) are being used to solve very 
complex problems. 
Summary 
In summary, RuleMaster i s an expert system building package intended 
to solve many of the problems involved i n the construction of large 
knowledge based programs. I t s inductive learning system 
(RuleMaker) 
allows rapid and effective acquisition of expert knowledge. 
The 
Radial language allows structured organization of large quantities 
of knowledge. 
Radial also provides a 
f a c i l i t y 
for presenting 
ordered explanation of reasoning to any level of elaboration re-
quired. 
Use of an expert system i n conjunction with a 
s t a t i s t i c a l 
program for pattern recognition such as Ein*Sight or SIMCA i s a 
concept that offers an excellent probability of success i n (1) 
finding, (2) ordering, and (3) using the most selective chemical and 
physical parameters for choosing the best protective materials to 
use with a wide variety of hazardous chemicals. 
No other program 
can be used both to help develop the rules needed for analysis of a 
complex data base (by induction) and then to use these rules i n a 
logic sequence to provide a diagnostic decision. 
Furthermore, the 
basis of any and a l l decisions made by the computer are completely 
available on demand so that they can easily be checked and/or 
v e r i f i e d . 
The 
f i r s t prototype system used rules which were derived as 
"best estimates" from a data base of about 1300 
tests using 90 
different chemicals. However, the prototype system i s being revised 
using computer-generated 
rules. Thus, i t i s becoming "smarter" and 
better as i t ' s data base and the resulting rules derived from i t i s 
expanded. Using a computer to evaluate large masses of data i s not 
novel, but using i t to help generate rules by an inductive logic 
process from large masses of data i s an important new achievement. 
One of the significant advantages of this expert system w i l l be a 
consistent unbiased interpretation of the data i n a rapid manner 
once the expert system has been developed. 
And l a s t l y , RuleMaster 
i s structured so that i t i s easy to add, change, or delete data from 
the expert system so that i t can continue to grow and improve with 
use and experience. These features w i l l be invaluable as the data 
base continues to grow and change. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

3. KEITH AND STUART 
A Rule-Induct ion Program for QA-QC 
51 
TABLE I I . RULE TABLE FOR NONHALOGENATED AROMATIC COMPOUNDS 
Best 
Glove Material Rating 
Good 
Fair 
Poor 
V Poor 
BuR i f 
MW >= 118 
BuR i f 
MW < 118 
N i t r i l e i f 
MW >= 139 
Neoprene 
N i t r i l e i f 
MW < 118 and 
bp = <142 
- or -
MW >= 118 -< 139 
N i t r i l e i f 
MW < 118 and 
bp >= 142 
PVA i f 
MW >= 118 
- or -
MW >= 92 -< 118 
and bp >= 137 
PVA i f 
MW < 92 
- or -
MW >= 92 -< 118 
and bp < 137 
Viton 
PVC 
MW = Molecular Weight 
bp = B o i l i n g Point 
BuR = Butyl rubber 
PVA = Polyvinyl acetate 
PVC = Polyvinyl chloride 
Literature Cited 
1. D. Michie, S. Muggleton, C. Riese and S. Zubrick, "RuleMaster -
A Second Generation Knowledge Engineering Facility," from 
Proceedings of the First Conference on Artificial Intelligence 
Applications, Denver, Colorado, 5-7 December 1984. 
2. L.H. Keith, W. Crummett, J. Deegan, Sr., R.A. Libby, J.K. 
Taylor and G. Wentler, "Principles of Environmental Analysis," 
Anal. Chem., 55, p. 2210-18, 1983. 
RECEIVED January 15, 1986 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch003
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

4 
A Chemistry Diagnostic System for Steam Power Plants 
James C. Bellows 
Westinghouse Electric Corporation, Orlando, FL 32817 
A 
diagnostic 
system 
for 
the 
steam 
system 
chemistry of 
utility 
power plants is describ-
ed. 
It is an expert system which accepts data 
from 
a 
monitoring 
system 
and 
generates 
recommendations 
for 
action 
to 
improve 
the 
chemistry of the plant. 
The monitors collect 
data 
from 
important 
points 
in 
the 
steam 
cycle. 
Data is transferred to a central 
data 
center 
for 
transmission 
to 
a 
centralized 
diagnostic 
center. 
At the diagnostic center, 
the 
monitors 
readings 
are 
validated 
before 
being 
used 
in 
the 
diagnosis of 
the 
power 
plant. 
Recommendations are transmitted to the 
data 
center for display. 
The removal of a 
malfunctioning 
sensor 
from 
consideration 
is 
given as an example of the operation of the 
system. 
Downtime at a steam power plant can be valued at as much as $1 
million/day. 
The actual value depends upon the size of the plant 
and the cost of replacement power. 
For 1000 MW nuclear plants, 
such as those that supply approximately 50% of Chicago's electric-
i t y , 
the $1 million/day is fairly 
accurate. 
One of the major 
causes of downtime, especially unscheduled downtime, is corrosion 
due to 
improper 
steam and water 
chemistry. 
Replacement of 
corroded turbine 
blading often 
requires downtime of a month or 
more. 
Replacement 
of 
corroded 
nuclear 
steam generators has 
required on the order of 9 months. 
The chemistry of power plants 
will be briefly reviewed. 
The goals of the chemistry diagnostic 
system will be stated. 
The supporting monitoring system will be 
briefly 
described, and capabilities 
of the current 
diagnostic 
system described. The scheme for diagnosing monitors and removing 
erroneous data 
from plant 
diagnosis will 
be outlined, and an 
example of a sensor malfunction diagnosis will be given. 
0097-6156/86/0306-0052$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

4. 
BELLOWS 
A Chemistry Diagnostic System for Steam Power Plants 
53 
Power Plant Chemistry 
A power plant may be viewed as a chemical plant which has taken 
by-product sale to the limit. 
It 
recycles the product and sells 
only by-product. 
By most standards, it 
is a chemical plant, 
full 
of reactor vessels, piping, pumps, and tanks. 
Since the principal 
product is not a chemical, however, people tend to forget that a 
power plant 
is a chemical 
plant. 
Chemistry has often been the 
entry level 
position, and people were promoted to janitor. 
The 
materials 
are 
generally 
chosen to 
optimize 
heat 
transfer 
and 
mechanical 
strength 
and 
are 
not 
optimized 
for 
compatibility. 
Figure 1 shows a simplified schematic of a power plant. 
The condenser may consist of copper bearing alloys, such as 
aluminum bronze, admiralty 
brass, and Muntz metal. 
Titanium 
is 
also used, as are stainless and carbon steels. 
Its 
purpose is to 
act as a sink for approximately 
2/3 of the heat produced in the 
boiler. 
The feedwater heaters are steam to liquid heat exchangers 
and have have steel 
or copper alloy 
tubing 
and usually 
carbon 
steel 
shells. 
Restricting 
the discussion to fossil plants 
for 
simplicity, 
the 
boiler 
has 
carbon 
and alloy 
steels 
which 
are 
chosen for resistance to the 1000-1250° F thermal conditions more 
than for corrosion resistance. 
The high pressure and 
intermediate 
pressure 
turbines 
must 
be 
designed 
to 
operate 
with 
inlet 
temperatures of the same range. 
The low pressure turbine operates 
between approximately 700° F and 100° F. 
The final 
stages of the 
low pressure turbine are supersonic. 
A large fossil turbine will 
be over 10 feet 
in diameter 
and weigh on the order of 250,000 
lb. 
It 
rotates at 3600 rpm. 
The centrifugal 
stresses in the last 
stages of the low pressure turbine dictate high strength alloys in 
the same region that concentrated salt solutions can form. 
There are two fundamental 
types of boilers: 
once through and 
recirculating. 
In the case of once through boilers, all the feed-
water is converted to steam as it passes through the boiler in es-
sentially 
a plug 
flow 
regime. 
Most 
once through 
boilers 
are 
supercritical 
pressure 
(3500 to 4500 psi), 
so the 
distinction 
between 
liquid 
and vapor is 
lost. 
In 
a recirculating 
boiler, 
pressures are limited 
to about 2800 p s i , and steam is 
separated 
from liquid in a steam drum. 
The liquid is recirculated back to 
the bottom of the boiler and the steam is superheated. 
In both 
boilers, the steam is reheated after it is passed through the high 
pressure 
turbine. 
Occasionally 
a 
second 
reheat 
after 
the 
intermediate pressure turbine is found. 
Which 
type 
of 
boiler 
is 
present 
in 
the 
system 
has 
a 
significant 
influence 
on the 
fundamental 
chemistry 
used in 
the 
plant. 
In once through boilers, no solids can be used so All 
Volatile Treatment 
(AVT) is employed. 
AVT consists of 
extremely 
pure water with the addition of ammonia, or other volatile 
amine 
for pH control, and hydrazine for oxygen scavenging. 
The exact 
concentration 
of ammonia is chosen to minimize corrosion of the 
feedwater 
heaters 
and 
depends 
upon 
the 
alloys 
used 
in 
their 
construction. 
The hydrazine feed rate is determined by the amount 
of oxygen in the feedwater. 
In recirculating boilers at pressures 
over 1500 p s i , the AVT regime is used, but a solid conditioning 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

54 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
·» i— 
DC 
Ό 
C 
tO 
• 
C 
t-
«C 
=3 
ι— 
(Λ 
O- 
</> 
0) 
t- 
Ι ­
Ο) 
CL 
Ο 
Φ 
D - 4-> 
tO 
tO »r~ 
T J 
φ 
ε 
α) 
tO +·> 
L- 
C 
σ > · ι ~ 
to 
•r~ 
* 
Ο 
0) 
t- 
· 
Ο 
3 
>> 
•r~ 
tO r— 
tO 
Φ 
> 
ε 
t- 
«r-
χ : 
ο 
ο 
. c 
<υ 
ο ο 
σ 
α 
- σ - c 
eu 
φ 
1~ 
«4- - C 
* 
•r- 4-> 
CO 
ι— 
Q) 
α. ω c 
ε 
-M 
• r 
Ό 
JD 
t o 
ο 
t-
•r- 
3 
X J •»-> 
• 
C 
r H «r- 
φ 
Ι ­
Ο) Û- 
3 
C 
I 
tO 
3 
CO 
σ > Ό 
α; 
11 
Ό 
Q . 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

4. 
BELLOWS 
A Chemistry Diagnostic System for Steam Power Plants 
55 
agent may be added to the recirculating water in the boiler. 
The 
purpose 
of 
this 
conditioning 
agent 
is 
to 
control 
pH and 
to 
precipitate impurities 
in compounds which do not 
adhere to 
the 
boiler surfaces. 
In the United States, this is usually a mixture 
of disodium and trisodium phosphate. 
In other countries, sodium 
hydroxide may be used. 
In both types of boilers the fundamental 
chemistry problems are to avoid oxygen and to avoid deposits of 
chemicals on the heat transfer surfaces. 
Failure to avoid either 
of these conditions leads to corrosion, and ultimately to rupture 
of boiler tubing. 
Considerable 
dissolution 
of 
salts 
may 
occur 
in 
the 
high 
pressure 
steam. 
As the 
steam density 
decreases through 
the 
turbine, 
the 
solubility 
of 
the 
salts decreases, and the 
salts 
deposit 
on the 
turbine. 
Two categories 
of deposition 
exist. 
Alkali 
metal 
hydroxides 
form 
stable 
water 
solutions 
at 
all 
pressure and temperature 
conditions within the turbine. 
Sodium 
hydroxide 
concentrations 
can 
be 
as 
high 
as 
90%. 
These 
concentrated hydroxide solutions lead to 
rapid stress corrosion 
cracking of turbine materials and must be rigorously avoided. 
The 
second case is represented by sodium chloride, which deposits as a 
solid throughout most of the turbine. 
However, salts elevate the 
boiling 
point 
of 
water 
enough that 
near 
the 
transition 
from 
superheated to 
saturated 
steam, a region exists 
in which 
salt 
solutions of 30% are stable. 
Sodium chloride solutions of 
this 
concentration at temperatures 
of 100° C are quite corrosive and 
lead to stress corrosion and corrosion fatigue of turbine alloys. 
The 
problem 
of 
power 
plant 
chemistry 
becomes 
one 
of 
determining 
which sources of chemicals are active at any given 
time and whether the purification 
systems are working properly. 
The condenser is a common source of impurities. 
On one side is 
the 
steam, 
which must 
be maintained 
pure to 
a few 
parts 
per 
billion; 
on the other is cooling water, which may be sea water. 
The condenser will commonly consist of tens of thousands of tubes, 
each of which is sealed to two tube sheets. 
The sum of all 
the 
leaks must be on the order of pints per day. 
The condenser and 
some 
other 
parts 
of 
the 
system 
operate 
below 
atmospheric 
pressure. 
Oxygen and carbon dioxide from air 
leaking into 
the 
system represent 
significant contaminants. 
Condensate polishers 
are large ion exchange units which remove trace impurities in the 
feedwater. 
They must be operated properly, or they may add more 
impurities than they remove. 
Deaerating heaters remove dissolved 
gases from the feedwater. 
Finally, a drum boiler is a s t i l l , and 
the 
efficiency 
of 
liquid-vapor 
separation 
is 
critical 
to 
the 
purity of the steam. 
Definitions 
At least in the power industry, the terms "monitoring" and "diag-
nostics" are often used interchangeably or without careful 
defi-
nition. 
Much confusion can arise when these terms are used. 
For 
purposes of this paper, these terms and the terms "expert system" 
and "malfunction" will be defined here. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

56 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Monitoring. 
Collection and manipulation of data for control and 
diagnostic 
purposes. 
Monitoring 
systems will 
have sensors to 
measure 
temperatures, 
pressures, 
flow 
rates, 
and 
the 
concentrations 
of 
chemicals 
in 
streams. 
They may store 
this 
information 
in a computer or a data logger. 
They may perform 
transformations 
on the data, 
such as conversion of voltages 
to 
engineering units, computation of averages, and comparison of two 
values. 
They 
may 
provide 
alarms 
when 
variables 
are 
beyond 
acceptable limits. 
Monitoring systems may even plot graphs. 
Diagnosis (Diagnostics). 
Determination of condition and specific 
cause of this condition. A diagnostic system determines that 
all 
conditions are as they would be expected, or that there is some 
malfunction 
of 
a 
component 
that 
is 
causing 
an 
undesired 
condition. 
A diagnostic system may also generate recommendations 
for correction of an undesired condition. 
Expert 
System. 
A computer 
reasoning 
system 
based 
on 
rules 
generated by questioning experts in a given f i e l d . 
Expert systems 
generally 
consist of three parts: 
a rule entering 
and editing 
program, a rule base, and an inference engine which takes data and 
applies the 
rules to 
it 
to 
reach conclusions about the system 
which generated the data. 
Malfunction. 
Any condition 
in which a piece of 
equipment 
or 
system is imperfect for any reason. 
Examples might be exhausted 
condensate polishers, leaky condenser tubes, and sensors for which 
the power has been unintentionally turned off. 
This definition of 
malfunction 
includes deterioration 
of 
equipment 
due to 
normal 
wear. 
By this definition, worn out car brakes are a malfunction. 
Goals of the Diagnostic System 
The goal of 
an a r t i f i c i a l 
intelligence 
diagnostic system is 
to 
provide the available expert advice to the user, in a time that is 
probably faster 
than the 
human could deliver 
i t . 
A number of 
decisions 
have been made about 
the 
scope of 
the 
system which 
should be stated here. 
One goal was to use only on-line monitors, 
since only then could the system be responsible for the quality of 
the data. 
The quality of manual analyses varies in unpredictable 
ways, and we chose not to depend upon i t . 
If one is to work with 
on-line sensors as the primary source of data, then the 
validity 
of sensors must be determined within the system. 
Since on-line 
monitors are expensive there is a corollary goal of 
a minimum 
number of sensors consistent with diagnosis of important equipment 
malfunctions 
and sensor condition. 
The diagnosis must be done 
centrally 
so that 
experience 
gained 
from 
one 
plant 
can 
be 
immediately 
available 
to other 
plants by rapid revision of 
the 
diagnostic 
rules. 
Chemistry upsets in 
power plants 
generally 
require several hours to develop, so transmission once or twice 
per day to the Diagnostic Center would usually be adequate 
to 
detect upsets which were developing slowly. 
To handle the upsets 
that were faster 
than the regular transmission would detect, 
it 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

4. 
BELLOWS 
A Chemistry Diagnostic System for Steam Power Plants 
57 
was decided that the data gathering computer at the plant should 
be sophisticated enough to determine that something is happening 
and make a special transmission of data at that time. 
The monitor 
set has been chosen to allow high reliability 
diagnosis of common 
power 
plant 
conditions, 
but 
it 
will 
support 
some 
unusual 
conditions as well. 
Those unusual conditions are included in the 
diagnostic 
system 
simply 
because 
the 
supporting 
data 
are 
present. 
Finally, it was decided that no information which might 
be relevant, 
including manual 
analysis data, 
should be 
rejected 
completely, 
and manual entry points have been included for that 
data. 
Manual entry of data requires validation of the data before 
entry. 
Monitoring System 
In order for any diagnostic system to draw valid conclusions about 
the condition of a plant, 
it must have an appropriate 
monitoring 
system for gathering data. 
The monitoring system chosen is shown 
schematically in Figure 1. 
Sensors are placed on the influent and 
effluent 
streams 
of 
each 
chemically 
active 
component 
of 
the 
plant. 
Thus, 
by 
looking 
at 
changes 
in 
concentrations 
from 
condensate 
to 
condensate 
polisher 
effluent, 
as 
well 
as 
the 
concentrations 
in 
the 
polisher 
effluent, 
one 
determines 
the 
effectiveness 
of 
the 
polishers. 
For 
the 
chemical 
feed, 
the 
polisher effluent is the influent to the zone, and the final 
feed 
(economizer 
inlet) 
is the effluent. 
The sensor set 
is kept as 
small as is reasonable, consistent with high certainty 
of sensing 
malfunctions of the plant 
and of the sensors. 
The sensors used 
are given in Table 
I. 
The output of the sensors is transmitted 
to a data center in 
the plant, which stores the data. 
Normally the data are trans-
mitted to the central diagnostic center at least once per day, and 
the diagnosis is 
returned 
to the data center for display. 
The 
data center also computes rates of change of variables. 
The data 
and rates 
of 
change are 
compared with alarm limits 
and a more 
sensitive limit, which we call a diagnosis activation 
limit. 
If 
the diagnosis activation limit is reached, a special transmission 
of 
data 
is 
made 
immediately 
so that 
a diagnosis may be made 
immediately. 
It 
is believed that this 
is a suitable compromise 
among the expense of continuously on-line diagnostics, the need 
for 
immediate 
diagnosis of 
an upset, 
and the need to keep the 
diagnostic 
system 
centralized 
to 
allow 
rapid 
improvement 
in 
diagnosis as experience with the automated system develops. 
Diagnostic System 
Diagnosis is accomplished by the expert system. 
The central part 
of the expert system is the rule base. 
The rule base consists of 
ideas, called nodes, and rules which interconnect them as shown in 
Figure 2. 
The upper node is the evidence; the lower node is the 
conclusion. 
The rule between them will state that if the evidence 
is known to be true with absolute certainty, 
then the conclusion 
will be known to be true (or false) with a specific confidence. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

58 
Table 
I. 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Sensors for a once-through boiler 
Condensate 
Condensate 
Sensor 
Pump 
Polisher 
Economizer 
Hot 
Description 
Discharge 
Effluent 
Inlet 
Reheat 
Makeup 
Cation 
Conductivity 
Χ 
X
X
X 
Specific 
Conductivity 
Χ 
X
X
X 
Sodium 
Χ 
X
X
X 
Chloride 
Χ 
X
X
X 
Dissolved 
Oxygen 
Χ 
X
X 
Hydrazine 
X 
pH 
Χ 
X
X 
S i l i c a 
Χ 
X 
Air Exhaust 
X 
Makeup Flow 
Electrical 
Load 
X 
This aspect of the rule is known as sufficiency. 
The rule will 
also state that if the evidence is known to be false with absolute 
certainty, that the conclusion will be known to be false (or true) 
with another 
specific confidence. 
This aspect of the 
rule 
is 
known as necessity. 
The sufficiency and necessity need not be 
equal. 
There 
are many times when something may indicate 
the 
presence of a condition but not be a necessary consequence of that 
condition. 
The increases in monitor 
readings that occur at 
the 
start of malfunctions are good examples of indicators which will 
signal 
the presence of a malfunction, 
but when the 
malfunction 
becomes stable at some severity, 
the increase will 
no longer be 
present. 
Of course a high value for the monitor reading will then 
be present. 
Evidence may be sensors or the conclusions from other 
rules. 
Several rules may support a single conclusion and the same 
evidence may be used for several rules. 
When 
the 
system 
is 
used 
to 
diagnose 
the 
power 
plant 
chemistry, the 
inference engine will 
activate 
all 
the rules 
for 
which evidence exists. 
Thus all possible conclusions are examined 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

BELLOWS 
A Chemistry Diagnostic System for Steam Power Plants 
EVIDENCE 
N O D E 
1 
RULE 
N O D E 
2 
Figure 2. 
Basic Step in an Expert System Rule Base. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

60 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
simultaneously. 
All the evidence for and against all conclusions 
is 
always 
considered. 
Diagnosis of 
simultaneous 
malfunctions 
occurs simply because evidence for those malfunctions exists. 
The 
structural 
details 
of 
our 
expert 
system have 
been 
published 
elsewhere 
(1). 
The nodes and rules for an expert system are based on expert 
judgements. 
Usually, definitive 
statistics are unavailable 
for 
the relationships between ideas, but experts have a good feel 
for 
the relationships. 
We have found that when the information in the 
rule set is broken down into small enough steps, experts tend to 
have 
substantial 
agreement 
concerning 
the 
sufficiency 
and 
necessity of evidence to a given conclusion. 
It 
is quite common 
to find that what an experienced engineer considers to be one step 
is in fact several. 
When the rule base is constructed, the small 
steps are used. 
The use of small steps promotes clarity 
in the 
rule 
base and, 
at 
times, 
provides 
experts with new insights. 
Since the diagnostic process must be broken down into small steps, 
the 
process of 
building 
the 
rule 
base is 
much like 
that 
of 
training an able, but rather ignorant person. 
It 
has been arbitrarily 
decided to say that any malfunction 
for 
which there 
is 
less than 
30% confidence 
is 
probably 
not 
present with enough severity to cause concern. 
Between 30% and 
50% confidence, one should be concerned that the malfunction may 
be 
developing. 
This 
represents 
an 
early 
warning, 
but 
with 
increased possibility of error. 
Between 50% and 70% confidence, 
action is appropriate to confirm or disconfirm the presence of the 
malfunction by collecting additional 
information, 
if 
necessary. 
Above 75% confidence, a plant malfunction is present with enough 
confidence 
that 
action 
ought 
to 
be 
taken 
to 
correct 
the 
malfunction. 
Action on a sensor malfunction 
indication should 
take place above 50% confidence, since by that time the system has 
lost substantial 
sensitivity to the plant malfunctions supported 
by the sensor. 
Results for a Fossil Once-Through Steam System 
There are 
currently over 50 malfunctions of a fossil once-through 
steam system that can be diagnosed. 
Some of these malfunctions 
are 
listed 
in Table II. 
It 
will 
be noted that some of these 
malfunctions occur as sets of related malfunctions. 
In some cases 
the members of the set are mutually exclusive, as in the ammonia 
feed malfunctions. 
In other cases, such as contaminated makeup, 
there is a malfunction which can be broken into 
smaller, more 
detailed 
malfunctions. 
The system can diagnose a variety 
of 
sensor malfunctions as well. 
The diagnosable malfunctions related 
to 
each 
sensor are 
shown 
in 
Table 
III. 
To accomplish these 
diagnoses, 
the 
system contains over 1300 
rules. 
To test 
the 
system we have made use of whatever monitoring data we have had 
accessible. 
This has consisted of Steam Purity Analyzer System 
(2) 
data which is single location data, Total 
Plant Survey 
(3) 
data which is system wide but grab sample, and such plant data as 
has 
been 
accumulated 
from 
record 
reviews 
and 
diagnostic 
missions. 
None of these data sets conforms exactly to the monitor 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

4. 
BELLOWS 
A Chemistry Diagnostic System for Steam Power Plants 
61 
system that is envisioned as input to the diagnostic system, so 
estimates of values of other data which were deemed necessary to 
test 
the system have been used. 
A number of diagnoses use the 
rates of change of variables. 
Since the only available continuous 
(one minute interval) data sets were for the Steam Purity Analyzer 
System, these data sets were sometimes moved to other locations to 
test 
the sensitivity 
of plant malfunction confidences to sensor 
malfunctions 
which 
were 
known 
to 
be 
in 
the 
data. 
Where 
intermediate values between grab samples or discrete readings were 
necessary, they were either 
linearly 
interpolated 
with time or 
made proportional 
to 
a sample for 
which continuous data were 
available. 
One of the important tasks of the system is to diagnose the 
sensor malfunctions 
and remove the malfunctioning 
sensors from 
consideration in the plant diagnosis scheme. 
Chemical sensors are 
high maintenance and high malfunction rate devices. 
If 
they were 
not removed from consideration when they malfunction, they could 
generate 
spurious plant malfunction diagnoses and discredit 
the 
diagnostic system. 
The task of removing a malfunctioning sensor 
from consideration is accomplished by taking the confidence that 
Table II. 
Representative Malfunction Groups for a Once-Through 
Boiler System 
Malfunction 
Description 
Numbers 
Description 
1. 
Condenser cooling water leak 
2-8. 
Contaminated makeup 
9-12. 
Air in leakage 
13-17. 
Polisher malfunctions 
18-31. 
Ammonia feed 
Malfunctions 
32-45. 
Hydrazine feed 
Malfunctions 
46-47. 
Contaminated feed 
Chemicals 
48-51. 
Organic contamination 
52. 
Contaminated boiler 
Table III. 
Number of Malfunctions Diagnosed for each Sensor 
Sensor 
Number of Distinct Malfunctions 
Cation Conductivity 
5 
Specific Conductivity 
4 
pH 
4 
Dissolved Oxygen 
3 
Sodium 
2 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

62 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
there is a malfunction in the sensor and using it to drive a rule 
that changes the sufficiency and necessity of rules coming from 
that sensor so that the plant diagnostic system is less sensitive 
to 
the 
information 
coming 
from 
that 
sensor. 
This 
is 
shown 
schematically in Figure 3. 
Data from the sensor and other sensors 
are 
used to 
drive 
rules that 
diagnose the 
sensor of 
interest 
(4). 
The results 
of 
these 
rules 
are 
accumulated 
in a sensor 
malfunction node. 
The confidence in this node is used to drive 
rules which alter the sufficiency and necessity of other 
rules. 
The scheme is analogous to setting 
a valve point 
based on the 
values of a number of sensors. 
An 
example 
of 
sensor 
validation 
and 
removal 
from 
consideration illustrates 
the working of the diagnostic system. 
The malfunctioning sensor is an acid cation exchanged conductivity 
monitor, commonly called "cation conductivity." 
It 
consists of a 
cation 
exchange 
resin 
in 
the 
hydrogen 
form 
followed 
by 
a 
conductivity meter. 
The cation exchange resin 
removes ammonia 
from the sample stream and the resulting conductivity provides a 
good estimate of total ionic content, except for hydroxide. 
The 
monitor 
is 
very 
sensitive 
to most of 
the 
impurities 
that 
are 
important 
to 
power 
plants. 
However, 
when the 
cation 
exchange 
resin is exhausted, the monitor reverts to a specific conductivity 
monitor and the output is dominated by the ammonia concentration. 
Figure 
4 
shows a test 
of 
the 
diagnostic 
system 
for 
an 
incident 
of 
resin exhaustion 
for 
a cation 
conductivity 
sensor. 
The data are a combination of real and synthesized plant data and 
are given in Table IV. 
The condensate values for the condensate 
sensor 
are 
those 
recorded during 
the 
actual 
exhaustion 
of 
the 
cation 
resin 
column at 
a plant 
installation. 
The 
steam and 
polisher effluent values would be reasonable based on the 
starting 
value of the real 
sensors. 
All of the sensor values other than 
the condensate cation conductivity were held constant to clearly 
Table IV. 
Sensors related to a cation conductivity resin 
exhaustion incident 
Sensor 
Value 
Data Source 
Condensate cation conductivity 
Condensate specific conductivity 
Condensate sodium 
Makeup addition 
Steam cation conductivity 
Steam specific conductivity 
Steam sodium 
Polisher effluent specific 
conductivity 
See F i g . 4 
7.87 
2.2 
Off 
0.17 
7.8 
2.1 
Real 
Real 
Real 
Estimated 
Estimated 
Estimated 
Estimated 
0.16 
Estimated 
Note: 
These values were held constant to show the effect 
of the 
variation in the single variable. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

4. 
BELLOWS 
A Chemistry Diagnostic System for Steam Power Plants 
63 
I 
O T H E R 
( S E N S O R S 
1 _ £ 
/ 
S E N S O R 
\ 
( D I A G N O S T I C S / 
S E N S O R 
INTERPRETATION 
S E N S O R 
MALFUNCTION 
VALIDATED 
INTERPRETATION 
P L A N T 
EQUIPMENT 
M A L F U N C T I O N S 
Figure 3. 
Block Diagram of Sensor Validation. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

.4 
C O N D E N S A T E 
C A T I O N 
·
3" 
CONDUCTIVITY 
C O N D E N S A T E 
CATION 
CONDUCTIVITY 
RESIN 
E X H A U S T I O N 
0 
C F 
.2H 
H 
H 
C O N D E N S E R 
L E A K 
C F 
S F 
E V A L U A T I O N 
740 
750 
ι 
1 
1 
800 
850 
900 
TIME 
(MINUTES 
SINCE 
MIDNIGHT) 
—I 
950 
Figure 4 . 
Cation Conductivity Sensor Malfunction: 
Data, 
Confidences, and Evaluation Function, 
> 
H 
Ο 
> 
Ο 
m 
η 
m 
> 
η 
δ 
C/3 
m 
So 
Η 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

4. 
BELLOWS 
A Chemistry Diagnostic System for Steam Power Plants 
65 
show the effect 
of the single malfunction on the confidence in 
other malfunctions. 
Of particular interest is the condenser tube 
leak, 
which has great 
sensitivity 
to 
the 
value 
of 
the 
cation 
conductivity of the condensate. 
One sees that the confidence in 
the sensor malfunction, the exhaustion of the resin in the cation 
conductivity 
sensor, 
parallels 
the 
increase 
in 
the 
cation 
conductivity reading. 
At f i r s t , 
the confidence in the condenser 
tube 
leak 
also 
parallels 
the 
increase 
in 
the 
cation 
conductivity. 
However, as the confidence in the malfunction of 
the cation conductivity sensor increases, the confidence in the 
tube leak peaks at 30% and declines with further 
increase in the 
confidence in the sensor malfunction. 
The value of the evaluation 
function, which is used to reduce the sensitivity 
of the 
plant 
diagnosis to the malfunctioning sensor, is shown at the bottom of 
Figure 4. 
It 
starts 
at 
100% sensitivity 
and declines as the 
sensor malfunction becomes more certain. 
By the time the sensor 
malfunction 
confidence 
has 
reached 
70%, 
the 
plant 
diagnosis 
practically ignores the sensor. 
Of course, if the malfunction had 
been a condenser leak, the condensate sodium would have increased 
at the same time as the cation conductivity. 
The rule base would 
have recognized this occurrence, the confidence in a malfunction 
of the cation conductivity sensor would have been substantially 
reduced, 
and the 
confidence in 
the 
condenser leak 
would have 
increased due to the increases in both the cation conductivity and 
the sodium concentration. 
Data Center Displays 
The data center displays the diagnosis and a number of different 
utility screens. Figure 5 is a picture of the RECOMMENDATION SUM-
MARY screen. It 
shows the actions which are most important to im-
proving the chemistry of the unit at the current time. 
They are 
listed 
in priority 
based on confidence in the existence of 
the 
malfunction 
and on the 
seriousness of the 
consequences of 
the 
malfunction at its current severity. 
On the data center screen, 
the 
recommendations 
are 
color 
coded, with 
red 
recommendations 
having a confidence in 
the 
underlying malfunction 
of at 
least 
70%. 
Yellow indicates 30-70% confidence, and green indicates 0-
30% confidence. 
The rectangles on the right hand edge and along 
the bottom are touch buttons to allow 
access to other screens. 
They 
blink 
if 
new information 
is 
available 
on those screens. 
Their 
color 
is 
determined 
by 
the 
color 
of 
the 
most 
urgent 
information 
on the 
screen. 
The RECOMMENDATION screen shown in 
Figure 6 displays the 
action, a cryptic 
reason for taking 
the 
action, 
and 
the 
consequences 
of 
not 
taking 
action. 
The 
consequences are as specific as the current 
state of knowledge 
will 
allow. 
Experience with a Generator Diagnostic System 
Although the subject is hardly chemistry, it would be appropriate 
to 
make mention 
of 
a companion project 
in 
the 
diagnosis 
of 
conditions 
in 
electrical 
generators. 
Such 
a 
system 
is 
in 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

66 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
RECOMMENDATION SUMMARY 
I 
I 
Find and repair air leak above hotwell waterline within 
L -
1 
100 hr. 
I I 
Reduce load and repair leak in condenser section 2 
within 24 hr. 
I 
I 
Remove polisher vessel #3 from service and regenerate 
1—
1 
within 8 hr. 
PL3 
Select 
Unit 
Diagnostic 
Summary 
Diagnostic 
Procedures 
Explanation 
Diagnosis 
Alarms 
Monitor 
Menu 
Service 
Menu 
Print 
Screen 
Previous 
Selection 
Figure 5 . 
Recommendation Summary Screen. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

4. 
BELLOWS 
A Chemistry Diagnostic System for Steam Power Plants 
67 
ACTION: 
REASON: 
RECOMMENDATION 
Remove polisher vessel #3 from service within 8 
hr. and regenerate. 
There are significant and increasing acid concen-
trations in the boiler feedwater and steam. 
CONSEQUENCES: 
Continued operation with significant acid concen-
(INACTION) 
trations will lead to acid corrosion of the boiler 
tubing and the turbine blading and steeples. 
Damage can be significant in 48 hr. 
Diagnostic 
Summary 
Diagnostic 
Procedures 
Explanation 
Diagnosis 
Alarms 
Monitor 
Menu 
Service 
Menu 
Print 
Screen 
Previous 
Selection 
Figure 6. 
Recommendation Screen. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

68 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
operation 
for 
seven power plants 
in Texas. 
While yet 
in 
the 
prototype stage, 
it 
detected a developing generator malfunction 
several hours before any alarms sounded. 
Since the malfunction 
was known, appropriate 
resources could be mobilized before 
the 
generator was taken out of service, and the problem was repaired 
in four days. 
This particular malfunction normally requires two 
to three weeks for repair when it 
is allowed to progress to the 
point 
where 
the 
automatic 
generator 
control 
systems take 
the 
generator out of service. 
Working with a customer in the final 
stages of the development of the generator system has influenced 
many decisions in both the generator and the chemistry diagnostic 
systems. 
Summary 
An a r t i f i c i a l 
intelligence system for the chemistry of a fossil 
once-through steam system has been constructed. 
It 
is based on 
on-line monitors. 
It diagnoses both sensor and plant malfunction 
and 
removes malfunctioning sensors from diagnosis of plant mal-
functions. 
The system has been tested off-line 
using real and 
synthesized power plant data and is now ready for testing in a 
plant. 
Acknowledgments 
The 
assistance 
of 
C. 
T. 
Kemper 
and 
S. 
Lowenfeld 
with 
the 
artificial 
intelligence and of numerous Westinghouse Engineers in 
providing data and information 
for the 
rule base is 
gratefully 
acknowledged. 
Portions of this paper were previously presented at the 45th 
International 
Water Conference, Pittsburgh, Pa., October 22-24, 
1984 and permission to republish them is gratefully acknowledged. 
Literature Cited 
1. 
Fox, M. S. Kleinosky, P. Lowenfeld, S. Proc. 8th Internat. 
Joint Conf. 
Artificial 
Intelligence, 1983, p. 
158. 
2. 
Bellows, 
J.C.; 
Carlson, 
G.L.; 
Pensenstadler, 
D.F. 
J . 
Materials Energy Systems 1983, 5, 43. 
3. 
Peterson, S.H.; Bellows, 
J.C.; 
Pensenstadler, D.F.; Hickam, 
W.M. Proc. 40th Internat. Water Conf. 1979, p. 201. 
4. 
Gonzalez, 
A.J.; 
Osborne, 
R.L.; 
Bellows, 
J . C . 
"On-Line 
Diagnosis 
of 
Instrumentation 
through 
Artificial 
Intelligence," 
presented at ISA Power Industry Symposium, New 
Orleans, L a . , May 1985. 
RECEIVED January 10, 1986 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch004
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

5 
A Real-Time Expert System for Process Control 
Lowell B. Hawkinson, Carl G. Knickerbocker, and Robert L. Moore 
LISP Machine Inc., Los Angeles, CA 90045 
Expert systems technology can provide improvements i n 
analysis of process information, i n t e l l i g e n t alarming, 
process diagnosis, control and optimization of proces-
ses. However, to realize these benefits, a real-time 
expert system capability i s required. A program 
design i s described which supports forward and 
backward chaining inference in a real-time environ-
ment, with dynamic measurement data. The knowledge 
base for the program i s implemented i n structured 
natural language form for application to a broad range 
of process expert systems. Plant test results are 
described. 
In the real-time application of expert systems, a number of design 
considerations, beyond those usually considered i n expert systems, 
become important. Execution efficiency i s a prime consideration. 
In conventional expert systems, the facts and knowledge upon which 
the inference i s based are s t a t i c . In the industrial application, 
the facts or process measurements are dynamic. In an industrial 
application there may be several thousand measurements and alarms 
which may s i g n i f i c a n t l y change in value or status in a few minutes. 
The problem posed by an operator advisor, to give expert 
diagnosis of plant condition and to recommend emergency actions or 
economic optimization adjustments, i l l u s t r a t e s these real-time 
requirements. Some of the plant conditions which can occur 
include : 
1. C r i t i c a l measurement f a i l u r e . In this case, the information 
presented to the operator i s incorrect. An expert system would 
use a process knowledge base to detect inconsistencies and to 
alert the operator. 
2. Process upset. In this case, the expert system would identify 
underlying process problems, distinguishing causes from 
effects, and would advise the operator accordingly. Heuristic 
0097-6156/ 86/0306-O069$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch005
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

70 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
rules of optimization would be applied by the expert system to 
give control advice. 
In these examples, the expert system i s simply applying the 
expertise used i n i t s development. The potential advantage of the 
operator advisor i s that this expertise i s available quickly, on 
any s h i f t , for providing organized advice to the operator. 
To meet these requirements, several design considerations must 
be addressed: 
1. Data access. An e f f i c i e n t real-time data interface must be 
established with the distributed measurement system. 
2. Inference paradigms. The basic inference mechanisms of 
forward-chaining and backward-chaining must be integrated into 
a real-time execution environment. 
3. Computational efficiency. The efficiency of inference i s 
enhanced by program and knowledge-base structure and by machine 
speed. Also, heuristic procedures, as used by experts, can 
augment the deductive procedures of conventional inference. 
The program developed by LMI i n response to these design 
requirements i s called Process Intelligent Control (PICON). 
The 
individual design considerations are addressed i n the following 
discussion. 
Process Intelligent Control 
The expert system package i s designed to operate on a LISP machine 
interfaced with a conventional distributed control system. 
The 
design assumes that up to 20,000 measurement points and alarms may 
be accessed. 
The Lambda machine from LMI was u t i l i z e d . 
The r e a l -
time data interface i s v i a an integral Multibus connected to a 
computer gateway in the distributed system. 
Data transfers, i n floating point engineering units or i n 
status states, are requested by the expert system. Thus the 
distributed system does not transmit a l l measurements and alarms 
on a fixed scan basis, but rather the process data are accessed as 
required for inference. In a sense, the expert system i s acting 
l i k e an expert operator, who focuses attention or scans the 
process operation selectively, using expertise to determine 
specific areas of attention. 
The basic inference paradigms supported by the expert system 
are forward-chaining and backward-chaining. 
Within the context of 
an alarm advisor, there are requirements for both of these para-
digms. An expert process operator, during normal plant operation, 
w i l l scan key process information. This i s for purposes of moni-
toring control performance and detecting problems which may not 
cause e x p l i c i t alarms. 
The programming paradigm which reflects 
this approach i s a scanned forward-chaining inference. The 
heuristic rules which determine possibly-significant-events are 
scanned, and rule condition matching triggers an a l e r t to the 
expert system monitor program. Conventional alarms also may 
trigger an a l e r t , i f they are h e u r i s t i c a l l y ranked as possibly-
significant-events. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch005
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

5. 
HAWKINSON ET AL. 
A Real- Time Expert System for Process Control 
71 
An expert process operator, once alerted, w i l l focus attention 
on the problem. This may involve invoking procedure rules for 
safety or other reasons, and i t may involve assembling information 
and primary analyses to allow inference about the problem. Logic 
rules and procedures are used when required for the diagnostic 
inference. The expert system mimics the expert process operator 
in this regard: Logic rules and procedures are invoked 
s p e c i f i c a l l y when they are required for diagnosis of a process 
problem, or as requested for a specific step i n inference. 
In working through process control examples, we found that many 
calculations, data checks, rate checks and other computationally 
intensive tasks are done at the f i r s t l e v e l of inference. 
Considerations of computational efficiency led to a design 
u t i l i z i n g two p a r a l l e l processors with a shared memory (Figure 1). 
One of the processors i s a 68010 programmed i n C code. This 
processor performs computationally intensive, low l e v e l tasks 
which are directed by the expert system i n the LISP processor. 
The processing of data applies a l e v e l of intelligence. Instead 
of mere measurement values, the expert may base inference on 
trends or patterns of measurements. Thus the system must be able 
to access primitive functions of data, such as averages and trends 
of values, and quality information, such as the presence of noise 
or discontinuous values. Such functions are conveniently 
calculated i n the p a r a l l e l 68010 processor, coded i n C language 
for execution efficiency. 
An expert, given time to do so, may u t i l i z e calculations to 
develop inference results. For example, a material balance 
calculation around a process unit may indicate a measurement 
inconsistency. To mimic this expertise, general mathematical 
operations on combinations of measurements or functions of 
measurements are implemented i n the p a r a l l e l processor also. 
Higher levels of inference depend on the truth conditions of 
the f i r s t level antecedent conditions, and thus higher levels of 
inference involve pattern matching and chained-inference logic. 
Higher level inference i s done i n the LISP processor, using 
various expert system paradigms, while the f i r s t l e v e l antece-
dents, which are computationally intensive, are evaluated i n the 
p a r a l l e l 68010 processor. 
The expert system package i s designed so that an algorithm of 
reasonably arbitrary structure can be dynamically loaded into the 
68010 from the LISP processor. This allows, for example, the 
expert system to implement process-monitoring functionality i n a 
dynamic fashion, the equivalent of: 
"look closely at the energy balance around the specific process 
unit for the next few minutes." 
The expert system design includes the a b i l i t y to change the time 
period of measurement and algorithm processing i n individual 
cases. Thus, i n effect, the system can "focus attention" to a 
specific area of the process plant, and put a l l associated 
measurements and rules for that area on frequent scan. 
This can 
be done under control of the LISP program. Thus, for example: 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch005
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

Figure 1. 
Design f o r the LMI system f o r process c o n t r o l using 
two p a r a l l e l processors with a shared memory. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch005
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

5. 
HAWKINSON ET AL. 
A Real-Time Expert System for Process Control 
73 
A back-chaining diagnostic expert system could reach a point 
where an inference test i s required. 
The LISP program would t e l l the 68010 processor to "focus" on 
the measurements and low-level inferences required around a 
process unit. 
The inference could then be tested. 
Another use of this "focus" f a c i l i t y i s to scan the plant i n a 
background mode, focusing attention on parts of the plant to 
evaluate unit process performance and detect subtle problems, 
u t i l i z i n g both the programmed knowledge of the the expert process 
operator and the expert process engineer. I t i s not p r a c t i c a l to 
examine an entire plant continuously with this intensity, but the 
individual parts of the plant could be scanned i n a background 
mode. This i s equivalent to the way a process engineer would 
analyze plant performance during normal plant operation. 
I t should be noted that the a b i l i t y to focus not only emulates 
the way a human expert works, but also i t avoids the problem 
associated with overloading the distributed process system with 
requests for information. While the expert system knows about a l l 
20,000 measurement and alarm points i n the process environment, 
only those of interest to the expert system need be accessed. 
The LISP environment contains the higher-level functionality of 
the expert system. A truth-maintenance design structure i s used. 
The design assumption i s that lower-level i n t e l l i g e n t processing, 
done i n the 68010, w i l l signal potentially significant process 
events. 
Thus, only a table of truth condition triggers needs to 
be checked by the LISP programs. 
Some general examples of inference using the system: 
- detecting process problems, p a r t i c u l a r l y on complex 
combinations of conditions which require expertise for proper 
interpretation. 
- focus inference, in which rules of a l l p r i o r i t i e s are activated 
for a unit process. In the t y p i c a l use, a 
possibly-significant-event (detected by a high p r i o r i t y 
procedure rule) would trigger a focus on the process unit, thus 
i n i t i a t i n g the gathering of information required for inference 
around the process unit. 
- diagnosis, a backward chaining inference procedure, which would 
be triggered by a possibly-significant-event or by operator 
request. 
Diagnosis uses the focus mechanism. An explanation 
i s then given of the diagnostic conclusion. 
Summary and Future Extensions 
V i r t u a l l y a l l tasks which require the routine application of human 
expertise, i n an organized way, are candidates for expert systems. 
The computer implementation of expertise has such advantages as 
speed, around-the-clock 
a v a i l a b i l i t y , and ease of expansion of the 
knowledge base. As such, expert systems represent the next 
generation of higher level software, performing tasks presently 
done by human operators. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch005
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

74 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Expert systems have been investigated for 20 years. The 
implementation of expert systems i s now being undertaken on a 
widespread basis, due to the a v a i l a b i l i t y of hardware and software 
tools which a l l e v i a t e the "knowledge-engineer bottleneck", allow-
ing cost effective implementation. In a similar way, real-time 
applications of expert systems require tools to allow straight-
forward implementation. We have presented a software/hardware 
structure which supports knowledge-base capture and real-time 
inference for process applications. 
In general, the LMI package (Figure 2) provides a 
knowledge-base structure, f a c i l i t i e s for acquiring the knowledge 
base i n an organized manner, and real-time c o l l e c t i o n of data with 
some p a r a l l e l processing of inference, and higher-level inference 
tools. The individual applications require specific knowledge 
engineering, which i s f a c i l i t a t e d using the tools we have 
described. The system i s currently installed at Texaco and Exxon 
f a c i l i t i e s and i s i n p i l o t plant or laboratory testing at seven 
additional s i t e s . 
CAPTURE 
y 
y 
RULES 
/ 
DIAGRAM 
I/O 
/ / 
RTIME 
MEMORY 
RTIME / 
MEMORY 
Figure 2. 
General s t r u c t u r e of the LMI package. 
RECEIVED December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch005
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

6 
Interpretation and Design 
of Chemically Based Experiments 
with Expert Systems 
David Garfinkel
1, Lillian Garfinkel
1, Von-Wun Soo
2, and Casimir A. Kulikowski
2 
1University of Pennsylvania, Philadelphia, PA 19104 
2Rutgers University, New Brunswick, NJ 08903 
Expert system building programs, e.g., EXPERT, can 
now supervise numerical calculations in addition to 
performing qualitative reasoning and choosing among 
possible alternatives. This capability can be used 
to interpret experiments, calculate optimal designs 
for them, and automate model construction and mani­
pulation, as well as to resolve associated problems 
due to differing conceptual frameworks and defini­
tions. Three hierarchically arranged applications 
are suggested to (a) determine and manage free Mg
2+ 
levels; (b) construct an expert system to derive 
enzyme kinetic models (including Mg
2+) and f i t them 
to data; (c) design experiments (including enzyme 
kinetics) using minimal numbers of animals to prove 
drugs safe and effective. 
Expert systems, and a r t i f i c i a l i n t e l l i g e n c e i n g e n e r a l , are new 
f i e l d s whose breadth of a p p l i c a t i o n , and indeed, whose exact d e f i n i ­
t i o n s , are not yet completely s e t t l e d . 
I t i s sometimes claimed that 
no two experts on a r t i f i c i a l i n t e l l i g e n c e agree e x a c t l y on what i t s 
d e f i n i t i o n i s . D e f i n i t i o n s of expert systems at l e a s t agree on the 
n e c e s s i t y f o r e x p e r t i s e , but even here there are d i f f e r e n c e s i n 
emphasis and i n p r i o r i t y . 
Expert systems, which evolved from many sources, were recognized 
as a d i s t i n c t system type because of a l a r g e body of work on medical 
c o n s u l t a t i o n problems. 
The r e s u l t i n g systems, such as MYCIN, CASNET, 
and INTERNIST/CADUCEUS, e s s e n t i a l l y solved what are considered 
c l a s s i f i c a t i o n problems, by choosing among a set of p o s s i b l e d i a g ­
n o s t i c or treatment a l t e r n a t i v e s . 
Such systems have u s u a l l y 
obtained information by asking the user questions. 
They have u s u a l l y 
performed 
q u a l i t a t i v e reasoning with "knowledge" r u l e s of the type: 
i f c o n d i t i o n s A are t r u e then conclude hypothesis Β with p r o b a b i l i t y 
X. 
There e x i s t other types of expert systems, such as DENDRAL, which 
produces i n t e r p r e t a t i o n s of q u a n t i t a t i v e experimental evidence, and 
MOLGEN, which formulates plans f o r the design of experiments. 
Most 
expert systems have been w r i t t e n i n some v a r i a n t of LISP or a r e -
0097-6156/86/0306-0075$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch006
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

76 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
l a t e d language, which were o r i g i n a l l y not as w e l l s u i t e d f o r c a l c u l a -
t i o n as f o r l o g i c a l manipulation. 
More r e c e n t l y i t has been 
p o s s i b l e to get an expert system to supervise c a l c u l a t i o n s , d i g e s t 
c o n s i d e r a b l e masses of o b s e r v a t i o n a l data, and draw c o n c l u s i o n s which 
are not 
s t r i c t l y computational, as i n the case of ELAS and the o i l -
w e l l d r i l l i n g programs. 
These i n v o l v e the EXPERT system b u i l d e r 
(1), which has the f o l l o w i n g advantages: 
i t i s w r i t t e n i n FORTRAN 
and can t h e r e f o r e e a s i l y communicate with FORTRAN programs; a PROLOG 
v e r s i o n has a l s o r e c e n t l y been prepared; i t has data base c a p a b i l i -
t i e s ; and i t i s good at e x p l a i n i n g what i t i s doing and why. 
I n t e r -
a c t i o n between a r t i f i c i a l i n t e l l i g e n c e and modeling has evolved to 
where modeling s o c i e t i e s r o u t i n e l y program a r t i f i c i a l i n t e l l i g e n c e 
sessions at meetings, and are forming t e c h n i c a l committees on t h i s 
subj e c t . 
T h i s paper r e f l e c t s the past a c t i v i t i e s of some of i t s authors 
i n computer modeling of the chemical aspects of b i o l o g i c a l systems. 
This a c t i v i t y r e q u i r e s e x p e r t i s e i n both model-building and i n the 
r e l e v a n t b i o l o g y . 
I t a l s o i n v o l v e s examination of the a c t i o n s of 
and 
r e s u l t s obtained by experts, 
l i k e that r o u t i n e l y done i n b u i l d i n g 
ex-
pert systems. 
I t a l s o i n v o l v e s keeping t r a c k of and 
c o h e r e n t l y 
e x p l a i n i n g sequences of d e c i s i o n s , which expert systems are equipped 
to 
do. 
In t h i s paper we are concerned w i t h a set of r e l a t i v e l y s i m i l a r 
p o s s i b l e a p p l i c a t i o n s i n v o l v i n g management of c a l c u l a t i o n s and 
of 
modeling. 
These i n v o l v e a c t i o n s ( c a l c u l a t i o n , information 
r e t r i e v a l , 
and 
" i n t e l l i g e n t " reasoning) at more than one h i e r a r c h i c a l l e v e l . 
P a r t i c u l a r a t t e n t i o n w i l l be given to the design and 
i n t e r p r e t a t i o n 
of experiments i n enzyme k i n e t i c s . 
Designing an experiment may 
i n -
v o l v e computation of optimal c o n d i t i o n s , and i t s i n t e r p r e t a t i o n 
may 
i n v o l v e f i t t i n g of optimal parameters of a model, but non-numerical 
reasoning procedures are a l s o i n v o l v e d . 
A t t e n t i o n i s t h e r e f o r e 
r e -
quired to the kinds of reasoning employed i n designing 
experiments 
and to the c r i t i q u i n g of the reasoning and techniques i n v o l v e d i n 
such experiments. 
A h i g h - l e v e l d e s c r i p t i o n of an experimental design 
c y c l e can be given i n such steps as: 
d e f i n i t i o n of the problem (what 
questions are to be addressed? 
what hypotheses are to be 
t e s t e d ? ) ; 
q u a n t i t a t i v e modeling; design and then performance of the necessary 
experiments; a n a l y s i s of the r e s u l t s ; and then model r e i n t e r p r e t a t i o n 
and p o s s i b l e problem r e d e f i n i t i o n 
(2). 
A Problem of D e f i n i t i o n 
The process of b u i l d i n g expert systems u s u a l l y i n v o l v e s determining 
the conceptual framework and p a t t e r n of d e c i s i o n making of experts 
( o f t e n one outstanding e x p e r t ) . 
These are o f t e n not w r i t t e n down 
and may 
not be c l e a r l y e x p l a i n a b l e because there i s heavy r e l i a n c e on 
h e u r i s t i c s and even hunches. 
However, we would l i k e to suggest that 
t h i s may 
not be the only way 
to apply e x p e r t i s e . 
We have encountered 
workers i n d i f f e r e n t f i e l d s handling the same subject matter d i f f e r -
e n t l y because they have d i f f e r e n t conceptual frameworks and d i f f e r e n t 
jargon as w e l l as d i f f e r e n t h e u r i s t i c s and 
p r i o r i t i e s . 
We o f f e r the 
f o l l o w i n g example i n v o l v i n g a r e l a t i v e l y simple m u l t i p l e 
e q u i l i b r i u m 
c a l c u l a t i o n . 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch006
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

6. 
GARFINKEL ET AL. 
Chemically Based Experiments with Expert Systems 77 
Although there i s no controversy about the b a s i c d e f i n i t i o n of 
s t a b i l i t y constants, p h y s i c a l chemists and biochemists handle the 
concepts i n v o l v e d and the r e s u l t i n g c a l c u l a t i o n s d i f f e r e n t l y . 
P h y s i ­
c a l chemists t h i n k i n terms of r e a c t i v e s p e c i e s and biochemists i n 
terms of t o t a l c o n c e n t r a t i o n s of components. A f u r t h e r source of 
confusion i s the d i f f e r i n g d e f i n i t i o n s of "apparent constant
1 1. 
To a 
p h y s i c a l chemist the s t a b i l i t y constant f o r MgATP 
formation 
2+ 
4- 
2-
Mg 
+ ATP 
= MgATP 
i s d e f i n e d as 
CMgATP
2"*] 
^
 
= 
C M g 2 + ] [ A T P 4 - ] 
For 
a given temperature the standard s t a t e i s a t zero i o n i c strength. 
The constant observed experimentally a t f i n i t e i o n i c strengths would 
be considered "apparent". A biochemist would c a l l + s u c h a + c o n s t a n t 
" i n t r i n s i c " . 
The presence of i n t e r f e r i n g ions^(H 
and Κ ) which 
form Η and Κ c h e l a t e s of ATP by b i n d i n g to ATP " would be handled by 
c a l c u l a t i o n s i n v o l v i n g the corresponding 
e q u i l i b r i a . 
Biochemists handle these c a l c u l a t i o n s d i f f e r e n t l y , and d e f i n e 
apparent constantS2in terms of t o t a l components. 
Tljius an apparent 
constant f o r MgATP 
at low pH i n the presence of Κ would be d e f i n e d 
as 
*SlgATP 
Κ = * 
< 1 
+ 
C
H
+
3
K H A T P 
+
C
k
+
3 W 
While i t i s r e l a t i v e l y easy to show that the two c a l c u l a t i o n s 
are e q u i v a l e n t i n simple systems, i t i s not so easy w i t h more comj^ 
plex i n v i v o systems, as when these e q u i l i b r i a are s t u d i e d w i t h 
? 
NMR s p e c t r a from perfused or i n t a c t organs. 
We r e c e n t l y (3) became 
i n v o l v e d i n a controversy where a 4 - f o l d d i f f e r e n c e i n magnesium i o n 
l e v e l was c a l c u l a t e d from s u b s t a n t i a l l y i d e n t i c a l NMR s p e c t r a as a 
r e s u l t of such d i f f e r e n c e s i n d e f i n i t i o n . 
Our experience 
i n d i c a t e s 
that an i n t e l l i g e n t program to s u p e r v i s e such c a l c u l a t i o n s would be 
q u i t e u s e f u l . 
In such a s i t u a t i o n an i n t e l l i g e n t program may f u n c t i o n as an 
" i n t e l l i g e n t i n t e r f a c e " , a program which can t r a n s l a t e i n f o r m a t i o n 
from one conceptual framework to another. 
Even though there a r e many 
experts i n the subject matter i n v o l v e d , programs of t h i s type would 
be u s e f u l f o r the many others who are not expert i n the subject 
matter or the c a l c u l a t i o n s i n v o l v e d or who have d i f f i c u l t i e s i n com­
munication. 
The advent of software f o r small expert systems on 
microcomputers would add the advantage of convenience as w e l l . 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch006
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

78 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
A p p l i c a t i o n s 
We d e s c r i b e here three p o s s i b l e a p p l i c a t i o n s of expert systems to 
supervise c a l c u l a t i o n s and design experiments which are l a r g e l y chem-
i c a l l y based, although they have b i o l o g i c a l content as w e l l . 
These 
are arranged i n a h i e r a r c h i c a l l y i n c r e a s i n g order of complexity 
( i . e . , each l e v e l needs the c a p a b i l i t i e s of the preceding one). 
The 
simplest of these a p p l i c a t i o n s i s to s u p e r v i s e complex e q u i l i b r i u m 
c a l c u l a t i o n s . 
The example d e s c r i b e d i s of a type which o f t e n occur 
i n studying b i o l o g i c a l systems where i t i s necessary to c o n t r o l con-
c e n t r a t i o n s of r e a c t i v e s p e c i e s . 
Such c a l c u l a t i o n s are o f t e n not 
p r o p e r l y handled. 
C a l c u l a t i o n s I n v o l v i n g Magnesium Ions 
Enough examples of p o o r l y designed experiments and poor c a l c u l a t i o n s 
i n v o l v i n g magnesium ions e x i s t i n the biochemical l i t e r a t u r e to i n -
d i c a t e a need f o r a b e t t e r method. 
T h i s a l s o a p p l i e s to other 
e q u i l i b r i a of comparable complexity, as w i t h other metal i o n s . 
Ex-
periments i n v o l v i n g enzyme k i n e t i c s are p a r t i c u l a r l y a f f e c t e d . 
Magnesium ions a f f e c t many enzymes by b i n d i n g s t r o n g l y both to the 
enzymes and to important r e a c t a n t s such as ATP. 
In a review on the 
k i n e t i c s of magnesium-dependent enzymes, Morrison 
(4^) 
s t a t e d
 1 1 i t i s 
unfortunate that s t u d i e s on many m e t a l - a c t i v a t e d enzymes . . . have 
been undertaken u s i n g c o n d i t i o n s that preclude i n t e r p r e t a t i o n of the 
data." 
The r e l e v a n t c a l c u l a t i o n s are commonly handled p o o r l y , because 
the e q u i l i b r i u m equations i n v o l v e d are d i f f i c u l t to s o l v e manually 
(but not w i t h computers). 
The few c a l c u l a t i o n s that are a c t u a l l y 
reported i n the biochemical l i t e r a t u r e use s i m p l i f i e d methods of 
l i m i t e d and f r e q u e n t l y unknown v a l i d i t y . 
Large excesses of magnesium 
ion are f r e q u e n t l y used i n experiments, perhaps i n an attempt to 
avoid such c a l c u l a t i o n s . 
The r e l e v a n t theory i s w e l l worked out and 
there are e x c e l l e n t reviews. 
The l i m i t a t i o n appears to i n v o l v e d i f -
f u s i o n to the (mathematically) inexpert user, which i s one of the 
m o t i v a t i o n s of b u i l d i n g expert systems. 
The computational and other (e.g., data base and design) capa-
b i l i t i e s to meet these needs can be s p e c i f i e d . 
We may need to d e t e r -
mine how much magnesium i o n (or other substance of i n t e r e s t i n an 
e q u i l i b r i u m system) i s present i n a c e l l i n t e r i o r or a s o l u t i o n emu-
l a t i n g the c e l l i n t e r i o r . 
Here a complex s e r i e s of e q u i l i b r i a 
may 
be a f f e c t e d by c o n d i t i o n s such as temperature or i o n i c s t r e n g t h . 
Or 
i t may be necessary to work through a p a t t e r n of c o n c e n t r a t i o n s of 
some p a r t i c u l a r molecular or i o n i c s p e c i e s to determine an u l t i m a t e 
e f f e c t , or to keep p a r t i c u l a r s p e c i e s or p a r t i c u l a r s i d e e f f e c t s 
w i t h i n c e r t a i n l i m i t s w h i l e changing o t h e r s . 
Computations may have 
to s t a r t from any of the p a r t i c i p a t i n g substances which are e i t h e r to 
be c o n t r o l l e d or are observable. 
Computation of amounts of s p e c i e s present i n s t r a i g h t f o r w a r d 
e q u i l i b r i a can u s u a l l y be done without much d i f f i c u l t y , e.g., (J5) . 
Some of the other requirements mentioned above are demanding enough 
to d e f i n e a minimal i n t e r e s t i n g problem i n a r t i f i c i a l 
i n t e l l i g e n c e 
("toy problem"). 
Included are conversions among s e t s of c o n d i t i o n s 
( i . e . , d i f f e r e n t temperature or i o n i c s t r e n g t h ) , which have caused 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch006
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

6. 
GARFINKEL ET AL. 
Chemically Based Experiments with Expert Systems 79 
c o n s i d e r a b l e d i f f i c u l t y , and which could be handled by p r o v i d i n g an 
expert system w i t h the necessary conversion algorithms and data. 
Such a system would i n c l u d e a program s i m i l a r to t h a t of S t o r e r and 
Cornish-Bowden to do e q u i l i b r i u m c a l c u l a t i o n s . 
A communication-
c o n t r o l subprogram would be l i i k e d to an expert model by u s i n g the 
EXPERT knowledge-base s h a l l (or system-builder) which i s advantageous 
here because i t can i n t e r a c t with procedures such as those w r i t t e n i n 
FORTRAN f o r numerical computation. 
A d d i t i o n a l programs and a small 
data base, which EXPERT can handle, would keep t r a c k of which chemi-
c a l was what a r r a y element, and other requirements mentioned above. 
The system could be used to answer questions such as: 
How could I add to a s o l u t i o n combinations of ATP and magnesium 
ion so t h e i r c h e l a t e i s constant and f r e e ATP 
v a r i e s s y s t e m a t i c a l l y 
so as to d e f i n e families of curves w i t h ( d i f f e r e n t ) constant magnesium 
ion? 
T h i s type of c a p a b i l i t y could be extended to magnesium-control-
l e d enzymes without s u b s t a n t i a l e x p e r t i s e regarding t h e i r k i n e t i c s 
by adding another l i m i t e d expert system to manage simple c a l c u l a t i o n s 
i n v o l v i n g m o d i f i c a t i o n s to t h e i r k i n e t i c s . 
T h i s would r e q u i r e adding 
a small data base of the b i n d i n g and i n h i b i t i o n constants of magne-
sium ion with important enzymes. 
We have assembled t h i s i n f o r m a t i o n 
f o r some of the enzymes we have worked w i t h 
(6) . T h i s would permit 
answering questions l i k e : 
How much magnesium i o n can I add to s o l u t i o n X without 
i n h i b i t -
ing enzyme Y by more than 10%? 
C a l c u l a t i o n s I n v o l v i n g Enzyme K i n e t i c s 
At the next h i e r a r c h i c a l step would be an expert system f o r the de-
s i g n of experiments i n enzyme k i n e t i c s (and mathematically 
s i m i l a r 
systems l i k e t r a n s p o r t k i n e t i c s ) . 
Such a system would l a r g e l y a r i s e 
from our experience i n modeling enzyme k i n e t i c s . 
I t could systema-
t i c a l l y perform, c o r r e c t l y , r o u t i n e operations that are e i t h e r not 
done or done i n c o r r e c t l y , because they are too tedious or r e q u i r e 
p a r t i c u l a r e x p e r t i s e . 
(For t h i s subject there e x i s t s a s i z e a b l e body 
of well-worked out theory, and yet c o n s i d e r a b l e work i s done as i f 
t h i s theory d i d not e x i s t ) . 
Such an expert system could o f f e r the 
expert user b e t t e r modeling s t r a t e g y and completeness and the inex-
perienced user the advantage of " f r i e n d l i n e s s
1 ' . 
As an extreme 
example, we modeled 
(2) 
what i s probably the best data set i n the 
phosphofructokinase l i t e r a t u r e , and improved on i t s i n t e r p r e t a t i o n 
(which i n c l u d e d modeling) by the o r i g i n a l experimenters, who 
are 
h i g h l y expert i n t h i s s u b j e c t . 
I t was found that one 
important 
e f f e c t was not determined by t h e i r data, but could have been with a 
few a d d i t i o n a l measurements. 
I f an expert system such as that 
d e s c r i b e d below were a v a i l a b l e , t h i s could have been done before 
t h e i r experiments were concluded—and 
l e f t permanently incomplete. 
A l s o , the e n t i r e i n t e r p r e t a t i o n task would have r e q u i r e d c o n s i d e r -
a b l y l e s s time and 
e f f o r t . 
In working w i t h enzyme and t r a n s p o r t k i n e t i c s we a l r e a d y have a 
program of c o n s i d e r a b l e s o p h i s t i c a t i o n , PENNZYME (8.) 
to f i t e x p e r i -
mental data to r a t e laws by o p t i m i z a t i o n methods and to d i s p l a y the 
r e s u l t s of the f i t t i n g process. 
T h i s program would r e q u i r e extension 
to perform experimental design f u n c t i o n s (such as c a l c u l a t i n g design 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch006
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

80 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
and i n f o r m a t i o n m a t r i c e s ) . 
For most a p p l i c a t i o n s i t would be best 
f o r the s c i e n t i s t to remain i n the loop. 
An i n t e r f a c e between 
PENNZYME and EXPERT such that EXPERT could d i r e c t PENNZYME
1S c a l c u -
l a t i o n f u n c t i o n s would be v e r y s i m i l a r to the i n t e r f a c e between 
EXPERT and s e v e r a l o i l - w e l l l o g g i n g programs (9-10). 
To help i n 
a s s e s s i n g and documenting modeling a p p l i c a t i o n s i t would be d e s i r a b l e 
to have EXPERT produce a r e c o r d of i t s a c t i o n s , d e c i s i o n s , and 
reasoning, i n a d d i t i o n to the chemical or b i o l o g i c a l output. 
T h i s 
would r e q u i r e o n l y a s t r a i g h t f o r w a r d extension of EXPERT'S v e r y good 
e x i s t i n g c a p a b i l i t i e s f o r e x p l a i n i n g i t s a c t i o n s to a user o n - l i n e . 
The major o p e r a t i o n s t h a t would have to be performed by such an 
expert system are: 
S e l e c t i o n of a conceptual model. As the f i r s t step i n modeling, i t i s 
necessary to decide what k i n d of a conceptual model to t r y . For an 
enzyme t h i s i n c l u d e s a c h o i c e of mechanism and an i n d i c a t i o n of the 
numerical v a l u e s that go w i t h i t (determination of the best v a l u e s 
comes l a t e r ) . 
Probably t h i s w i l l be b e t t e r done by an expert human 
than by a program f o r some time. 
Examples of r u l e s (domain knowledge) 
f o r enzyme k i n e t i c s which are a p p l i c a b l e ( r e g a r d l e s s of the methods 
of c a l c u l a t i o n used) are: 
1. Kinases u s u a l l y have Km*s f o r ATP c o n s i d e r a b l y lower than 
t i s s u e l e v e l s of ATP. 
2. Most other Km
1s 
approximate the u s u a l t i s s u e l e v e l of the 
s u b s t r a t e i n v o l v e d . 
3. C e r t a i n c l a s s e s of enzymes tend to have c h a r a c t e r i s t i c 
mechanisms. 
(Examples: 
transaminases o f t e n have ping-pong mechan-
isms, kinases u s u a l l y do n o t ) . 
4. The commonly used l i n e a r i z e d p l o t s of k i n e t i c data are a 
usable i n i t i a l guide to determining the mechanism. 
S e l e c t i o n of a computational model. 
Once a conceptual model has been 
s e l e c t e d , i t i s necessary to encode i t i n a form usable f o r c a l c u l a -
t i o n , i . e . , a r a t e law g i v i n g the v e l o c i t y of the enzyme as a func-
t i o n of the r e l e v a n t chemical c o n c e n t r a t i o n s . 
An expert model would 
i n c l u d e determination of the s i t u a t i o n s where a given r a t e law should 
be t r i e d together w i t h c o n t r o l i n f o r m a t i o n that determines how 
t h i s 
i s to be done. 
The expert model obtains such i n f o r m a t i o n by query-
ing 
the user or by deduction from i t s knowledge r u l e s u s i n g r e s u l t s 
from past c a l c u l a t i o n s . 
Means f o r d e r i v i n g such r a t e laws e x i s t , 
e.g., the KINAL program of Cornish-Bowden (11), which we have modi-
f i e d (PROKINAL) to f a c i l i t a t e i n t e r f a c i n g w i t h EXPERT to d e r i v e r a t e 
laws a u t o m a t i c a l l y . 
The o p e r a t i o n s i n v o l v e d i n c l u d e d : 
1. Obtaining the proper r a t e law from an e x i s t i n g l i b r a r y or 
generating a new one, as w i t h KINAL; 
2. Matching the g e n e r a l i z e d d e s i g n a t i o n s f o r r e a c t a n t s i n the 
r a t e law (reactant A, r e a c t a n t B, . . .) w i t h the r e a l ones i n the 
system being s t u d i e d ; 
3. Asking the user f o r c o r r e c t i o n s i f there i s a problem; 
4. Obtaining s t a r t i n g v a l u e s of parameters, as from i n f o r m a t i o n 
on analogous enzymes; 
5. F i t t i n g the r a t e law to the data and o b t a i n i n g the optimal 
parameters; 
6. Making a p p r o p r i a t e m o d i f i c a t i o n s to the r a t e law. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch006
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

6. 
GARFINKEL ET AL. 
Chemically Based Experiments with Expert Systems 81 
F i t t i n g of models to data. 
F i t t i n g r a t e laws r e p r e s e n t i n g models to 
the experimental data i s the l o w e s t - l e v e l and most frequent o p e r a t i o n 
t h i s expert system would do. PENNZYME does a two-step o p t i m i z a t i o n , 
f i r s t u s i n g t h i s simplex method which i s robust and independent of 
s t a r t i n g guesses, and then the more accurate F l e t c h e r - P o w e l l method, 
which r e q u i r e s b e t t e r s t a r t i n g estimates. 
Examples of h e u r i s t i c 
r u l e s on how to operate PENNZYME (problem-solving knowledge) a r e : 
1. Do a t l e a s t one simplex o p t i m i z a t i o n before doing a F l e t c h e r -
Powell o p t i m i z a t i o n . 
2. Always get an o p t i m i z a t i o n r e p o r t . I f the percentage reduc-
t i o n of the l e a s t - s q u a r e s e r r o r i s 0.00%, do not repeat the l a s t 
type of o p t i m i z a t i o n performed. 
3. I f a simplex o p t i m i z a t i o n has not converged f o r a model w i t h 
at 
l e a s t two parameters a f t e r many i n t e r a c t i o n s , and the l e a s t -
squares e r r o r r e d u c t i o n i s 0.00%, then something i s wrong with the 
r a t e law equation or the r a t e law f i l e . 
Having EXPERT operate PENNZYME under p a r t i c u l a r l y f a v o r a b l e 
c o n d i t i o n s i s expected to be s t r a i g h t f o r w a r d to the p o i n t of being 
u n i n t e r e s t i n g . 
Obtaining the percentage r e d u c t i o n r e s u l t i n g from a 
given o p t i m i z a t i o n and d e c i d i n g from i t s v a l u e and p l a c e i n p a t t e r n 
of o p e r a t i o n s and r e s u l t i n g v a l u e s what o p e r a t i o n to ask f o r next 
would be c o n c e p t u a l l y s i m i l a r to the u s u a l 
one-query-at-a-time 
d i r e c t e d to a human user of the u s u a l expert system. 
Determining 
what i s wrong w i t h a r a t e law f i l e (which i s not a common problem) 
would normally r e q u i r e user i n t e r v e n t i o n . 
At the other extreme, t h i s 
program combination w i l l not be a b l e t o e x t r a c t from a poor data set 
i n f o r m a t i o n t h a t i s not there to begin with. 
The most u s e f u l a p p l i -
c a t i o n i s to the intermediate s i t u a t i o n , where there i s u s e f u l but 
l i m i t e d or n o i s y data, or where the experimental design i s not o p t i -
mal. 
Experimental Design. 
I t i s now p o s s i b l e , but inconvenient, to use 
PENNZYME i n an i n v e r s e mode, by determining the parameters i n a r a t e 
law and then manipulating the chemical c o n c e n t r a t i o n s so as to f i n d 
the p o i n t i n c o n c e n t r a t i o n space that maximizes a given e f f e c t . An 
immediate a p p l i c a t i o n i s to maximize the d i f f e r e n c e between two r a t e 
laws by means of a d i s c r i m i n a t i o n f u n c t i o n (2). 
T h i s amounts to de-
s i g n i n g a c r i t i c a l experiment to d i s t i n g u i s h between them. The user 
who has as an a p p r o p r i a t e set of experimental data of s u f f i c i e n t l y 
good q u a l i t y and two a l t e r n a t i v e r a t e laws that might f i t i t could 
have the EXPERT-PENNZYME combination: 
(a) F i n d the optimal parameters f o r these r a t e laws; 
(b) Determine the p o i n t ( s ) or r e g i o n ( s ) i n c o n c e n t r a t i o n space 
where they d i f f e r most ( f o l l o w i n g 
(2)); 
(c) Recommend one or more experimental measurements at those 
p o i n t s . 
In designing s e q u e n t i a l experimental measurements o r groups of 
them, other f u n c t i o n s that might be performed w i t h a p p r o p r i a t e 
c a l c u l a t i o n s a r e : 
(1) Minimize the confidence l i m i t or v a r i a n c e of a given para-
meter, such as a M i c h a e l i s constant. 
T h i s r e q u i r e s p i c k i n g a p o i n t 
or p o i n t s i n c o n c e n t r a t i o n space where the v a l u e of the parameter i s 
maximally s e n s i t i v e to the experimental r e s u l t obtained, i . e . , a 
k i n e t i c constant b a s i c a l l y r e p r e s e n t i n g the b i n d i n g of a small 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch006
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

82 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
molecule i s insensitive to measurements where i t s binding i s very 
small or very large, and more sensitive to measurements where i t s 
binding i s near half maximal. 
(2) Maximize or minimize information or design matrices. 
While performing the Fletcher-Powell optimization, PENNZYME 
calculates the variance-covariance matrix of the parameters. 
This 
can be used to test model acceptability: 
the parameters of a good 
model should be r e l a t i v e l y (although never completely) independent 
of each other; i f they are not, there i s something questionable 
about i t . More important, this matrix i s also usable for design 
calculations. 
Endrenyi (12) points out "optimal designs aim at 
minimizing the volume of the j o i n t confidence region of the para-
meters. In the linear least-square approximation, this i s propor-
t i o n a l to the determinant of the parameter variance-covariance 
matrix V . . ." The important D-optimality c r i t e r i o n maximizes the 
determinant of the information matrix which i s proportional to i t s 
inverse. 
(Other optimality c r i t e r i a may be more robust or better i n 
special situations.) The necessary matrix manipulations can be co-
ordinated with the PENNZYME program using existing matrix manipula-
tion software packages. Appropriate expert rules to use such 
computations to design experiments would then have to be derived. 
These would have to consider the probable accuracy or d i f f i c u l t y of 
a given measurement. A small net signal above a large background 
noise w i l l probably be inaccurate. An experimenter might prefer two 
measurements under convenient conditions to one measurement under 
inconvenient (or scarce-material consuming) ones. Considerations of 
minimizing experimenter's e f f o r t , number of animals used, etc. can 
either be included i n a body of rules, or by adding some kind of 
penalty function to the calculations. 
Special consideration of metal ions. The effects of metal ions such 
as magnesium ion could be calculated by effectively incorporating 
into this system the software described 
previously. Qualitative 
considerations could then be included by assembling a set of know-
ledge rules applicable to magnesium ion behavior with regard to 
enzymes, e.g. 
Magnesium ion i s usually involved (for "charge neutralization") 
where "high-energy phosphate" i s moved from one molecule to another 
by an enzyme, i . e . , the metabolically active form of ATP i s usually 
the magnesium chelate. 
The ensemble of EXPERT plus data knowledge bases and calculation 
routines would then be used to solve problems such as determining a 
change i n enzyme a c t i v i t y on changing metal ion l e v e l — o r determining 
whether there i s an effective change i n mechanism as well. 
Pharmacokinetics and Drug Dosage Regimen Design—A Possible Applica-
tion Requiring Construction and Manipulation of a Complex Model and 
Data Base with an Expert System 
A major part of the slow and expensive drug development process con-
s i s t s of testing to determine that a given potential drug i s both 
safe and effective. 
The number of drug (or cosmetic) t o x i c i t y tests 
performed annually i n the United States i s very large, involving 
perhaps 15 m i l l i o n animals and considerably more dollars. 
The 
expense of testing and q u a l i f i c a t i o n may be prohibitive for use i n 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch006
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

6. 
GARFINKEL ET AL. 
Chemically Based Experiments with Expert Systems 83 
animals: i t may cost more to prove a drug safe and effective i n a 
given species than could ever be earned by sales for use i n that 
species. The techniques used, especially to test t o x i c i t y , are now 
being strongly c r i t i c i z e d , especially because of the large number of 
animal-based experiments. Computer-based methods of predicting 
t o x i c i t y from the chemical structure are being developed i n response 
to this problem. 
An suitable expert system which can manage pharmacokinetic simu-
l a t i o n could substantially improve the speed and efficiency of this 
process. Such a system would contain information about drugs, drug 
metabolism, excretion, etc. and the relevant physiological para-
meters. I t would supervise construction of models from quantitative 
measurements of the behavior of the drug under test i n animals. The 
expert system would be needed because large-scale biological modeling 
has thus far been slow. Also, pharmacokinetic modeling has empha-
sized simple systems and given l i t t l e attention to qualitative data 
or to extrapolation from one species to another. 
Modeling Considerations. Drugs for internal use must enter the body 
in some way, reach the blood stream, be transported to the relevant 
organs and active s i t e s , exert their action, perhaps be metabolized 
or modified, with subsequent departure from the body. These pro-
cesses involve the action of enzymes and of k i n e t i c a l l y similar 
transport mechanisms, so the techniques and software described above 
(an expert system involving EXPERT and PENNZYME) are applicable here. 
The major variable which this type of analysis would t r y to predict 
and manage i s the (free) plasma level of a drug. This level i s 
l i k e l y to be identical to the drug l e v e l at the s i t e of action. I t 
has been shown to be d i r e c t l y related to therapeutic effect for many 
drugs—but less closely related to the dose administered. Important 
theoretically predictable perturbing factors here include disease 
conditions such as renal f a i l u r e , old age, and physiological factors; 
an important but unpredictable one i s f a i l u r e to take a drug as d i -
rected. The effects of such factors on the behavior and apparent 
t o x i c i t y of a given drug would require systematic exploration with 
appropriate models, which i s best supervised by an expert system 
because i t would otherwise take too long. 
Compartments between which drugs do not mix, or mix only slowly, 
commonly exist i n the body. Metabolism within them i s carried out 
and controlled by enzymes i n the usual way. 
These compartments can 
be detected by time-curve analysis of the blood levels of drugs. 
Compartments determined i n this way have the limitations that: 
1. They are d i f f i c u l t to predict a p r i o r i ; 
2. Their structure may depend on particular numerical values 
associated with a system under study as well as i t s structure or 
organization; 
3. Sometimes different competent workers disagree as to the 
compartmental structure of the same system. 
An important methodology of extrapolating pharmacokinetic or 
drug properties from one species to another which i s r e l a t i v e l y i n -
dependent of such compartmental modeling has been developed by 
Bischoff and collaborators (13). I t i s instead based on known ana-
tomical and physiological functions, such as blood flow to organs 
which either metabolize drugs or are affected by them, the size and 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch006
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

84 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
metabolic r a t e of the animal, e t c . 
To some extent t h i s approach 
( " p h y s i o l o g i c a l pharmacokinetics") i s a chemical engineer's formula-
t i o n of pharmacokinetic problem. 
The r a t e at which a given drug i s 
d e l i v e r e d to a m e t a b o l i z i n g or t a r g e t organ by the plasma (with i t s 
l e v e l of drug) i s c a l c u l a t e d along w i t h the r a t e s of metabolism or 
d e t o x i f i c a t i o n by such organs, as w e l l as the r a t e of removal of the 
drug (or i t s m e t a b o l i t e s ) from the body. 
From t h i s i n f o r m a t i o n the 
t o t a l and f r e e ( a f t e r b i n d i n g to p r o t e i n s , etc.) organ content of the 
drug and the l e v e l at the a c t i v e s i t e i s c a l c u l a t e d . 
T h i s method i s 
based on the o r d e r l y change of many anatomical and p h y s i o l o g i c a l 
p r o p e r t i e s w i t h body weight. 
Anatomical dimensions i n c r e a s e n e a r l y 
l i n e a r l y with weight, w h i l e p h y s i o l o g i c a l r a t e s v a r y as the .7 to .8 
power (14). 
P h y s i o l o g i c a l processes are t h e r e f o r e slower i n l a r g e r 
animals; the c a r d i a c output of a mouse per body weight i s about an 
order of magnitude higher than that of a man. 
T h i s trend i s coherent: 
the d i s p o s i t i o n h a l f - l i f e of h e x o b a r b i t a l approximates 1,680 
gut-
beats i n a wide v a r i e t y of mammals (14). 
Dedrick (15) has d e s c r i b e d 
a formalism f o r animal scale-up. 
General a p p l i c a t i o n of t h i s method 
would r e q u i r e assembly at a data base w i t h s i z e s of and blood flows 
to the most important organs, e x c r e t o r y c a p a c i t y and r e n a l f u n c t i o n s , 
e t c . , and even p r e d i c t i o n of p o t e n t i a l compartmental s i z e s where 
p o s s i b l e . 
The comparative behavior of a few drugs has been thoroughly 
s t u d i e d by these workers, w i t h the l a r g e s t e f f o r t d i r e c t e d to metho-
t r e x a t e (16). 
T h i s drug c o n s t i t u t e s a good t e s t case because i t s 
mechanism of a c t i o n i s well-known and simple, the amount of informa-
t i o n about i t i s v e r y l a r g e , and i t now appears a p p l i c a b l e to two 
u n r e l a t e d t h e r a p e u t i c s i t u a t i o n s r e q u i r i n g d i f f e r e n t dosage l e v e l s . 
B i s c h o f f et a l were a b l e to f i t s u b s t a n t i a l l y the same model to data 
f o r mouse, r a t , dog ( i n c l u d i n g dogs of d i f f e r e n t s i z e s ) , monkey, and 
man. 
They were then a b l e to s u c c e s s f u l l y e x t r a p o l a t e from these 
mammalian s t u d i e s a l l the way to the s t i n g ray, which i s z o o l o g i c a l l y 
a v a r i e t y of shark (17). 
A second l e v e l of s o p h i s t i c a t i o n i s p o s s i b l e here. 
To quote 
from B i s c h o f f (18), "Williams notes that f o r e i g n o r g a n i c compounds 
tend to be metabolized i n two phases. 
Phase one r e a c t i o n s l e a d to 
o x i d a t i o n - r e d u c t i o n and h y d r o l y s i s products. 
Phase two r e a c t i o n s 
lead to s y n t h e t i c or conjugation products that are r e l a t i v e l y p o l a r 
and are thus more e a s i l y excreted". 
Species v a r i a t i o n s of phase one 
r e a c t i o n s are v e r y common but hard to p r e d i c t ; phase two r e a c t i o n s 
are much more l i m i t e d i n number and more p r e d i c t a b l e . 
A more power-
f u l expert system could probably make u s e f u l p r e d i c t i o n s of the 
q u a n t i t a t i v e behavior of t o x i c m e t a b o l i t e s of drugs and perhaps help 
get an i n d i c a t i o n of what p r e s e n t l y unkown species-dependent 
t o x i c i -
t i e s might be. 
For t h i s purpose the admittedly incomplete informa-
t i o n on which pathways of d e t o x i f i c a t i o n and other metabolism are 
present i n which organ and how a c t i v e they are, would have to be 
c o l l e c t e d ( t h i s i n c l u d e s h e u r i s t i c s as w e l l as hard data i n c l u d i n g 
the types of i n f o r m a t i o n mentioned above). 
Some of the u n p r e d i c t a -
b i l i t i e s as to which t o x i c products might be formed by the l i v e r of 
what s p e c i e s might be compensated f o r by a p p r o p r i a t e l y designed ex-
periments w i t h such l i v e r s or t i s s u e c u l t u r e s derived from them). 
One could set up an expert system by i n t e r f a c i n g a s u i t a b l e 
s i m u l a t i o n program with EXPERT. Good o p t i m i z a t i o n c a p a b i l i t i e s and 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch006
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

6. 
GARFINKEL ET AL. 
Chemically Based Experiments with Expert Systems 85 
a b i l i t y to handle design o p t i m a l i t y problems l i k e those mentioned 
above are important i n the s i m u l a t i o n program, i n a d d i t i o n to the 
good data-base and e x p l a n a t i o n c a p a b i l i t i e s of EXPERT. 
Such an ex-
pert system could then b u i l d m u l t i - s p e c i e s pharmacokinetic models by 
the method of B i s c h o f f and Dedrick. 
A f t e r r e p e a t i n g t h e i r work as 
the t e s t case, t h i s expert system could be used f o r the other drugs 
whose k i n e t i c s have been s u f f i c i e n t l y s t u d i e d ( i n c l u d i n g sampling i n 
s e v e r a l t i s s u e s ) as r e q u i r e d f o r such a n a l y s i s . 
Subsequent extension 
to i n c l u d e a d d i t i o n a l methodologies i s p o s s i b l e (e.g. d e t a i l e d r e p r e -
s e n t a t i o n of enzyme k i n e t i c s ) . 
Model c o n s t r u c t i o n w i t h only part of 
the o r i g i n a l data could then be repeated to determine the need f o r 
completeness of (experimentally determined) i n f o r m a t i o n , i . e . , which 
and how many animal experiments are r e a l l y necessary. 
Such c o n s i d e r -
a t i o n s are important i n drug t e s t i n g , and an expert system would help 
both by doing the modeling f a s t e r than a human, and a l s o more 
s y s t e m a t i c a l l y . 
A w e l l - e s t a b l i s h e d s p e c i a l i z e d expert system w i t h which the 
proposed expert system could be compared i s the d i g i t a l i s a d v i s o r of 
S z o l o v i t z and Long (19) which represents a well-understood 
c l i n i c a l 
s i t u a t i o n . 
I t performs c l i n i c a l f u n c t i o n s beyond the scope of t h i s 
proposed system, but i t does do some t h i n g s , l i k e m a i n t a i n i n g the 
blood l e v e l of the drug i n v o l v e d , and monitoring i t s t o x i c i t y , 
that 
t h i s proposed system i s concerned w i t h and should perform adequately. 
S t a r t i n g with a p p r o p r i a t e knowledge of the behavior of a p r o s -
p e c t i v e drug i n one s p e c i e s one could then e x t r a p o l a t e to other 
s p e c i e s , u l t i m a t e l y i n c l u d i n g humans. 
T h i s c a p a b i l i t y could be used 
i n t e s t i n g a proposed drug to determine proper dosage and regimen 
under what c o n d i t i o n s i t (and p o s s i b l y i t s m e t a b o l i t e s ) i s t o x i c , and 
how s e n s i t i v e i t s behavior might be to p e r t u r b i n g c o n d i t i o n s , which 
p r e s e n t l y have to be re-performed f o r each s p e c i e s i n v o l v e d by empir-
i c a l l y and h e u r i s t i c a l l y guided experiments. 
I t i s reasonable to 
hope f o r s i g n i f i c a n t l y improved 
e f f i c i e n c y i n performing these 
expensive o p e r a t i o n s . 
Conclusion 
We have d e s c r i b e d a set of a p p l i c a t i o n s of a c o n v e n t i o n a l expert s y s -
tem which extend the u s u a l f u n c t i o n s of such systems from p r i m a r i l y 
l o g i c a l reasoning and s o l u t i o n of c l a s s i f i c a t i o n problems to i n c l u d e 
s u p e r v i s i o n of c a l c u l a t i o n s and of modeling, i . e . , systems manage-
ment. 
A h i e r a r c h y of a p p l i c a t i o n s a r i s i n g from b i o c h e m i c a l r e s e a r c h 
have been d i s c u s s e d . These f o l l o w b i o l o g i c a l systems i n being 
p r i -
m a r i l y chemical at the lowest l e v e l but a c q u i r e more b i o l o g i c a l 
character at the higher l e v e l s . 
At the lowest l e v e l , these permit 
the convenient performance of c a l c u l a t i o n which i s not being done or 
done p r o p e r l y . At the intermediate l e v e l , they provide a b e t t e r 
r e s e a r c h t o o l , e s p e c i a l l y f o r experimental design. 
At the most com-
plex l e v e l , they would permit a complex, slow, and expensive process 
to be c a r r i e d out w i t h l e s s resource expenditure (calendar time, 
money, and animal experiments). 
Acknowledgments 
Supported by NIH grants HL15622, AM33016, RR643, and RR2230. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch006
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

86 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Literature Cited 
1. Weiss, S.; Kulikowski, C. Proc. 6th International Joint Confer­
ence on Artificial Intelligence, 1979, p. 942. 
2. Mannervick, B. "Kinetic Data Analysis";Endrenyi, L.,Ed.;Plenum 
Press: New York, 1981; p. 235. 
3. Garfinkel, L.; Garfinkel, D. Biochemistry 1984, 23, 3547. 
4. Morrison, J. F. Methods in Enzymology 1979, 63, 257. 
5. Storer, A. C.; Cornish-Bowden, A. Biochem. J. 1977, 165, 61. 
6. Garfinkel, L.; Garfinkel, D. Magnesium 1985, 4, 60. 
7. Waser, M. R.; Garfinkel, L.; Kohn, M. C.; Garfinkel, D. 
J. Theoret. Biol. 1983, 103, 295. 
8. Kohn, M. C.; Menten, L. E.; Garfinkel, D. Comput. Biomed. Res. 
1979, 12, 461. 
9. Weiss, S.; Apte, C. IEEE Transactions on Pattern Analysis and 
Machine Intelligence 1985, PAMI7, 586. 
10. Weiss, S.; Kulikowski, C.; Apte, C.; Uschold, M.; Patchett, J.; 
Briggham, R. M.; Spitzer, B. Proc. 2nd Annual Nat'l. Conf. on 
Artificial Intelligence, Pittsburgh, PA,1982, 322. 
11. Cornish-Bowden, A. Biochem. J. 1977, 165, 55. 
12. Endrenyi, L. "Kinetic Data Analysis"; Endrenyi, L., Ed,; 
Plenum Press: New York, 1981, p. 137. 
13. Bischoff, Κ. B. Cancer Chemotheraphy Reports 1975, 59, Part 1, 
p. 777. 
14. Adolph, E. F. Science 1949, 109, 579. 
15. Dedrick, R. L. J. Pharmacokinet. Biopharm. 1, 1978, 435. 
16. Bischoff, Κ. B.; Dedrick, R. L.; Zaharko, D. S.; Longstreth, J. 
A. J. Pharmaceutical Sciences 1971, 60, 1128. 
17. Zaharko, D. S.; Dedrick, R. L.; Oliverio, V. T. Comp. Biochem. 
Physiol. 1974, 42A, 183. 
18. Bischoff, Κ. B. Fed. Proc. 1980, 39, 2456. 
19. Szolovitz, P.; Long, W. J. "Artificial Intelligence in 
Medicine", Szolovitz, P., Ed.: AAAS Selected Symposium 51; 
Westover Press: Boulder, Colo.; 1982; p. 79. 
RECEIVED December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch006
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

7 
An Expert System for the Formulation 
of Agricultural Chemicals 
Bruce A. Hohne and Richard D. Houghton 
Rohm and Haas Company, Spring House, PA 19477 
An expert system has been written which helps the 
agricultural chemist develop formulations for new 
biologically active chemicals. The decision making 
process is segmented into two parts. The first is 
which type of formulation to use. The second is how 
to make a formulation of that type with the chemical 
of interest. The knowledge base currently contains 
rules to determine which formulation type to try and 
how to make an emulsifiable concentrate. The next 
phase will add rules on how to make other types of 
formulations. The program also interfaces to several 
FORTRAN programs which perform calculations such as 
solubilities. 
What Is An Agricultural Formulation 
An essential part of the development of a new pesticide i s 
establishing a good, dependable formulation. The product's active 
ingredient and physical properties should remain acceptable for two 
years or more. These formulations are often subjected to storage 
conditions of extreme heat, cold, and humidity. 
Once sold to the 
applicator, the concentrated formulation should dilute easily to 
f i e l d strength and pass freely through conventional spray equipment. 
Agricultural (Ag) formulations that are commonly diluted and 
applied by means of spray equipment include water soluble l i q u i d s , 
emulsifiable concentrates, wettable powders, and flowable 
suspensions. 
The choice of which formulation to develop normally 
depends upon the s o l u b i l i t y properties of the technical pesticide. 
Scientists often must also consider manufacturing costs, f i e l d 
efficacy and product t o x i c i t y . 
A water soluble l i q u i d formulation (WSL) i s prepared from 
pesticides that are highly water soluble. This i s , by far, the 
simplest type of formulation. One d i s t i n c t advantage of WSL
1s over 
other formulations i s that the f i e l d spray dilutions are i n f i n i t e l y 
stable as true solutions. Pesticides that are hydrophilic and 
ionic, such as inorganic or organic metallic s a l t s , often f a l l into 
this category. 
Unfortunately, only a small portion of a l l 
pesticides are adequately soluble i n water. 
0097-6156/86/0306-O087$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch007
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

88 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
An emulsifiable concentrate i s prepared from pesticides that 
are soluble i n common organic solvents, such as xylene and kerosene. 
Using emulsifiers i n the composition causes the formulation to 
disperse into small p a r t i c l e s , called an emulsion, when diluted i n 
water. 
Pesticides that are not soluble or have limited s o l u b i l i t y i n 
common solvents are formulated as wettable powders (WP) or flowable 
concentrates (flowables). A wettable powder has the capacity for 
high active ingredient content, often between f i f t y and eighty 
percent by weight, and i s made by blending and grinding dry 
ingredients. Wettable powders are best prepared from pesticides 
that are high melting, f r i a b l e solids. 
Diluents, such as natural 
clays and synthetic s i l i c a t e s , are used to improve the powder's 
physical properties. 
The disadvantages of a WP are: messy handling 
properties; potential dust inhalation hazard for f i e l d personnel; 
and the need to measure the powder on a weight basis. 
In some cases 
these problems can be overcome by formulating the pesticide into a 
suspension. Water and other ingredients are added to the 
composition to suspend and disperse the active compound into a 
flowable. 
Regardless of what type of formulation i s employed i n the 
f i e l d , the formulation must wet, disperse, and remain homogeneous i n 
the application spray equipment. Careful selection of formulating 
agents, commonly called inerts, i s extremely important. These 
ingredients have no b i o l o g i c a l a c t i v i t y of their own, but combined, 
they function as the delivery system for the pesticide. 
In addition to solvents and diluents, formulations may contain 
emulsifiers, dispersants, chelating agents, thickeners, defoamers, 
and more. The large number and variety of each type makes selecting 
the components for a formulation d i f f i c u l t and time consuming. 
Why Is This A Good Area for an Expert System 
The process of choosing application areas for expert system 
development has been detailed elsewhere, both for the general case 
and the corporate environment [1]. There are several specific 
advantages i n the formulations application. 
Experts on one type of 
formulation are not necessarily experts on other formulation types. 
Expertise i n Ag formulations tends to be i n the form of 'rules of 
thumb', based on experiences with similar chemical systems. 
Incremental growth, l i k e t h i s , i s ideal for expert system 
development. Formulation s c i e n t i s t s are also l i k e l y to be more 
tolerant of the program's mistakes because their s k i l l i s measured 
by how few bad formulations they make before they make a good one. 
M u l t i l e v e l expert systems offer additional advantages over 
t r a d i t i o n a l expert systems. 
M u l t i l e v e l expert systems draw on 
computational computer programs to solve parts of the problem. 
The 
Ag formulation expert system does this i n the areas of computational 
chemistry, bookkeeping, and communication. 
There are numerous computational programs available to chemists 
today. These programs are algorithmic by nature, and solve problems 
that do not lend themselves to expert systems. 
However, a great 
deal of expertise may be needed by the chemist to decide which 
program to use and how to actually use i t . 
Most chemists do not 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch007
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

7. 
HOHNE AND HOUGHTON 
Formulation of Agricultural Chemicals 
89 
have, and are not w i l l i n g to gain, this computer expertise. Some 
would rather use t r a d i t i o n a l , noncomputational, methods rather than 
navigate the maze of available computer programs and users manuals. 
Expert systems can be extremely valuable i n providing this expertise 
to chemists. 
The Ag formulations expert system has the a b i l i t y to execute 
the appropriate computational programs, giving i t an advantage over 
the formulation chemist. Bookkeeping tasks are generally handled 
better by a computer than a chemist. For example, time tables must 
be met for long term storage studies, toxicology data, and 
government registrations. 
These tasks are easily handled by the 
computer. 
The expert system f i l l s several potential communication gaps. 
Molecular modeling calculations which are performed by the synthetic 
chemists, outside the formulation area, can be accessed by the 
expert system. Through this interface, the expert system can 
extract useful, structural information d i r e c t l y . 
Also, i f a 
structure has not been entered, the formulation chemist can use the 
modeling program to enter the structure into the computer. 
In 
addition, the system safeguards against communication gaps between 
the chemist and management/marketing by including marketing and 
production considerations i n the rule base. In this way, management 
can determine which new formulations are possible, and what 
characteristics they w i l l s a c r i f i c e with a particular formulation. 
Structure of the Problem 
The problem of devoloping a new formulation i s highly structured. 
The structure tends to be hierarchical, although this hierarchy does 
not resemble a t r a d i t i o n a l decision tree. 
Each branch point may 
have any number of branches. The decision about which 'branch' to 
take at each l e v e l can be viewed as an independent expert system. 
The a b i l i t y to break the overall problem into smaller, simpler 
subproblems i s desirable for expert systems. 
Many of the facts i n the system are shared by several 
subproblems, and subproblems must be. developed by starting at the 
top of the hierarchy and working down. Other than these 
stipulations, they are independent problems. Each branch of the 
tree can be used independently, and need not be complete to be 
useful i n the formulation study. The expert system's competence on 
each subproblem can be judged independently. In many cases 
different experts are used to develop the knowledge bases for 
different subproblems. 
Figure 1 shows the structure of the problem, 
tracing one branch from each l e v e l . 
Structure of the Expert System 
The program was written on an Apollo computer i n LISP. Apollo's 
Domain LISP, a version of Portable Standard LISP, was the dialect 
available. 
The expert system has been written to follow the natural 
structure of the Ag formulation problem. 
Figure 2 shows the overall 
structure of the expert system. One nice feature of the program i s 
that at each branch point the user can override the computer's 
choice, and can also select as many branches to pursue as desired. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch007
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

90 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Emulsifiable 
Concentrate 
Determine 
Solvent 
Solvent 
1 
Det< 
Em 
srmine 
jlsifier I 
Emulsifier 
1 
Solvent 
3 
Solvent 
4 
Solvent 
5 
Emulsifier 
2 
Figure 1. Structure of the Problem 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch007
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

7. 
HOHNE AND HOUGHTON 
Formulation of Agricultural Chemicals 
91 
Load Relevant 
Rules and Hypotheses 
User 
User 
User 
Collect 
Background 
Information 
Forward Chain 
Sort Hypotheses 
Reverse Chain on 
Best Hypothesis 
JCollect Additional 
Information 
•Choose Hypothesis 
Figure 2. Structure of the Program 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch007
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

92 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
The l o g i c a l deduction portion of the program i s based on 
IF-THEN rules. FACTS, acquired both as the result of l o g i c a l 
deductions and by querying the user, are stored i n similar data 
structures. Because the branch points i n the problem are also 
l o g i c a l deductions, they are stored i n a data structure similar to 
the FACTS. The branch points contain additional flow of control 
information that relates to the hierarchy of the problem. 
The 
difference between FACTS and branch points i s transparent to the 
l o g i c a l deduction portion of the program. 
The top l e v e l i n the structure of FACTS i s the fact name, e.g., 
ACTIVE_INGREDIENT. Under each fact are various properties relevant 
to that fact, e.g., 
H20_S0LUBILITY. For each property, several 
pieces of information are stored (see Figure 3). A l l properties 
contain a VALUE, which i s i n i t i a l i z e d to a n u l l or missing value. 
They also contain the method to obtain the VALUE. Currently 
supported methods are ASKIT, PROVEIT, and CALL. 
Fact name 
Property 1 
Value 
Where to find i t 
(Ask, prove, calculate) 
Prompt 
(How to ask user) 
Allowable response 
(Checks user's response) 
Explanation 
(For prove and calculate) 
Property 2 
Value 
Figure 3. Structure of Facts 
I f the method for acquiring a VALUE i s ASKIT, then a user 
PROMPT i s stored. 
In order to guarantee a v a l i d response to the 
question, a LISP function to check the answer i s included with the 
FACT. Table I l i s t s the currently implemented response checking 
functions. Whenever the inference engine reaches one of these 
facts, searching i s stopped and the user i s prompted for a value. 
Table I. User Input 
Function 
Allowed Response 
PercentP 
Positive integer between 1 and 100 
Yes_NoP 
Yes, No, Υ, Ν 
Any_0f 
Any number of members of the l i s t e d p o s s i b i l i t i e s 
0ne_0f 
One member of the l i s t e d p o s s i b i l i t i e s 
PositiveP 
Any positive number 
ImportanceP 
High, Med, Low, H, M, L 
IntegerP 
Any positive or negative integer 
Integer_listP A l i s t of integers seperated by spaces 
Minusl_to_0ne Any number between -1 and +1 
For values which must be deduced, a TEXT explanation i s saved. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch007
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

7. HOHNE AND HOUGHTON 
Formulation of Agricultural Chemicals 
93 
This TEXT i s used i n the various explanation and tracing f a c i l i t i e s . 
Whenever the inference engine reaches one of these FACTS i t either 
continues i t s search, i f possible, or proceeds another l e v e l deeper 
i n the reverse search and t r i e s to prove that FACT. 
The CALL f a c i l i t y allows the expert system to access software 
external to the LISP program. 
Included with the CALL i s the name of 
a LISP function which handles the outside software. 
In the case of 
the fact CHEMICAL_NAME, the LISP function executes a FORTRAN program 
which allows the user to either retrieve the structure of a 
previously entered compound or enter a new one. 
The program also 
breaks the chemical structure into i t s functional groups. When the 
FORTRAN program terminates, the LISP function updates the l i s t of 
facts, and inserts the name into CHEMICAL_NAME and the functional 
groups into FUNCT_GROUPS. These FACTS are then available to the 
expert system. In this way, access to outside software i s 
completely data driven. 
The structure of the branch points i s the same as that of those 
FACTS which must be deduced, except for the additional control 
information. The properties correspond to the different branches i n 
the hierarchy at that point. 
Figure 4 shows the data structure of 
branch points. For each branch point (property), there i s a l i s t of 
rules which apply. By only considering rules applicable to the 
specific subproblem, the time required for searching i s d r a s t i c a l l y 
reduced. A l i s t of FACT-PROPERTY pairs, which are useful background 
information for the subproblem, i s also saved. This background 
information i s collected at the beginning of each subproblem and 
used i n a forward-chaining function. This approach can prevent the 
reverse chaining portion of the system from appearing as though i t 
i s "wandering" at the beginning of each subproblem. The f i n a l piece 
of control information i s the name of the next subproblem, and 
correspondes to the FACT name. These names are stored for each 
branch point. 
Conclusion Name 
Branch Point 1 
Value 
Where to find i t 
(prove) 
Explanation 
(Tell the user i f i t i s true) 
Next l e v e l name 
Background facts 
(Questions always asked) 
Rule names 
( L i s t of relevant rules) 
Branch Point 2 
Value 
Figure 4. Structure of Conclusions 
Rules i n the expert system are structured to allow f l e x i b i l i t y 
and future expansion. For speed of execution, the IF-THEN clauses 
are actually executable LISP code. Tables I I and I I I contain 
examples of how rules are structured. The IF clauses contain 
functions, called predicates. 
Predicates have a value of either 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch007
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

94 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
true or false when evaluated. 
I f a l l the IF clauses are true, then 
the THEN clauses are executed. The THEN clauses contain ACTIONS 
which change the VALUEs of other FACTs. The PREDICATES and ACTIONS 
are the basic building blocks for a l l the rules i n the system. 
There i s no l i m i t to the number of IF or THEN clauses which a rule 
can contain. As more powerful rules are required, additional 
building blocks can easily be added by writing new PREDICATES or 
ACTIONS. 
Table I I . Structure of Rules 
AgRule_l 
If-1 
(Isequal Active_Ingredient Desired_Level Value >40) 
Then-1 (Suggest Form_Type EC -.5) 
Then-2 (Suggest Form_Type WSL -.5) 
Then-3 (Suggest Form_Type Flowable -.5) 
Why 
EC's, WSL's and Flowables rarely have that high an AI l e v e l 
Date 
11/14/83 
Author Houghton 
Agrulel 
IF 
1. The value of the active ingredient's desired concentration 
i s >40% 
THEN 
1. There i s suggestive evidence (-0.5) that the 
formulation type should not be emulsifiable concentrate 
2. There i s suggestive evidence (-0.5) that the 
formulation type should not be water soluble l i q u i d 
3. There i s suggestive evidence (-0.5) that the 
formulation type should not be flowable concentrate 
BECAUSE: 
EC's, WSL's and Flowables rarely have that high an AI l e v e l 
Table I I I . Structure of Rules 
AgRule_13 
If-1 
(Isequal Solvent Req_EPA_Clear Value C) 
Then-1 (Avoid NotEqual EC_Solvent EPA_Clear C -1) 
Why 
I t ' s the law 
Date 
12/20/83 
Author Hohne 
Agrulel3 
IF 
1. The value of the solvent's required EPA clearance 
i s C 
THEN 
1. Avoid (-1) emulsifiable concentrate solvents where EPA clearance 
i s not equal to C 
BECAUSE 
It's the law 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch007
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

7. 
HOHNE AND HOUGHTON 
Formulation of Agricultural Chemicals 
95 
The rule structure allows simple Boolean functions to be 
performed. Multiple numbered IF clauses are l o g i c a l l y ANDed 
together. 
Multiple clauses which are part of the same numbered IF 
are l o g i c a l l y ORed. The l o g i c a l NOT does not exist, but can be 
simulated using predicates with the opposite meaning i n the IF 
clause, ( i . e . BIGGER i s equivalent to NOT SMALLER). Table IV l i s t s 
the currently available predicates for IF clauses. 
Table IV. Relationships (predicates) 
Predicate 
Meaning 
BIGGER 
Bigger than 
SMALLER 
Smaller than 
MEMB 
Member of the 
l i s t 
NOTMEMB 
Not a member of the l i s t 
ISEQUAL 
Is equal to 
NOTEQUAL 
Not equal to 
The ACTIONS available to the THEN clauses are l i s t e d i n 
Table V. 
These ACTIONS give r i s e to two types of THEN clauses. The 
f i r s t type affects the VALUE of only one property. 
The THEN clauses 
i n Table II show the construction of one-property THEN clauses. 
The 
second type of THEN clause deals with a l l of the current branch 
points. 
Table I I I shows the construction of this type of THEN 
clause. 
Table V. Actions 
Action 
Meaning 
SUGGEST 
Adjust the property's value using the l i s t e d 
confidence factor 
SET_EQUAL 
Set the property's value equal to the l i s t e d value 
ORDER_BY 
Order the hypotheses by the value of the l i s t e d 
property 
AVOID 
Avoid conclusions where the requirement 
l i s t e d 
The inference engine was designed to use multivalued logic, 
i.e., i t handles inexact reasoning. 
Confidence factors (CF) are 
contained i n the THEN clauses of each rule. The equation for 
combining positive confidences i s : 
CF - old_value + new_value - (old_value X new_value) 
The equation for negative confidences i s : 
CF » old_value + new_value + (old_value X new_value) 
For mixed positive and negative confidences, a simple sum i s 
used. The advantage to these functions i s they are bounded by -1 
and +1. 
The program also handles exact reasoning through the SET_EQUAL 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch007
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

96 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
ACTION i n the THEN clause. 
This ACTION can be used to set a 
confidence value to +1 (true) or -1 (false), regardless of 
previously compiled confidences. 
SET_EQUAL can also be used to set 
FACT values equal to nonnumeric values, where required. 
The natural language interpretation of the rules given at the 
bottom of Tables I I and I I I was generated by the program. 
The 
natural language generator uses synonyms for FACT names and 
properties. 
The synonyms are simply substituted into one of several 
templates to generate a sentence. The template used i s determined 
by the value of the confidence factor and the combination of ACTIONS 
and PREDICATES. 
Current Status of the Project 
The project i s s t i l l i n the prototype stage. 
I t i s being used, but 
not widely. 
Presently, the knowledge base for the system has less 
than 100 rules. This number i s misleading because a l l the work 
performed by the FORTRAN programs i s not counted i n the number of 
rules. These programs give the system far more knowledge than would 
be expected from the 'small' knowledge base. 
The system can help s c i e n t i s t s r e l i a b l y determine what type of 
formulation to make. However, the only branch of the decision tree 
which has rules i s the emulsifiable concentrates (EC) branch. 
The 
system can determine which solvents to try to make an EC. Its 
decision r e l i e s heavily on rules and s o l u b i l i t y calculations. Work 
i s j u s t beginning on the rules to determine which emulsifiers to 
use. 
The program has been interfaced to two FORTRAN programs. 
The 
f i r s t , MOLY, i s a l o c a l l y developed product for chemical structure 
entry, display, and molecular modeling [2]. The expert system only 
takes advantage of the chemical structure handling portion of the 
program. The other program, UNIFAC [3], performs s o l u b i l i t y 
calculations for the active ingredient i n a group of solvents of 
interest to formulation chemists. 
The inference engine performs both forward and 
reverse-chaining. 
The reverse-chain algorithm i s a depth f i r s t 
search. 
Using this algorithm, questions asked by the system are 
grouped by subject, making the program appear more l o g i c a l to the 
user. The program handles exact and inexact logic calculations and 
explains, i n English, why a question was asked and how a conclusion 
was reached. 
The program also allows the s c i e n t i s t to change 
answers i n case of mistakes, or to investigate "what i f " scenarios. 
Directions for Future Development 
Future developments f a l l into two classes: additions to the 
knowledge base and enhancements to the program. As the program i s 
used by more people, fine tuning of the rules to select which type 
of formulation to try w i l l be needed. Work, from that point, w i l l 
continue on the emulsifiable concentrate branch. The solvent 
selection portion w i l l require some fine tuning, but the major work 
i s i n adding to the l i s t of solvents. 
The emulsifier selection 
portion of the knowledge base w i l l d e f i n i t e l y require additional 
rules, to be followed by considerable tuning as i t i s used. 
The 
remaining four formulation types have yet to be started. They w i l l 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch007
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

7. 
HOHNE AND HOUGHTON 
Formulation of Agricultural Chemicals 
97 
require different experts and can be developed concurrently with the 
EC portion. 
The f i r s t major enhancement to the program w i l l be the a b i l i t y 
to stop sessions at any point and restart at the same point at a 
l a t e r time. 
This capability w i l l be more than just a convenience, 
i t w i l l be necessary to make the laboratory results requested by the 
program useful. 
After this addition, the next major enhancement 
w i l l be to develop a method of using the rules to trouble-shoot 
f i e l d problems. This enhancement w i l l involve adding some rules, 
but most of the knowledge should already be i n the knowledge base. 
As the program becomes widely used, the a b i l i t y to generate reports 
and data sheets for laboratory results w i l l be a valuable addition. 
The added a b i l i t y to remind the s c i e n t i s t about certain deadlines 
for a project may be easily included, but w i l l not be useful u n t i l 
s c i e n t i s t s use the Apollo computer regularly. 
The expert system currently has no rule entry or maintenance 
f a c i l i t i e s . 
Rules are entered and modified using the Apollo 
computer text editor. 
This i s acceptable for a prototype, but not 
for a production system. Before these f a c i l i t i e s are added, i t s 
cost and c a p a b i l i t i e s w i l l need to be compared to those of 
commercial expert systems. 
Literature Cited 
1. Prenau, D.S., "Selection of an Appropriate Domain for an Expert 
System", AI Magazine, 6(2), 1985 
2. Dyott, T., Stuper, A.J., Zander, G.S., "MOLY, an Interactive 
System for Molecular Analysis", J. Chem. Inf. Comp. Sci., 
20(28), 1980 
3. Fredenslund, Α., Jone, R.L., Prausnitz, J.M., 
"Group-Contribution Estimation of Activity Coefficients in 
Nonideal Liquid Mixtures", AIChE Journal, 21(6), 1975 
RECEIVED December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch007
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

8 
Computer Algebra: Capabilities and Applications 
to Problems in Engineering and the Sciences 
Richard Pavelle 
MACSYMA Group, Symbolics, Inc., Cambridge, M A 02142 
MACSYMA is a large, interactive computer system 
designed to assist engineers, scientists, and 
mathematicians in solving mathematical problems. A user 
supplies symbolic inputs and MACSYMA yields symbolic, 
numeric or graphic results. 
This paper provides an 
introduction to MACSYMA and provides the motivation for 
using the system. 
Many examples are given of MACSYMA's 
capabilities with actual computer input and output. 
My purpose i n t h i s paper i s to provide a broad i n t r o d u c t i o n to the 
c a p a b i l i t i e s of MACSYMA. 
I t i s my hope that t h i s information w i l l 
create new users of Computer Algebra systems by shoving what one 
might expect to gain by using them and what one w i l l lose by not 
using them* 
MACSYMA output i s used and CPU times are often g i v e n . In some 
cases I have modified the output s l i g h t l y to make i t more 
presentable. The CPU times correspond to a Symbolics 3600 and to the 
MACSYMA Consortium machine (MIT-MC) which i s a D i g i t a l Equipment 
KL10. These are about equal i n speed and about twice as fast as a 
D i g i t a l Equipment VAX 11/780 for MACSYMA computations. When CPU 
times are not given one may assume the c a l c u l a t i o n requires at most 
10 CPU seconds. 
What i s MACSYMA. 
The development of the Computer Algebra system, 
MACSYMA» began at MIT i n the l a t e 60s» and i t s h i s t o r y has been 
described elsewhere Q . ) . A few facts worth repeating are that a 
great deal of effort and expense vent i n t o MACSYMA. There are 
estimates that 100 man-years of developing and debugging have gone 
i n t o the program. 
While t h i s i s a large number, l e t us consider the 
even larger number of man-years using and t e s t i n g MACSYMA. 
A t MIT, 
betveen 1972 and 1982, we had about 1000 MACSYMA users. I f ve had 50 
serious users using MACSYMA for 50% of t h e i r time, 250 casual users 
at 10% and 700 infrequent users at 2% then the t o t a l i s over 600 
man-years. 
MACSYMA has been at 50 s i t e s f o r four years and i s at 
0097-6156/ 86/ 0306-0100506.00/ 0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch008
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

8. 
PAVELLE 
Computer Algebra: Capabilities and Applications 
101 
400 s i t e s today. 
W e l l , we could conclude that at least 1000 
man-years have been spent i n using MACSYMA. MACSYMA i s now very 
large and consists of about 3000 l i s p subroutines or about 300,000 
l i n e s of compiled l i s p code joined together i n one giant package for 
performing symbolic mathematics. 
While t h i s paper i s directed towards MACSYMA, the development 
of 
MACSYMA and other Computer Algebra systems has r e a l l y been the 
r e s u l t of an i n t e r n a t i o n a l e f f o r t (.2). 
There are many systems, 
world-wide, of various sizes and designs which have been developed 
over the past f i f t e e n to twenty years (3, 4 ) . 
Research r e l a t e d to 
the development of these systems has lead to many new r e s u l t s i n 
mathematics and the construction of new algorithms. These r e s u l t s i n 
turn helped the development of MACSYMA as w e l l as other 
systems. 
These systems are now being recognized as important t o o l s allowing 
researchers to make s i g n i f i c a n t discoveries i n many f i e l d s of 
i n t e r e s t 
( 5 ) . 
Why MACSYMA i s Useful or Necessary. 
Here are some of the more 
important reasons for using MACSYMA: 
1. The answers one obtains are exact and can often be checked by 
independent procedures. For example, one can compute an i n d e f i n i t e 
i n t e g r a l and check the answer by d i f f e r e n t i a t i n g ; the 
d i f f e r e n t i a t i o n algorithm i s independent of the i n t e g r a t i o n 
algorithm. Since exact answers are g i v e n , the s t a t i s t i c a l error 
analysis associated w i t h numerical computation i s unnecessary. One 
obtains answers that are r e l i a b l e to a high l e v e l of confidence. 
2. The user can generate FORTRAN expressions that allow numeric 
computers to run faster and more e f f i c i e n t l y . 
This saves CPU cycles 
and makes computing more economical* The user can generate 
FORTRAN 
expressions from MACSYMA expressions* 
The FORTRAN c a p a b i l i t y i s an 
extremely important feature combining symbolic and numeric 
c a p a b i l i t i e s . 
The trend i s c l e a r , and i n a few years we w i l l 
have 
powerful, inexpensive desktop or notebook computers that merge the 
symbolic, numeric and graphic c a p a b i l i t i e s i n a s c i e n t i f i c 
workstation. 
3. The user can explore extremely complex problems that cannot be 
solved i n any other manner. This c a p a b i l i t y i s often thought of as 
the major use of Computer Algebra systems. 
However, one should not 
lose sight of the fact that MACSYMA i s often used as an advanced 
c a l c u l a t o r to perform everyday symbolic and numeric problems. It 
also complements conventional tools such as reference tables or 
numeric processors. 
4. A great deal of knowledge has gone into the MACSYMA knowledge 
base. 
Therefore the user has access to mathematical techniques that 
are not a v a i l a b l e from any other resources, and the user can solve 
problems even though he may not know or understand the 
techniques 
that the system uses to a r r i v e at an answer. 
5. A user can test mathematical conjectures e a s i l y and p a i n l e s s l y . 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch008
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

102 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
One frequently encounters mathematical r e s u l t s i n the l i t e r a t u r e and 
questions t h e i r v a l i d i t y . Often MACSYMA can be used to check these 
r e s u l t s using algebraic or numeric techniques or a combination of 
these. 
S i m i l a r l y one can use the system to show that some problems 
do not have a s o l u t i o n . 
6. MACSYMA i s easy to use. I n d i v i d u a l s without p r i o r computing 
experience can learn to solve f a i r l y d i f f i c u l t problems w i t h MACSYMA 
i n a few hours or l e s s . 
While MACSYMA i s w r i t t e n i n a d i a l e c t of 
LISP, the user need never see t h i s base language. 
MACSYMA i t s e l f 
i s 
a f u l l programming language, almost mathematical i n nature, 
whose 
syntax resembles 
ALGOL. 
There are two a d d i t i o n a l reasons for using MACSYMA that are 
more important than the 
others. 
7. One can concentrate on the i n t e l l e c t u a l content of a problem 
leaving computational d e t a i l s to the computer. 
This often 
r e s u l t s 
i n a c c i d e n t a l discoveries and, owing to the power of the program, 
these occur at a far greater rate than when c a l c u l a t i o n s are done by 
hand. 
8. But the most important reason i s that, to quote R.W. Hamming, 
"The purpose of computing i s i n s i g h t , not numbers." This exemplifies 
the major benefit of using MACSYMA, and I w i l l demonstrate the 
v a l i d i t y of t h i s statement by showing not only how one gains i n s i g h t 
but also how one uses MACSYMA for theory b u i l d i n g . However, a second 
quotation reputed to be by Hamming i s correct as w e l l , namely that 
"The purpose of computing i s not yet i n s i g h t . " 
C a p a b i l i t i e s and uses o£ MACSYMA 
C a p a b i l i t i e s . 
I t i s not possible to f u l l y i n d i c a t e the c a p a b i l i t i e s 
of 
MACSYMA i n a few l i n e s since the reference manual i t s e l f 
occupies 
more than 500 pages (6.). 
However, some of the more important 
c a p a b i l i t i e s include ( i n a d d i t i o n to the basic a r i t h m e t i c a l 
operations) f a c i l i t i e s to provide a n a l y t i c a l tools for 
L i m i t s 
Taylor Series (Several V a r i a b l e s ) 
Derivatives 
Poisson Series 
I n d e f i n i t e Integration 
Laplace Transformations 
D e f i n i t e Integration 
I n d e f i n i t e Summation 
Ordinary D i f f e r e n t i a l Equations 
Matrix Manipulation 
Systems of Equations (Non-Linear) Vector Manipulation 
S i m p l i f i c a t i o n 
Tensor Manipulation 
F a c t o r i z a t i o n 
Fortran Generation 
There are other routines for c a l c u l a t i o n s i n number theory, 
combinatorics, continued f r a c t i o n s , set theory and complex 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch008
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

8. 
PAVELLE 
Computer Algebra: Capabilities and Applications 
103 
arithmetic. 
There i s also a share library currently containing 
about 80 subroutines. Some of these perform computations such as 
asymptotic analysis and optimization while others manipulate many of 
the higher transcendental functions. In addition one can evaluate 
expressions numerically at most stages of a computation. MACSYMA 
also provides extensive graphic capabilities to the user. 
To put the capabilities of MACSYMA i n perspective we could say 
that MACSYMA knows a large percentage of the mathematical techniques 
used i n engineering and the sciences. I do not mean to imply that 
MACSYMA can do everything. I t i s easy to come up with examples that 
MACSYMA cannot handle, and I w i l l present some of these. Perhaps the 
following quotation w i l l add the necessary balance. I t i s an exit 
message from some MIT computers that often flashes on our screens 
when logging out. I t states: "I am a computer. I am dumber than any 
human and smarter than any administrator." MACSYMA i s remarkable i n 
both the questions i t can and cannot answer. It w i l l be many years 
before i t evolves into a system that r i v a l s the human i n more than a 
few areas. But u n t i l then, i t i s the most useful tool that any 
engineer or scientist can have at his disposal. 
Uses. I t i s d i f f i c u l t to l i s t the application f i e l d s of MACSYMA 
because users often do not state the tools that helped them perform 
their research. However, from Computer Algebra conferences (7, &, 
9) we do know that MACSYMA has been used i n the following f i e l d s : 
Acoustics 
Algebraic Geometry 
Antenna Theory 
Celestial Mechanics 
Computer-Aided Design 
Control Theory 
Deformation Analysis 
Econometrics 
Experimental Mathematics 
Fluid Dynamics 
General Relativity 
Number Theory 
Numerical Analysis 
Particle Physics 
Plasma Physics 
Solid-State Physics 
Structural Mechanics 
Thermodynamics 
Researchers have reported using MACSYMA to explore problems i n : 
A i r f o i l Design 
Nuclear Magnetic Resonance 
Atomic Scattering Cross Sections Optimal Control Theory 
B a l l i s t i c Missile Defense Systems Polymer Modeling 
Decision Analysis i n Medicine 
Propeller Design 
Electron Microscope Design 
Robotics 
Emulsion Chemistry 
Ship Hull Design 
F i n i t e Element Analysis 
Spectral Analysis 
Helicopter Blade Motion 
underwater Shock Waves 
Maximum Likelihood Estimation 
Genetic Studies of Family Resemblance 
Large Scale Integrated Circuit Design 
Resolving Closely Spaced Optical Targets 
Examples of MACSYMA 
Polynomial Equations. Here i s an elementary example that 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch008
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

104 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
demonstrates the a b i l i t y of MACSYMA to solve equations. In MACSYMA, 
as w i t h most systems, one has user input l i n e s and computer 
output 
l i n e s . 
Below, i n the input l i n e ( C I ) , we have w r i t t e n an expression 
i n an ALGOL l i k e syntax, terminated i t w i t h a semi-colon, and i n 
(Dl) 
the computer echos the expression by d i s p l a y i n g i t i n a two 
dimensional format i n a form s i m i l a r to hand n o t a t i o n . 
Terminating 
an input s t r i n g w i t h $ i n h i b i t s the d i s p l a y of the D l i n e s . 
(CI) 
Χ
Λ3+B*X~2+Α
Λ2*X~2-9*Α*Χ
Λ 2+A~2*B*X-2*A*B*X-
9*A~3*X+14*A~2*X-2*A'
S3*B+14*A~4=0; 
3 
2 
2 
2 
2 
2 
3 
(Dl) 
Χ + B X 
+ A 
X - 9 A X + A 
B X - 2 A B X - 9 A 
X 
2 
3 
4 
+ 14 A X - 2 A B + 1 4 A 
« 0 
In (C2) we now ask MACSYMA to solve the expression (Dl) for X 
and the three roots appear i n a l i s t i n (D2). 
(C2) 
S0LVE(D1,X); 
2 
(D2) 
[X - 7 A - Β, 
X « - A , 
X » 2 A] 
Notice that MACSYMA has obtained the roots a n a l y t i c a l l y and 
that numeric approximations have not been made. 
This demonstrates a 
fundamental difference between a Computer Algebra system and an 
ordinary numeric equation s o l v e r , namely the a b i l i t y to obtain a 
s o l u t i o n without approximations. 
I could have given MACSYMA a 
"numeric" cubic equation i n X by specifying numeric values for A and 
B. MACSYMA then would have solved the equation and given the numeric 
roots approximately or exactly depending upon the s p e c i f i e d command. 
MACSYMA can also solve quadratic, cubic and q u a r t i c 
equations 
as w e l l as some classes of higher degree equations. 
However, i t 
obviously cannot solve equations a n a l y t i c a l l y i n closed form when 
methods are not known, e.g. a general f i f t h degree (or higher) 
equation. 
D i f f e r e n t i a l C a l c u l u s . 
MACSYMA knows about c a l c u l u s . 
In (Dl) we 
have an exponentiated function that i s often used as an example i n a 
f i r s t course i n d i f f e r e n t i a l c a l c u l u s . 
(Dl) 
X 
X 
X 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch008
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

8. 
PAVELLE 
Computer Algebra: Capabilities and Applications 
105 
We now ask MACSYMA to d i f f e r e n t i a t e 
(Dl) with respect to X to 
obtain t h i s c l a s s i c textbook r e s u l t of d i f f e r e n t i a t i o n . 
Notice how 
f a s t , 
3/100 CPU seconds, 
MACSYMA computes t h i s d e r i v a t i v e . 
(C2) 
DIFF(D1,X); 
Time= 30 msec. 
X 
X
X 
X - 1 
(D2) 
Χ 
(X 
LOG(X) (LOG(X) + 1) + X 
) 
Below i s a more complicated f u n c t i o n , the error function of the 
tangent of the arc-cosine of the natural logarithm of X . Notice that 
MACSYMA does not d i s p l a y the i d e n t i c a l input. 
This i s because the 
input i n (CI) passes through MACSYMA's s i m p l i f i e r . 
MACSYMA 
recognizes that the tangent of the arc-cosine of a function 
s a t i s f i e s a trigonometric i d e n t i t y , namely TAN(AC0S(X)) • 
SQRT(1-X"2)/X. 
I t takes t h i s i n t o account before d i s p l a y i n g ( D l ) . 
(CI) 
ERF(TAN(ACOS(LOG(X)))); 
2 
SQRT(1 - LOG (X)) 
(Dl) 
ERF( 
) 
LOG(X) 
Now when MACSYMA i s asked to d i f f e r e n t i a t e 
(Dl) w i t h respect 
to 
X, i t does so i n a straightforward manner and s i m p l i f i e s the 
r e s u l t 
using the r a t i o n a l canonical s i m p l i f i e r RATSIMP. 
This command puts 
the expression i n a numerator-over-denominator 
form canceling any 
common d i v i s o r s . 
In (D2) the symbols %E and %PI are 
MACSYMA's 
representations 
for the base of the natural logarithms and p i , 
r e s p e c t i v e l y . 
(C2) 
DIFF(D1,X),RATSIMP; 
Time= 1585 msec. 
1 
1 
2 
LOG (X) 
2 %E 
(D2) 
2 
2 
SQRT(%PI) X LOG (X) SQRT(1 - LOG (X)) 
F a c t o r i z a t i o n 
MACSYMA can factor expressions. 
Below i s a m u l t i v a r i a t e polynomial 
i n four v a r i a b l e s . 
2
7
4
8 
2
6
3
8 
3
7
4
6 
(Dl) - 36 W Χ Υ Ζ 
+ 3 W X Y Z 
- 24 W Χ Υ Ζ 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch008
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

106 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
3
6
3
6 
2
8
6
5 
4
7
6
5 
+ 2 W 
Χ Υ Ζ 
+ 9 6 W 
Χ Y Ζ 
- 1 6 8 W 
Χ Υ Ζ 
2
7
6
5 
2 
10 
5 5 
2
7
5
5 
7 5 5 
+ 12 W Χ Υ Ζ 
- 216 W Χ 
Υ Ζ 
- 8 W Χ Υ Ζ 
+ 
9 Χ Υ Ζ 
4
6
5
5 
2
6
5
5 
2
9
4
5 
7 3 5 
+ 14 W Χ Υ Ζ 
- W 
Χ Υ Ζ 
+ 1 8 W 
Χ Υ Ζ 
+87 Χ Υ Ζ 
2
6
3
5 
7 5 3 
7 3 3 
3
6
3
3 
- 3 W Χ Υ Ζ 
+ 6 W X 
Υ Ζ 
+ 5 8 W X 
Υ Ζ 
- 2W 
Χ Υ Ζ 
8 7 2 
2
7
7
2 
7
7
2 
10 
6 2 
- 2 4 X Y Z + 4 2 W X Y Z - 3 X Y Z + 5 4 X 
Υ Ζ 
8 5 2 
2
7
5
2 
7 5 2 
4
6
5
2 
- 232 Χ Υ Ζ 
+ 4 1 4 W X Y Z 
- 29 Χ Υ Ζ 
- 14 W Χ Υ Ζ 
2
6
5
2 
10 
4 2 
2
9
4
2 
+ W
X
Y
Z
+ 
522 X 
Y
Z
-
1
8
W
X
Y
Z 
We now c a l l the function FACTOR on (Dl) and 
(C2) 
FACTOR(Dl); 
Time= 111998 msec. 
6
3
2
3 
2 
2
2
2 
3 
(D2) - Χ Υ Ζ 
(3 Ζ 
+ 2 W Z - 8 X Y 
+ 1 4 W 
Y - Y + 1 8 X 
Y) 
2 
3 
2 
3 
2 
2 
(12 W X Y Z - W 
Ζ 
- 3 X Y - 29 X + W ) 
MACSYMA factors t h i s massive expression i n about two CPU 
minutes. 
One can also extend the f i e l d of f a c t o r i z a t i o n to the 
Gaussian integers or other algebraic f i e l d s (10). 
S i m p l i f i c a t i o n . 
A very important feature of MACSYMA i s i t s 
a b i l i t y 
to simplify expressions. 
When I studied plane-wave metrics for a 
new g r a v i t a t i o n theory (11, 12)» one p a r t i c u l a r c a l c u l a t i o n produced 
an expression with several hundred thousand terms. 
From geometrical 
arguments I knew the expression must simplify and indeed, using 
MACSYMA, the expression collapsed to a small number of pages of 
output. 
The f o l l o w i n g expression occurred repeatedly i n the course 
of the c a l c u l a t i o n and caused the collapse of the larger expression 
during 
s i m p l i f i c a t i o n . 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch008
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

8. 
PAVELLE 
Computer Algebra: Capabilities and Applications 
107 
2 
2 
2 
2 
(SQRT(R + A ) + A) (SQRT(R + Β ) + B) 
( D l ) 
2 
R 
2 
2 
2 
2 
SQRT(R + Β ) + SQRT(R + A ) + Β + A 
2 
2 
2 
2 
SQRT(R + Β ) + SQRT(R + A ) - Β - A 
(C2) RATSIMP(Dl); 
Tim€= 138 msec. 
(D2) 
0 
When the canonical s i m p l i f i e r RATSIMP i s called on (Dl) above 
i t returns zero. At f i r s t I did not believe that (Dl) i s zero, and 
I spent 14 minutes v e r i f y i n g i t by hand (almost exceeding my 15 
minute l i m i t ) . I t i s not easy to prove. Combining the expressions 
over a common denominator results i n a numerator that contains 20 
terms when f u l l y expanded, and one must be very careful to assure 
cancellation. Try i t by hand! 
Indefinite Integration. MACSYMA can handle integrals involving 
rational functions and combinations of r a t i o n a l , algebraic 
functions, and the elementary transcendental functions. I t also has 
knowledge about error functions and some of the higher 
transcendental functions. 
Below i s an integral that i s quite d i f f i c u l t to do by hand. I t 
i s not found i n standard tables i n i t s given form although i t may 
transform to a recognized case. I t i s especially d i f f i c u l t to do by 
hand unless one notices a t r i c k that involves performing a p a r t i a l 
fraction decomposition of the integrand with respect to LOG(X). 
However, MACSYMA handles i t readily. 
/ 
[ LOG(X) - 1 
(Dl) 
I 
dX 
] 
2 
2 
/ LOG (X) - X 
(C2) INTEGRATE(Dl,X); 
Time= 744 msec. 
L0G(L0G(X) + X) 
L0G(L0G(X) - X) 
(D2) 
2 
2 
Definite Integration. Definite integration i s far more d i f f i c u l t to 
code than indefinite integration because the number of known 
techniques i s much larger. One has the added complication of taking 
l i m i t s at the endpoints of the integral. MACSYMA has impressive 
capabilities for definite integration. Here i s an example of a 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch008
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

108 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
function whose d e f i n i t e i n t e g r a l does not appear to be tabulated: 
2 
2 
- U X 
(Dl) 
X %E 
LOG(X) 
(C2) 
INTEGRATE(Dl,X,0,INF),FACTOR; 
Time
5 5 138442 msec. 
SQRT(%PI) (LOG(U) + 2 LOG(2) + %GAMMA - 2) 
( D 2) 
3/2 
8 U 
In (C2) above we have asked MACSYMA to integrate (Dl) w i t h 
respect to X from 0 to i n f i n i t y . 
In the answer, %GAMMA i s the 
MACSYMA syntax for the Euler-Mascheroni constant
 
s 
0.577215664.· 
· 
In a d d i t i o n to d e f i n i t e i n t e g r a t i o n , MACSYMA can perform 
numeric i n t e g r a t i o n using the Romberg numeric i n t e g r a t i o n procedure. 
There are a number of other numeric techniques a v a i l a b l e . 
And, one 
has the a b i l i t y to evaluate expressions numerically to a r b i t r a r y 
p r e c i s i o n . 
Taylor/Laurent S e r i e s . 
The Taylor (Laurent) series c a p a b i l i t y i s 
very impressive. 
Below we ask for the f i r s t 15 terms of the 
series 
of (Dl) about the point X « 0. 
Notice that MACSYMA computes t h i s 
expression i n less than 1/2 CPU second. 
2 
3 
Β L0G(X 
- X + 1) 
(Dl) 
A SIN(X ) + 
5 
X 
(C2) 
TAYLOR(D1,X,0,15); 
Time
5 3 365 msec. 
2 
3 
Β 
Β 
2 B 
Β 
Β 
Β Χ 
Β Χ 
(Β + 8 A) Χ 
(D2)/T/ 
+ 
+ 
+ 
+ 
4 
3 
2
4
X
5
3
7 
8 
Χ 
2 Χ 
3 Χ 
4 
5 
6 
7 
8 
9 
(2 Β) Χ 
Β Χ 
Β Χ 
Β Χ 
Β Χ 
(3 Β - 7 A) Χ 
9 
10 
11 
6 
13 
42 
10 
11 
12 
13 
14 
15 
(2 Β) Χ 
Β Χ 
Β Χ 
Β Χ 
Β Χ 
(6 Β + A) Χ 
15 
16 
17 
9 
19 
120 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch008
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

8. PAVELLE 
Computer Algebra: Capabilities and Applications 
109 
The program can also compute Taylor (Laurent) series i n several 
v a r i a b l e s . 
Ordinary D i f f e r e n t i a l Equations. 
Another powerful feature i s the 
MACSYMA program ODE. ODE i s a c o l l e c t i o n of algorithms for 
solving 
ordinary d i f f e r e n t i a l equations. It was b u i l t over several years by 
E . L . L a f f e r t y , J . P . Golden, R . A . Bogen and B . Kuipers, and i t s 
c a p a b i l i t i e s are described i n the MACSYMA Reference Manual (6) i n 
V2-4-14. 
In ( C I ) , we f i r s t declare that Y i s a function of X . This 
assures that the d e r i v a t i v e (2nd) of Y w i t h respect to X w i l l 
not 
vanish when (C2) i s evaluated. 
(CI) 
DEPENDS(Y,X)$ 
(C2) 
(1+X"2)*DIFF(Y,X,2)-2*Y=0; 
2 
(D2) 
( X + 1 ) Y 
- 2 Y = 0 
X X 
We now ask the system to solve (D2) for Y as a function of X 
using the ODE command. 
The general s o l u t i o n w i t h the two 
i n t e g r a t i o n constants, %K1 and %K2 i s given i n (D3) i n about two CPU 
seconds. 
The program can also f i n d powerseries solutions for some 
d i f f e r e n t i a l equations when i t can solve the recurrence r e l a t i o n . 
It does t h i s i n (D4). 
MACSYMA can be used to check the answer (D3). 
In (C5) we t e l l the system to substitute 
(D3) i n t o (D2), 
d i f f e r e n t i a t e the r e s u l t and 
s i m p l i f y . 
(C3) 
0DE(D2,Y,X); 
Time- 2068 msec. 
2 
ATAN(X) 
X 
2 
(D3) 
Y = %K2 (X 
+ 1) ( 
+ 
) + %K1 (X 
+ 1) 
2 
2 
2 X 
+ 2 
(C4) 
0DE(D2,Y,X,SERIES); 
Time
2 8766 msec. 
INF 
==== 
1 2 
1 
2 
\ 
(- 1) 
X 
(D4) 
Y = %K1 (X 
+ 1) - %K2 X > 
/ 
1 
1 
= 
(I - -) (I + -) 
0 
2 
2 
(C5) 
D2,D3,DIFF,RATSIMP; 
Time= 2051 msec. 
(D5) 
0 = 0 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch008
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

110 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
MACSYMA is a computer system which performs many highly 
sophisticated computations that w i l l amaze people who use 
mathematical tools. 
For many types of calculations MACSYMA offers 
enormous advantages over numeric systems. 
In this paper I have 
shown but a few of the capabilities of MACSYMA. 
It is difficult 
to 
present many capabilities in a few pages. References (j>, 13) provide 
many more examples as well as motivating the use of MACSYMA in 
several fields of research and development. 
Literature Cited 
1. 
Moses, J . MACSYMA - the fifth year. Proceedings Eurosam 74 
Conference. Aug. 1974, Stockholm. 
2. 
Pavelle, R.; Rothstein, M.; Fitch, J.P. Computer Algebra. 
Scientific American 1981, 245. 
3. 
van Hulzen, J.Α.; Calmet, J . Computer Algebra Systems. In 
"Computer Algebra, Symbolic and Algebraic Manipulation"; 
Buchberger, B.; Collins, G.E.; Loos, R., Eds.; Springer-Verlag: 
Wien - New York, 1983, p. 220. 
4. 
Yun, D.Y.Y.; Stoutemyer, D. Symbolic Mathematical Computation. 
In "Encyclopedia of Computer Science and Technology" 15; Belzer, 
J.; 
Holzman, A.G., Eds.; Marcel Dekker: New York - Basel, 1980, 
p. 235. 
5. 
Pavelle, R., Ed., "Applications of Computer Algebra"; Kluwer: 
Boston, 1985. 
6. 
"The MACSYMA Reference Manual (Version 10)"; Massachusetts 
Institute of Technology and Symbolics, Inc.: Cambridge, MA, Dec. 
1984. 
7. 
Proceedings of the 1977 MACSYMA users' Conference. R.J. 
Fateman, Ed., Berkeley, CA, July 1977. NASA: CP-2012, 
Washington, D.C. 
8. 
Proceedings of the 1979 MACSYMA users' Conference. V.E. Lewis, 
Ed., June 1979, Washington, D.C. 
9. 
Proceedings of the 1984 MACSYMA users' Conference. V.E. 
Golden, Ed., July 1984, General Electric Corporate Research and 
Development, Schenectady, NY. 
10. 
Wang, P.S. Math. Comp., 1978, 32, 1215. 
11. 
Mansouri, F.; Chang, L.N. Phvs. Rev. D 1976, 13, 3192. 
12. 
Pavelle, R. Phvs. Rev. Lett. 1978, 40, 267. 
13. 
Pavelle, R.; Wang, P.S. J. Symbolic Computation. 1985, 1, 
69-100. 
RECEIVED January 24, 1986 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch008
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

9 
A Rule-Based Declarative Language 
for Scientific Equation Solving 
Allan L. Smith 
Chemistry Department, Drexel University, Philadelphia, PA 19104 
Procedural languages for scientific computation are briefly reviewed 
and contrasted with declarative languages. The capabilities of 
TK!Solver are explained, and two examples of its use in chemical 
computations are given. 
Most of the applications of artificial intelligence in chemistry so far have not involved 
numerical computation as a primary goal. Yet there are aspects of the AI approach to 
problem-solving which have relevance to computation. In scientific computation, one 
could view the knowledge base as the set of equations, input variable values, and unit 
conversions relevant to the problem, and the inference engine the numerical method 
used to solve the equations. This paper describes such a software system, 
TK!Solver. 
Brief Review of Software for Scientific Computation 
Since the beginning of electronic computing, one of the major incentives for 
developing computer languages has been to improve the ease of solving mathematical 
problems arising in science and engineering. Many such problems can be reduced to 
the solution of a set of Ν algebraic equations - not necessarily linear - in Ν 
unknowns. The earliest ways of doing this involved direct hand coding in 
hexadecimal machine language or in assembly language mnemonics, specifying in 
excruciating detail the procedures needed to transform input data into results. My 
first experience with computers (I) was on a Bendix laboratory computer, generating 
three-component polymer-copolymer phase diagrams in assembly language. After a 
summer of this I became quickly convinced that there must be a better way. 
In the early 1960's the first compiled procedural programming language for 
scientific computation, FORTRAN, became widely used in the US, with a parallel 
development of the use of ALGOL in Europe. Later in the decade, the interpretive 
procedural language BASIC emerged, followed by the powerful algebraic notational 
language APL. The first structured, procedural language developed to teach the 
concepts of programming, Pascal, appeared in 1971, followed later in the decade by 
the C language. 
In all of these procedural languages (also called imperative languages (2), one of 
the basic elements of syntax is the assignment statement, in which an algebraic 
0097-6156/ 86/ 0306-0111 $06.00/ 0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch009
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

112 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
expression is evaluated and stored in a named storage location called a variable. 
Although both BASIC and FORTRAN use the equality symbol " = " for the 
assignment statement, Pascal emphasizes the procedural nature of the assignment 
statement by using the symbol " := " , thus distinguishing it from an algebraic 
equation. Another characteristic of procedural languages is that they specify in detail 
the procedures and flow of control needed to solve a problem, using such structures 
as conditionals and loops. 
Parallel to, but largely independent of, this development of procedural 
computational languages was the evolution of non-procedural or declarative 
languages used for symbolic processing. Eisenbach and Sadler (2) have reviewed the 
evolution of declarative languages, which began with LISP in 1960 and includes such 
recent languages as Prolog. One of the characteristics of declarative languages is that 
problems are defined in terms of logical or mathematical relationships, rather than 
assignment statements and flow of control, and that the language itself then decides 
how best to solve the problem posed and in what order to use the information 
provided. Declarative languages have not so far been widely used in scientific 
computation because of their computational inefficiency. 
There have also been important developments in the past decade in scientific 
applications software as scientists and engineers have looked for other ways of 
solving problems than by writing a program in FORTRAN or another procedural 
language. Libraries of mathemetical procedures commonly used in science and 
engineering became available for those who wanted to write their own procedural 
software but needed robust numerical algorithms in an easily used form. One of the 
first full scientific software packages which freed the user from writing in a compiled 
or interpreted procedural language was RS/1, which evolved as a part of the Prophet 
Network established by NIH for its research grantees in the 1970's and now runs as 
a separate package on DEC sur^rminis and personal computers (2). Another was the 
electronic spreadsheet, first embodied in its simple tabular format in Visicalc but now 
enhanced with plotting and sorting capabilities in Lotus 1-2-3 and several other 
packages. A third example is statistical software such as SPSS (4) or Minitab (5). 
Symbolic processing languages such as LISP led to the development of symbolic 
mathematics packages such as MACSYMA; their use in chemistry has been reviewed 
by Johnson (©. A recent ACS Symposium on symbolic algebraic manipulation 
contains a full description of MACSYMA among other systems, and a variety of 
applications in chemistry (2). 
Scientific applications software packages are often characterized by close 
attention to the design of the user interface, sometimes at the expense of program size 
or execution time. By far the dominant computational idiom in these packages, 
however, is procedural. For example, RS/1 has an internal language called RPL, 
modelled after the procedural language PL/1, in which specialized procedures and 
functions not available in the package may be written by the user. In spreadsheets, the 
cell is the basic storage location for either data or formulae. Cells are provided with 
data by an assignment process, and formulae reference other cell locations as 
variables. 
TK!SQlygr 
TKîSolver (S) is a high-level computer language for solving sets of algebraic 
equations and tabulating or plotting their results. In TKîSolver, equations are viewed 
as relationships or rules, not as assignment statements, and in that sense it may be 
viewed as a declarative language. The basic computational approach taken by 
TKîSolver grew out of the research of textile engineer Milos Konopasek in the 
1970's. It was realized early on by Konopasek and Papaconstadopoulos (2) that a 
high level computational langauge need not be procedural but could be declarative; 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch009
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

9. SMITH 
A Rule-Based Declarative Language for Equation Solving 
113 
this point has been recently amplified by Konopasek and Jayaraman (1Q), who also 
make the case for TKîSolver's being an expert system for equation solving. 
To produce TKîSolver, the problem-solving methodology implemented by 
Konopasek in his Question Answering System (2) was combined with the experience 
in designing full-screen user interfaces of Software Arts, Inc. (the originators of the 
electronic spreadsheet). The goal of the language was to obviate three of the 
time-consuming stages of procedural program development (11): (1) algebraic 
transformations necessary for formulating assignment statements; (2) sequencing 
assignment statements to secure desired flow of information through the program; 
and (3) setting up input and output statements. The capabilities of TKîSolver, which 
runs on a number of different personal computers, are as follows (10,11): 
(1) It parses entered algebraic equations and generates a list of variables. 
(2) It solves sets of equations using a consecutive substitution procedure (the 
direct solver). 
(3) It solves sets of simultaneous (non-linear) algebraic equations by a modified 
Newton-Raphson iterative procedure when consecutive substitution fails 
(the iterative solver). 
(4) It searches through tables of data and evaluates either unknown function 
values or arguments when required in solving. 
(5) It performs unit conversions with definable conversion factors. 
(6) It detects inconsistencies in problem formulation and domain errors. 
(7) It generates series of solutions for lists of input data and displays results in 
tabular or graphical form. 
To see how such a language can speed up the process of equation-solving, 
consider the steps needed to solve a set of algebraic equations when using a 
procedural language. First, you must identify the variable or variables for which you 
need to solve. Next, you must use algebraic substitution methods to express the 
variables to be solved for in terms of the known variables using assignment 
statements. Finally, you must write a program to input values for the known 
variables, evaluate the unknown variables, and output the results. There are several 
disadvantages to this method. If a different combination of variables serves as input 
for another similar problem based on the same set of equations, the algebra must be 
reworked to solve for those new variables. In many cases it may not be possible to 
obtain analytic expressions usable in assignment statements, so you must find some 
numerical approximation algorithm suitable for the problem at hand and either obtain 
or write the code based on that algorithm. 
A Chemical Example: The van der Waals Gas 
Take, for example (12), the problem of solving for the P-V-T properties of a real gas 
obeying the van der Waals equation of state, 
P = n R T / ( V - n b ) - n
2 a / V
2 
(1) 
where a and b are coefficients characteristic of a given gas. Solving for P, given n, 
V, and Τ is a simple assignment statement, but solving for η given Ρ, V, and Τ 
requires considerable algebraic manipulation, followed either by applying the formula 
for the roots of a cubic equation or by using a numerical technique for determining 
roots (the latter usually requires more mathematical analysis - for example, finding 
first derivatives using the Newton-Raphson method). 
Figure 1 shows the Rule Sheet for a TKîSolver model REALGAS.TK (12). 
The first rule is the van der Waals equation of state. The second defines the gas 
constant, and the third rule defines the number density. The fourth defines the 
compressibility factor z, a dimensionless variable which measures the amount of 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch009
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

114 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
departure of a real gas from ideality. The next three rules give the critical pressure, 
molar volume, and temperature of a van der Waals in terms of the coefficients a and 
b. The Van der Waals equation can be recast in a form which uses only reduced, 
dimensionless variables; these are defined in the next three rules. The last two rules 
provides values for the van der Waals coefficients a and b when the name of the gas 
is given (user-defined functions with symbolic domain elements and numerical range 
elements can be used in any model which requires reference to built-in data tables). 
S Rule 
"Equation of State of a van der Waals Gas. Chap. 4. Model name: REALGAS.TK 
* R = 0.0820568 
"Value of gas constant 
*nd = n/V 
"Number density 
*z = P* V/(n*R*T) 
"Compressibility factor 
*Pc = a/(27*b
A2) 
"Critical Pressure 
* Vc = 3 * b 
"Critical Molar Volume 
*Tc = 8*a/(27*b*R) 
"Critical Temperature 
*Pred = P/Pc 
"Reduced pressure 
* Vred = V/Vc 
"Reduced volume 
*Tred = T/Tc 
"Reduced temperature 
* a = acoeff ( gasname ) 
"Function for Van der Waals a coefficient 
* b = bcoeff ( gasname ) 
"Function for Van der Waals b coefficient 
Figure 1. Rule Sheet for Model REALGAS.TK 
A typical use for this model would be to solve for the number of moles of a gas, 
given its identity, pressure, volume, and temperature. The iterative solver is used for 
this purpose. You must decide which variable to choose for iteration and what a 
reasonable initial guess is. Real gases approach ideal behavior at low pressure and 
moderate temperatures. Since the compressibility factor ζ is 1 for an ideal gas, and 
since knowing ζ along with Ρ, V, and Τ allows a calculation of n, we choose ζ as 
the iteration variable and 1.0 as the initial guess. 
The Variable Sheet with the solution to such a problem is shown in Figure 2. 
Unit conversions from psi to atmospheres, from cubic feet to liters, and from 
Fahrenheit to Kelvins have been built into the model via the Units Sheet. For input 
values of 100 cubic feet of acetylene at 300 psi and 66°F, there are 728.9 moles of 
acetylene and the value of ζ of 0.874 indicates that the deviation from ideality is 
12.6%. 
Another Example: Acid Rain 
Problems in chemical equilibrium with many reactions involving many species 
often generate mathematical models containing large sets of simultaneous, nonlinear 
equations which must be solved by numerical means. TKîSolver is a good tool for 
solving such problems. For example, consider the acid-base chemistry of a raindrop. 
Vong and Charlson (12) have developed an equilibrium model which predicts the pH 
of cloud water, assuming an atmosphere with realistic levels of three soluble, 
hydrolyzable gases: SO^, C0 2, and NH 3. Also included is the effect of acidic dry 
aerosols, particles of sub-micron diameter containing high concentrations of sulfuric 
and nitric acid. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch009
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

9. 
SMITH 
A Rule-Based Declarative Language for Equation Solving 
115 
St 
Input 
Name 
Output 
Unit 
Comment 
300 
Ρ 
psi 
pressure 
100 
V 
ft
A3 
volume 
η 
728.92419 
mol 
number of moles 
R 
.0820568 
l*atm/(mo 
gas constant 
66.000000 Τ 
oF 
temperature 
'acetylen 
gas nam 'text 
name of the gas 
ζ 
.87417992 
decimal 
compressibility factor 
nd 
.97443505 
mol/1 
molar density 
a 
4.39 
atm*l
A2/m 
van der Waals a coefficient 
b 
.05136 
1/mol 
van der Waals b coefficient 
Pc 
61.638310 
atm 
critical pressure 
Vc 
.15408 
1 
critical molar volume 
Tc 
308.63925 
Κ 
critical temperature 
Pred 
.33118688 
decimal 
reduced pressure 
Vred 
4854.9325 
decimal 
reduced volume 
Tred 
.94624676 
decimal 
reduced temperature 
Figure 2. Variable Sheet for REALGAS.TK with Solution 
There are five laws of chemical equilibrium relevant to the Charlson-Vong model: 
(1) the ideal gas law, relating gas species density to its temperature and partial 
pressure; (2) Henry's law, relating the partial pressure to the concentration of 
dissolved gas; (3) the law of mass action, giving equilibrium constant expressions for 
the hydrolysis reactions of the dissolved gases; (4) conservation of mass for species 
containing sulfur(IV), sulfur (VI), carbon(IV), nitrogen(V), and nitrogen(-IH); and 
(5) conservation of charge. Applying these laws, Vong and Charlson were able to 
calculate the pH of a raindrop by solving a set of 17 equations in 29 variables (cloud 
water content, temperature, partial pressures, and species concentrations) and 9 
parameters (Henry's law constants, equilibrium constants, and the gas constant). 
They wrote a FORTRAN program which solved all equations but one, that of charge 
conservation. The pH at electrical neutrality was determined by a graphical method, in 
which the total positive and negative charge concentrations were calculated and 
plotted for a series of assumed pH's and the crossing point found. 
A TKîSolver model called RAINDROP.TK has beendeveloped to incorporate 
the full Charlson-Vong model of cloud water equilibrium (12), including the 
temperature dependence of all equilibrium constants. The iterative solver makes it 
possible to compute the pH at charge neutrality without having to make plots of 
intermediate results. The Rule Sheet is shown in Figure 3. 
The Unit Sheet contains a number of conversions necessary to accommodate the 
variety of units used in experimental atmospheric chemistry. The Variable Sheet is 
arranged so that the variables at the top are the ones normally chosen as input 
variables. Since the usual goal of running the model is to determine the pH of the 
raindrop, the variable pH is chosen as the one on which to iterate. 
The following problem, taken to match the conditions in Figure 2 of reference 
13, is typical of those solved in less than one minute on an IBM PC with this model: 
"a cloud at 278 Κ contains 0.5 grams of liquid water per cubic meter of air. The 
atmosphere of the cloud contains 5 ppb sulfur dioxide, 340 ppm carbon dioxide, 0.29 
μg/m
3 rof nitrogen base, 3 μg/m
3 of sulfate aerosol, and no nitrate aerosol. What is 
the pH of the cloud water?' Figure 4 shows the Variable Sheet after solution. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch009
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

116 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Rule 
Equilibrium pH of a Raindrop, Charlson-Vong model. Chap. 8. Model name: RAINDROP.TK 
PS02 = NS02 * R * Τ 
"Ideal gas law for S02 
PNH3 = NNH3 * R * Τ 
"Ideal gas law for NH3 
PC02 = NC02 * R * Τ 
"Ideal gas law for C02 
PS02 = CS02 * KHS 
"Henry's law for S02 
PNH3 = CNH3 * KHN 
"Henry's law for NH3 
PC02 - CC02 * KHC 
"Henry's law for C02 
K1S = CHS03m * CHp / CS02 
"Mass action law for S02 - HS03m 
K2S = CS032m * CHp / CHS03m 
"Mass action law for HS03m - S032m 
KB = CNH4p * COHm / CNH3 
"Mass action law for NH3 - NH4p 
K1C = CHC03m * CHp / CC02 
"Mass action law for C02 - HC03m 
K2C = CC032m * CHp / CHC03m 
"Mass action law for HC03m - C032m 
KW = CHp * COHm 
"Mass action law for water 
NTS4 = NS02 + L * (CS02 + CHS03m + CS032m ) "Mass balance for sulfur(IV) 
NTN3m = NNH3 + L * ( CNH3 + CNH4p ) 
"Mass balance for nitrogen(-ffl) 
NTC4 = NC02 + L * (CC02 + CHC03m + CC032m ) "Mass balance for carbon(IV) 
NTN5 = L * CN03m 
"Mass balance for nitrogen(V) 
NTS6 = L * CS042m 
"Mass balance for sulfur(VI) 
C^4p+CHp=ŒS03m+2*CS032m+COHm+CHC03m+2*CC032m+CN03m+2*CS042m 
"Chargebalance 
pH = -log(CHp) 
"Definition of pH 
"Tenperature-dependent equilibrium constants 
KHS = 0.379 * exp ( -3145.99 * (278 - Τ ) / ( 278 * Τ ) ) 
KHC= 16.6* exp (-2367.65* ( 2 7 8 - Τ ) / ( 2 7 8 * Τ ) ) 
KHN = 7.11E-3 * exp( -3730.87 * (278 - T ) / (278 * T) ) 
K1S = 2.06E-2 * exp(2003.54 * (278 - T ) / (278 * T) ) 
K2S = 8.88E-8 * exp (1461.46* (278-Τ)/(278 *T)) 
KlC = 2.94E-7*exp(-1716.92*(278-T)/(278*T)) 
K2C = 2.74E-11 * exp (-2217.49 * ( 278 - Τ ) / ( 278 * Τ ) ) 
KB = 1.5E-5 * exp ( -685.59 * ( 278 - Τ ) / ( 278 * Τ ) ) 
KW = 1.82E-15 * exp ( -7057.27 * ( 278 - Τ ) / ( 278 * Τ ) ) 
R = 0.0820565 
"Ideal gas constant 
Figure 3: Rule Sheet for Model RAINDROP.TK 
Summary of Other Chemical Applications 
In addition to the two examples above, I have developed TKîSolver models for the 
ideal gas, for two-component mixture concentrations, for acid base chemistry 
(including the generation of titration curves), for transition metal complex equilibria, 
for general gaseous and solution equilibria, and for linear regression (12). 
Drexel undergraduate students in both the lecture and the laboratory of physical 
chemistry have been using TKîSolver for such calculations as least squares fitting of 
experimental data, van der Waals gas calculations, and quantum mechanical 
computations (plotting particle-in-a-box wavefunctions, atomic orbital electron 
densities, etc.). I use TKîSolver in lectures (on a Macintosh with video output to a 
25" monitor) to solve simple equations and plot functions of chemical interest. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch009
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

9. SMITH 
A Rule-Based Declarative Language for Equation Solving 
117 
TKîSolver has also had heavy use in the material balance course in chemical 
engineering, and in a mathematical methods course in materials engineering. Graduate 
students in chemistry are using it in research projects in spectroscopy and kinetics. 
In the teaching of quantum mechanics, TKîSolver has proved especially useful. 
For example, Berry, Rice, and Ross Q4) give several problems on the regions of 
Input 
Name 
Output 
Unit 
Comment 
278 
Τ 
Κ 
temperature 
.5 
L 
g/m
A3 
liquid water content of the cloud 
5 
PS02 
ppb 
partial pressure of S02 
340 
PC02 
ppm 
partial pressure of C02 
.29 
NTN3m 
ug(N)/m
A3 
total nitrogen base concentration 
3 
NTS6 
ug(S04)/m 
sulfate aerosol concentration 
0 
NTN5 
ug(N03)/m 
nitrate aerosol concentration 
pH 
4.0190385 decimal 
pH of water in the cloud 
PNH3 
2.9020E-4 
ppb 
partial pressure of NH3 
CN03m 0 
mol/lw 
concentration of N03 anion 
CS042m .0000625 
mol/lw 
concentration of S04 anion 
NS02 
2.192E-10 
mol/la 
concentration of gaseous S02 
CS02 
1.3193E-8 
mol/lw 
concentration of dissolved S02 
CHS03m 2.8395E-6 
mol/lw 
concentration of HS03 anion 
CS032m 2.6344E-9 
mol/lw 
concentration of S03 anion 
NC02 
1.4905E-5 
mol/la 
concentration of gaseous C02 
CC02 
2.0482E-5 
mol/lw 
concentration of dissolved C02 
CHC03m 6.2915E-8 
mol/lw 
concentration of HC03 anion 
CC032m 1.801E-14 
mol/lw 
concentration of C03 anion 
NNH3 
1.272E-14 
mol/la 
concentration of gaseous NH3 
CNH3 
4.082E-11 
mol/lw 
concentration of dissolved NH3 
CNH4p 
3.2197E-5 
mol/lw 
concentration of NH4 cation 
CHp 
9.5711E-5 
mol/lw 
concentration of hydrogen ion 
COHm 
1.902E-11 
mol/lw 
concentration of hydroxide ion 
NTS4 
2.206E-10 
mol/la 
total concentration of sulfur (IV) 
NTC4 
1.4905E-5 
mol/la 
total concentration of carbon (TV) 
KHS 
.379 
atm*la/mo 
Henry's law constant for S02 
KHC 
16.6 
atm*la/mo 
Henry's law constant for C02 
KHN 
.00711 
atm*la/mo 
Henry's law constant for NH3 
K1S 
.0206 
decimal 
equilibrium constant for S02 - HS03 
K2S 
8.88E-8 
decimal 
equilibrium constant for HS03 - S03 
K1C 
2.94E-7 
decimal 
equilibrium constant for C02 - HC03 
K2C 
2.74E-11 
decimal 
equilibrium constant for HC03 - C03 
KB 
.000015 
decimal 
equilibrium constant for NH3 - NH4 
KW 
1.82E-15 
decimal 
ionization constant for water 
R 
.0820565 
la*atm/(m 
ideal gas constant 
Figure 4 : Variable Sheet for Solution to Sample Problem 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch009
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

118 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
bonding and anti-bonding in diatomics, one of which requires the calculation and 
plotting of contours of constant bonding force. They suggest calculation of the 
bonding force on a large grid of points and then connecting points of constant force, 
but with TKîSolver it is possible to solve directly the set of parametric equations in r 
and theta and to plot the resulting contours. 
In summary, the rule-based, declarative approach to solving sets of algebraic 
equations presented by TKîSolver has proved to be a fruitful medium for chemical 
computations. 
Literature Cited 
1. S. Krause, A. L. Smith, and M. G. Duden, J. Chem. Phys. 1965, 43, 2144-45. 
2. S. Eisenbach and C.Sadler, Byte 1985, 10, 181-87; see also other articles on 
declarative languages in the same issue of Byte. 
3. "RS/1 Command Language Guide"; BBN Research Systems, Cambridge, Mass, 
1982. 
4. "SPSS X User's Guide"; McGraw-Hill, New York, 1983. 
5. T. A. Ryan, Jr. ,B. L. Joiner, and B. F. Ryan, "Minitab Student Handbook"; 
Duxbury Press, Boston, 1976. 
6. C.S. Johnson, J. Chem. Inf. Comp. Sci. 1983, 23, 151-7. 
7. R. Pavelle, ed. "Applications of Computer Algebra"; Kluwer Academic 
Publishers, Hingham, Mass, 1985. 
8. TK!Solver is a software product developed by Software Arts, of Wellesley, 
Mass., and introduced in late 1982. At the present time (November, 1985), the 
rights to distribute TK!Solver belong to the Lotus Development Corporation. 
9. M. Konopasek and C. Papaconstadopoulos, Computer Languages 1978, 3, 145 -
155. 
10. M. Konopasek and S. Jayaraman, Byte 1984, 9, 137-145 . See also M. 
Konopasek and S. Jayaraman, "The TK!Solver Book"; Osborne/Mc-Graw 
Hill, 1984. 
11. M. Konopasek, "Software Arts' TK!Solver: A Message to Educators"; 
unpublished manuscript, October, 1984. 
12. The examples in this paper are from A. L. Smith, "TK!Solver Pack in Chemical 
Equilibrium and Chemical Analysis"; McGraw-Hill, to be published. 
13. R. J. Vong and R. J. Charlson, J. Chem. Ed. 1985, 62, 141-3. 
14. R. S. Berry, S. A. Rice, and J. Ross, "Physical Chemistry"; John Wiley, 1980; 
Chap. 6. 
RECEIVED January 16, 1986 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch009
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

10 
A Chemical-Reaction Interpreter for Simulation 
of Complex Kinetics 
David Edelson
1 
AT&T Bell Laboratories, Murray Hill, NJ 07974 
Simulation of 
the 
kinetics 
of 
complex chemical 
systems is finding ever increasing use for analysis 
of 
reaction 
mechanism 
as 
well 
as 
for 
process 
prediction and control. 
Software for the solution of 
the large number of coupled mass-action differential 
equations is now readily available, as are reaction 
rate 
data 
banks 
for 
many 
systems 
of 
interest. 
However, application of the technique is discouraged 
by 
the 
tedious, 
error-prone 
task 
of 
manually 
formulating the differential equation set and coding 
it 
for 
the 
computer. 
Several 
chemical 
reaction 
interpreters which can do this have been written over 
the years; 
this 
report describes 
our most 
recent 
version 
which uses 
modern operating 
systems and 
programming techniques to implement an interactive, 
user-friendly 
program. 
Portability 
was 
a prime 
consideration 
in its 
design 
so that 
it 
could be 
interfaced 
with 
any differential 
equation 
solving 
program. 
Although it was written in C for use on 
machines 
having 
a 
UNIX 
operating 
system, 
the 
subroutines that it produces for the equation solver 
are in FORTRAN, so that they can be ported to other 
machines, 
and are compatible with most 
simulation 
packages in use today. 
Special features include free 
form input, 
batch or 
interactive 
operation, 
full 
ASCII 
capability, 
and dynamic storage 
allocation. 
The extensive use of the "structure" data type in the 
C source code makes it easy to modify or enhance the 
interpreter 
to 
suit 
the 
needs 
of 
the 
current 
application or computing environment. 
Computer 
s i m u l a t i o n of chemical 
r e a c t i o n or r e a c t i o n - t r a n s p o r t 
systems 
has l o n g 
been 
used 
i n chemical 
e n g i n e e r i n g 
p r o c e s s 
d e s i g n , and has more r e c e n t l y moved i n t o the chemical 
r e s e a r c h 
1 Current address: Department of Chemistry, Florida State University, Tallahassee, 
FL 32306 
0097-6156/86/0306-0119$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch010
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

120 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
a r e a , where i t has become a t o o l f o r the e l u c i d a t i o n of chemical 
mechanism(/). 
The 
t e c h n i q u e 
has 
a l s o 
found 
a p p l i c a t i o n 
i n the 
p r e d i c t i o n 
of 
the 
b e h a v i o r 
of 
l a r g e complex 
chemical 
systems, 
such as atmospheric and environmental systems(2,5), 
e s p e c i a l l y i n 
the 
study 
of the 
e f f e c t 
of 
p o l l u t a n t s 
and 
s t r a t e g i e s 
f o r the 
m i n i m i z a t i o n of t h e i r e f f e c t s ( 4 ) . 
The 
mathematical 
problem 
posed 
i s 
the 
s o l u t i o n 
of 
the 
simultaneous 
d i f f e r e n t i a l 
e q u a t i o n s which 
a r i s e 
from 
the mass-
a c t i o n treatment 
of the c h e m i s t r y . 
For the homogeneous, 
w e l l -
mixed 
r e a c t o r , 
t h i s 
becomes 
a 
s e t 
of 
o r d i n a r y , n o n - l i n e a r , 
f i r s t - o r d e r 
d i f f e r e n t i a l 
e q u a t i o n s . 
For 
systems 
t h a t are 
not 
s p a t i a l l y u n i f o r m and i n v o l v e m a t e r i a l and energy t r a n s p o r t , the 
chemical 
terms 
are 
c o u p l e d 
w i t h 
the 
f l u i d 
mechanics 
and 
heat 
t r a n s f e r 
t o 
g i v e 
s e t s 
of 
p a r t i a l 
d i f f e r e n t i a l 
e q u a t i o n s . 
Numerical 
t e c h n i q u e s 
f o r 
s o l v i n g 
these 
systems 
have 
been 
e x t e n s i v e l y developed(5,6), 
but r e g a r d l e s s of the s t r a t e g y used 
t o 
s o l v e the 
s e t 
of 
o r d i n a r y 
d i f f e r e n t i a l 
e q u a t i o n s , 
or 
the 
s p a t i a l d i s c r e t i z a t i o n methods employed f o r p a r t i a l 
d i f f e r e n t i a l 
equations(7,£), 
the 
f i n a l 
t a s k 
i s t h a t of 
s o l v i n g 
very 
l a r g e 
m a t r i x 
systems of 
a l g e b r a i c 
e q u a t i o n s . 
T h i s has 
t r a d i t i o n a l l y 
been the f o r t e of the l a r g e main-frame computer, but the 
r a p i d l y 
expanding 
c a p a b i l i t y 
of m i n i s 
and 
m i c r o s 
has 
enabled 
them 
t o 
handle 
the 
s o l u t i o n 
of modest problems. 
At 
the 
o t h e r 
end 
of 
s c a l e , 
the 
expanding 
scope 
of 
a p p l i c a t i o n 
of these s i m u l a t i o n 
methods, e s p e c i a l l y t o two- 
and t h r e e - d i m e n s i o n a l systems, 
has 
v a s t l y i n c r e a s e d the number of e q u a t i o n s t o be s o l v e d , and so has 
e n t e r e d the realm of the supercomputer. 
From the chemist's p o i n t of view as a u s e r , these s i m u l a t i o n 
t e c h n i q u e s 
r e q u i r e him 
t o p r o v i d e computer code 
f o r the 
time 
d e r i v a t i v e of each chemical s p e c i e s i n the mechanism. 
A c c o r d i n g 
t o 
the 
p r i n c i p l e 
of 
m a s s - a c t i o n , 
the 
d e r i v a t i v e 
of 
the 
x-th 
s p e c i e s c o n c e n t r a t i o n i n a mechanism of M 
r e a c t i o n s i n v o l v i n g Ρ 
chemical s p e c i e s i s g i v e n by 
d[Nx] 
μ 
ρ 
a
t 
i-1 
7-1 
where fc, i s the r a t e c o n s t a n t of the i - t h r e a c t i o n , and 
v« i s the 
s t o i c h i o m e t r i c 
c o e f f i c i e n t 
of 
the 
; - t h 
s p e c i e s 
i n 
the i - t h 
r e a c t i o n . 
S i n c e the d i f f e r e n t i a l 
e q u a t i o n s are u s u a l l y 
handled 
by 
methods 
a p p r o p r i a t e 
t o 
s t i f f 
e q u a t i o n s , 
the 
p a r t i a l 
d e r i v a t i v e s of each of the above e x p r e s s i o n s w i t h r e s p e c t t o a l l 
the 
Ρ s p e c i e s ( J a c o b i a n m a t r i x ) are needed as w e l l . 
While 
each 
term i n the summation above r a r e l y has more than t h r e e s p e c i e s i n 
the product 
(i.e. most of the i/~'s are z e r o ) , the a l g e b r a i n v o l v e d 
i n c o l l e c t i n g a l l the sums ana products i s so l a r g e and the l a b o r 
(and the p o s s i b i l i t y of e r r o r ) i n the c o d i n g so g r e a t , t h a t t h i s 
t a s k 
i s u n l i k e l y 
t o be 
undertaken 
manually 
f o r any 
but 
s m a l l 
c h e m i c a l mechanisms. 
However, 
a mechanism 
f o r atmospheric 
or 
combustion 
c h e m i s t r y may 
e a s i l y run t o s e v e r a l hundred r e a c t i o n s 
and s p e c i e s . 
Furthermore, 
i n r e s e a r c h a p p l i c a t i o n s i t i s common 
t o t e s t s e v e r a l a l t e r n a t e models f o r the system under study, 
and 
the amount of code t o be w r i t t e n e s c a l a t e s g r e a t l y . 
C l e a r l y a 
machine a i d i s r e q u i r e d t o make the t e c h n i q u e simple t o use 
so 
t h a t i t s e x p l o i t a t i o n i s encouraged. 
Over the y e a r s , v a r i o u s approaches t o t h i s problem have been 
t a k e n . 
In 
one 
of 
the 
e a r l i e s t , 
each 
chemical 
s p e c i e s 
was 
a s s i g n e d an 
i d e n t i f i c a t i o n number, chemical e q u a t i o n s r e w r i t t e n 
i n these terms, and the computer c o n s t r u c t e d a symbolic 
r e a c t i o n 
t a b l e which would subsequently be used i n a lookup procedure 
t o 
guide the computation. 
In those y e a r s , the computation 
was 
slow 
and cumbersome, and the a d d i t i o n a l overhead 
of the t a b l e 
lookup 
a t each s t e p of the i t e r a t i v e s o l u t i o n p r o c e s s g r e a t l y i n c r e a s e d 
the c o s t s of the s i m u l a t i o n . 
The next s t e p was t o use t h i s t a b l e 
lookup 
j u s t once t o w r i t e a r o u t i n e which would be compiled 
as 
p a r t of the s i m u l a t i o n program. 
F o r t r a n was the major h i g h - l e v e l 
language 
a v a i l a b l e ; i t was 
n e c e s s a r y t o use assembly language 
t o 
w r i t e the F o r t r a n code f o r the s i m u l a t i o n package(P). 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch010
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

10. 
EDELSON 
Simulation of Complex Kinetics 
121 
The next advance was 
scanning and i n t e r p r e t a t i o n of the t e x t of 
the 
o r i g i n a l r e a c t i o n s e t , w r i t t e n i n as c l o s e an 
approximation 
t o r e a l chemical 
n o t a t i o n as the 
s t r a i g h t - l i n e , upper-case 
o n l y 
format of the 72-column c a r d would permit(10). 
S i n c e 
c h a r a c t e r 
and 
s t r i n g 
m a n i p u l a t i o n 
through 
F o r t r a n 
was 
at 
t h a t 
time 
cumbersome 
and 
i n e f f i c i e n t , 
these 
p a r t s 
of 
the i n t e r p r e t a t i o n 
program were w r i t t e n i n assembly language. 
The 
i n t e r p r e t e r used 
F o r t r a n 
output 
statements 
t o 
generate 
the 
s i m u l a t i o n 
code 
i n 
assembly 
language, making 
the 
s i m u l a t i o n more 
e f f i c i e n t , 
but 
u n f o r t u n a t e l y 
n o n - p o r t a b l e . 
The passage of time has brought v a s t l y improved f a c i l i t i e s f o r 
s t r i n g and 
c h a r a c t e r 
h a n d l i n g 
by h i g h - l e v e l languages. 
Smaller 
machines have come 
i n t o vogue, 
and 
i n t e r a c t i v e o p e r a t i o n 
has 
taken p r e f e r e n c e over batch systems. 
The growth i n problem s i z e , 
however, has kept the mainframe machines i n the p i c t u r e , and 
has 
even brought i n the supercomputers, which are, at t h i s w r i t i n g , 
geared t o b a t c h mode o p e r a t i o n 
and 
m o s t l y F o r t r a n programming. 
Front-end 
machines, 
however, 
o f f e r 
a 
v a r i e t y 
of 
i n t e r a c t i v e 
environments 
and 
programming 
languages. 
T h i s 
suggests 
t h a t 
a 
b e t t e r approach would be t o separate 
the problem i n t e r p r e t a t i o n 
and 
s o l v i n g 
f u n c t i o n s 
of 
a 
s i m u l a t i o n 
system. 
T h i s 
paper 
d e s c r i b e s 
a 
new 
implementation 
of 
our 
p r e v i o u s 
s i m u l a t i o n 
package, 
i n which each p a r t 
i s done on 
a machine 
and 
w i t h 
a 
language which are the most e f f e c t i v e and 
a p p r o p r i a t e . 
The 
B e l l 
L a b o r a t o r i e s 
C e n t r a l 
Computer 
S e r v i c e 
supports 
a 
C r a y - 1 
w i t h 
F o r t r a n 
as 
the 
primary 
h i g h - l e v e l 
language 
f o r 
compute-bound problems. 
T h i s 
i s accessed 
through 
a number 
of 
f r o n t - e n d 
machines, 
m o s t l y 
Vaxes 
o p e r a t i n g 
under UNIX, 
which 
support 
s e v e r a l 
h i g h - l e v e l 
languages 
f o r 
i n t e r a c t i v e 
use. 
Because of the number of d i f f e r e n t t a s k s the chemical i n t e r p r e t e r 
i s 
r e q u i r e d 
t o 
perform 
i n 
a d d i t i o n 
to 
elementary 
s t r i n g 
m a n i p u l a t i o n , 
we 
chose C as the language i n which t o w r i t e i t . 
T h i s o f f e r s a degree of p o r t a b i l i t y , as C or C - l i k e c o m p i l e r s 
are 
t o be found on a l a r g e number of machines and o p e r a t i n g systems. 
Input Language 
Chemical n o t a t i o n i s m o s t l y the r e s u l t of h i s t o r i c precedent, 
and 
was 
c e r t a i n l y never 
i n t e n d e d 
t o 
be 
i n t e r p r e t e d by 
a computer. 
However, i n order t o m a i n t a i n the g r e a t e s t ease of o p e r a t i o n by a 
chemist, the i n p u t language should be designed 
t o be as c l o s e t o 
the 
normal 
n o t a t i o n 
f o r 
r e a c t i o n 
e q u a t i o n s . 
The 
b a s i c 
i n p u t 
r e c o r d 
i s 
a 
chemical 
e q u a t i o n ; 
r e a c t a n t s 
on 
the 
l e f t 
are 
s e p a r a t e d 
from 
products 
on 
the 
r i g h t 
by 
an 
arrow 
( — r e a d 
' y i e l d s ' ) , and are i n t u r n s e p a r a t e d from each o t h e r by p l u s 
(+) 
s i g n s . 
S u b s t i t u t i n g the 
equal 
s i g n 
(-) 
f o r the arrow and 
the 
ampersand 
(€) 
f o r the 
p l u s 
r e s u l t s i n a minimal 
s a c r i f i c e 
of 
r e a d a b i l i t y f o r the chemist, but 
e l i m i n a t e s a m b i g u i t i e s 
f o r 
the 
machine. 
S u b s i d i a r y 
f i e l d s 
f o r 
i d e n t i f i c a t i o n 
numbers 
are 
s e p a r a t e d 
from the r e a c t i o n e x p r e s s i o n by tab c h a r a c t e r s . 
Input 
i s 
i n f r e e form, w i t h embedded spaces 
i g n o r e d 
(except 
i n t e x t 
e x p r e s s i o n s , see below). 
Compounds are expressed by t h e i r symbolic 
formulas. 
The use of 
the 
f u l l ASCII c h a r a c t e r s e t a l l o w s the elements t o be expressed 
by 
t h e i r 
u s u a l 
one 
or 
two 
c h a r a c t e r names, w i t h 
the upper 
or 
lower case c o n t e x t p r o v i d i n g the c h a r a c t e r count. 
More e l a b o r a t e 
d e s i g n a t i o n s 
f o r atoms 
( i n c l u d i n g s u p e r s c r i p t s d e n o t i n g 
i s o t o p e 
number, f o r example) are accommodated by e n c l o s i n g the 
e x p r e s s i o n 
i n a p p r o p r i a t e quotes. 
U p s h i f t and downshift m e t a c h a r a c t e r s 
can 
be used here t o denote a p p r o p r i a t e c h a r a c t e r placement on output 
d e v i c e s 
(such 
as 
p l o t t e r s 
and 
t y p e s e t t e r s ) 
which 
a l l o w 
f o r 
p a r t i a l l i n e s p a c i n g s ; 
l i n e p r i n t e r s would i g n o r e them. 
U n f o r t u n a t e l y , t e r m i n a l i n p u t does not a l l o w f o r the s u b s c r i p t s 
and 
s u p e r s c r i p t s used by chemists. 
A 
r i g i d format i s t h e r e f o r e 
e n f o r c e d 
to d i s t i n g u i s h s u b s c r i p t s 
( i n d i c a t i n g number of atoms) 
from 
s u p e r s c r i p t s 
( i n d i c a t i n g 
v a l e n c e 
s t a t e 
or 
charge) 
by 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch010
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

122 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
p r e c e d i n g the l a t t e r by a + or - s i g n . 
Charge i n d i c a t i o n can be 
by 
a p p r o p r i a t e 
r e p e t i t i o n 
of 
the 
s i g n , 
or 
by 
a 
s i n g l e 
s i g n 
f o l l o w e d by n u m e r i c a l 
i n d i c a t i o n . 
P a r e n t h e s i z e d e x p r e s s i o n s 
are 
accommodated 
and 
expanded 
i n 
the 
u s u a l 
way, 
and 
n e s t i n g 
t o 
s e v e r a l l e v e l s i s a l l o w e d . 
Where 
i t i s 
f e l t 
t h a t 
c l a r i t y 
( f o r the 
chemist) 
i s b e t t e r 
s e r v e d by u s i n g compound names r a t h e r than formulas, 
t e x t 
i n p u t 
i s a c c e p t e d by s u r r o u n d i n g i t w i t h q u o t a t i o n marks. 
T h i s t e x t i s 
not s u b j e c t t o l e x i c a l a n a l y s i s ; s u b s i d i a r y t a s k s such as 
syntax 
c h e c k i n g cannot be performed i n t h i s case. 
Quoted t e x t can a l s o 
be 
a t t a c h e d t o a compound expressed 
by 
formula; 
the formula 
i s 
i n t e r p r e t e d and the t e x t passed through unchanged. 
Syntax A n a l y s i s 
As 
each 
r e a c t i o n 
e q u a t i o n 
i s 
e n t e r e d , 
s e v e r a l 
checks 
are 
performed t o c a t c h e r r o r s i n f o r m u l a t i o n or t y p i n g : 
the 
c o r r e c t 
number 
of 
t a b s , 
e q u a l s , 
b a l a n c e d 
quotes 
or 
p a r e n t h e s e s , 
and 
conformance t o the syntax 
r u l e s which a l l o w s the e q u a t i o n t o be 
s e p a r a t e d 
i n t o r e a c t a n t s and 
p r o d u c t s , 
and 
these 
i n t u r n t o 
be 
decomposed 
i n t o 
atoms. 
Each 
time 
a 
new 
c h e m i c a l 
s p e c i e s 
i s 
encountered 
i t i s r e p o r t e d t o the u s e r , who 
can determine whether 
a 
v a l i d name has 
been 
e n t e r e d . 
The 
e q u a t i o n 
i s checked 
f o r 
b a l a n c e s i n atomic elements and charges, and d i s c r e p a n c i e s l i s t e d 
f o r 
c o r r e c t i v e a c t i o n . 
S p e c i e s names may 
be e i t h e r formulas 
or 
t e x t ; 
i n the 
l a t t e r 
case 
the balance 
c h e c k i n g 
f e a t u r e must 
be 
t u r n e d o f f t o a v o i d f a l s e e r r o r s . 
When the 
i n p u t 
l i s t 
i s f i n i s h e d , 
the 
i n t e r p r e t e r checks 
the 
e q u a t i o n s 
a g a i n s t each o t h e r , t o a s c e r t a i n t h a t a r e a c t i o n has 
not 
i n a d v e r t e n t l y been 
e n t e r e d 
more 
than 
once, 
even 
w i t h 
permutations 
of the r e a c t a n t s or p r o d u c t s . 
F i n a l l y , i f a l l i n p u t 
has 
been 
e r r o r - f r e e , 
the 
i n t e r p r e t e r 
c o n t i n u e s 
by 
l e x i c a l l y 
s o r t i n g 
the 
atomic 
elements and 
s p e c i e s names, a s s i g n i n g 
f i n a l 
i d e n t i f i c a t i o n numbers, and p r o v i d i n g a l i s t f o r the u s e r . 
Should 
an 
e r r o r be 
encountered 
d u r i n g i n p u t , the 
i n t e r p r e t e r 
w i l l not complete i t s t a s k . 
However, i t does copy a l l i n p u t t o a 
f i l e 
from which i t may 
be 
r e t r i e v e d , 
e d i t e d and 
r e s u b m i t t e d 
i n 
b a t c h mode, making i t unnecessary 
t o r e t y p e a l l the e q u a t i o n s . 
Data S t r u c t u r e s 
Scanning 
of the r e a c t i o n i n p u t l e a d s t o the g e n e r a t i o n of t h r e e 
t y p e s 
of data 
s t r u c t u r e ( i n the C s e n s e ( / / ) ) , one 
d e a l i n g w i t h 
r e a c t i o n s , one w i t h c h e m i c a l s p e c i e s , and the l a s t w i t h 
c h e m i c a l 
elements. 
Each 
r e a c t i o n 
s t r u c t u r e 
c o n t a i n s 
the 
a p p r o p r i a t e 
i d e n t i f i c a t i o n 
numbers, 
and 
a 
symbolic 
r e p r e s e n t a t i o n of 
the 
r e a c t i o n 
i t s e l f 
i n terms 
of 
p o i n t e r s t o 
the 
chemical 
s p e c i e s 
s t r u c t u r e s of the r e a c t a n t s and p r o d u c t s . 
The 
c h e m i c a l 
s p e c i e s 
s t r u c t u r e s 
i n 
t u r n 
c o n t a i n 
p o i n t e r s 
t o 
c h e m i c a l 
element 
s t r u c t u r e s , 
as 
w e l l 
as 
t e x t 
s t r i n g s 
t o 
be 
used 
i n p r i n t e d , 
p l o t t e d , 
or 
t y p e s e t 
o u t p u t . 
The 
c h e m i c a l 
element 
s t r u c t u r e s 
s i m i l a r l y 
c o n t a i n 
i d e n t i f y i n g 
n u m e r i c a l 
and 
t e x t 
i n f o r m a t i o n . 
Storage f o r t h e s e s t r u c t u r e s i s a l l o c a t e d as needed, and they are 
c h a i n e d 
t o each o t h e r 
by 
p o i n t e r s . 
As 
each 
p a r t i c i p a n t 
i n a 
r e a c t i o n 
i s examined, the database i s searched 
and 
a s t r u c t u r e 
c r e a t e d f o r any newly encountered 
s p e c i e s . 
S i n c e the number 
and 
s i z e 
of 
these 
searches 
may 
become 
q u i t e 
l a r g e 
f o r 
e x t e n s i v e 
r e a c t i o n mechanisms, the s p e c i e s s t r u c t u r e s are o r d e r e d 
l e x i c a l l y 
i n 
a b i n a r y t r e e t o keep the s e a r c h time 
t o a minimum. 
A f t e r 
i n p u t i s complete, 
f i n a l 
i d e n t i f i c a t i o n numbers are a s s i g n e d 
t o 
the elements and s p e c i e s a c c o r d i n g t o a l e x i c a l 
s o r t . 
Program Output 
The 
p r i n c i p a l 
t a s k 
of 
the 
i n t e r p r e t e r 
i s 
t o 
p r o v i d e 
two 
s u b r o u t i n e s f o r use by the s i m u l a t i o n program, which i s a s o l v e r 
f o r 
o r d i n a r y or 
p a r t i a l 
d i f f e r e n t i a l 
e q u a t i o n s . 
S i n c e 
c h e m i c a l 
systems are 
f o r the most p a r t 
" s t i f f " 
as a r e s u l t 
of 
n e g a t i v e 
feedback(72) the 
i n t e r p r e t e r 
expects 
the 
s i m u l a t i o n package 
t o 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch010
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

10. 
EDELSON 
Simulation of Complex Kinetics 
123 
use 
an 
i m p l i c i t 
d i f f e r e n t i a l 
e q u a t i o n 
s o l v e r 
r e q u i r i n g 
c a l c u l a t i o n of both the 
f u n c t i o n 
(i.e. 
the m a s s - a c t i o n 
e x p r e s s i o n 
of 
the 
net 
r a t e 
of 
change 
of 
the 
s p e c i e s ) 
and 
i t s 
p a r t i a l 
d e r i v a t i v e s w i t h 
r e s p e c t t o a l l s p e c i e s 
( J a c o b i a n m a t r i x ) . 
The 
former i s computed s t e p w i s e : 
f i r s t 
the r a t e of each r e a c t i o n i s 
c a l c u l a t e d ; 
then 
these 
terms 
are 
combined 
t o 
g i v e 
i n d i v i d u a l 
f o r m a t i o n 
and removal terms f o r each s p e c i e s , and 
f i n a l l y 
these 
are 
a l g e b r a i c a l l y added t o g i v e the d e r i v a t i v e s . 
T h i s 
s t r a t e g y 
makes a v a i l a b l e t o the user a d d i t i o n a l i n f o r m a t i o n t h a t i s o f t e n 
h e l p f u l 
i n i n t e r p r e t i n g the mechanism. 
The 
J a c o b i a n 
terms 
are 
c a l c u l a t e d 
i n one 
s t e p . 
F o r t r a n code f o r these 
s u b r o u t i n e s 
i s 
w r i t t e n u s i n g d i r e c t addresses f o r each member of the 
a p p r o p r i a t e 
a r r a y s , i t b e i n g assumed t h a t these are s t o r e d i n the same o r d e r 
as t h a t p r o v i d e d by the l e x i c a l s o r t above. 
The F o r t r a n 
c o m p i l e r 
i s 
thus 
burdened 
w i t h 
the 
t a s k 
of 
c a l c u l a t i n g the 
v a r i a b l e 
a d d r e s s e s , 
r e l i e v i n g the 
s i m u l a t i o n program of t h i s t a s k and 
so 
improving the run-time economy. 
I t 
i s a l s o 
p o s s i b l e 
t o 
use 
the 
i n f o r m a t i o n 
which 
has 
been 
s t o r e d 
t o 
w r i t e 
programs 
f o r 
o t h e r 
t a s k s . 
A 
u s e f u l 
one, 
f o r 
example, keeps t r a c k of the s t o i c h i o m e t r y 
(i.e. 
t o t a l atom counts) 
of 
the 
system. 
For 
a 
c l o s e d 
system, 
s t o i c h i o m e t r y 
s h o u l d 
be 
a u t o m a t i c a l l y m a i n t a i n e d by 
l i n e a r p r e d i c t o r - c o r r e c t o r s o l v e r s , 
and 
the s t o i c h i o m e t r y program p r o v i d e s 
a d i a g n o s t i c of 
n u m e r i c a l 
e r r o r s (and o t h e r s ) which have accumulated. 
In o t h e r than c l o s e d 
systems, i t g i v e s an independent check on the sources 
and 
s i n k s 
which are b e i n g modeled. 
V a r i o u s 
databases 
can 
a l s o be 
output 
by 
the 
i n t e r p r e t e r , 
e.g. 
l i s t s 
of 
element 
and 
s p e c i e s 
names, 
t e x t 
f i l e s 
f o r 
l a b e l i n g 
p r i n t e d and p l o t t e d output, and a symbolic 
r e a c t i o n m a t r i x . 
T h i s 
i n f o r m a t i o n 
i s d i s t r i b u t e d t o i n d i v i d u a l ASCII 
f i l e s , from which 
they may 
be 
read 
by subsequent p a r t s of the 
s i m u l a t i o n package 
f o r use i n the a p p r o p r i a t e 
t a s k . 
A d a p t a b i l i t y 
The 
i n t e r p r e t e r was 
d e s i g n e d t o be independent of the 
s i m u l a t i o n 
program 
f o r 
which 
i t 
e v e n t u a l l y 
w i l l 
s e r v e . 
A 
s t r u c t u r e d 
programming language such as C i s t h e r e f o r e 
i d e a l f o r c o d i n g i t 
s i n c e 
i t i s simple 
t o add code t o p e r f o r m a d d i t i o n a l t a s k s 
(as 
f o r example w r i t i n g the v a r i a b l e dimension s p e c i f i c a t i o n s ) which 
might be 
s p e c i f i c t o the a p p l i c a t i o n . 
The 
use of s t r u c t u r e data 
types 
a l s o 
a l l o w s 
the 
expansion 
of 
the 
type 
of 
supplementary 
i n f o r m a t i o n 
c a r r i e d 
a l o n g 
w i t h 
each 
v a r i a b l e 
w i t h 
l i t t l e 
a d d i t i o n a l 
c o d i n g 
e f f o r t 
and 
w i t h 
no 
danger 
of 
b r e a k i n g 
the 
a l r e a d y 
e x i s t i n g code. 
Communication 
of 
i n f o r m a t i o n 
from 
the 
i n t e r p r e t e r t o the s i m u l a t i o n program i s through i n d i v i d u a l 
f i l e s 
of 
i n f o r m a t i o n , 
which 
can 
be 
i n p u t 
t o subsequent programs 
and 
s t o r e d t o be used as needed. 
The s i m u l a t i o n system i s thus f r e e d 
from dependencies on the o p e r a t i n g system environment. 
C o n c l u s i o n 
The 
i n t e r a c t i v e 
i n t e r p r e t a t i o n 
of 
chemical 
equations 
i n 
c o n j u n c t i o n w i t h the s i m u l a t i o n of c h e m i c a l 
r e a c t i o n systems 
has 
been implemented by 
a C-language program which can 
be 
run on 
a 
s m a l l machine t h a t 
i s independent 
of 
the machine on which 
the 
s i m u l a t i o n program r e s i d e s . 
The 
f l e x i b l e 
s t r i n g 
and 
c h a r a c t e r 
m a n i p u l a t i o n 
c a p a b i l i t i e s of t h i s environment enables the chemist 
t o 
use 
an 
i n p u t 
language 
s i m i l a r 
t o 
the 
n a t u r a l 
language 
of 
c h e m i c a l 
k i n e t i c s , and checks syntax and c o n s i s t e n c y of the 
i n p u t 
as 
w e l l . 
The 
i n t e r p r e t e r 
p r o v i d e s 
v e r i f i e d 
code 
f o r 
any 
s i m u l a t i o n program u s i n g s t a n d a r d 
d i f f e r e n t i a l e q u a t i o n 
s o l v e r s , 
and 
a l s o 
f a c i l i t a t e s 
the 
d i s p l a y 
of 
the 
r e s u l t s 
i n 
chemical 
n o t a t i o n . 
These 
i n t e r p r e t e r s have been used 
s u c c e s s f u l l y f o r 
many years 
and have f o s t e r e d the growth of s i m u l a t i o n 
t e c h n i q u e s 
i n many areas of c h e m i s t r y and chemical 
e n g i n e e r i n g . 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch010
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

124 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Literature Cited 
1. D. E d e l s o n , Science, 214, 981 
(1981). 
2. H . G . Booker, et al., 
Environmental Impact of Stratospheric Flight, N a t i o n a l 
Academy of S c i e n c e s , Washington D. C., 1975. 
3. H . S. 
Gutowsky et al., Halocarbons: Effects on Stratospheric Ozone, 
National 
Academy of S c i e n c e s , Washington D. C . 1976. 
4. 
J. 
H . 
Seinfeld, 
Air Pollution; Physical and Chemical Fundamentals, McGraw-
Hill, 
New York, 
1975. 
5. D. D. Warner, J. Phys. Chem., 81, 2329 
(1977). 
6. N . 
L. 
S c h r y e r , J. Phys. Chem., 81, 2335 
(1977); 
and references 
cited therein. 
7. D. Edelson and N . L. S c h r y e r , Computers and Chemistry, 2, 
71 
(1978); 
8. G . A . N i k o l a k o p o u l o u , 
D. Edelson and N. L. S c h r y e r , Computers 
and Chemistry, 6, 93 
(1982). 
9. D. 
McIntyre, 
in 
A Technique for Solving the General Reaction-Rate Equations in the 
Atmosphere, Appendix B. (T. 
J. 
Keneshea, 
a u t h o r ) ; 
AFCRL-67-0221, 
April 
1967. 
10. D. E d e l s o n , Computers and Chemistry, 1, 29 
(1976). 
11. Β . W. Kernighan 
and D. M. 
Ritchie, 
The C Programming Language, 
Chapt. 6; 
Prentice-Hall, 
Englewood 
Cliffs, 
N.J. 
1978. 
12. C . F . 
Curtiss 
and 
J. 
O. 
Hirschfelder, 
Proc. Natl. Acad. Set. U. S. A. 
38, 
235 
(1952). 
RECEIVED 
December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch010
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

11 
Applying the Techniques of Artificial Intelligence 
to Chemistry Education 
Richard Cornelius
1, Daniel Cabrol
2, and Claude Cachet
2 
1Department of Chemistry, Lebanon Valley College, Annville, PA 17003 
2Department of Chemistry, Université de Nice, 06034 Nice, France 
The computer program called GEORGE is a "problem-
-solving partner" for introductory chemistry students. 
The program has no problems to present to students; 
students give problems to GEORGE and he solves the 
problems. 
He explains the solution using ordinary 
English and then sketches a diagram to show how data 
are combined and relations are applied to give the 
solution. 
GEORGE operates on problems involving three 
fundamental quantities, mass, volume, and number of 
moles, and other quantities that can be expressed as 
ratios of these fundamental quantities. 
The power of the computer holds the promise for far-reaching changes 
i n education, but that promise remains u n r e a l i z e d . 
Most of the 
a p p l i c a t i o n s of computers i n chemical education have been adaptations 
of teaching strategies used i n other media; there are many tasks that 
have been done better or faster on the computer but l i t t l e r e a l l y new 
has been developed. 
There i s a quote that summarizes the s i t u a t i o n 
i n which we f i n d ourselves today: 
"After years of growing w i l d l y the 
f i e l d of [educational] computing i s f i n a l l y approaching i t s i n f a n c y . " 
This quote i s nearly twenty years o l d , having been taken from the 
report of the 1967 P r e s i d e n t ' s Science Advisory Commission (1). 
The quote, however, i s as true today as i t was nearly twenty years 
ago. 
We stand on the threshold of e x c i t i n g new a p p l i c a t i o n s f o r 
computers both w i t h i n the f i e l d of education and elsewhere. The 
subject of t h i s paper i s a computer program which represents one 
t o t a l l y d i f f e r e n t approach f o r the use of computers i n chemical 
education. 
We hope that i t i s only one new approach out of many that 
we w i l l see i n the future. 
One of the most important advantages of computers i n education 
i s the capacity of software to adjust the pace or nature of 
a c t i v i t i e s on the basis of input from the student. 
T u t o r i a l or d r i l l 
and p r a c t i c e programs a v a i l a b l e today do i n fact make some 
adjustments based upon student responses. 
These programs are 
0097-6156/86/0306-0125$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch011
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

126 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
l i m i t e d , however, by the ingenuity of the person that wrote the 
software i n considering a l l possible student responses and i n 
designing appropriate a c t i o n on the part of the software. 
A student 
cannot explore areas which the author of the software f a i l e d 
to 
consider. 
Thus, these programs are " i n s t r u c t o r - d r i v e n . " 
The author 
of the software serves as a surrogate i n s t r u c t o r , creating a 
p a r t i c u l a r sequence of a c t i v i t é s for the student. 
However 
sophisticated the branching i n the program may be, the student cannot 
take the i n i t i a t i v e ; i n i t i a t i v e i s exercised only by the author of 
the 
software. 
I t i s useful to i d e n t i f y two software categories 
distinguished 
by the i d e n t i t y of the person i n charge of the educational a c i v i t i e s 
that the software supports. 
The f i r s t category i s Computer-Assisted 
I n s t r u c t i o n (CAI). 
In CAI the r o l e of the software i s to decide 
which a c t i v i t i e s the student should pursue. Most e x i s t i n g software 
for chemical education f a l l s i n t o t h i s category. 
We may a l s o , 
however, consider a category of software that could be labeled 
Computer-Assisted Learning (CAL). 
In such software, the student 
makes decisions about what he or she w i l l i n v e s t i g a t e while using the 
software. 
Simulations f a l l i n t o t h i s category. 
Professor John 
G e l d e r ' s i d e a l gas law program (2^ i s a c l a s s i c example of using 
simulations i n chemical education. 
In using that program the student 
has c o n t r o l over the parameters, and by exploring the model could 
p o t e n t i a l l y learn aspects of the behavior of i d e a l gases unknown to 
the author of the program. 
Other simulations may a l s o f a l l i n t o the 
category of computer-assisted 
l e a r n i n g . 
Apart from simulations, 
examples of software with which the student i s i n c o n t r o l and are 
d i f f i c u l t to 
f i n d . 
This paper describes an example of a d i f f e r e n t s t y l e of program 
which i s under the c o n t r o l of the student. 
The project began i n the 
f a l l of 1983 when Dick Cornelius spent part of a sabbatical at 
the 
U n i v e r s i t é de Nice working w i t h Daniel Cabrol and Claude Cachet. 
The 
f i r s t task there was to w r i t e a chapter on microcomputers i n chemical 
education for a book on computers i n chemistry. 
During the course of 
w r i t i n g t h i s chapter we described programs a v a i l a b l e i n the 
d i f f e r e n t 
software s t y l e s : 
page turners, 
d r i l l and p r a c t i c e , t u t o r i a l d i a l o g s , 
s i m u l a t i o n , pre-laboratory a c t i v i t i e s , and problem-solving. 
In the 
area of problem-solving, however, there was l i t t l e that we could 
d i s c u s s . 
Some software could be used for problem-solving, but there 
were no examples of programs w r i t t e n for the primary purpose of 
helping students learn general problem-solving techniques. 
I t was to 
t h i s area, then, that we turned our programming a t t e n t i o n . 
The 
r e s u l t was a program that we c a l l e d GEORGE (3) that runs on the 
Apple I I s e r i e s of computers. 
GEORGE d i f f e r s very much from most 
programs a v a i l a b l e for chemical education: 
GEORGE asks no questions 
of students. 
Instead, students take problems to GEORGE. 
GEORGE 
solves the problems that students provide and, most importantly, 
explains the s o l u t i o n s using both text and diagrams. 
I f i n s u f f i c i e n t 
or contradictory information i s a v a i l a b l e , GEORGE can provide 
diagnostic comments to help the student. 
The domain i n which GEORGE operates i s a small but important one 
for introductory chemistry. 
He works with problems i n v o l v i n g the 
fundamental q u a n t i t i e s mass, volume, and number of moles. 
He can 
also work with derived q u a n t i t i e s such as density, molar mass, molar 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch011
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

11. 
CORNELIUS ET AL. 
Applying AI Techniques to Chemistry Education 
127 
concentration, e t c . 
The s p e c i f i c q u a n t i t i e s with which GEORGE can 
work are presented i n Figure 1. 
That figure i s taken from the 
on-screen documentation and also gives the abbreviations that 
students may use as shorthand to i d e n t i f y the q u a n t i t i e s to GEORGE. 
GEORGE works with the u n i t s g, L , mol. 
For derived q u a n t i t i e s he 
understands the r a t i o s of these u n i t s such as g/L for d e n s i t y . 
He 
a l s o understands the numerical prefixes ρ, η , μ, m, c , d, and k. 
He can work with these prefixes i n ^ r a t i o s ^ o f u n i t s such as g/mL or 
nmol/raL, and he can also accept dm or cm 
for volume. 
The Logic 
The basic approach that GEORGE uses to solve problems i s dimensional 
a n a l y s i s , the same technique that many of us use i n our own 
classrooms to teach students how to solve problems. 
Instead of 
having numerous formulas for d i f f e r e n t kinds of problems, GEORGE 
simply contains a set of h e u r i s t i c r u l e s which he follows to search 
for a s o l u t i o n . 
One r e s u l t of using these h e u r i s t i c r u l e s i s that he 
can solve problems never worked by the authors of the program. 
Another r e s u l t i s that GEORGE may be able to make progress toward a 
s o l u t i o n even i f incomplete information i s a v a i l a b l e . 
In such an 
instance, GEORGE may be able to respond with a statement such as " I f 
you could give me the density of a l c o h o l , then I could solve the 
problem." 
The r u l e s are very simple i n concept. 
F i r s t GEORGE 
examines the various pieces of data a v a i l a b l e . 
He examines a l l 
possible pairs of data to see whether any p a i r can be m u l t i p l i e d or 
divided to give immediately the s o l u t i o n . 
I f he cannot f i n d a 
s o l u t i o n i n that way, he checks to see whether he can apply a 
r e l a t i o n to generate a new piece of data. 
I f GEORGE cannot apply a 
r e l a t i o n , he searches for intermediate r e s u l t s that might represent a 
step toward the s o l u t i o n . 
GEORGE can search for two types of 
intermediates. 
The preferred type i s the r e s u l t of u n i t s c a n c e l l i n g 
to y i e l d a fundamental q u a n t i t y . 
Thus d i v i d i n g the mass of a 
substance by i t s molar mass i s a preferred method to form an 
intermediate r e s u l t . 
Less desirable i s the formation of an 
intermediate r e s u l t which i s not a fundamental quantity but which 
represents information expressed i n a manner not represented by other 
data or intermediates. 
Each time GEORGE c a l c u l a t e s a new quantity, 
he begins again to look for an immediate s o l u t i o n . 
These are a l l the 
r u l e s that GEORGE needs to f i n d solutions to m i l l i o n s of d i f f e r e n t 
problem statements. 
The r e s u l t i s u s u a l l y a s o l u t i o n approached i n 
the same manner that a teacher might use for an explanation. 
The Program 
The primary menu for GEORGE i s shown i n Figure 2. 
This i s the way 
that the menu appears when no information has been given to GEORGE; 
more options are a v a i l a b l e after a problem has been defined. 
To 
understand how GEORGE operates we w i l l f i r s t consider an option that 
i s outside the primary thrust of GEORGE, namely, option C, C a l c u l a t e 
Molar Mass. 
The student sees a screen which says "Type the formula:" 
There a student may type a formula as simple as NaCl or more complex 
such as Mg(C10 z,) 2.6H 20. 
GEORGE c a l c u l a t e s the molar 
mass, e x p l a i n i n g to the student how the c a l c u l a t i o n i s done as shown 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch011
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

128 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Instructions (page 1) 
George understands 11 d i f f e r e n t 
quantities. 
Each of these quantitic 
has a synbol and a nane: 
Synbol 
η 
η 
Ρ 
ν 
d 
c 
ne 
H 
«r 
nr 
vr 
Nane 
Mass 
no. of noies 
no. of particle 
volune 
density 
nolarity 
nass cone, 
nolar Mass 
Mass r a t i o 
M O I a r r a t i o 
volune r a t i o 
Press the space bar to continue. 
Figure 1. 
Q u a n t i t i e s with which GEORGE can work. 
(Reproduced with 
permission from Ref. 3. Copyright 1985 COMPress.) 
Available Options 
D) Enter or Nodify Data 
R) Enter a Relation 
L) Load a Problen froM Disk 
C) Calculate Molar Mass 
?> See Instructions 
P r e s s t h e key o f your c h o i c e . 
Figure 2. The primary menu screen from GEORGE. 
(Reproduced with 
permission from Ref. 3. 
Copyright 1985 COMPress.) 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch011
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

11. 
CORNELIUS ET AL. 
Applying AI Techniques to Chemistry Education 
129 
i n Figure 3. 
The a b i l i t y of GEORGE to e x p l a i n what he has done i s 
the primary reason for h i s existence. 
Other programs, such as TK! 
Solver (à), 
have a much larger domain but f a i l to e x p l a i n the 
l o g i c that leads to the answer. 
The emphasis w i t h i n GEORGE i s on the 
s o l u t i o n as a process rather than upon the answer as a number. 
Let us consider next the data page which i s used to define a 
problem. 
The f i r s t task for the student i s to i d e n t i f y t h é desired 
quantity. 
This a c t i o n i s a desirable f i r s t step for a student 
s o l v i n g a problem with or wihout the a i d of a computer. 
GEORGE 
understands h i s domain. 
I f a student i d e n t i f i e s "time" as the 
desired quantity, GEORGE w i l l respond "Unknown q u a n t i t y . " 
Each 
quantity needs a l a b e l . 
So, for example, a student may t e l l GEORGE 
to f i n d the mass of a h a i r . 
Here " h a i r " i s the l a b e l and i s used by 
GEORGE i n the dimensional a n a l y s i s to determine which data can be 
used together. 
Students must specify a consistent u n i t . 
I f mol i s 
given as the u n i t for the mass of a h a i r , GEORGE w i l l reply "Unit 
does not agree w i t h q u a n t i t y . " 
The simplest kind of problem that GEORGE can work and e x p l a i n i s 
a metric u n i t conversion. 
For example, i f GEORGE i s asked to 
find 
the mass of a h a i r i n m i l l i g r a m s , the student could supply on data 
l i n e A the mass of that h a i r i n grams. 
The numerical values may be 
entered i n decimal or exponential notation with the exponential 
notation appearing with a superscript just as one would write i t on 
paper. 
When GEORGE i s asked to solve t h i s problem he states that the 
answer was supplied i n data l i n e A . 
This statement i s true, but a 
student working a u n i t conversion problem needs to have a better 
explanation. 
GEORGE d i s p l a y s the worked arithmetic showing the unit 
conversion. 
An example of such a d i s p l a y i s shown i n Figure 4. 
As an example of a s l i g h t l y more d i f f i c u l t problem, consider a 
question which asks for the density of ethanol i n g/mL. 
A student 
might provide GEORGE with the mass of a p a r t i c u l a r sample of ethanol. 
The mass could be, for example, 25 grams. 
I f a student t e l l s GEORGE 
to solve the problem with only t h i s piece of information, he 
w i l l 
q u i c k l y reply that he cannot solve the problem without some 
information related to the volume of ethanol. 
I f the student then 
supplies the volume of ethanol, GEORGE explains i n p l a i n English how 
to get the answer: " S o l u t i o n found by d i v i d i n g the mass of ethanol by 
the volume of ethanol to give the density of e t h a n o l . " 
GEORGE works 
i n t e r n a l l y with the units g, L , and mol. 
Thus, after he completes 
the c a l c u l a t i o n i t i s necessary for him to convert the answer to the 
units requested when the desired quantity was s p e c i f i e d . 
Although 
GEORGE has provided a t e x t u a l explanation of the s o l u t i o n process, 
i t 
may be h e l p f u l for the student to see a diagram of how the pieces of 
information f i t together. 
The diagram for the problem i n v o l v i n g the 
density of ethanol i s shown i n Figure 5. 
The symbols A and Β i n t h i s 
diagram refer to the l i n e s on the data page and are 
further 
i d e n t i f i e d to the student when the l e t t e r s A and Β are pressed on the 
keyboard. 
A student can save problems on the disk for l a t e r use and the 
disk i s i n i t i a l l y supplied with a set of complete problems. 
One 
example which comes on the disk involves c a l c u l a t i n g the molarity of 
a n i l i n e i n s o l u t i o n . 
The a v a i l a b l e data are: 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch011
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

130 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Calculate Molar Mass 
The Holar nass i s 331.297 g/nol. 
Mg<C104)2-6H20 
Cl: 
1 
0 : 
4 
X 
X 
35. 
15. 453 
9994 
Subunit: 
99. 4506 χ 2 = 198. 9012 
H : 
2 
0 : 
1 
X 
X 
1. 
15. 0079 
9994 
Subunit: 
18. 0152 x 6 = 108. 0912 
Mg: 
1 X 
24. 305 
24. 305 
Total: 
331. 297 
Press the space bar to continue. 
Figure 3. 
Screen e x p l a i n i n g the c a l c u l a t i o n of molar mass. 
(Reproduced with permission from Ref. 3. 
Copyright 1985 COMPress.) 
Netnork 
You supplied the result on data l i n e A. 
You need only wake the proper conversion 
of units: 
.0034 g κ 
= 3.40 ng 
1 g 
Press the space bar to continue. 
Figure 4. 
The d i s p l a y that GEORGE uses to show the s o l u t i o n to 
a u n i t conversion problem. 
(Reproduced with permission from Ref. 
3. 
Copyright 1985 COMPress.) 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch011
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

11. 
CORNELIUS E T A L . 
Applying AI Techniques to Chemistry Education 
131 
A. 
Volume of C 6 H 5 N H 2 
3.00 mL 
B . 
Volume of s o l u t i o n 
0.100 L 
C. 
Density of C 6 H 5 N H 2 
1.022 g/mL 
D. 
Molar Mass of C 6 H 5 N H 2 
The student does not need to supply the numerical value for a n i l i n e 
i f the formula of a n i l i n e i s used as a l a b e l . 
GEORGE can do the 
c a l c u l a t i o n of the molar mass from the formula, but the student must 
specify that the molar mass i s a piece of information to be used i n 
the problem. 
When GEORGE i s t o l d to solve t h i s problem, he f i r s t 
finds an intermediate r e s u l t by m u l t i p l y i n g the density of a n i l i n e by 
the volume of a n i l i n e to give the mass of a n i l i n e . 
He then d i v i d e s 
the mass of a n i l i n e by the molar mass to give the number of moles of 
a n i l i n e i n s o l u t i o n . 
F i n a l l y , he d i v i d e s the number of moles of 
a n i l i n e by the volume of s o l u t i o n to get the desired quantity, 
the 
molarity of a n i l i n e . 
The diagram he draws to e x p l a i n t h i s 
s o l u t i o n 
i s shown i n Figure 6. 
In t h i s figure the l e t t e r s represent 
information found on the data page, while the numbers represent 
intermediates calculated while f i n d i n g the s o l u t i o n . 
Pressing one of 
the l e t t e r s or numbers shown brings to the top of the screen an 
i d e n t i f i c a t i o n of that p a r t i c u l a r 
quantity. 
The data page i s not the only way to provide GEORGE with 
information. 
Consider for example a simple acid-base t i t r a t i o n . 
On 
the data page a student could specify the desired quantity as 
the 
molarity of HC1 i n a c i d s o l u t i o n and give as a v a i l a b l e data the 
molarity of NaOH i n base s o l u t i o n , the volume of base s o l u t i o n and 
the volume of a c i d s o l u t i o n . 
This information i s i n s u f f i c i e n t 
to 
support a s o l u t i o n to the problem. 
The student must a l s o specify 
the 
stoichiometric r e l a t i o n between the number of moles of HC1 and the 
number of moles of NaOH. 
An example of a r e l a t i o n page showing t h i s 
d e f i n i t i o n i s shown i n Figure 7. 
Once t h i s information i s a v a i l a b l e , 
GEORGE can solve the problem, explaining as he works what information 
i s combined to f i n d an intermediate r e s u l t and at what point 
the 
r e l a t i o n i s used. 
The use of r e l a t i o n s greatly increases the number 
of d i f f e r e n t 
kinds of problems that GEORGE can handle. 
As an example of a more complex problem, consider one used by 
Johnstone (5) i n an a r t i c l e discussing problem-solving published 
l a s t year i n the Journal of Chemical Education: 
"What volume of 
1.0 M hydrochloric a c i d would react with exactly 10.0 g of chalk?" 
The desired quantity i s the volume of s o l u t i o n . 
The a v a i l a b l e data 
are the molarity of HC1 i n s o l u t i o n , the mass of c h a l k , and the molar 
mass of CaCOo. 
In a d d i t i o n , two r e l a t i o n s are r e q u i r e d . 
One 
i d e n t i f i e s chalk as calcium carbonate by s t a t i n g that the mass of 
chalk equals the mass of CaC0~. 
Another gives the 
stoichiometry 
by saying that two times the number of moles of CaCO^ equals the 
number of moles of HC1. The diagram showing the s o l u t i o n i n t h i s 
case occupies several screens; a separate screen i s used to show each 
a p p l i c a t i o n of a r e l a t i o n . 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch011
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

132 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
NetHork 
Here i s a diagran of hon I used the 
various pieces of information to reach a 
solution. 
Β 
For d e t a i l s t y p e t h e r e l e v a n t l e t t e r or 
nunber. 
ESC d i s p l a y s Menu. 
F i g u r e 5. 
D i a g r a m s h o w i n g t h a t t h e d e n s i t y o f e t h a n o l i s o b t a i n e d 
by d i v i d i n g t h e mass o f e t h a n o l by t h e volume o f e t h a n o l . 
( R e p r o ­
duced w i t h p e r m i s s i o n f r o m R e f . 3. 
C o p y r i g h t 1985 COMPress.) 
NetHork 
Here i s a diagran of hou I used the 
various pieces of information to reach a 
solution. 
A 
Β 
.···'"' 
For d e t a i l s type t h e r e l e v a n t l e t t e r o r 
nunber. 
ESC d i s p l a y s Menu. 
F i g u r e 6. 
D i a g r a m s h o w i n g how p i e c e s o f d a t a a r e u s e d t o g e t h e r t o 
f i n d t h e s o l u t i o n t o t h e p r o b l e m i n v o l v i n g t h e m o l a r i t y o f 
a n i l i n e . 
( R e p r o d u c e d w i t h p e r m i s s i o n f r o m R e f . 3. 
C o p y r i g h t 
1985 
COMPress.) 
Relation 
Coef. 
Quantity 
no. of 
MOles 
of 
HC1 
= 
no. of Moles 
of NaOH 
Press the space bar to continue. 
F i g u r e 7. 
A sample o f how a r e l a t i o n c a n be d e f i n e d . 
( R e p r o d u c e d 
w i t h p e r m i s s i o n f r o m R e f . 3. 
C o p y r i g h t 1985 COMPress.) 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch011
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

11. 
CORNELIUS ET AL. 
Applying AI Techniques to Chemistry Education 
133 
Extending the Domain 
The extension of the domain of a p p l i c a t i o n for t r e a t i n g a greater 
v a r i e t y of problems requires r e l e a s i n g GEORGE from the c o n s t r a i n t of 
using only dimensional a n a l y s i s to solve problems. 
For t h i s 
extension we are s h i f t i n g to a system of l o g i c which permits f r e e l y 
the d e f i n i t i o n of both q u a n t i t a t i v e and q u a l i t a t i v e r e l a t i o n s . 
In 
a d d i t i o n , the h e u r i s t i c r u l e s can be represented w i t h i n the same 
formalism. 
The programming language Prolog (6^) has been used i n 
creating a prototype of a more capable problem s o l v e r . 
Currently the 
prototype handles a l l of the problems that GEORGE can handle, but i n 
a d d i t i o n can deal with gas law problems and p h y s i c a l transformations. 
Conclusion 
We see three l e v e l s of use for GEORGE. 
At the f i r s t l e v e l , students 
benefit from the r i g o r required even to supply information to GEORGE. 
Students must i d e n t i f y the desired quantity, l a b e l the quantity, and 
supply the u n i t . 
For each piece of a v a i l a b l e data the student must 
be j u s t as r i g o r o u s . 
This r i g o r should help students develop good 
habits for approaching problems. 
At the second l e v e l , GEORGE acts i n 
much the same way that a roommate might act when helping a f e l l o w 
student with a problem. 
We can imagine a roommate saying "Yes, I 
w i l l show you how to do t h i s problem, but you do the next one by 
y o u r s e l f , " or "You work the problem f i r s t , and then I w i l l show you 
how I would have done i t . " 
In t h i s sense GEORGE acts as a 
"problem-solving partner" (J7). 
At the t h i r d l e v e l of use, a 
student i s p r o f i c i e n t at working the kinds of problems that GEORGE 
can s o l v e . 
GEORGE then becomes a t o o l as an a i d to s o l v i n g even 
larger problems. 
The program frees the student from the tedium of 
working through the a r i t h m e t i c and l e t s the student concentrate on 
the chemistry of the l a r g e r problem. 
As teachers, we seek ways to 
help students with those l a r g e r problems. 
A program such as GEORGE 
i s one approach that we could use to help students expand t h e i r 
problem-solving c a p a b i l i t y to deal with problems that could be 
tedious indeed with only a c a l c u l a t o r as a t o o l . 
Most other software for chemical education i s of the kind that 
an i n s t r u c t o r would select for a c l a s s . 
I m p l i c i t l y or e x p l i c i t l y 
the 
i n s t r u c t o r says "Student, go use t h i s program." 
GEORGE may l i e i n a 
very d i f f e r e n t realm i n which the students rather than the 
i n s t r u c t o r s are the ones who choose the program. 
The difference 
could be one small step toward f u l f i l l i n g 
the promise that computers 
hold for far-reaching changes i n education. 
Literature Cited 
1. 
The Pierce Report, "Computers in Higher Education"; A report of 
the President's Science Advisory Committee, February 1967. 
2. 
Gelder, J.; Snelling R. "Chem Lab Simulation 2"; High Technology 
Inc., Tulsa, OK, 1979. 
3. 
Cornelius, R.; Cabrol D.; Cachet C. 
"GEORGE - A Problem-Solver 
for Chemistry Students"; COMPress, Wentworth, ΝΗ, 1985. 
4. 
TK! Solver, Software Arts, Wellesley, MA, 1983 
5. 
Johnstone, Α. H. J. Chem Educ. 1984, 61, 847. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch011
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

134 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
6. 
Colmerauer, Α.; Janoui, Η.; Caneghen, M. "Prolog, bases 
theoriques et developpements actuels"; Technique et Science 
Informatique 1983, 4, 271. 
7. 
Cabrol D.; Cachet, C.; Cornelius R., "De nouveaux outils pour 
apprendre: les partenaires de résolution de problèmes: 
GEORGE et 
sa descendance"; Methodes Informatiques dans l'Enseignement de la 
Chimie, September 17, 1985, Lille, France. 
RECEIVED December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch011
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

12 
Analogy and Intelligence in Model Building 
W. Todd Wipke and Mathew A. Hahn 
Department of Chemistry, University of California, Santa Cruz, CA 95064 
This paper describes a new approach to building 
molecular models using methods of expert systems. 
We are 
applying symbolic reasoning to a problem previously only 
approached numerically. 
The goals of this project were 
to develop a rapid model builder that mimicked the manual 
process used by chemists. 
A further aim was to provide a 
justification for the model as a chemist would justify a 
particular 
conformation. 
The AIMB algorithm reported 
here 
is 
extremely 
fast 
and has 
a 
complexity 
that 
increases linearly with the number of atoms in the model. 
This 
paper 
describes 
the 
f i r s t 
a p p l i c a t i o n 
o f 
analogy and 
i n t e l l i g e n c e to molecular model b u i l d i n g . 
I t represents a departure 
from 
previous 
methods, 
a new approach 
aimed at r a p i d , 
automatic, 
accurate molecular model b u i l d i n g . 
Background 
Current approaches to molecular model b u i l d i n g involve either 
manual 
construction or energy m i n i m i z a t i o n . 
Manual construction o f models 
i s 
performed 
using 
programs 
l i k e 
COORD. CO 
The user 
s p e c i f i e s 
i n t e r n a l 
coordinates 
(bond length, 
bond angle, and dihedral 
angle) 
and the program 
converts 
the i n t e r n a l 
coordinates 
into 
Cartesian 
coordinates. 
Programs 
l i k e 
COORD are frequently 
used to generate 
i n i t i a l 
Cartesian coordinates 
for refinement by other 
computational 
programs. 
The cumbersome data entry of COORD can be s i m p l i f i e d by 
having 
the program 
automatically 
s e l e c t 
bond 
distances 
and bond 
angles based on the atom types and bond types specified.(2) 
Using 
manual construction from i n t e r n a l coordinates, constructing chains i s 
easy, 
but constructing 
closed 
rings i s d i f f i c u l t . 
One must 
know 
exactly the correct set o f bond lengths, 
angles, and dihedral 
angles 
to force the chain to close as a perfect 
r i n g . 
An 
extension 
o f the 
atom 
construction 
method 
allows 
adding 
groups 
or 
predefined 
templates 
rather 
than 
just 
atoms. 
Chemlab 
11,(3) 
M0LBUILD,(4) 
MMSX,(5) 
S y b y l , 
and Chemgraph 
a l l use 
t h i s 
method. 
Preformed rings can be added as templates, thus avoiding the 
r i n g 
closure 
d i f f i c u l t y . 
These 
methods 
r e s u l t 
d i r e c t l y 
i n a 
0097-6156/86/0306-0136$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch012
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

12. 
WIPKE AND HAHN 
Analogy and intelligence in Model Building 
137 
three-dimensional 
model, but 
are 
not 
automatic. 
B u i l d i n g 
a model 
that has 
the 
r i g h t 
stereochemistry 
i s 
an a d d i t i o n a l problem 
since 
s p e c i f i c a t i o n of stereochemistry i n these systems i s not simple. 
The f i r s t automatic model b u i l d e r was PRXBLD, (60 a module of the 
SECS 
synthesis 
planning 
program07) 
and 
l a t e r 
d i s t r i b u t e d 
as 
a 
stand-alone 
program. 
PRXBLD 
takes 
a 
two-dimensional 
s t r u c t u r a l 
diagram with stereochemistry and minimizes the 2-D structure to a 3-D 
structure. 
I t 
has been 
incorporated 
i n the 
PROPHET, 
DENDRAL, 
and 
ADAPT systems and i s d i s t r i b u t e d by Molecular Design L i m i t e d . 
PRXBLD 
was 
the 
f i r s t 
molecular 
modeling 
program 
to 
integrate 
symbolic 
i n t e l l i g e n c e 
and 
h e u r i s t i c s 
with 
numerical methods. 
Some of 
the 
h e u r i s t i c s are: 
1) Ignore hydrogen atoms, 
expand carbon to 
include 
the 
volume that the hydrogens should occupy. 
2) Ignore 
low energy 
terms and avoid expressions 
with large exponents 
when the 
structure 
i s badly d i s t o r t e d . 
3) Use four stages o f refinement, 
change stages 
by 
the 
s t r a i n 
energy 
per 
atom. 
4) 
Include 
a pseudo 
p o t e n t i a l 
to 
force minimization to the stereochemistry s p e c i f i e d . 
5) Use analogy 
to 
select 
parameters 
for 
force 
constants that 
are 
not 
a v a i l a b l e . 
PRXBLD never 
balked 
for 
lack of a parameter, thus always gave 
an 
answer. 
Using PRXBLD, the chemist c o u l d , for the f i r s t time, 
obtain 
a 
three-dimensional 
model 
by 
simply drawing 
the 
two-dimensional 
s t r u c t u r a l diagram. 
Although i t was the fastest model b u i l d e r of 
i t s 
time, 
c e r t a i n 
types 
of 
structures 
s t i l l 
required 
considerable 
computation because PRXBLD used numerical m i n i m i z a t i o n . 
More r e c e n t l y , 
the 
SCRIPT 
program 
by 
Cohen(jB) 
also 
takes 
a 
drawing as input and uses a l i m i t e d l i b r a r y of r i n g conformations 
to 
generate approximate geometry for m i n i m i z a t i o n . D o l a t a , using PROLOG 
and predicate c a l c u l u s methods (analogous to those used i n our QED(£) 
work) 
developed 
an 
expert 
system 
c a l l e d 
WIZARD (10) 
to 
select 
a 
reasonable set of i n t e r n a l coordinates for an a c y c l i c molecule. 
From 
these 
i n t e r n a l 
coordinates 
Cartesian coordinates 
are 
derived 
which 
are 
then given to MM2 for 
refinement. 
WIZARD has not 
yet 
handled 
c y c l i c 
systems. 
There 
i s 
a need 
for 
quick 3-D model generation. 
Models 
are 
required 
where 
knowledge 
of 
molecular 
shape 
i s 
e s s e n t i a l 
to 
the 
understanding 
of 
s t r u c t u r e - a c t i v i t y 
and 
s t r u c t u r e - r e a c t i v i t y 
r e l a t i o n s h i p s . 
Most c e r t a i n l y there 
w i l l be programs i n the 
future 
that hypothesize 
structures; 
these programs 
w i l l 
need 
rapid model 
generation 
i n 
order 
to 
evaluate 
3-D 
c o n s t r a i n t s . 
For 
these 
a p p l i c a t i o n s , 
the 
models 
must 
be 
created 
automatically, 
without 
i n t e r a c t i v e 
i n t e r v e n t i o n . 
We also 
envision the 
vast 
l i b r a r i e s of 
molecular 
structures 
stored 
i n chemical data bases w i l l 
need to 
be 
converted to 3-D geometry l i b r a r i e s i n order to use these data bases 
i n designing new 3-D 
s t r u c t u r e s . 
Goals of AIMB 
The goals of. AIMB are l i s t e d i n Figure 1. 
We wish to generate models 
r a p i d l y and s y m b o l i c a l l y . 
Chemists have over the 
years 
acquired a 
great deal of knowledge about the structure of molecules; we plan to 
give 
AIMB the 
advantage of 
access 
to 
that 
knowledge. 
S i m i l a r l y , 
chemists 
have 
used 
various 
methods 
to 
reason 
by 
analogy: 
i s o - e l e c t r o n i c 
structures, 
valence 
electron 
model, 
the 
p e r i o d i c 
t a b l e , 
e t c . 
We wish to 
incorporate 
such knowledge i n 
AIMB. 
The 
avoidance of molecular mechanics i s a negative g o a l ; perhaps i t 
i s 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch012
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

138 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
more correct say our goal i s to demonstrate that i t 
i s possible 
to 
b u i l d good models without molecular mechanics. 
After 
a l l , chemists 
b u i l d very good models manually and mentally without m i n i m i z a t i o n . 
1. B u i l d 3-D Model RAPIDLY, SYMBOLICALLY 
2. 
Use Knowledge and Analogy l i k e Chemist 
3. 
Avoid molecular mechanics 
4. Provide support for 
r e s u l t s : 
a) L i t e r a t u r e 
precedent 
b) Causes of uncertainty 
c) Q u a l i t y assessment 
d) Next best models 
5. Extendible to conformational search 
Figure 1. Goals of AIMB. 
A s i g n i f i c a n t 
goal 
i s 
to have our model b u i l d e r 
e x p l a i n and 
j u s t i f y i t s answer. 
Computing methodology now enables us to show how 
an 
answer 
i s 
d e r i v e d , 
the 
most 
notable 
example 
of 
explanation 
c a p a b i l i t i e s 
i s 
MYCIN, a medical diagnosis 
program.(11) 
Chemists 
have the same need for explanation of computing r e s u l t s that 
doctors 
have. 
Users o f model b u i l d i n g programs are frequently 
non-experts. 
They need 
to 
know whether 
the 
program that 
someone 
else 
wrote 
i s 
applicable 
to 
t h e i r 
problem, 
and 
to 
what degree the 
program 
can 
handle t h e i r problem. 
They should r e c e i v e , for example, i n d i c a t i o n s 
of 
the l i t e r a t u r e precedent 
showing that the method can handle that 
case 
w e l l , 
or 
an example of 
an evaluated 
answer 
for 
a " s i m i l a r " 
problem. 
Every answer i n science c a r r i e s an uncertainty, but 
current 
numerical programs do not reveal t h i s uncertainty to the user. 
The 
model b u i l d e r should explain what the causes for the uncertainty 
are 
as 
well 
as 
the 
probable magnitude. 
I t 
i s desirable 
to 
obtain 
an 
o v e r a l l 
q u a l i t y assessment of the 
model and 
some i n d i c a t i o n which 
parts of the model are most strongly supported 
and which parts 
are 
most tenuous. 
Thus the 
q u a l i t y assessment must also apply to 
the 
i n d i v i d u a l components o f the model when p o s s i b l e . 
Another excellent 
way to j u s t i f y the "answer" i s by presenting for comparison the "next 
best" models. 
I f we succeed with these o b j e c t i v e s , the f i n a l 
goal i s to apply 
the same methods with minor modification to generate a l l 
"reasonable" 
conformers of a compound, i . e . , to develop a symbolic conformational 
search c a p a b i l i t y . 
Components of AIMB 
We envisioned i n our design of AIMB that we could use a l i b r a r y of 
X-ray c r y s t a l structures 
as our "experience" or knowledge of three-
dimensional models of molecular structures. 
I t c o u l d , of course, 
be 
a l i b r a r y o f computed structures, but we favor having an experimental 
b a s i s for our inferences. 
In our reasoning we need to duplicate the 
learned chemical r u l e s of analogy; i n t h i s case, those analogies that 
preserve 
the three-dimensional 
structure 
of the molecule. 
A module 
to analyze the problem to be solved, and a module to construct 
the 
f i n a l three-dimensional model seemed obvious. 
Graphical input of the 
problem and output of the r e s u l t seemed o b l i g a t o r y . 
In f a c t , we even 
r e l y h e a v i l y on graphics for observing the operation of the 
program 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch012
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

12. 
WIPKE AND HAHN 
Analogy and Intelligence in Model Building 
139 
for 
debugging 
purposes. 
A model 
or 
three-dimensional 
inference 
evaluator 
i s also 
important. 
L a s t l y , 
to construct 
an explanation, 
the program needs to extract 
from i t s inferences and knowledge base 
the 
t r a i l 
of 
l o g i c 
and 
supporting data 
for 
the 
r e s u l t i n g 
three-
dimensional model. 
It also needs to r e t a i n runners-up models and the 
supporting data for them. 
1 Create l i b r a r y of models 
2 
Enter s t r u c t u r a l diagram of target 
3 
Perceive target 
4 
Target or analogs i n l i b r a r y ? 
5 
No, Divide into subproblems, solve each 
6 
Assemble solved subproblem parts 
7 
Compute degree of f i t of subparts 
8 
Prepare supporting data 
9 
D i s p l a y completed model 
Figure 2. 
AIMB algorithm. 
AIMB Procedure 
The 
sequence of events i n AIMB i s summarized i n Figure 2. F i r s t 
the 
l i b r a r y of experience (known structures) 
i s processed into a form for 
rapid r e t r i e v a l . 
In t h i s paper we used a 2000 compound l i b r a r y from 
the Cambridge C r y s t a l F i l e . 
Each of these structures 
represents an 
experimental 
r e s u l t 
with 
the 
p r e c i s i o n of 
the 
c r y s t a l 
structure 
refinement and l i t e r a t u r e reference to the o r i g i n a l paper. 
These are 
not "averaged" 
templates, 
although nothing i n our design 
precludes 
using a l i b r a r y 
of averaged 
templates 
or 
t h e o r e t i c a l l y c a l c u l a t e d 
structures. 
The l i b r a r y i s processed once. 
New experimental 
r e s u l t s 
can be entered incrementally by processing j u s t the new structures. 
Model 
b u i l d i n g 
begins 
with 
the 
chemist 
drawing 
the 
two-dimensional 
s t r u c t u r a l 
diagram 
of 
the 
desired 
structure 
with 
stereochemistry, now a w e l l - e s t a b l i s h e d p r a c t i c e . ( 1 2 ) , ( 1 3 ) The target 
i s 
perceived 
to 
i d e n t i f y 
rings,(14) 
chains, 
a r o m a t i c i t y , 
and 
stereochemistry,(15) 
but 
c u r r e n t l y 
not 
functional 
groups. 
The 
canonical SEMA name i s also 
generated.(16) 
AIMB 
f i r s t 
determines 
i f 
the 
target 
or 
close 
analogs 
are 
contained i n the knowledge base. 
This access to the knowledge base 
i s instantaneous because we use hash coding methods.(17) 
I f something 
i s 
found, i t selects the most r e l a t i v e experience (known model 
from 
the knowledge base) and uses that geometry for the problem. 
We w i l l 
discuss how AIMB evaluates "closeness" of analogies i n a moment. 
I f 
there i s no close analog to the whole target compound, AIMB uses a 
" d i v i d e 
and 
conquer" 
strategy. 
The 
problem 
i s 
divided 
into 
subproblems each of which i s treated as a new problem. 
As i n general 
systems a n a l y s i s , the best subdivisions of a system are those 
that 
minimize connections ( i n t e r a c t i o n s ) between subsystems. 
In our 
case 
we select r i n g assemblies(14) 
and chains as s u b d i v i s i o n s . 
When the 
component i s carved out, we also r e t a i n information about the context 
i n which the component r e s i d e s . 
These components or 
subproblems are 
p r i o r i t i z e d 
to 
solve 
the 
l a r g e s t , most r i g i d r i n g assemblies f i r s t . 
This w i l l force an e a r l y 
f a i l , 
i f 
f a i l 
we must. 
AIMB seeks 
the 
c l o s e s t 
analogies 
to 
t h i s 
subproblem 
present 
i n 
the 
knowledge base. 
F i r s t 
i t 
looks 
for 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch012
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

140 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
components i n an i d e n t i c a l environment with i d e n t i c a l structure, 
next 
with 
atom 
type 
analogies, 
then 
with 
d i f f e r e n t 
environment 
and 
d i f f e r e n t atom types, r e l a x i n g the matching constraints 
u n t i l one or 
more analogs are found. 
The solved subparts are then assembled by the constructor. 
The 
degree of 
f i t 
i s computed and retained 
for 
l a t e r 
evaluation. 
The 
process 
continues 
u n t i l 
a l l 
subproblems 
are 
solved. 
Then 
the 
explanation module prepares the supporting explanation for the model 
from the reasoning t r a i l and evaluation r e s u l t s . 
The f i n a l model i s 
then displayed and the explanation 
presented. 
Our 
system 
architecture 
i s 
i l l u s t r a t e d 
i n Figure 3 with 
the 
input screen shown i n Figure 4. Graphical input i s handled p r i m a r i l y 
by 
the 
PS300 system 
with 
occasional messages passing 
between 
the 
PS300 and the VAX. 
The small window i s a rotatable 
three-dimensional 
view of the developing model. 
We w i l l take 7-benzyl-2-norbornanone as an example for the model 
b u i l d i n g process. 
Figure 4 shows the compound as i t has been drawn 
i n 2-dimensions by the 
user. 
The program does not 
find 
an 
exact 
match or an analog match for the compound. 
Therefore, 
the compound 
i s divided into subcomponents 
with the norbornyl group becoming the 
f i r s t 
subproblem. 
We can i n Figure 5 observe 
AIMB evaluating 
the 
relevance of a bromocamphor compound as an analog for the norbornyl 
group. 
Debug switches have been 
set 
to 
show i n t e r n a l 
scoring and 
conclusions. 
This structure ends up scoring the best. 
Now 
we 
turn 
to 
the 
scoring 
function. 
The 
function 
for 
evaluating the closeness o f analogy involves a s e n s i t i v i t y parameter 
for 
the atom c l a s s , js, times the d i s s i m i l a r i t y parameter, d: 
Summation occurs over a l l atoms and a l l a t t r i b u t e s . 
There are three 
atom c l a s s e s : normal atoms, o r i g i n atoms (where components j o i n ) and 
dummy atoms ( p a r t i a l context 
of neighboring component 
environment). 
A t t r i b u t e s include atom type, bond type, stereochemistry, 
e t c . 
For 
atom type d i s s i m i l a r i t y , there i s a series of atom analogy classes of 
varying degree of closeness. 
For example, i f atom types are equal, d 
= 0, i f a. and a. belong to { C l , B r , I] ά = 3, i f a. and a. belong to 
{F, B r , e l , 1} dP = 5, and i f a. and a. are not members of any analogy 
classes 
then 
à = 10. 
Aromatic bondi are 
considered 
analogous 
to 
double bonds. 
Since we are 
s t i l l 
exploring the analogy h e u r i s t i c s , 
we should take these only as examples of the approach. 
Returning to 
our 
example, 
Figure 6 shows the 
scores 
computed for 
two 
analogous 
bicyclo[2.2.1]heptanes. 
The bromo compound at 
1500 i s better 
than 
the 
dimer 
at 
1540 
(lower 
number 
indicates 
smaller d i s s i m i l a r i t y ) . 
Note that AIMB recognizes enantiomers and i s able to use a r e f l e c t i o n 
of the model. 
In t h i s case the carbonyl i s on the wrong side of the 
molecule. 
The a c y c l i c component i s found i n two compounds (Figure 6) 
one 
having 
an oxygen i n place of the 
c e n t r a l 
carbon 
(540) , the 
other 
having a carbon (220). 
In both cases the compounds have an aromatic 
ΝΑ M 
I 
Κ 
WHERE 
A e TARGET, 
A ' € ANALOG, J = 
M A P ( l ) 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch012
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

Figure 4. Input on E&S PS330 of molecule to be modeled by AIMB. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch012
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

Figure 6. 
Dissimilarity scores for analogies relevant to 
problem. 
The lower score i s the better analogy. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch012
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

12. 
W I P K E A N D 
H A H N 
Analogy and intelligence in Model Building 
143 
r i n g 
joined by one atom chain to 
an a l i p h a t i c 
five-membered 
r i n g 
system. 
F i n a l l y for our 
example, 
AIMB assembles 
the 
components 
i n 
three-dimensions. 
The explanation module i s under development, 
but 
the reasoning trace and q u a l i t y o f model evaluation i s 
implemented. 
In 
t h i s example the f i t o f the phenyl group to the chain i s 
w i t h i n 
0^01 A , the 
f i t of the 
norbornane 
skeleton 
to 
the 
chain i s 
0.11 
A ( t h i s 
r e f l e c t s 
the 
fact 
that 
the 
analogy 
for 
the 
chain 
was 
connected 
to 
a l e s s 
constrained 
five-membered 
r i n g ) . 
The 
actual 
accuracy 
of 
the 
r e s u l t i n g model i s much better 
than 
these 
values 
i n d i c a t e because the discrepancy i n f i t i s only an i n d i c a t i o n o f the 
s i m i l a r i t y of the analogy and i s not incorporated 
into the 
model). 
The chain analogy comes from C r y s t . S t r u c t . 
Commun. 8, 
553 
(1979); 
norbornane 
skeleton from Acta. 
C r y s t a l l o g r . Sect Β 31, 
903 
(1975). 
The reported p r e c i s i o n of the experiment 
for the c r y s t a l 
structures 
i s also a v a i l a b l e . 
An ORTEP p l o t 
o f the 
AIMB-built model i s 
shown i n Figure 
7. 
A l l i n g e r ' s 
molecular 
mechanics 
program 
MM2(18) 
was 
then 
used 
to 
r e f i n e 
the 
model constructed 
by 
AIMB. 
Superposition of 
the 
AIMB 
model with that refined by MM2 i s shown i n Figure 8. 
MM2 did 
not 
change the dihedral angles of the benzyl group from those proposed by 
AIMB. 
L e t ' s r e c a l l that AIMB has no i n t e r n a l knowledge of s t r u c t u r a l 
chemistry, but only knows how to use analogies and a knowledge base 
of 
known models. 
AIMB does not 
c u r r e n t l y know about 
any kind 
of 
non-bonded 
interatomic 
i n t e r a c t i o n s , 
yet 
AIMB b u i l t a correct model 
of the example target compound because the knowledge of 
i n t e r a c t i o n s 
and how to minimize them i s embedded i n the knowledge base of known 
models. 
Thus AIMB b u i l t a minimum energy model ( v e r i f i e d 
separately 
by 
MM2) yet 
AIMB d i d t h i s 
s y m b o l i c a l l y by reasoning 
rather 
than 
minimization. 
Table I . 
Speed of b u i l d i n g model of 
7-benzyl-2-norbornanone 
Method 
Time (seconds) 
AIMB 
40 
Human being 
118 
PRXBLD 
644 
MM2 
4436 
Several s i g n i f i c a n t points can now be made. 
F i r s t as Table I shows, 
on the VAX 11/750, AIMB took only 40 seconds to construct the model. 
A chemist took 145 seconds to assemble a Fieser model of the compound 
and when completed, the chemist did not know the dihedral angles o f 
the benzyl group. 
PRXBLD took 644 seconds to b u i l d the model. 
This 
molecule 
i s 
d i f f i c u l t 
for 
PRXBLD because 
adjustment 
of the 
chain 
angles requires movement of the two large groups of atoms, but PRXBLD 
does 
not 
recognize 
that 
the 
groups 
can 
be 
moved 
as 
a 
u n i t . 
A l l i n g e r ' s MM2 took 4436 seconds to converge to the default 
CHEMLAB 
c r i t e r i a and that was when given a very good input structure 
(PRXBLD 
model). 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch012
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Figure 7. ORTEP plot of f i n a l AIMB model of target molecule. 
Figure 8. Superposition of AIMB model and result of MM2 
refinement. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch012
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

12. 
WIPKEANDHAHN 
Analogy and Intelligence in Model Building 
145 
Conclusion 
We have shown that analogy and i n t e l l i g e n c e applied to model b u i l d i n g 
leads 
to a 
f a s t , 
accurate 
algorithm. 
Using 
p r i o r 
knowledge i s 
e f f i c i e n t . 
This method i s a p p l i c a b l e to complex f u n c t i o n a l i t y where 
the 
forces 
or 
i n t e r a c t i o n s 
may not be 
well 
understood, 
e . g . , 
inorganics 
and organometallics, but 
where 
there 
are many 
known 
c r y s t a l 
structures. 
While we based our knowledge on c r y s t a l 
data, 
one could also use computed structures 
separately or i n conjunction 
with c r y s t a l data. 
The process we described i s easy for any chemist 
to understand. 
AIMB does not involve 
force 
f i e l d s or complicated 
mathematics. 
The models AIMB generates are supported by experimental 
data 
and 
h i g h l y 
j u s t i f i e d . 
F i n a l l y , 
while 
energy 
minimization 
methods increase i n time exponentially as the number o f atoms i n the 
problem increase, the AIMB algorithm increase i n time i s l i n e a r with 
increasing numbers of atoms. 
Although 
AIMB i s a working prototype, we have many questions 
remaining to be answered. 
We would 
l i k e to explore the d e t a i l e d 
h e u r i s t i c s and study the effect o f changing these on the f i n a l models 
constructed. 
We are 
interested 
i n seeing how the 
s i z e 
o f the 
knowledge base 
i s r e l a t e d to the q u a l i t y o f r e s u l t s and speed of 
operation. 
F i n a l l y , 
we would 
l i k e 
to explore i t s a p p l i c a t i o n i n 
areas where conventional methods simply can not be used. 
Acknowledgments 
This work was supported by PRXBLD users and i n part by a Faculty 
Research Grant from the U n i v e r s i t y of C a l i f o r n i a . 
Literature Cited 
1. 
Mueller, K. "COORD: Interconversion of Cartesian and Internal 
Coordinates (QCPE 419)". QCPE Bull. 1981, 1, 37. 
2. 
Program MDCORD does this. 
Personal 
Communication, 
Douglas 
Hounshell. 
3. 
Potenzone, R., Jr.; Cauicchi, E.; Hopfinger, A. J.; Weintraub, 
H. 
J. R. "Molecular 
Mechanics 
and the 
CAMSEQ Processor". 
Computers and Chemistry 1977, 1, 187. 
4. 
Liljefors, 
T. 
"MOLBUILD: An Interactive 
Computer 
Graphics 
Interface to Molecular Mechanics". 
J. 
Mol. Graphics 1983, 1, 
(4), 111. 
5. 
Humbolt, C. "MMS-X Modeling System User's Guide"; Technical Memo 
7, Washington Univ., St. Louis MO, Jan. 1980. 
6. 
Wipke, W. T.; Verbalis, 
J . ; Dyott, 
T., 
"Three-Dimensional 
Interactive Model Building", Presented at the 162nd National 
Meeting of the American Chemical Society, Los Angeles, August 
1972. 
7. 
Wipke, W. T. "Computer-Assisted 
Three-Dimensional 
Synthetic 
Analysis". 
In Computer 
Representation and Manipulation of 
Chemical Information; Wipke, W. T.; Heller, S. R.; Feldmann, R. 
J.; 
Hyde, E., Eds.; John Wiley and Sons, Inc.: 1974, pp 147-174. 
8. 
Cohen, N. C.; Colin, P.; Lemoine, G. "SCRIPT: Interactive 
Molecular Geometrical Treatments on the Basis of Computer-Drawn 
Chemical Formula". Tetrahedron 1981, 37, 1711-1721. 
9. 
Dolata, D. P. QED: Automated Inference in Planning Organic 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch012
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

146 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Synthesis, PhD dissertation, University of California, 
Santa 
Cruz 1984. 
10. 
Dolata, 
D. 
P., 
"WIZARD—Artificial 
Intelligence 
in 
Conformational 
Analysis", 
Presented at the Drug 
Information 
Workshop, Feb. 4-6, 1985. 
11. 
Edward Hance Shortliffe 
"Computer Based Medical Consultations: 
MYCIN"; American Elsevier, New York: 1976. 
12. 
Corey, E. J.; Wipke, W. T. "Computer-Assisted Design of Complex 
Molecular Syntheses". 
Science 1969, 166, 178. 
13. 
Corey, E. J.; Wipke, W. T.; Cramer, R. D.; Hower, W. J. J. Am. 
Chem. Soc. 1972, 94, 421. 
14. 
Wipke, W. T.; Dyott, T. M. "Use of Ring Assemblies in a Ring 
Perception Algorithm". J. Chem. Inf. and Comput. Sci. 1975, 15, 
140. 
15. 
Wipke, W. T.; Dyott, 
T. M. "Simulation 
and Evaluation of 
Chemical 
Synthesis. 
Computer 
Representation 
of 
Stereochemistry". 
J. Am. Chem. Soc. 1974, 96, 4825, 4834. 
16. 
Wipke, W. T.; Dyott, T. M. "Stereochemically Unique Naming 
Algorithm". J. Am. Chem. Soc. 1974, 96, 4834. 
17. 
Wipke, W. T.; Krishnan, S.; Ouchi, G. "Hash Functions for Rapid 
Storage and Retrieval of Chemical Structures". 
J. 
Chem. Inf. 
and Comput. Sci. 1978, 18, 32. 
18. 
Burkert, U.; Allinger, N. L. "Molecular Mechanics"; American 
Chemical Society: ACS Monograph, Vol. 177, 1982. 
RECEIVED January 24, 1986 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch012
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

13 
Computer-Assisted Drug Receptor Mapping Analysis 
Teri E. Klein
1, Conrad Huang
1, Thomas E. Ferrin
1, Robert Langridge
1, and 
Corwin Hansen
2 
1Computer Graphics Laboratory, University of California, San Francisco, CA 94143 
2Department of Chemistry, Pomona College, Claremont, CA 91711 
KARMA is an interactive computer assisted drug design tool that incorporates 
quantitative structure-activity relationships (QSAR), conformational analysis, 
and three-dimensional graphics. It represents a novel approach to receptor map-
ping analysis when the x-ray structure of the receptor site is not known, KARMA 
utilizes real time interactive three-dimensional color computer graphics com-
bined with numerical computations and symbolic manipulation techniques from 
the field of artificial intelligence. 
Many problems in chemistry may benefit from developments in the field of Artificial Intelligence 
(AI), particularly the area now known as knowledge engineering. Knowledge can be described as 
that which includes both empirical material and that "which is derived by inference or interpreta-
tion". (1) It may consist of descriptions, relationships, and procedures in some domain of interest 
(2) We are now incorporating methods from knowledge engineering research in computer assisted 
drug design. 
Molecular modeling with interactive color computer graphics in real time is a powerful 
method for studying molecular structures and their interactions. Display and manipulation of 
computer generated skeletal and surface models provide efficient methods for the chemist to 
examine steric interactions of many ligands with the binding sites in their receptors. We have 
combined x-ray crystallographic results, quantitative structure-activity relationships (QSAR), and 
interactive three-dimensional graphics in earlier attempts to design better ligands for enzyme bind-
ing. (3,4) We are applying knowledge engineering techniques provided by the software KEE 
(Knowledge Engineering Environment (5) ) to the development of rational drug design methods 
without having x-ray crystallographic results in hand. 
Our integrated system, KARMA, KEE Assisted Receptor Mapping Analysis, uses knowledge 
sources, including QSAR and conformational analysis, in a rule-based system to create an anno-
tated visualization of the receptor site. This is then used in an iterative manner to guide the inves-
tigator in generating rules, hypotheses, and new candidate structures for drug design. This 
approach to receptor mapping and drug design differs from the traditional approach used by 
chemists in two significant ways. Classically, in computerized drug design, one superimposes a 
set of structurally related molecules (congeners) so that their bioactive functional groups coincide, 
yielding a pharmacophore. A surface is then derived based on the composite molecule supposedly 
yielding a complementary shape of the receptor. (6) This approach has met with limited success 
because compounds that act as substrates or inhibitors of certain receptors do not necessarily bind 
similarly. It is our belief that the commonality of the binding mode must be established. The 
other shortcoming of the traditional approach is that it provides little information on the qualitative 
character of the enzyme surface. The classical lock and key concept of ligand-receptor 
0097-6156/86/0306-O147$06.00/0 
© 1986 American Chemical Society 
American Chemical Society 
Library 
1155 16th St.f N.W. 
Washington, D.C. 20036 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch013
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

148 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
emphasizes structural geometry and may neglect the importance of interactions such as hydropho-
bicity. Processing of the binding data using QSAR prior to receptor mapping analysis yields 
information not only about the hydrophobic and polar nature of the surface model, but also about 
the steric and electronic properties of the data. (7) 
System Design 
KARMA is a set of programs residing on several machines connected by a high bandwidth network 
(see Figures 1 and 2). The main program resides on the Lisp machine and controls all processing. 
The controlling program on the Lisp machine is implemented on top of KEE which embodies many 
knowledge engineering techniques. KEE provides a set of software tools that allows for very rapid 
software prototyping, evaluation, debugging, and modification. Specifically, KARMA takes advan­
tage of KEE*s capabilities that include frame based knowledge representation with inheritance, a 
rule-based inference system, a graphical interface for debugging and displaying knowledge bases, 
and a flexible interface that allows for the integration of outside methods. (5) 
Input to the controlling program consists of congener sets and their related QSAR equa­
tions. A satellite program, based on the Pomona MedChem Software SMILES (Simplified Molec­
ular Input Line Editor System) is used for input of the structures. (8) SMILES creats a unique 
identifying code for each chemical structure which is useful for searching for structures and phy-
siochemical parameters, and minimizing duplication of structural information. These structures 
are passed to satellite programs, including distance geometry (9) and energy minimization (10), to 
generate multiple conformations that are then displayed so that users may select those of interest 
These structures, which constitute the basis set, are used to define the receptor model. 
The receptor model is represented graphically by a set of surfaces. These surfaces are 
defined by a set of control points which are calculated on the compute server. Control points, 
which are based on minimized structures, are then manipulated by KARMA's rules system. These 
rules provide detail to the receptor surface model. During this process, KEE provides a graphical 
interface showing which rules and derivations are being accepted as true. The user can also 
interact with KARMA's rule system during this time. The surface model is displayed using the con­
trol points to form bicubic patches on the graphics workstation. The user can then manipulate the 
surface as well as modify the structure. These modifications are sent back to the controlling pro­
gram for refinement by the rules. This iterative process continues until the user is satisfied with 
KARMA's results. 
As seen in Figure 1, our hardware is connected by an Ethernet (11) The control server is a 
Symbolics 3600 Lisp Machine and the compute server is a DEC VAX 8600. The three dimen­
sional graphics workstations include the Silicon Graphics IRIS 2400 and the Evans and Sutherland 
PS350. Electronic communication with collaborating scientists at other institutions is available 
through the VAX 750 via several networks including the ARPAnet and CSnet 
System Implementation 
Input to the controlling program is achieved through a series of "pop-up" menus in the Karma 
Window (see Figure 3a). For example, if the user is interested in entering a set of congeners, the 
user would select the molecule editor, KARMA will then display the molecule editor layout in the 
current window. Users can then enter the chemical structures selecting structure from the 
molecule editor menu (see Figure 3b). Structures are currently entered using the tree structure of 
SMILES (see Figure 3c). (The molecule editor will be expanded to allow for graphical input in 
the future.) KARMA then displays the two-dimensional structure for user verification (see Figure 
3d). Coordinates for the three-dimensional structures are saved in a knowledge base in KEE. The 
three-dimensional structures are based on x-ray crystallographic data, standard bond angles, and 
bond lengths. All congener data, including physiochemical parameters such as log Ρ or MR (cal­
culated or experimental), can easily be entered and revised in the molecule editor (see Figure 4). 
Three-dimensional coordinates for the congener set are passed to the distance geometry and 
minimization programs. These satellite programs provide efficient methods for searching confor­
mational space. Distance geometry programs includes subroutines for controlling ring planarity of 
aromatic rings and orientation of the molecules based on a common group of atoms. (12) 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch013
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

13. 
KLEIN ET AL. 
Computer-Assisted Drug Receptor Mapping Analysis 
149 
Compute Server 
DEC VAX 8600 
Graphics Workbench 
Silicon Graphics 
IRIS 2400 
Control Server 
Symbolics 3600 
Lisp Machine 
Graphics Workbench 
Evans & Sutherland 
PS 350 
Communication Server 
DEC VAX 750 
Communication Server 
DEC VAX 750 
Outside 
World 
[ (e.g. ARPAnet, 
. CSnet,etc.)y 
Ethernet 
Figure 1. 
Hardware Configuration. 
Copyright © 1985, Regents of the University of California/Computer Graphics Lab. 
Control Server 
Structure 
Generation 
Compute Server 
Distance Geometry 
and 
Minimization 
Graphics Workbench 
s 
Control Server 
Display Model 
User Modification 
s 
Rules for 
Characterization 
of the 
Surface 
Display Model 
User Modification 
Κ 
Ν 
Rules for 
Characterization 
of the 
Surface 
Display Model 
User Modification 
Rules for 
Characterization 
of the 
Surface 
Graphics Workbench 
Select 
Feasible 
Models 
Compute Server 
Surface Generation 
1. Control Points 
2. Bicubic Patches 
Figure 2. 
System Architecture. 
Copyright © 1985, Regents of the University of California/Computer Graphics Lab. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch013
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

150 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Karma Window 
Editors 
Molecule 
Equation 
Rule 
Graphics 
(a) 
Molecule Editor 
Structure 
c 1 ccccc 1 Cc2c(N )nc(N)nc2 
(c) 
Molecule Editor 
Edit 
Structure 
Parameters 
Name 
Parent 
(b) 
Molecule Editor 
ΝΗ2 
NH2 
SMILES: clccccclCc2c(N)nc(N)nc2 
Name: 
(d) 
Figure 3. 
Editing Sample. 
Copyright © 1985, Regents of the University of California/Computer Graphics Lab. 
Molecule Editor 
NH2 
N 
NH2 
Calculated Parameters 
Parent: 
clog Ρ = 2.025 
cMR = 5.979 
Substituent: 
Experimental Parameters 
NH2 
N 
NH2 
Calculated Parameters 
Parent: 
clog Ρ = 2.025 
cMR = 5.979 
Substituent: 
Experimental Parameters 
Revise 
Save 
Abort 
NH2 
N 
NH2 
Parent: 
log Ρ = 1.58 
Substituent: 
π = 0.000 
SMILES: clccccclCc2c(N)nc(N)nc2 
Name: 
Figure 4. 
Editing Sample (continued). 
Copyright © 1985, Regents of the University of California/Computer Graphics Lab. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch013
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

13. 
KLEIN ET AL. 
Computer-Assisted Drug Receptor Mapping Analysis 
The output of the distance geometry and minimization programs is passed to the graphics 
program EDGE (Easy Distance Geometry Editor). The structures are displayed three-
dimensionally so users may select structures to represent conformational space. Models are easily 
selected pointing at the desired structure (see Figure 5). X, Y, and Ζ rotations and translations, 
depth cueing, color, and labeling have been incorporated in EDGE, EDGE also provides a RMS 
matching routine for Ν arbitrary atoms designated by the user. The selected models are then used 
for surface generation. 
Surface generation is based on a set of points derived from the outcome of distance 
geometry programs applied to the basis set of structures. The basis set of points, P, is defined as: 
where Pi is the uniformly distributed set of points over a sphere corresponding to atom i, and, 
g (PiPj) is the overlap of the two sets of points. The density of points/angstrom
2 can be arbi­
trarily set by the user. If the density is relatively high, a large number of bicubic patches with 
small area are generated; to address each bicubic patch at a high density would be time-consuming 
and difficult at best If the density of points is low, the patches become too large and don't yield 
enough detailed information about the surface model. 
The control points are defined by the basis set of points P. These control points define the 
parametric bicubic patches which form the surface model. Advantages of the parametric bicubic 
surface include continuity of position, slope, and curvature at the points where two patches meet 
All the points on a bicubic surface are defined by cubic equations of two parameters s and /, where 
s and t vary from 0 to 1. The equation for x(s,t) is: 
x(s ,f ) = a u s
3 *
3 + a \2S
2t
2 4- a \-$sh + α χ ^
3 
+ ct2\s
2t
7> + a22S
2t
2 + <i2zs
2t +α24β
2 
+ a ^\st
3 + a yist
2 + a y$st + a 345 
+ <Ζ4ΐί
3 + α42Γ
2+<243ί + Û44 
Equations for y and ζ are similar. (13) Either cardinal spline or B-spline bicubic patches can be 
used as they differ only by the starting coefficients. (14) Overlapping sets of control points allow 
for the joining of patches. Sixteen points define a bicubic patch. To determine which points 
define which patches, an initial triangle is formed from three nearest neighbors. The next triangle 
shares one side of the initial triangle and is connected to its next nearest neighbor. This process is 
continued iteratively until all points are accounted for. The internal edge of two triangles is then 
dropped to form a quadrilateral. Each internal edge is used only once. Nine quadrilaterals define a 
single patch. These patches are combined to form the surface model and are manipulated by both 
KARMA's rule system and the investigator at the graphics station. 
System Core 
The information contained in KARMA's knowledge bases is based upon quantitative structure-
activity relationships (QSAR), kinetic data, and structural chemistry. The combination of QSAR 
and kinetic data allows for the study of enzyme-ligand interactions. The Hansen approach to 
QSAR, based on a set of congeners, states: 
Biological Activity = f(physiochemical parameters) 
Physiochemical parameters are used to model the effects of structural changes on the electronic, 
hydrophobic, and steric effects for organic molecules. (15) Examples of physiochemical parame­
ters include, among others: 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch013
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

152 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
σ, an electronic constant based on the Hammett equation for the ionization of substituted 
benzoic acids; 
π, the hydrophobic parameter for a chemical substituent based on the octanol-water par­
tition coefficient log 
P; 
MR, the molar refractivity, which parameterizes polarizability and steric effects; and 
Verloop's parameters, which are steric substituent values calculated from bond angles 
and distances. 
Using multivariable linear regression, a set of equations can be derived from the parameterized 
data. Statistical analysis yields the "best" equations to fit the empirical data. This mathematical 
model forms a basis to correlate the biological activity to the chemical structures. 
KARMA describes the interactions for enzyme-ligand binding using QSAR equations and 
parameters, and the structural information of the congener data. These interactions, with illustra­
tive examples, are shown below: 
Interaction 
Example 
enzyme -> specific enzyme 
congener -> specific enzyme 
congener -> specific congener 
substituents -» specific congener 
equations -> congeners 
variable -> substituents 
specific enzyme —» specific enzyme 
*DHFR - Dihydrofolate Reductase 
"inhibitors - triazines, benzylpyrimidines, etc. 
The data used for the above interactions is contained in KARMA's knowledge bases, Chem-
Data and KarmaData. These knowledge bases contain information about classes of objects or 
about the objects themselves. Objects and their attributes are represented as individual 
"knowledge frames" which are linked together to form a hierarchal structure. Consistency 
among the objects in both knowledge bases is obtained through inheritance rules. 
ChemData is one of several data bases available in KARMA. This data base contains chemi­
cal information pertaining to chemical elements and molecular substituents. Elemental data 
includes atom type, atomic radii, hybridization, molecular weight, etc. Substituent data consists of 
unique identifying codes, physiochemical parameter data, and x-ray crystallographic data. For 
each substituent, where known, there are values for the hydrophobic parameter, i.e., π, an elec­
tronic parameter, i.e., σ, and a steric parameter, i.e., MR. 
The associated x-ray crystallographic 
data is used for building the small molecules in the congener set This data is also used for speci­
fying constraints used in the distance geometry calculations. 
KarmaData contains information which the user enters, e.g., QSAR equations, congener set, 
as well as information about previously studied enzyme-ligand binding complexes. KarmaData 
contains several classes and subclasses. For example, in KarmaData, there is a class called pro­
teins, a subclass in proteins called dehydrogenase, a particular member of dehydrogenase called 
DHFR, and a specific instance of DHFR called chicken (vide infra). Chicken DHFR contains 
those attributes which are specific to itself, and inherits properties from units DHFR, dehydro­
genase, and proteins. 
(DHFR* -> chicken DHFR) 
(benzylpyrimidines -> chicken DHFR) 
(inhibitors** -> benzylpyrimidines) 
(3,4,5 OMe -> benzylpyrimidines) 
(equation -> benzylpyrimidines) 
(4-Cl->4-Br) 
(chicken DHFR -» L. casei DHFR) 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch013
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

13. 
KLEIN ET AL. 
Computer-Assisted Drug Receptor Mapping Analysis 
153 
CAC 
• 
E.coli 
Proteins 
DHFR «- 
L.casei 
Ν 
ADH 
Χ 
>> Chicken 
KEE provides many different mechanisms for inheritance. KEE has the ability to constrain the type 
and number of values assigned to attributes for consistency and description in the knowledge base. 
© 
Currently, KARMA's rules are formulated in an if-then format. A rule may have multiple 
conditions, conclusions, and actions, KARMA takes advantage of both the forward and backward 
chainers for derivation of the three-dimensional receptor model. For example, two types of rules, 
generic and specific, can be defined empirically from the results of QSAR as well as from molecu­
lar structure. 
Generic rules are based on the QSAR equations and their coefficients. Forward chaining 
using these rules yields basic characteristics for the receptor site model. For instance, an 
abstracted generic rule may take the form: 
If the coefficient of the hydrophobic parameter is approximately equal to one, then ex­
pect complete desolvation about substituent X of the ligand. 
This rule was derived empirically from some recent work on several species of alcohol dehydro­
genase (ADH). (16) The following equations were found: 
Compounds 
Enzyme 
Equations 
Horse ADH 
log 1/K. = 0.89 log Ρ + 3.56 
n= 11, r = 0.960, s = 0.197 
^NH 2
 
H
o
r
s
e 
log 1/K. = 0.98 log Ρ - 0.83 σ + 3.69 
Τ
 
2 
η =14, r = 0.937, s = 0.280 
Χ 
Human ADH 
log 1/K. = 0.87 log Ρ - 2.060^ 
η =13,^ = 0.977, s = 0.303 
-4.60 
W 
Ν 
NH 
Rat ADH 
Horse ADH 
log 1/K. = 1.22 log Ρ - 1.80 o m e t a + 4.87 
n= 14,^=0.985, s = 0.316 
log 1/K. = 0.96 log?+ 5.70 
n = 5, r = 0.990, s = 0.207 
where X is the substituent and log Ρ is based on the octanol-water partition. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch013
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

154 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
The average of the coefficients of the hydrophobic term is approximately equal to one (average = 
0.97) suggesting complete desolvation about substituent X. Figure 6 shows complete desolvation 
by the enzyme ADH (hydrophobic space - red; polar space - blue) around substituent X of the 
pyrazole (green). 
Another example of a rule dealing with hydrophobicity may take the form: 
If the coefficient of the hydrophobic parameter is greater than 0.5 and less than 1.0, then 
expect a concave surface about substituent X of the ligand. 
This type of rule is empirically based on the enzyme-ligand binding such as that of carbonic anhy-
drase c (CAC) and sulfonamides. (4) The following equation was found: 
Compound 
Equation 
log Κ = 1.55 σ + 0.64 log Ρ - 2.07^ - 3.28I2 + 6.94 
η = 29, r = 0.993, s = 0.190 
Figure 7 shows how the solvent accessible surface of the enzyme CAC (hydrophobic space - red; 
polar space - blue) is slighdy concave about the substituent X of the sulfonamide (green). Similar 
rules exist for the coefficients which describe other aspects of hydrophobicity, as well as polar 
space, which help define the basic shape, i.e., cleft or hole, of the surface receptor model. 
Specific rules are based on the attributes of congeners, including the physiochemical param­
eters used to determine the QSAR equation, the biological activity, and the molecular structure. 
Backward chaining, using these rules with specific instances of substituents, yields detailed shape 
and character for the receptor model. For instance, an abstracted specific rule may take the form: 
If the biological activity of compound y is less in enzyme A than that of related enzyme 
B, expect possible steric hindrance about substituent X. 
One possible interpretation of this type of rule is the enzyme ligand binding of trimethoprim with 
bacterial DHFR and chicken liver DHFR. (17,18) 
DHFR Species 
Binding Affinity (log 1/K.) 
L. casei 
8.87 
E. coli 
6.88 
chicken 
3.98 
This data shows a noticeable drop in binding affinity for trimethoprim and chicken liver DHFR. 
Figure 8 illustrates steric interaction between the 5-OMe of trimethoprim (green) with the 
sidechain of Tyr 31 of native chicken liver DHFR (red). There is no steric interaction seen 
between the 5-OMe of trimethoprim (green) and the sidechain of Phe 30 of L. casei DHFR (red). 
(Right view: chicken liver DHFR; Left View: L. casei DHFR) It is known from x-ray crystallo­
graphic results that the sidechain of Tyr 31 of chicken liver DHFR rotates to accommodate 
trimethoprim. (18) 
A specific rule can also be based upon comparisons of bond lengths and van der Waals 
radii, and biological activities. For instance, 
If the biological activity of substituent X2 is less than the biological activity of substi­
tuent Xr and, X 2 is atomically larger than Xp then expect possible steric hindrance with 
the receptor wall about X 2, provided that other factors are equal. 
This rule can be exemplified by two compounds that differ by the type of the substituent, i.e., a 
chlorine and a bromine atom. If the binding affinity for the bromine compound was lower (and 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch013
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

3. KLEIN ET AL. 
Computer-Assisted Drug Receptor Mapping Analysis 
155 
Figure 5. 
Output of EDGE. 
Copyright © 1985, Regents of the University of California/Computer Graphics Lab. 
Figure 6. 
Enzyme-ligand Complex for Alcohol Dehydrogenase and a substituted pyrazole. 
Copyright © 1985, Regents of the University of California/Computer Graphics Lab. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch013
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

156 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Figure 7. 
Enzyme-ligand Complex for Carbonic Anhydrase C and a substituted sulfonamide. 
Copyright © 1985, Regents of the University of California/Computer Graphics Lab. 
Figure 8. 
Enzyme-ligand Complex for Dihydrofolate Reductase and trimethoprim. 
(L. casei: left, chicken liver: right). 
Copyright © 1985, Regents of the University of California/Computer Graphics Lab. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch013
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

13. 
KLEIN ET AL. 
Computer-Assisted Drug Receptor Mapping Analysis 
157 
possibly even lower for the iodine compound), it would suggest that the wall of the receptor model 
is contacted by the ligand at the bond distance of the chlorine atom and its related van der Waals 
radius. Therefore, one could assume that the larger bromine atom represents an intrusion into the 
receptor wall. 
The above examples used to illustrate the specific rules for backward chaining are similar to 
other attempts at receptor mapping. (6) However, these other methods do not account for interac-
tions that may be based on a combination of effects such as hydrophobicity and ligand potency. 
For instance, a rule that might apply to a compound with a substituted phenyl ring may take the 
form (19) 
If a meta disubstituted compound is symmetrical, and the biological activities differ 
between hydrophobic and polar substituents, then expect possible ring rotation to max-
imize hydrophobic and polar interactions between the ring substituents and the hydro-
phobic and polar surface. 
Many rules can be derived from the molecular structures and biological activities as seen from the 
above examples, which add both shape and character to the surface model. 
Graphics Interface 
KARMA presents the results from the rule system on a three-dimensional graphics workstation. 
The bicubic patches of the surface model are displayed graphically and may be manipulated by 
the user. The user may also modify the model and return to the control server for another iteration 
in the rule system if the results are not satisfactory. 
The bicubic patches are characterized with different colors, intensities and line textures to 
show attributes such as hydrophobicity and steric properties. Only one attribute may be displayed 
at a time, with color and intensity representing the value of the attribute, and line texture 
representing KARMA*s confidence level in the information. For example, when displaying hydro-
phobicity, red patches are hydrophobic space while blue patches are polar space. Patches drawn 
with solid lines represent areas which are well explored while patches with short dashes contain 
little information. Displaying information using multiple cues allows the user to examine various 
aspects of the surface model without having to deal with large amounts of numerical data. 
The graphics interface is also the appropriate place to alter the model since it lets the user 
look at an overall picture of the model as it is modified. The graphics interface provides user-
friendly tools for this purpose, including a pointing device for selecting the modification site and 
a 
hierarchical menu system to guide the user through the actual process of making changes. Thus, 
the user may select a control point on one of the bicubic patches with the pointing device; pop up 
a menu of permitted modifications; select an operation, e.g., move the control point outwards 
along the surface normal. After the control point data has been modified, the graphics interface 
will recalculate and redraw the bicubic patches of the surface model based on the new data. After 
modifying the model to the desired state, the user may simply return to the control server and ini-
tiate the rule system for further refinement 
Conclusion 
Currently, KARMA is in the prototyping phase. Although the hardware is connected via the high 
bandwidth network, it is necessary to implement the servers for data communications. Addition-
ally, a completely new graphics package is in development for KARMA. The next two steps in 
terms of development are the turnkey and production versions of KARMA. 
Current methods in computer-assisted drug design are most successful if the structure of the 
receptor is known. Our goal is to aid the investigator in those situations where the structure of the 
receptor may or may not be known, KARMA emphasizes two critical factors. First, three dimen-
sional graphics presents the results from the rule-based system in a manageable format. Second, 
KARMA provides a means for the user to inject knowledge about the model, KARMA is designed as 
a tool to aid the chemist and the ability to incorporate ideas from the user is a very important 
aspect It is our goal to successfully look at computer assisted drug design from a new perspective 
using KARMA. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch013
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

158 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Acknowledgments 
This work was supported in part by NM RR-1081, DAAG29-83-G-0080, Evans and Sutherland, 
Silicon Graphics and IntelliCorp. We also wish to thank Dennis Miller, ID. Kuntz, Don Kneller, 
Greg Couch, Ken Arnold, and Willa Crowell for help and discussion. 
Literature Cited 
(1) 
Morris, W., Ed. In "The American Heritage Dictionary of the English Language"; Ameri-
can Heritage and Houghton Mifflin: New York, 1969; p. 725. 
(2) 
Hayes-Roth, F.; Waterman, D.A.; Lenat, D.B., Eds. "Building Expert Systems''; 
Addison-Wesley: USA, 1983; 
(3) 
Blaney, J.M.; Jorgensen, E.C.; Connolly, M.L.; Ferrin, T.E.; Langridge, R.; Oatley, S.J.; 
Burridge, J.M.; Blake, C.C.F. J. Med. Chem. 1982, 25, 785-790. 
(4) 
Hansen, C.; McClarin, J.; Klein, T.; Langridge, R. Molec. Pharm. 1985, 27, 493-498. 
(5) 
KEE User's Manual. 707 Laurel Street, Menlo Park, California, 94025 KEE is a registered 
trademark of IntelliCorp. 
(6) 
Marshall, G.R. "Computer Aided Drug Design". First European Seminar and Exhibition on 
Computer-Aided Molecular Design. October 18-19, 1984. 
(7) 
Blaney, J.M.; Hansen, C.; Silipo, C.; Vittoria, A. Chem. Rev. 1984, 84, 333. 
(8) 
We wish to thank Dr. David Weininger and Dr. Albert Leo at the MedChem Project, 
Department of Chemistry, Pomona College for providing us with the SMILES software. 
(9) 
Crippen, G.M. "Distance Geometry and Conformational Calculations"; Research Studies: 
New York, 1981. 
(10) 
Weiner, P.K.; Kollman, P.A. J. Comp. Chem. 1981, 2, 287-303. 
(11) 
Metcalfe, R.M.; Boggs, D.R. Comm of the ACM 1976, 9. Ethernet is a registered trade-
mark of Xerox Corporation. 
(12) 
We wish to thank Dr. Gordon Crippen from Texas A & M University and Dr. Jeffrey M . Bla-
ney from E.I. DuPont de Nemours & Company for providing us with the Distance 
Geometry software. 
(13) 
Foley, J.D.; Van Dam, A. "Fundamentals of Interactive Computer Graphics"; Addison-
Wesley: 1982; Chap. 13. 
(14) 
Clark, J.; "Parametric Curves, Surfaces, and Volumes in Computer Graphics and Computer 
Aided Geometric Design," Technical Report No. 221, Computer Systems Laboratory, Stan-
ford University, 1981. 
(15) 
Hansen, C.; Leo. A. "Substituent Constants for Correlation Analysis in Chemistry and Biol-
ogy"; Wiley-Interscience: 1979. 
(16) 
Hansen, C.; Klein, T.; McClarin, J.; Langridge, R.; Cornell, N. J. Med. Chem. (in press). 
(17) 
Hansen, C.; Li, R.; Blaney, J.; Langridge, R. J. Med. Chem, 1982, 25, 777-784. 
(18) 
Selassie, C.; Fang, Z.; Li, R.; Klein, T.; Langridge, R.; Kaufman, B. J. Med. Chem. (in 
press). 
(19) 
Smith, R.N.; Hansen, C.; Kim, K.I.; Omiya, B.; Fukumura, G; Selassie, C.D.; Jow, P.Y.C.; 
Blaney, J.M; Langridge, R. Arch. Biochem. Biophys. 1982, 215, 319-328. 
R E C E I V E D December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch013
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

14 
An Intelligent Sketch Pad as Input 
to Molecular Structure Programs 
Carl Trindle 
Chemistry Department, University of Virginia, Charlottesville, VA 22901 
The programming and manipulation of chemical graphs i s 
awkward i n most familiar programming languages. 
LISP, 
the Esperanto of 
artificial 
intelligence research, 
makes possible a representation of chemical structural 
formulas which i s much more nearly analogous to the 
chemist's view of such graphs. 
This i s a considerable 
computational advantage as well as a convenience for 
the user. 
We have designed a "functional fragment" representation 
of structural formulas, applicable to any molecule, 
which will resolve a crude sketch of a chemical struc-
ture into a 
list of fundamental fragments. 
Exploiting 
the PROPERTY feature of LISP and the distance geometry 
algorithms of Crippen we can recover Cartesian coordi-
nates for each atom, suitable for input to molecular 
mechanics programs, or to ab i n i t i o electronic struc-
ture packages. 
Besides local geometries, the intelligent sketchpad 
can contain any local properties, including bond types 
and strengths, chromophore optical spectra, and nuclear 
magnetic resonance and infrared spectra characteristic 
of a local chemical environment. 
Computational chemists have developed several remarkably powerful 
and r e l i a b l e computer codes, capable of describing the r e l a t i v e 
s t a b i l i t y of various conformations of macromolecules, and details 
of the electronic structure of molecules of more modest size (1). 
The properties of molecules which can be obtained by use of these 
programs correlate with important features of chemical r e a c t i v i t y 
and the properties of materials. Molecular design, i n pharma-
ceuticals, photochemistry, and general materials science can be 
made much more e f f i c i e n t by the routine use of these computational 
systems. However, their use i s at present not widespread; i t i s 
limited to a few large chemical companies. 
0097-6156/86/0306-0159$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch014
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

160 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
One of the obstacles to wider use of the well-tested and power-
f u l programs such as Allinger's molecular mechanics (2) and Pople's 
GAUSS80 (3) i s that the programs require such elaborate and awkward 
input. Users must ordinarily prepare a l i s t of Cartesian coordi-
nates of each atom. This i s cumbersome for molecules of even 
moderate size. 
But more s i g n i f i c a n t l y , chemists
1 powerful sense of 
three-dimensional molecular structure i s never expressed i n Cartesian 
coordinates. 
Instead chemists think more naturally of "internal 
coordinates," that i s bond lengths, primary valence angles, and l o c a l 
dihedral angles. 
Of course a f u l l set of internal coordinates de-
fines i n principle the set of Cartesian coordinates (4). Unfortu-
nately, the usual algorithms for generating Cartesian coordinates 
from internal coordinates are sensitive to small errors. These 
errors accumulate and can perpetrate enormities such as leaving 
rings unclosed, or forcing u n r e a l i s t i c a l l y short separations be-
tween nonbonded atoms. In the chemist's conceptual picture, 
r e a l i s t i c bond distances for rings are maintained, even i f distor-
tions i n normal valence angles are required. 
The problem i s to transform the p i c t o r i a l view of molecules 
which i s the daily companion of the chemist, to the numerical form 
required by programs, WITHOUT FORCING THE USER TO EFFECT THE TRANS-
LATION. We must not ask the chemist to do much more than identify 
the atoms, their connectivity, and some gross features of the 
stereochemistry. 
The structural formula i s the medium by which such 
simple yet r i c h l y evocative information i s conveyed. The structural 
formula does after a l l suffice for the chemist's work day to day. 
It should be adequate to convey the essential information to useful 
computer programs. 
There w i l l be two major stages to the translation of information 
from the chemist's p i c t o r i a l image to the r i g i d l y formatted input 
f i l e required by molecular mechanics or molecular o r b i t a l programs. 
F i r s t the sketch i s impressed on a d i g i t i z i n g tablet (perhaps as 
simple as a Koala Pad (R), or a more accurate d i g i t i z i n g tablet). 
Then the graph must be interpreted and a t r i a l geometry generated. 
Accepting the Sketch. 
The (computationally) most convenient way to 
enter a structural diagram i s to use a d i g i t i z i n g tablet with a mouse 
or stylus. 
Our experience has been with the Houston Instruments 
HIPAD (R). The software accompanying this (and most ordinary) 
d i g i t i z i n g tablet accepts and stores l o c a l coordinates of particular 
points, and a set of pointers designating which vertices are to be 
connected (5). In this way the molecular topology can be specified 
with no novel analysis or programming. 
I t would be more interesting from the point of view of A r t i -
f i c i a l Intelligence research to interpret a sketch already on paper, 
by the analysis of dark and l i g h t elements (6). 
We have made only 
small progress i n this task, but some preliminary remarks can make 
the d i f f i c u l t i e s clear. 
The f i e l d of view i s resolved into picture 
elements, and an o p t i c a l scanner would assign a numerical value 
corresponding to the darkness of the sketch at that location. 
Heavy lines would be easy to recognize, by the sequence of adjacent 
dark spots detected by the scanner. 
Intersections might be harder 
to recognize i f the grid i s coarse, but knowledge of the existence 
of lines could guide the search, by estimates of the intersections 
by extrapolation. A planar graph (with no crossing lines) would 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch014
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

14. 
TRINDLE 
An Intelligent Sketch Pad for Molecular Structure Programs 
161 
seem to present few d i f f i c u l t i e s . 
V e r t i c e s r e p r e s e n t i n g g e n e r a l i z e d 
atoms (that i s , "Me" 
i n p l a c e of a f u l l y d e t a i l e d methyl group) 
would have to be more c a r e f u l l y s p e c i f i e d . 
The chemist would use 
B e r z e l i u s - n o t a t i o n c a p i t a l l e t t e r s f o r l a b e l s , which would have to 
be i n t e r p r e t e d . This i s a hard task, as the post o f f i c e has l e a r n e d . 
I t would be e s s e n t i a l f o r the system to r e a l i z e when i d e n t i f i c a t i o n 
of a v e r t e x i s impossible or ambiguous, and request guidance 
from 
the user. 
F i g u r e 1 shows how v e r t i c e s are s p e c i f i e d . 
I t w i l l be necessary to d i s t i n g u i s h the strokes which i d e n t i f y 
s i n g l e or m u l t i p l e bonds from the strokes denoting lone p a i r s , and 
i t w i l l be r e q u i r e d to supply m i s s i n g hydrogens and lone p a i r s 
which are o f t e n omitted from c a s u a l sketches. 
T h i s l a t t e r problem 
w i l l a l s o be encountered i f the sketch i s input d i r e c t l y by the 
d i g i t i z i n g t a b l e t . 
We r e t u r n to that l i n e of approach. 
P r e l i m i n a r y P r o c e s s i n g of the Sketch. 
Even at t h i s e a r l y stage, 
before d i f f e r e n t atoms are d i s t i n g u i s h e d and hydrogens are 
f u l l y 
expressed, we have much of the i n f o r m a t i o n needed f o r some kinds of 
a n a l y s i s . 
A l l of the g r a p h - t h e o r e t i c a n a l y s i s of p i systems 
(7), 
which may be considered to be based on the Huckel model, uses no 
more than the c o n n e c t i v i t y between e q u i v a l e n t c e n t e r s . 
However 
powerful the graph theory has been, i t cannot be denied that i t 
suppresses much of the d e t a i l expressed i n the s t r u c t u r a l diagram. 
Therefore we w i l l not be content to stop at t h i s stage. 
I t w i l l be necessary at minimum to d e f i n e the type of atom 
present at each v e r t e x . 
We reduce the l a b o r necessary f o r t h i s 
s p e c i f i c a t i o n by (a) suppressing hydrogens i n the p r e l i m i n a r y 
sketch; and (b) assuming as a d e f a u l t that each v e r t e x represents 
a carbon atom, r e q u i r i n g an amendment only f o r heavy atoms. 
Our 
software i s r e s p o n s i b l e f o r f i l l i n g i n hydrogens. 
T h i s process 
i s f r e q u e n t l y ambiguous, given only the s k e l e t o n of heavy atoms. 
Therefore the computer system w i l l sometimes i n t e r r o g a t e the user 
f o r the number of hydrogen atoms at each v e r t e x . 
With t h i s i n f o r -
mation the task of completing a Lewis s t r u c t u r e i s l e f t to the 
software, which i s at l e a s t as capable of t h i s task as the average 
f i r s t - y e a r student. 
This i s the f i r s t task that r e q u i r e s anything 
resembling A r t i f i c i a l I n t e l l i g e n c e , so a few remarks on the design 
may not be out of p l a c e . 
A Routine to A s s i g n Lewis S t r u c t u r e s . 
The procedure f o r a s s i g n i n g 
Lewis s t r u c t u r e s i s f a m i l i a r 
(8). 
Given the set of atoms, one must 
sum the valence e l e c t r o n s . In our LISP system, each ATOM can be 
assigned PROPERTIES which may i n c l u d e the number of valence e l e c -
trons i t c o n t r i b u t e s to the molecule, and e q u a l l y important, i t s 
set of NEIGHBORS by which the s k e l e t o n of the molecule i s s p e c i f i e d . 
Each such l i n k i s assigned a p a i r of valence e l e c t r o n s , and a census 
i s kept of e l e c t r o n p a i r s i n the v i c i n i t y of each atom. Among the 
PROPERTIES of each atom i s an estimate of i t s e l e c t r o n e g a t i v i t y , 
and the program assigns e l e c t r o n p a i r s to f i l l o c t e t s using the 
e l e c t r o n e g a t i v i t y to s e t p r i o r i t y . 
The l a s t step i s most 
" d i f f i -
c u l t . " 
For each of those atoms which l a c k a f u l l o c t e t , the system 
must look among the NEIGHBORS f o r atom(s) possessing a lone p a i r 
which i t might share. 
Of a l l those p o t e n t i a l donors, one chooses 
the atom with the most negative formal charge. 
The m u l t i p l e bond 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch014
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
A D i a l o g u e Accompanying t h e E n t r y 
o f a M o l e c u l e o f M o d e r a t e C o m p l e x i t y 
SPECIFY NON-CARBON VERTICES: 
NUMBER : 1 
NUMBER: 8 
NUMBER: 10 
NUMBER: 12 
NUMBER: 0 
TYPE: n i t r o g e n 
TYPE: oxygen 
TYPE: oxygen 
TYPE: oxygen 
SPECIFY NET CHARGE: *1 
HYDROGENS AT 
HYDROGENS AT 
HYDROGENS AT 
HYDROGENS AT 
HYDROGENS AT 
HYDROGENS AT 
HYDROGENS AT 
HYDROGENS AT 
HYDROGENS AT 
HYDROGENS AT 
HYDROGENS AT 
VERTEX 
VERTEX 
VERTEX 
VERTEX 
VERTEX 
VERTEX 
VERTEX 8 
VERTEX 9 
VERTEX 
VERTEX 12 
VERTEX 13 
11 : 
Figure 1. 
A l l v e r t i c e s are f i r s t assumed to be CARBON. 
The 
system requests that the user specify non-CARBON v e r t i c e s ; i t 
w i l l b u i l d a set of u s e r ' s abbreviations. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch014
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

14. 
TRINDLE 
An Intelligent Sketch Pad for Molecular Structure Programs 
i s represented by the appearance of the donor several times i n the 
(revised) NEIGHBOR l i s t . When the Lewis structure routine finds an 
ambiguity which we would represent by a set of resonance structures, 
i t reports that fact and chooses the f i r s t legal structure for 
further processing. 
Figure 2 shows the procedure i n practice. 
Representation of the Molecule i n LISP. We have used the chemist's 
sketch, or i t s Lewis structure equivalent, as the model of a data 
structure i n LISP (9). This language has the f l e x i b i l i t y needed 
to express an essentially non-numerical object, i n terms of l i s t s . 
LISP w i l l permit us to organize molecular structure information i n 
a way that mimics the human expert's knowledge. To accomplish 
this 
representation, we must develop a clear idea how the chemist assimi-
lates the information provided d i r e c t l y and e x p l i c i t l y by the sketch, 
and how the properties of the molecule are recalled to the chemist's 
awareness. 
The structural formula at minimum i d e n t i f i e s the atoms and 
their connectivity. This hardly seems to be adequate i n complexity 
to express much molecular information. 
This apparent paradox i s 
resolved when we recognize that the chemist brings much of his ex-
perience to the task of interpreting the sketch, and much of the 
information i s evoked rather than transmitted by means of the struc-
tural formula. 
The atoms' names—carbon, n i t r o g e n — c a l l up a flood 
of associations which (although they are almost never written ex-
p l i c i t l y i n the chemist's sketch) are nonetheless part of the 
information i t can summon. Among this data are the atomic mass, 
typical valencies, l o c a l geometry, perhaps a van der Waals radius, 
and a guide to chemical behavior, i t s "electronegativity." 
The connectivity can define some aspects of the geometry i n a 
useful semiquantitative way. 
The chemist has a very r e l i a b l e idea 
of the range of bond lengths; CC(single), 1.54 A; CC(double), 1.33 
A, 
etc. 
By counting connections and recognizing the atoms being con-
nected, one can assign good estimates of the distances between 
d i r e c t l y bonded atoms. 
The chemist's knowledge of molecular geometry extends beyond 
typical values of bond distances. 
He w i l l also be able to predict 
many bond angles f a i r l y accurately. This i s equivalent to speci-
fying a 1-3 nonbonded interatomic distance. 
The chemist's sketch 
portrays cis and trans isomerization, syn and a n t i , and gauche 
conformations which specify either torsion angles, or i n d i r e c t l y , 
a 1-4 nonbonded distance. 
Besides primary bond distances and angles, and some special 
cases of torsional and dihedral angles, the chemist knows more global 
features of molecular geometry. However, such knowledge becomes more 
and more fragmentary; the longest distances i n a molecule are most 
poorly defined. 
A LISP Structural Recognizer. 
A molecule i s represented i n our LISP 
program f i r s t as a l i s t of atoms. A numbering scheme assigns an 
unique label to each atom. Each atom has a collection of PROPERTIES; 
foremost among them i s i t s generic NAME. The name CARBON carries 
with i t a van der Waals RADIUS and a VALENCE. Other properties can 
be added as desired. 
The major feature of a molecular sketch i s the topology or 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch014
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

164 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
connectivity of the molecule. This i s expressed as the property 
NEIGHBOR for each atom. This i s just the set of labels of other 
atoms connected to a particular atom. The NEIGHBOR property i s a 
compact way to store the adjacency matrix used i n graph theory. 
The chemist's sketch, processed into the l i s t representation 
just described, i s not yet very valuable; the system at the moment 
i s very ignorant of the structure of the molecule i n question. But 
the chemist knows much of the molecule from l i t t l e more than the 
diagram. 
How does the chemist "see" a complex molecular diagram? 
In our judgement a chemist knows so much about a molecule because he 
recognizes recurrent fragments of moderate size. 
Rings of varying 
atomic composition, structure, and size ranging from carbonyl groups 
to steroid systems, are recognized at a glance. Many stereochemi-
c a l l y well-defined fragments, such as spiro and norbornyl systems, 
are part of the chemist's conceptual t o o l k i t . 
Our programming task 
i s to assure that our system recognizes such fragments, with a l l the 
associated information on their structure and properties, with ease. 
Somehow we must discern the presence of meaningful, familiar 
fragments i n the molecular l i s t . 
We mimic this stock of informative 
portions of molecules i n our LISP system by l i s t s called FRAGMENTS. 
The FRAGMENTS, permanent members of a growing data base, each con-
tain a set of ATOMS and a NEIGHBOR l i s t for each atom identifying the 
connectivity. Besides this topological information, the fragments 
contain as PROPERTIES a stock of attributes of the fragments. 
The 
f i r s t collection of PROPERTIES we gathered were interatomic dis-
tances gleaned from crystal structures. A l l interatomic distances 
are defined within a fragment. 
The system can now assign many 
(though not a l l ) interatomic distances i n an arbitrary molecule i f 
fragments could be discerned within the sketch. 
We have developed a search technique which w i l l scan the 
MOLECULE and locate a l l fragments. Design of this recognition algo-
rithm i s d i f f i c u l t . 
The search routine shares some of the features 
of the "knapsack problem," a classic d i f f i c u l t y i n computer science. 
We expect that we w i l l be able to speed this step considerably. At 
present we scan a l l stored fragments, though that i s not the way an 
expert would proceed. We screen out many fragments by a s u p e r f i c i a l 
test that the atoms i n the fragment must be a subset of the atoms i n 
the molecule. The fragments are subjected to more and more thorough 
tests, u n t i l recognition i s complete. These tests are essentially 
recursive applications of the requirement that i f a fragment i s to 
be identified i n a molecule, the environment of each atom i n the 
fragment must be found i n the molecule for the corresponding atom. 
More d e t a i l on the search condition may be found i n a previous 
a r t i c l e (10). 
Figure 3 shows a t y p i c a l fragment representation. 
In this f i r s t formulation we have already established that i t i s 
most effective to scan the largest candidate fragments f i r s t . 
I t i s 
desirable to recognize overlapping fragments; more distances are 
determined. However, i t i s inevitably the case that a substantial 
number of distances w i l l be l e f t undefined, p a r t i c u l a r l y the longest 
distances which would not be incorporated into a fragment. 
Distance Geometry Changes Distances to Cartesian Coordinates. Most 
esperimental measures of molecular geometry provide quantities which 
may be most d i r e c t l y interpreted as defining interatomic distances. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch014
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

TRINDLE 
An Intelligent Sketch Pad for Molecular Structure Programs 
A s s i g n m e n t , 
o f .3 L e w i s 
S t r u c t u r e 
F O R M U L A : 
H I Π Ν 0 3 < + ) 
C O M P U T E D 
V A L E N C E 
E L E C T R O N S : 
Si 
23 
P A I R S 
A S S I G N E D 
T O L I N K S 
V E R T E X 
3 
A S S I G N E D 
3 
P A I R ( S ) 
V E R T E X 
1 0 A S S I G N E D 
2 P A I P C S ? 
V E R T E X 
1 2 A S S I G N E D 
3 
P A I R ( S ) 
V E R T E X 
1 A S S I G N E D 
1 P A I R ; S ) 
V E R T E X 
2 
A S S I G N E D 
1 
P A 1 R ( S > 
V E R T E X 
3 A S S I G N E D 
1 
P A I R ( S ) 
V E R T E X 
4 , 5 , 6 , 7 , 11 
U N S A T I S F I E D 
S H A R I N G 
B E T W E E N 
V E R T I C E S 
4 A N D 3 
V E R T E X 
5 
U N S A T I S F I E D 
S H A R I N G 
B E T W E E N 
V E R T I C E S 
5 A N D 4 
V E R T E X 
3 
U N S A T I S F I E D 
S H A R I N G 
B E T W E E N 
V E R T I C E S 
3 A N D 2 
S H A R I N G 
B E T W E E N 
V E R T I C E S 
6 A N D 1 
S H A R I N G 
B E T W E E N 
V E R T I C E S 
8 A N D 7 
S H A R I N G 
B E T W E E N 
V E R T I C E S 
1 2 A N D 
11 
N O N Z E R O 
F O R M A L 
C H A R G E S : 
V E R T E X 
1 : 
«• 1 
Figure 2. The Lewis structure routine w i l l draw on the 
PROPERTY VALENCY, which i s the number of electrons each vertex 
contributes to the Lewis structure. I t assigns a pair of 
electrons to each LINK, and s a t i s f i e s the octet requirement. 
In case of resonance, i t w i l l choose one of the set of 
equivalent structures a r b i t r a r i l y . 
R e c o g n i t i o n o f A S e t o f Known F r a g m e n t s i n a M o l e c u l e 
SIX MEMBERED RING RECOGNIZED (BENZENOID) 
BENZENE DISTANCES ASSUMED 
REVISED DISTANCE 1-2 
REVISED DISTANCE 1-6 
REVISED DISTANCE 1-10 
ACETYL GROUP RECOGNIZED 
ACETYL GROUP RECOGNIZED 
N-O-C SATURATED LINK RECOGNIZED 
C-C SATURATED LINK RECOGNIZED 
Figure 3. A t y p i c a l fragment decomposition for a molecule 
of moderate complexity. Roughly half of the interatomic 
distances can be specified i n this case by the fragment data. 
The remaining distances are estimated by the distance geometry 
algorithm of Crippen (11). 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch014
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

166 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
(In fact, usually the interpretation requires the presumption of a 
r i g i d framework so that interatomic distances are persistent.) 
There are N(N-l)/2 d i s t i n c t distances i n a cluster of Ν atoms, d i s ­
regarding symmetry-dictated equivalencies. This set of distances i s 
of course redundant; 3N-6 Cartesian coordinates are s u f f i c i e n t to 
determine molecular geometry, apart from the position of the center 
of mass and the orientation of the principle moments of i n e r t i a . 
The larger the system, the more redundant i s the f u l l set of 
distances. 
Of course i t i s almost never the case that we have anything 
resembling a f u l l set of interatomic distances from experimental 
data. Crippen has shown how one may pass not only from Cartesian 
coordinates to interatomic distances, but from distances to Car­
tesian coordinates (11). More s i g n i f i c a n t , he has shown that an 
incomplete set of interatomic distances, together with even very 
crude estimates of unmeasured distances, can produce helpful e s t i ­
mates of Cartesian coordinates. The estimates of missing distances 
can be provided by "triangle conditions" which express that a 1-3 
distance must be i n the range from the (absolute value of the) 
difference of the 1-2 and 2-3 distances to the sum of the 1-2 and 
2-3 distances. By a factor analysis of the matrix of vector dot 
products one obtains the best three-dimensional "imbedding" of the 
geometry. 
By the methods of Crippen we can use our well-known distances 
within i d e n t i f i e d fragments, with crude estimates of distances 
between atoms i n d i s j o i n t fragments, to estimate the geometry of the 
entire molecule. 
The factor analysis produces " s t a t i s t i c a l l y best" 
estimates of every distance. Of course we cannot evaluate the 
quality of the estimates of the missing longer distances. But the 
s t a t i s t i c a l l y best estimates of the shortest distances (influenced 
i n d i r e c t l y as they are by the poorly known longer distances) depart 
substantially from the known fragment distances. One can improve 
the overall estimates by replacing the estimates of the well-known 
distances by accurate values and iterating the factor analysis. 
The structure produced by distance geometry i s not necessarily 
the optimum energy form. 
I t i s merely a legal three-dimensional 
structure reproducing the short-range structure. Of course i f some 
of the longer distances are known, further constraints are possible. 
In our experience, however, short-range fragment properties deter­
mine much of the global form even of rather large systems. This i s 
p a r t i c u l a r l y s t r i k i n g i n (say, carborane) clusters and (even very 
large) rings, both of which are inconvenient to describe by other 
methods. 
Extensions of the Functional Fragment Data Structure. In p r i n c i p l e , 
any molecular property which may be represented as a sum of contri­
butions from fragments i s natural to incorporate into the functional 
fragment representation. Maksic has recently reviewed such group 
a d d i t i v i t y relations, concentrating on atoms as the fundamental 
fragment (12). Magnetic and e l e c t r i c properties are remarkably 
well represented by such methods, i f a suitable hybridized elec­
tronic state i s chosen for the atom i n the molecular environment. 
Such atomic a d d i t i v i t y relations are the simplest form of a fragment 
a d d i t i v i t y scheme for representation of molecular properties. I f 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch014
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

14. 
TRINDLE 
An Intelligent Sketch Pad for Molecular Structure Programs 
167 
we choose s l i g h t l y larger fragments, molecular properties can be 
better represented. Ascending the scale, we can adapt the func-
tional fragment data structure to help us perform bond energy 
calculations (13). Benson shows us how to estimate thermodynamic 
properties given values for fragments (14). Often i t i s possible 
to estimate spectra by summing chromophore properties, so long as 
the absorbing centers are only weakly coupled (15). The same state-
ment applies to chemical r e a c t i v i t y , so long as the functional 
groups interact weakly (16). 
Interacting-Fragments Modeling Schemes may be Incorporated. 
I t i s 
not required that fragments be nearly independent parts of a mole-
cule, and the molecular property be considered a simple sum of 
fragment properties. Consider for example the p o s s i b i l i t y of incor-
porating the quantitative perturbation - molecular - o r b i t a l method 
of describing the electronic distribution i n molecules, which begins 
with MOs for fragments. 
The perturbation theory provides a syste-
matic way to account for fragment interactions, and reproduces a 
wide variety of interesting electronic behavior at l i t t l e computa-
tional cost (17). This effort s t i l l l i e s before us. 
Summary. The everyday reasoning of the chemist i s primarily pic-
t o r i a l and qualitative; i t i s analogic. The chemist can make 
astounding predictions of the chemical, thermodynamic, and spectro-
scopic properties of a substance given only an image, the structural 
formula. 
This process rests heavily on knowledge of the behavior 
of similar systems. We have devised a strategem whereby important 
molecular structure programs can be supplied the Cartesian coordi-
nates they require, without forcing the chemist to provide much 
more than the structural diagram, which i s a more natural language. 
The system interprets a sketch impressed on a d i g i t i z i n g tablet, 
and scans the structure for familiar fragments. 
Stored properties 
of each known fragment include intra-fragment interatomic distances. 
From these known distances, a legal three-dimensional structure can 
be constructed by the methods of Crippen, and supplied i n the form 
of Cartesian coordinates to molecular structure programs. 
Literature Cited 
1. Quantum Chemistry Program Exchange Catalog, Chemistry 
Department, Indiana University, Bloomington, IN 47001. 
2. Berkert, U.; Allinger, N. L. "Molecular Mechanics", ACS 
Monographs: Washington, D. C., 
1982. 
3. Clark, T. 
"A Handbook of Computational Chemistry"; Wiley: 
New York, 1985. 
4. 
Fitts. D. D. 
"Vector Analysis in Chemistry"; McGraw-Hill 
Book Co.: New York, 1974. 
5. HIPAD software copyright by Houston Instruments, Inc. 
6. Cohen, P. R.; Feigenbaum, E. A. 
"The Handbook of Artificial 
Intelligence"; W. Kaufmann, Inc.: Los Altos, CA, 
1982; 
Vol. III, p. 125. 
Raphael, B. "The Thinking Computer: Mind 
Inside Matter"; W. H. Freeman: San Francisco, 1976. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch014
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

168 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
7. Graovac, Α.; Gutman, I.; Trinajstic, N. "Topological 
Approach to the Chemistry of Conjugated Molecules"; Springer: 
New York, 1977. 
8. Lewis, G. N. J. Am. Chem. Soc. 1916, 38, 762. 
9. Winston, P.; Horn, B. "LISP"; Addison-Wesley Publ. Co.: 
Reading, MA, 1981. Johnson, C. S. J. Chem. Inf. Comp. Sci. 
1983, 23, 151. 
10. 
Trindle, C.; Givan, R. In "Chemical Applications of Graph 
Theory and Topology"; King, R. B., Ed.; Elsevier: New York, 
1983. 
Trindle, C. Croatica Chem. Acta 1984, 57, 1231. 
11. 
Crippin, G. M. "Distance Geometry and Conformational 
Calculations"; Chemometric Research Studies Press of Wiley 
Publ. Co.: New York, 1981. 
12. Maksic, Z. B.; Eckert-Maksic, M.; Rupnik, K. Croatica 
Chem. Acta 1984, 57, 1295. 
13. Benson, S. W., et al. Chem. Rev. 1969, 69, 279; Int. J. Chem 
Kinet. 1974, 6, 813. 
14. Benson, S. W. "The Foundations of Chemical Kinetics"; 
McGraw-Hill: New York, 1960; p. 665. 
15. NMR and vibrational spectra of organic molecules are well 
described by group-additivity ideas; optical spectra require 
corrections to the spectra of chromophores. Cf. discussion 
of spectra by Gordon, A. J. and Ford, R. Α., "The Chemist's 
Companion: A Handbook of Practical Data, Techniques and 
References"; Wiley-Interscience: New York, 1972. 
16. Almost every elementary textbook of organic chemistry provides 
a systematic description of properties of functional groups 
and their characteristic reactivity; for example, 
Fessendon, R. J. and Fessendon, J. S. "Organic Chemistry"; 
Willard Grant Press: Boston, 1979. 
17. Dewar, M. J. S. "The Molecular Orbital Theory of Organic 
Chemistry"; McGraw-Hill: New York, 1969. Albright, Τ. Α.; 
Burdett, J. K.; Whangbo, M. H. "Orbital Interactions i n 
Chemistry"; Wiley-Interscience: New York, 1985. 
RECEIVED December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch014
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

15 
T h e Similarity of G r a p h s and M o l e c u l e s 
Steven H. Bertz
1 and William C. Herndon
2 
1AT&T Bell Laboratories, Murray Hill, ΝJ 07974 
2University of Texas at El Paso, El Paso, TX 79968-0509 
A new definition of molecular similarity is presented, based upon the 
similarity of the corresponding molecular graphs. First, all of the 
subgraphs of the molecular graph are listed, and then various similarity 
indices are derived from the numbers of subgraphs. One of these 
compares favorably with the standard distance measures of sequence 
comparison. Measurement of similarity provides a new way to measure 
molecular complexity, as long as the most (or least) complex member of 
a set of molecules can be identified. 
The concept of the similarity of molecules has important ramifications for physical, 
chemical, and biological systems. 
Grunwald (7) has recently pointed out the 
constraints of molecular similarity on linear free energy relations and observed that 
"Their accuracy depends upon the quality of the molecular similarity." The use of 
quantitative structure-activity relationships (2-6) is based on the assumption that 
similar molecules have similar properties. Herein we present a general and rigorous 
definition of molecular structural similarity. Previous research in this field has usually 
been concerned with sequence comparisons of macromolecules, primarily proteins and 
nucleic acids (7-9). In addition, there have appeared a number of ad hoc definitions of 
molecular similarity (10-15), many of which are subsumed in the present work. 
Difficulties associated with attempting to obtain precise numerical indices for 
qualitative molecular structural concepts have already been extensively discussed in the 
literature and will not be reviewed here. 
Results and Discussion 
We begin with the way chemists perceive similarity between two molecules. This 
process involves, consciously or unconsciously, comparing several types of structural 
features present in the molecules. For example, considering the five aliphatic alcohols 
(represented by their Η-suppressed molecular graphs) in Figure 1, we note both 
similarities and differences: they are all four-carbon alcohols; a, b, c and d are acyclic, 
whereas e has a ring; a and b are primary alcohols, c and e are secondary alcohols and 
d is a tertiary alcohol; b and c have the same skeleton, but for the labeling of points 
(atoms), while the other skeletons are distinct; etc. 
0097-6156/86/0306-0169$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch015
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

170 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
The first step in quantifying the concept of similarity is to list all subgraphs of 
the given molecular graphs, e.g. a-e, which has been done in the first column of 
Table I. The subgraphs include the vertices (atoms), all connected subgraphs, and the 
full molecular graphs themselves, since it can be seen that the molecular graphs for a 
and c are both subgraphs of e. Next, the number of each subgraph contained in the 
molecular graphs must be counted. Row 1 lists the number of C atoms, row 2 the 
number of Ο atoms, row 3 the number of C-C bonds, row 4 the number of C-O bonds, 
etc. Gordon and Kennedy (16) defined N.. as the number of subgraphs of graph j 
isomorphic with graph /, and more colloquially as "the number of distinct ways in 
which skeleton ι can be cut out of skeleton j" 
The entries in Table 1 are the number 
of ways the subgraphs can be cut out of the molecular graphs (the number of 
subgraphs of the molecular graphs isomorphic with the subgraphs in the first column). 
In terms of the numbers of C or Ο atoms, a-e are equally complex. In terms of 
C-C bonds (ethane subgraphs) a-d are 3/4 as complex as e; however, in terms of 
propane subgraphs (row 5) a and c are 1/2 as complex as e. A simple algorithm that 
takes account of all the subgraphs involves comparison of two columns at a time, 
examining them row by row and dividing the smaller of the numbers by the larger. A 
similarity index (57) can then be calculated by taking the average of the quotients. Of 
course, for two identical molecular graphs, 57-1. Inclusion of the molecular graphs in 
the list of subgraphs ensures that two different molecules which have the same number 
of each proper subgraph will not have 5/— 1. The values of S 1(1) for a-e are 
summarized in the form of a similarity matrix SM(l) in Figure 2. 
A simpler similarity index can be calculated by dividing the sum of the lesser of 
the two numbers in each row by the sum of the greater. (Only two columns of Table I 
are considered at a time, of course.) The values of SI(2) for a-e are summarized in 
SM(2), also in Figure 2. According to both SI(l) and 5/(2), 1-butanol (a) and 2-
butanol (c) are the most similar, whereas f-butanol (d) and cyclobutanol (e) are the 
least similar pair. In between these extremes there are a significant number of 
disagreements between these indices. For example based on SI(l), c and e are more 
similar than c and d; however, c and d are more similar than c and e based on 57(2). 
There are seven such pairs (out of 45 possible pairs), and each index has one 
"degeneracy". By considering standard measures of "distance," 57(2) would appear to 
be the superior index (vide infra). 
The calculations of similarity indices can also be done with labeled subgraphs of 
a labeled molecular graph. The points can be labeled according to the valency of the 
corresponding atoms (i.e. whether they are primary, secondary, tertiary, etc.), labeled 
with stereochemical descriptors, or labeled to reflect isotopic composition to cite but a 
few examples. 
Furthermore, the number of similarity indices can be doubled by 
relaxing the stricture that only connected subgraphs be considered. 
We have 
concentrated on connected subgraphs, as they are more intuitively meaningful to the 
average chemist; nevertheless, for some applications the inclusion of disconnected 
subgraphs may be desirable or even necessary. 
Similarity and Distance. Two sequences of subgraphs m and η such as those in 
Table 1 have the property that there is a built-in one-to-one correspondence between 
the elements of one sequence (m,) and those of the other (/!,). Accordingly, it is 
straightforward to calculate various well-known (17) measures of the distance d 
between the sequences, e.g. Euclidean distance [2/0^r-/i,)
2]
1 / 2, "city block" distance 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch015
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

15. 
BERTZ A N D H E R N D O N 
Similarity of Graphs and Molecules 
171 
Figure 1. 
Selected four-carbon alcohols, abstracted as their Η-suppressed molecular 
graphs: a 1-butanol, b isobutanol, c 2-butanol, d /-butanol, e cyclobutanol. 
SM(l) -
b 
c 
d 
0.561 
0.682 
0.417 
1.000 
0.472 
0.576 
1.000 
0.472 
1.000 
1.000 
SM(2) -
b 
c 
d 
0.684 
0.778 
0.522 
1.000 
0.619 
0.609 
1.000 
0.609 
1.000 
1.000 
Figure 2. 
Similarity matrices SM(l) and SM(2) for the graphs in Figure 1. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch015
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
I. 
Subgraph Enumeration for Some Four-carbon Alcohols. 
SUBGRAPH 
α 
NUMBER IN 
b 
C 
GRAPH 
d 
e 
• 
4 
4 
4 
4 
4 
ο 
1 
1 
1 
1 
1 
— · 
3 
3 
3 
3 
4 
•—0 
1 
1 
1 
1 
1 
2 
3 
2 
3 
4 
1 
1 
2 
3 
2 
1 
0 
1 
0 
4 
1 
2 
1 
0 
2 
X 0 
1 
0 
1 
0 
X 0 
0 
1 
3 
1 
π 
0 
0 
0 
0 
1 
α 
1 
0 
0 
0 
2 
b 
0 
1 
0 
0 
0 
c X-
0 
0 
1 
0 
2 
d 
0 
0 
0 
1 
0 
e 
0 
0 
0 
0 
1 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch015
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

15. 
BERTZ A N D H E R N D O N 
Similarity of Graphs and Molecules 
173 
2,-ΙΉ/—Hjl, or Hamming distance, which counts the number of positions in which the 
corresponding elements are unequal. It may be noted that these are measures of 
dissimilarity; of course, it is easy to draw conclusions about similarity from them (e.g. 
by taking their inverse). Table II contains the distances calculated according to each 
of the definitions discussed above as applied to molecular graphs a-e. The three 
distance functions parallel each other quite closely: there are only two disagreements 
between Hamming distance and Euclidean distance, and there are no disagreements 
between city-block distance and Euclidean distance. There is a two-fold degeneracy 
within city-block distance and Euclidean distance (the same as S 1(1) and S 1(2)) and a 
four-fold one within Hamming distance, which is the crudest measure. Both city-block 
and Euclidean distance have only a single disagreement with 5/(2), but many with 
5/(7); therefore, it is recommended that 5/(2) or one of the distance measures that 
parallel it be used to index similarity. 
Table II. Distance Measures 
Hamming 
City-bl. 
Euclid. 
1/City-bl. 
1/Euclid. 
5/(7) 
5/(2) 
</(a,b) = 
6 
6 
2.449 
0.167 
0.408 
0.561 
0.684 
</(a,c) SES 
4 
4 
2.000 
0.250 
0.500 
0.682 
0.778 
rf(M) 
8 
11 
4.359 
0.091 
0.229 
0.417 
0.522 
</(a,e) 
10 
14 
4.899 
0.071 
0.204 
0.462 
0.517 
d(.b,c) 
8 
8 
2.828 
0.125 
0.354 
0.472 
0.619 
d{b,d) 
* 
5 
9 
4.359 
0.111 
0.229 
0.576 
0.609 
rf(b,e) = 
11 
16 
5.657 
0.062 
0.177 
0.400 
0.484 
d(c,a) -
8 
9 
3.317 
0.111 
0.301 
0.472 
0.609 
dice) 
8 
12 
4.690 
0.083 
0.213 
0.577 
0.586 
d(d,e) 
12 
19 
6.245 
0.053 
0.160 
0.367 
0.441 
Similarity and Complexity. On account of the variety of features that contribute to 
the complexity of a molecule (e.g. rings, double bonds, branching, heteroatoms, etc.), 
two molecules can have the same complexity and yet be quite dissimilar, depending on 
the weights given to the features (18). In contrast two molecules which are very 
similar must have nearly equal complexities. 
Therefore, once the most complex 
member of a family of molecules has been identified somehow, the others can be 
ranked in order of complexity by calculating their similarity to it. For example, taking 
tetrahedrane as the most complex member of the family butane (P4), cyclobutane 
(C 4), bicyclobutane (K4— x), tetrahedrane (K4), 5/(2) confirms that this is the order 
of increasing complexity. The same order is obtained by considering the total number 
of subgraphs or by counting only the number of propane subgraphs (19), η (Table III). 
Subgraph Enumeration. The total number of subgraphs increases rapidly with the 
number of atoms, making hand calculations of SI impractical for large molecules. 
Therefore a computer program was written. Our program is based on the fact that the 
entries in the nth power of the adjacency matrix of a graph count paths of length n, 
which includes retraced pathways and, therefore, branched chains and cycles. A 
molecular graph is represented by the string adjacency matrix A $(/,/), where the 
/,/-entry is a string of characters describing a bond (I^J) 
or an atom ( /
e J ) . 
Matrix multiplication is defined as string concatenation. The concatenated strings are 
alphabetized, processed to eliminate duplicates, sorted by number of bonds, and stored 
for future use. 
(A copy of this program can be obtained by writing to WCH.) 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch015
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

174 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
Table III. Complexity Measures 
PA 
Q 
K4-x 
KA 
G 
SI(G,K4) 
Subgraphs 
V 
1.000 
0.588 
0.303 
0.156 PA 
PA 
0.156 
10 
2 
S M (2)-
1.000 
0.515 
0.266 C4 
C4 
0.266 
17 
4 
1.000 
0.516 *4 
K4—x 
0.516 
33 
8 
1.000 *4 
*4 
1.000 
64 
12 
Potential Applications. Quantitative structure-activity relations have been formulated 
on the basis of common substructures (2,14) and similarity indexing (5JO). For 
example, Carbo et al. (10) related phermone activity to "an electron density measure 
of similarity between two molecular structures." Randic et al. (14) have related 
pharmacological activity to the numbers of paths in the molecular graph. The 
extension from this one kind of subgraph to all possible subgraphs should improve the 
statistical correlation of properties with substructures; but, even more importantly, it 
will make the results easier to visualize in a way that is meaningful to a chemist. 
Gordon and Kennedy (16) observe that a physical measurable can be expressed as a 
linear combination of graph-theoretical invariants (Ntj, see above). 
By using all 
possible subgraphs in such an analysis and optimizing the coefficients the most 
important ones might be found. 
Another important subject for similarity considerations is the planning of organic 
syntheses. Wipke and Rogers (20) point out that "chemists do not always work 
systematically backward but sometimes make an 'intuitive leap' to a specific starting 
material from a target without consideration of reactions needed for interconversion. 
This intuitive leap probably involves a Gestalt pattern recognition based on the 
chemist's knowledge of available starting materials and similarity between the starting 
material structure and the target structure." Our method should allow not only the 
overall similarity of target and potential starting material to be assessed, but also the 
similarity of portions (substructures) of the target and all or part of a starting material. 
Acknowledgment. WCH is grateful to the Robert A. Welch Foundation of Houston, 
Texas for financial support. 
Literature Cited 
1. Grunwald, E. Chemtech 1984, 14, 698. 
2. 
Crandell, C. W.; Smith, D. H. J. Chem. Inf. Comput. Sci. 1983, 23, 186. 
3. Bawden, D. Ibid. 1983, 23, 14. 
4. Hansch, C.; Leo, A. J. "Substituent Constants for Correlation Analysis in 
Chemistry and Biology"; Wiley: New York, 1979. 
5. 
Kier, L. B.; Hall, L. C. "Molecular Connectivity in Chemistry and Drug 
Research"; Academic Press: New York, 1976. 
6. 
Kubinyi, H.; Kehrhahn, O. J. Med. Chem. 1976, 19, 1040. 
7. Waterman, M. S. in "Mathematical and Computational Problems in the Analysis 
of Molecular Sequences" (Bull. Math. Biol. 1984, 46); Pergamon: Oxford, 1984; 
p. 473. Cf. other articles in this volume. 
8. 
Lipman, D. J.; Pearson, W. R. Science 1985, 227, 1435. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch015
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

15. 
B E R T Z A N D H E R N D O N 
Similarity of Graphs and Molecules 
175 
9. Sellers, P. H. SIAM J. Appl. Math. 1974, 26, 787. 
10. Carbó, R.; Leyda, L.; Arnau, M. Int. J. Quantum Chem. 1980, 17, 1185. 
11. Cone, M. M.; Venkataraghavan, R.; McLafferty, F. W. J. Am. Chem. Soc. 
1977, 99, 7668. 
12. Bersohn, M. J. C. S. Perkin I 1982, 631. 
13. Armitage, J. E.; Lynch, M. F. J. Chem. Soc. (C) 1967, 521. 
14. Randić, M.; Kraus, G. Α.; Džonova-Jerman-Blažić, B. in "Chemical Applications 
of Topology and Graph Theory"; King, R. B., Ed.; Elsevier: Amsterdam, 1983; 
p. 192. 
15. Seybold, P. G. Int. J. Quantum Chem., Quantum Biol. Symp. 1983, 10, 95, 103. 
16. Gordon, M.; Kennedy, J. W. J. C. S. Faraday Trans. II 1973, 69, 484. 
17. Kruskal, J. in "Time Warps, String Edits, and Macromolecules"; Sankoff, D.; 
Kruskal, J., Eds.; Addison-Wesley: Reading, MA, 1983, p. 1. Cf. other articles 
in this volume. 
18. Bertz, S. H. in "Chemical Applications of Topology and Graph Theory"; King, 
R. B., Ed; Elsevier: Amsterdam, 1983; p. 206. 
19. Bertz, S. H. J. C. S. Chem. Commun. 1981, 818. 
20. Wipke, W. T.; Rogers, D. J. Chem. Inf. Comput. Sci. 1984, 24, 71. 
RECEIVED December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch015
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

16 
S y m b o l i c C o m p u t e r P r o g r a m s 
Applied 
to 
Group 
T h e o r y 
Gordon D. Renkes 
Chemistry Department, Ohio Northern University, Ada, OH 45810 
Applications of symbolic computer programming to group 
theory will be discussed. 
These programs, which are 
written 
in 
Common 
Lisp, 
perform the 
symbolic 
manipulations 
involved 
in 
the 
generation 
of 
multiplication tables, 
finding the classes, taking 
products of groups, 
establishing 
the 
correlations 
between subgroups and supergroups, etc. 
This software 
should prove very useful 
for applications 
of group 
theory to the spectroscopy of non-rigid molecules, for 
which the molecular symmetry groups are often 
large, 
not 
standard point groups, 
and very tedious to 
manipulate by hand. 
The 
symposium one year ago on symbolic computing i n chemistry, and 
t h i s symposium on uses of a r t i f i c i a l 
intelligence i n chemistry 
demonstrate that symbolic computation i s now becoming recognized as 
a useful tool for chemists. Just as computer "number crunching" i s 
now 
f u l l y 
accepted and implemented to assist the solving of many 
chemical questions, i t appears that eventually computer "symbol 
crunching" 
w i l l 
f u l f i l l an equally important role to assist the 
chemist with h i s thinking. 
Why Symbolic Computing for Group Theory? 
This paper addresses the application of symbolic programming to the 
symbolic manipulations of group theory. 
Chemists are already 
familiar with the standard applications of group theory as explained 
in 
the standard 
texts. 
For many applications, the useful 
information such as character tables and correlation tables are i n 
their 
appendices. 
However, i n certain areas of current research, 
such as the interpretation of the spectra of non-rigid molecules, 
unfamiliar and sometimes large groups which are not included i n the 
standard tables are employed (1^4). A variety of formulations have 
been developed to approach the analysis of the symmetries of such 
species, (e.g. molecular symmetry group and the isometric group, 
etc.). 
They a l l share the common hazzard of many elements and 
0097-6156/86/0306-0176$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch016
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

16. 
R E N K E S 
Symbolic Computer Programs Applied to Group Theory 
177 
tedious manipulations 
for many molecules 
of 
interest. 
When 
confronted 
with 
t h i s situation, the investigator must generate the 
required tables himself, i f he i s not 
lucky enough to 
find them 
published somewhere. 
A common clause 
i n many papers reads "The 
character table for t h i s group has already been published....". 
The 
reader 
can hear the author's sigh of r e l i e f that he didn't have to 
work i t out himself. Many labor saving techniques have been devised 
to speed up t h i s process, e.g. (4), but these have to be learned and 
executed with care. And, the amount of paper work involved can 
s t i l l 
be 
considerable, 
especially 
when complicated 
situations 
are 
considered. For example, to evaluate the classes and character table 
for the molecule boron trimethyl (of order 324) required 18.5 pages 
and 15 intermediate tables even when e f f i c i e n t algorithms were used 
(4). 
Upon surveying 
t h i s 
situation, 
one 
can 
appreciate 
the 
convenience of computer programs which would handle the 
tedious 
details. 
(This would be analogous to the application of computers 
to numerical computations. 
Before computers, tedious arithmetic was 
minimized 
by 
use 
of log tables, perturbation theory, algebraic 
approximations, etc. With computers, computations can 
be 
executed 
with 
far fewer approximations 
and 
applied to more extensive and 
r e a l i s t i c situations.) Such programs would be useful tools, because 
they would free one to spend more time thinking about the problem at 
hand, and to quickly test out ideas without having to decide, "Is i t 
worth the effort?" 
Lisp as a Language for Implementation 
Given 
that such programs would be useful, we must next decide which 
language would be most appropriate for implementation. 
At 
least 
three reasons j u s t i f y the symbolic language Lisp. 
F i r s t , 
Lisp i s designed 
to be used 
interactively at a 
computer terminal. 
This would be 
very 
convenient 
for 
the 
investigator 
i n the midst of thinking about a particular problem. 
Suppose a question arises which requires the 
use 
of group 
theory 
tables. 
Rather than digging through appendices or searching i n the 
l i b r a r y , the computer programs would be employed to supply 
results 
on the spot, even i f no one has ever done i t before. 
Second, the fundamental data structure of the Lisp language 
i s a l i s t of symbols. Two examples of legitimate l i s t s are, 
(1 2 3) 
and 
( (1 2 3) (4 5 6) (7 8 9 ) ) 
The f i r s t i s a simple l i s t of three integers, and the second 
i s a 
l i s t 
of 
l i s t s , 
each of which i s a simple l i s t of three integers. 
The parentheses serve to enclose 
the 
l i s t s . 
Such 
l i s t s 
ideally 
match the permutation 
notation for group operations which are 
employed 
in these programs. 
For example, to 
represent 
the 
permutation 
of the 
integers 1 and 2 i n a l i s t of integers ( 1 2 3) 
one writes, 
operator * operand 
= 
result 
(1 2) 
* 
( 1 2 3)= 
(2 1 3) 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch016
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

178 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
And, the product of two operators, which i s equal to another single 
permutation operator i s written, for example, 
operator * operator 
= 
operator 
(1 2 3) * (1 2 3) 
= ( 3 
2 1) 
(This matches the 
notation used by many spectroscopists who study 
non-rigid molecules (1^3). 
At present, a user of t h i s 
software i s 
confined 
to 
t h i s notation, although i t could be possible to expand 
the capability of 
reading 
and 
displaying standard 
point group 
notation at the terminal.) 
F i n a l l y , 
the 
language provides 
b u i l t 
i n devices 
for 
conveniently manipulating, categorizing, storing and 
recalling a l l 
the 
information 
which 
pertains 
to 
a group, such as 
the 
multiplication 
table, classes, 
characters 
of 
the 
irreducible 
representation, 
correlations between subgroups and product groups, 
etc. 
Much of the rest of t h i s paper w i l l summarize the 
d e t a i l s of 
how t h i s i s done. 
Implementation Discussion 
Basic 
Functions. 
The fundamental symbolic operation which i s used 
performs the permutations on l i s t s 
of numbers. 
The Common Lisp 
supplied function ROTATEF i s designed to do just t h i s . 
An arbitrary 
number of arguments can be supplied to i t , and i t returns a l i s t 
i n 
which the 
f i r s t argument i s at the end, and the others have been 
shifted one space to the l e f t . 
An example of 
the 
application of 
t h i s function, and the result displayed on the screen i s , 
(ROTATEF
 
11 '2 '3) 
(2 3 1) 
A user function CYCLOPERATE was 
written to employ 
t h i s 
Lisp 
function, using the operator l i s t as a recipe for how ROTATEF should 
rearrange the numbers i n the operand l i s t . 
In 
t h i s example, 
the 
l i s t 
(1 
2 
3) 
i s the operator, and (1 2 3 4 5) the operand. 
The 
permuted l i s t i s returned as the result of the function. 
(CYCLOPERATE '(12 3) 
' ( 1 2 3 4 5 ) ) 
( 2 3 1 4 5 ) 
Another user function, PERMUTE, applies CYCLOPERATE repeatedly when 
a 
l i s t 
of permutation operators 
i s applied 
successively to an 
operand l i s t , to return a l i s t of permuted numbers, 
(PERMUTE '( (1 2 3) (2 3 4) (3 4 5) ) 
' ( 1 2 3 4 5 ) ) 
( 2 1 3 5 4 ) 
These two 
functions, 
and 
one more which can 
reconstruct 
a 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch016
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

16. 
R E N K E S 
Symbolic Computer Programs Applied to Group Theory 
179 
permutation 
operator 
from a permuted l i s t , serve as the workhorses 
for the procedure of setting up a group multiplication table. 
Some of the information pertaining to a group i s stored i n 
property l i s t s . 
Table I exemplifies how t h i s looks f o r the simple 
case of the c y c l i c group of order three. 
(This would be isomorphic 
to the rotational subgroup of a molecule such as methyl 
fluoride. 
The operators (1 2 3) and (1 3 2) would correspond to the 
permutations of the three hydrogen n u c l e i i numbered 1, 2 and 3. 
N3L, the language's symbol for the empty 
l i s t , 
serves as the 
identity.) 
Table I. 
Property l i s t s for c y c l i c group, order 3· 
( #:GRP-1 
#:GRP-2 
//:GRP-3 ) 
PERMOP 
(NIL) 
PERMOP 
((1 2 3)) 
PERMOP 
((1 3 2)) 
RESULTLIST ( 1 2 3) 
RESULTLIST (2 3 1) 
RESULTLIST 
(3 1 2) 
INVPERMOP (NIL) 
INVPERMOP ((1 3 2)) 
INVPERMOP ((1 2 3)) 
INVERSE 
#:GRP-1 
INVERSE 
#:GRP-3 
INVERSE 
#:GRP-2 
CLASS 
#:CLS-1 
(LASS 
//:CLS-2 
CLASS 
#:CLS-3 
#:GRP-1 
#:GRP-1 
#:GRP-1 
#:GRP-2 
#:GRP-1 
#:GRP-3 
#:GRP-2 
#:GRP-2 
#:GRP-2 
//:GRP-3 
#:GRP-2 
//:GRP-1 
#:GRP-3 
#:GRP-3 
#:GRP-3 
#:GRP-1 
//:GRP-3 
#:GRP-2 
The three operators are represented by the three Gensyrn symbols i n 
the l i s t (#:GRP-1 #:GRP-2 #:GRP-3) which i s stretched out across the 
top of the table to make room for the property l i s t s underneath. 
These symbols by themselves mean nothing. The useful information i s 
contained i n the property l i s t s , which are displayed underneath i n 
v e r t i c a l tabular format f o r readability. The property 
l i s t i s a 
l i s t of pairs of symbols. 
The f i r s t symbol of each pair i s the 
property indicator, which allows access to the second symbol, the 
property 
value, by execution of an access function. For example, 
the PERMOP property i s the permutation 
operator f o r each group 
element. I f we want the permutation operator for a particular group 
element, we use the access function GET, to get from the appropriate 
GENSYM symbol the PERMOP property. 
(GET '#:GRP-2 'PERMOP) 
((1 2 3)) 
The RESULTLIST property i s the result of operating with 
that 
operator on an i n i t i a l l y 
ordered 
operand 
l i s t . 
INVPERMOP and 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch016
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

180 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
INVERSE are the inverse operator l i s t , and the Gensym symbol for i t , 
respectively. The CLASS property value i s another Gensym atom which 
has as i t s value a l i s t of a l l of the operators i n that class. 
(In 
t h i s 
simple case, the value of #:CLS-1 i s the l i s t (#:GRP-1), etc.) 
The remaining pairs i n each property 
l i s t 
represent the group 
multiplication 
table. 
For any particular group multiplication, an 
element of the group l i s t at the top of Table 
I pertains to the 
right 
operator, the property 
indicator pertains to the 
l e f t 
operator, and the property value pertains to the product. 
For 
example, for the product of the permutation operator ( 1 2 3) with 
i t s e l f , 
(GET »#:GRP-2 »#:GRP-2) 
#:GRP-3 
And to obtain the operator i t s e l f , 
(GET (GET «#:GRP-2
 f#:GRP-2) »PERMOP) 
((1 3 2)) 
Much of the computational labor expended i s used to set up 
these 
property 
l i s t s , 
but once that i s accomplished, other manipulations 
which need the information stored i n them only have to GET 
the 
results which are stored i n these property l i s t s . 
The 
strategy used to set up the multiplication table i s 
handled by a function which accepts a l i s t of operators which are a 
set of generators for that group. A l l possible products between the 
generators f i l l i n a portion of the table, and usually produce 
new 
operators. 
Further multiplication using these new operators f i l l s 
in more of the table, and may 
produce more new 
operators. 
This 
process 
i s repeated 
exhaustively u n t i l 
no 
new 
operators are 
produced, 
at which 
point the closure property of groups 
i s 
s a t i s f i e d , 
and 
the 
table 
i s complete. 
Following t h i s , another 
function uses t h i s 
table to 
find 
the conjugacy 
classes 
by 
application of the d e f i n i t i o n . 
Terminal 
Display and Practical Usage. Once calculated, other user 
functions can extract the desired information from 
the 
internally 
stored 
representation and display i t on the terminal or print i t on 
a lineprinter. 
Table I I shows the l i s t of operators by classes for 
S3, 
the permutation group of degree three, as displayed on the 
terminal. 
(This i s isomorphic 
to the point group C-3V.) 
The 
multiplication 
table and 
character table can also be displayed i n 
appropriate formats, although the multiplication table i s readable 
for 
only the smallest groups, and probably would not normally be 
displayed anyway. 
(At the present 
stage of development, 
the 
character table must be entered from the terminal. A function which 
sets i t up from scratch w i l l be written i n the near future. Also at 
present, the classes are simply numbered.) 
Other typical group manipulations can be performed once a l l 
the aforementioned information has been found. 
For example, direct 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch016
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

16. 
R E N K E S 
Symbolic Computer Programs Applied to Group Theory 
181 
Table I I . 
Terminal Display of Classes 
For the group S3 
Operators by Classes 
1 i s (NIL). 
2 i s ((1 3 2)), ((1 2 
3)). 
3 i s ((2 3)), 
((1 3)), 
((1 2)). 
products can be taken between two groups, and the correlations 
established between the representations of the subgroups and the 
product group. Consider the direct 
product of the 
permutation 
groups of degree three and degree two, represented by the names S3 
and S2, to produce the product named S3-DP-S2. The character 
table 
of the product group i s exhibited i n Table I I I . The default labels 
for the representations i n the product 
group are formed 
by 
concatenating 
the labels of the representations i n the subgroups (A 
and Β for S2, and A1, A2 and Ε for S3). 
Table I I I . 
Terminal display of character table of 
direct product of S3 with S2 
For the group S3-DP-S2 
Group character table. 
(LASS 
1 
2 
3 
4 
5 
6 
A1A 
1 
1 
1 
1 
1 
1 
A1B 
1 
1 
1 
-1 
-1 
-1 
A2A 
1 
1 
-1 
1 
1 
-1 
A2B 
1 
1 
-1 
-1 
-1 
1 
EA 
2 
-1 
0 
2 
-1 
0 
EB 
2 
-1 
0 
-2 
1 
0 
A record of the correlations between the representations i s 
constructed with association l i s t s while 
taking the product, and 
these can be used to display character correlation tables i n both 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch016
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

182 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
the forward sense, from a subgroup to the product group, and i n the 
reverse sense, from product group to a subgroup. 
Table IV shows the 
terminal display of both forward correlations. 
Table IV. Terminal Display of Character Correlation Tables 
Character correlation table. 
SUBGROUP 
PRODUCT-GROUP 
S3 
S3-DP-S2 
A1 
A1B 
A1A 
A2 
A2B 
A2A 
Ε 
EB 
EA 
Character correlation table. 
SUBGROUP 
PRODUCT-GROUP 
S2 
S3-DP-S2 
A 
EA 
A2A 
A1A 
Β 
EB 
A2B 
A1B 
Products between the irreducible representation characters 
within 
a group 
w i l l 
produce 
representations which are often 
reducible. A simple calculation can decompose t h i s product to a sum 
of the irreducible representation characters, as i s demonstrated i n 
Table V f o r two representations from the S3-DP-S2 group. 
Table V. Terminal display of the decomposition of the product 
of two representations of S3-DP-S2 
Within the group S3-DP-S2 
EA 
2
-
1
0
2
-
1
0 
EB 
2
-
1
0
-
2
1
0 
EAxEB 
4 
1
0
-
4
-
1
0 
The decomposition i s 
EAxEB 
1 EB 
1 A2B 
1 A1B 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch016
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

16. 
R E N K E S 
Symbolic Computer Programs Applied to Group Theory 
183 
Other Implementation Details. A l l of the information resulting from 
the computations described above i s stored 
i n a named record 
structure which i s defined using the Common Lisp DEFSTRUCT f a c i l i t y . 
An 
example of what 
t h i s 
looks l i k e i s shown i n Table VI for the 
group S2, which we used e a r l i e r . 
Table VI. Record structure which stores a l l the 
information pertaining to the group S2 
ORDER 
2 
OPERAND-LIST 
(4 5) 
GROUP-LIST 
(#:GRP--10 #:GRP-11) 
CLASS-LIST 
(//:CLS--7 
#:CLS-8) 
CHARACTER-LIST 
(#:CHR--8 
#:CHR-9) 
SUBGROUPS 
NIL 
SUPERGROUPS 
(S3-DP--S2) 
The l e f t element on each l i n e i s a name for the 
f i e l d 
(or 
record) 
which 
i s shown i n the right element. The ORDER of t h i s group i s 2. 
The OPERAND l i s t used for t h i s example was the numbers 4 and 5. 
The 
Gensym symbols for the 
two 
group elements are 
stored 
i n the 
GROUP-LIST f i e l d . 
As was explained 
e a r l i e r , 
property 
l i s t s were 
attached 
to each of these which contained the multiplication table 
and 
other 
information. 
The 
elements of 
the 
CLASS-LIST 
and 
CHARACTER-LIST f i e l d s 
contain 
the 
information indicated by their 
names. In the above examples, we did not work with the subgroup 
of 
S2, 
so NIL i s stored there; but the direct product name S3-DP-S2 i s 
stored i n the f i e l d SUPERGROUPS. Attached to t h i s name (not shown) 
i s 
the 
association 
l i s t 
for 
the 
correlation between 
the 
representations, which was used for the construction of Table IV. 
The examples used above to i l l u s t r a t e the 
features 
of 
the 
software were kept deliberately simple. 
The u t i l i t y of the symbolic 
software becomes appreciated when larger problems are attacked. 
For 
example, the 
direct product of S3 (order 6) and S4 (isomorphic to 
the tetrahedral point group) i s of order 144, and has 15 classes and 
representations. 
The 
l i s t of classes and the character table each 
require nearly a f u l l page of lineprinter printout. When asked for, 
the 
correlation 
tables 
and 
decomposition 
of 
products 
of 
representations are evaluated and displayed on the screen within one 
or 
two 
seconds. 
Table VII shows the results of decomposing the 
products of two pairs of representations i n t h i s product group. 
These programs have been coded i n Common Lisp (5) which i s 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch016
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

Table VII. Display of the decomposition of products of representations within the 
direct product group S3-DP-S4. 
-1 
-1 
-1 
-1 
1 
1 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
0 
Within the group S3-DP-S4 
EA1 
2
-
1
0
2
2 
EA1 
2
-
1
0
2
2 
EA1xEA1 
4 
1
0 
4 
4 
The decomposition i s 
EA1xEA1 
1 EA1 
1 A2A1 
1 A1A1 
Within the group S3-DP-S4 
ET2 
6 
-3 
0 
-2 
0 
2 
ET2 
6 
-3 
0 
-2 
0 
2 
ET2xET2 
36 
9 
0 
4 
0 
4 
The decomposition i s 
ET2xET2 
1 ET2 
1 ΞΤ1 
1 EE 
1 EA1 
1 A1T1 
1 A1E 
1 A1A1 
-2 
1 
0 
-1 
1 
0 
0 
0 
0 
-2 
1 
0 
-1 
1 
0 
0 
0 
0 
4 
1 
0 
1 
1 
0 
0 
0 
0 
1 A2T2 
1 A2T1 
1 A2E 
1 A2A1 
1 A1T2 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch016
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

16. 
REN Κ ES 
Symbolic Computer Programs Applied to Group Theory 
185 
being promoted as a standardized 
dialect which should be easily 
transportable between different computers. 
(It has not been 
determined i f i t could operate on any microcomputer implementations 
of Common Lisp.) 
Other Group Theory Software 
Other published reports of computer programs applied to group theory 
include the following. 
J . J . Cannon 
(University 
of Sydney) i s a 
mathematician who has led the writing of a large set of Fortran 
programs to generate and study groups from a mathematician
1s point 
of view 05), C. Trindle (Univ. of Virginia) has written programs 
in Basic7 which execute on an Apple microcomputer (7). These 
programs are also intended to be used for academic 
instruction i n 
group theory as well as for research work. K. Balasubramanian 
(Arizona State) has written programs which use the wreath product 
formalism to generate the permutation operators f o r non-rigid 
molecules (8), and compute nuclear spin s t a t i s t i c a l weights (9). 
Future Plans 
Some features which w i l l be included i n future developments of these 
programs include; the evaluation of semi-direct products between 
groups, the direct evaluation of the character tables from 
scratch, 
and 
storing i n f i l e s the record 
structures which contain the 
information about the larger groups. The f i r s t two are necessary 
for 
useful work to be accomplished for non-rigid molecule groups, 
since their construction usually includes the semi-direct product 
combination of subgroups. 
The third feature i s intended to avoid 
repeating long computations which occur for large groups, even on a 
computer. 
Literature Cited 
1. Bunker, P.R., "Molecular Symmetry and Spectroscopy"; Academic 
Press: New York, 1979. 
2. "Symmetries and Properties of Non-rigid Molecules"; Maruani, J., 
Serre, J., Ed.; Elsevier: Amsterdam, 1983. 
3. Ezra, G.S. "Symmetry Properties of Molecules"; Springer-Verlag: 
Berlin, 1982. 
4. Altmann, S.L. "Induced Representations in Crystals and 
Molecules"; Academic Press: N.Y., 1977. 
5. Steele, G.L., Jr. "Common Lisp"; Digital Press: Burlington, MA, 
1984. 
6. Cannon, J.J. in "Computational Group Theory"; Academic Press: 
London, 1984: pp 145-83. 
7. Trindle, C. J. Computat. Chem. 1984, 5, 162-9. 
8. Balasubramanian, K. J. Computat. Chem. 1983, 3, 302-7. 
9. Balasubramanian, K. J. Computat. Chem. 1982, 1, 69-74, 75-88. 
RECEIVED December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch016
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

17 
A M u l t i v a l u e d Logic Predicate C a l c u l u s 
Approach 
to Synthesis 
Planning 
W. Todd Wipke and Daniel P. Dolata 
Department of Chemistry, University of California, Santa Cruz, CA 95064 
Stereochemical principles of synthesis planning have 
been axiomatized using first-order predicate calculus 
with a multi-valued logic as implemented in the QED 
system. 
Given the definition of a synthetic 
target 
molecule as a set of axioms, QED is able to infer a 
synthesis plan in high-level terms without reference to 
reactions. 
Key benefits of this approach are clarity of 
expression and transparency of the system: all chemical 
knowledge used is explicit in the axioms. 
The purpose of t h i s research was to explore the representation, 
manipulation, and u t i l i z a t i o n of strategic knowledge i n organic 
synthesis planning. The method we decided to explore was to create 
an axiomatic theory to replace our i n t u i t i v e theory about chemical 
synthesis. 
This formal method of reasoning i s very powerful i n that 
i t completely eliminates any questions about the method used to reach 
a conclusion. Since any conclusions reached would be theorems of the 
axiomatic 
theory, the acceptability of the conclusions 
rests 
completely on the acceptability of the postulates and not upon the 
method of reasoning. We are then free to focus on the chemical 
principles which are provided as postulates. 
In 
this paper we describe the need for planning, and then 
develop the predicate calculus we used and the choice of multi-valued 
l o g i c . 
F i n a l l y we b r i e f l y describe the QED program, a few rules, and 
an example analysis. 
Other papers i n the QED series w i l l cover the 
program and chemical results in d e t a i l . 
Meed For Planning 
Synthesis planning programs such as SECS, (Y)(2) (3») LHASA, ( 4 ) ( 5 ) or 
S Y N C H E M C 6 M 7 ) 
work 
backward 
from the target 
molecule 
to be 
synthesized 
toward 
starting 
materials. 
By applying 
applicable 
chemical transforms (inverse chemical reactions) to the target, the 
f i r s t set of chemical precursors i s generated. 
Each of these in turn 
can be considered a new target and processed i n l i k e manner 
0097-6156/ 86/ 0306-0188S06.00/ 0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

17. 
W I P K E A N D DOLATA 
A Predicate Calculus Approach to Synthesis Planning 
189 
recursively. 
This process develops a "synthesis tree", where nodes 
in the tree correspond to chemical structures and edges to chemical 
transforms. The fundamental problem i s that there are many possible 
chemical transforms that can be applied and typical syntheses require 
several steps. 
If each molecule i n the tree has ten precursors, by 
the time we reach the sixth l e v e l , one m i l l i o n precursors must be 
evaluated! 
I f our program can process 10 precursors per second, t h i s 
w i l l require a day. 
This example actually underestimates the size of 
the problem, because the typical branching factor i s between 100 to 
200 rather than ten, and many syntheses require more than six or 
seven steps. 
Approaches to Large Search Spaces 
- 
Heuristics 
- Macro Operators 
- Abstraction 
- 
Planning 
A heuristic i s a rule of thumb may lead to a shortcut i n the solution 
of a problem. 
If such a heuristic removes 90% of the routes at each 
l e v e l , then i t w i l l eliminate 99% of the possible routes by the 
second l e v e l , 99.9% by t h i r d , etc.. Even a simple heuristic can make 
the problem 
far more tractable. 
Gelernter
!s SYNCHEM 11(7,) i s an 
example of a program that has 
focused 
on 
heuristic evaluation 
functions for reducing the search space that must be explored. Wang 
used macro operators to establish "planning islands" that can then 
serve as near-term 
objectives.(8^ The macro operators make bigger 
jumps i n the search space, thus eliminating much branching 
and 
combinatorics. 
Abstraction can be used to simplify chemistry so 
there are fewer 
kinds of functional groups, and 
fewer 
chemical 
transforms, thus 
a 
reduced 
search 
space.(9) 
Planning 
provides 
direction i n the search space, thus permits pruning of pathways which 
are headed in the wrong direction and permits focusing resources in a 
particular direction. 
Prov iding 
a_ Sense of Purpose. 
Planning i s more than 
just 
a 
heuristic evaluation function that measures complexity. The ultimate 
goal of synthesis i s to prepare the complex from things simple. Thus 
in Figure 1 our goal i s to find syntheses that lead downward, but 
some excellent syntheses may require increasing the complexity of a 
precursor i n order to ultimately lead to a very simple one as the 
path Τ —> 
Ρ " 
—> 
Ρ ~ 
i n Figure 1 i l l u s t r a t e s . 
Going u p h i l l in 
complexity i s acceptable if_ there i s some purpose and a plan provides 
that sense of purpose. 
Plan Representation i n SECS. 
The SECS Simulation and Evaluation of 
Chemical Synthesis program e x p l i c i t l y represents i t s plans(2) as a 
l i s t structure of goal instructions with l o g i c a l connectives. A goal 
instruction can specify one of the following: 
- 
Introduce a functional group at a position 
- Change a functional group at a position 
- Make or Break a bond 
- Use an atom, bond, or group 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

190 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
The 
logic instruction can include AND, 
OR, 
NOT, 
or XOR, 
and also 
includes an action to take i f the goals beneath i t are not achieved. 
The actions generally modify the evaluation score for a synthesis 
pathway 
or 
completely 
terminate 
consideration 
of 
a 
synthesis 
pathway. 
SECS uses the goal l i s t to select transforms that appear to have 
the potential for satisfying the goals, based on the character of the 
transform. 
The 
character of a transform 
specifies the types 
of 
architectural changes the transform may 
effect. 
The goals specify 
desired 
architectural 
changes 
i n 
the 
molecule. 
It 
i s 
the 
responsibility of the SECS program to 
find 
transforms 
that 
can 
achieve the goals. 
The strategy module of SECS creates a plan and 
writes i t on the goal l i s t . 
The chemist may modify those goals or 
add new ones. 
The Strategic Basis. The strategic basis for designing a synthesis 
plan 
rests 
on 
general 
principles 
of 
molecular 
architecture 
construction, and 
i s independent of reaction knowledge. 
Examples 
include symmetry of the target molecule, potential symmetry of the 
target molecule, the relative r e a c t i v i t y of functional groups i n the 
target, 
consideration 
of 
potential 
starting 
materials, 
the 
connectivity of the structure, and the control of stereochemistry. 
A 
symmetry-based strategy for 3-carotene i s shown i n Figure 2. 
The 
reaction-independent 
principle i s to construct the molecule from 
identical pieces to take advantage of the symmetry of the structure. 
The 
resulting goal structure i s a set of three alternative goals, 
each of which specifies two bonds that should be broken i n the 
analytical direction. 
Since we were interested in studying these strategies, we wanted 
a means for e x p l i c i t l y representing the principles that enabled us to 
easily modify them and to be able to easily understand exactly what 
principles the program was using. 
For t h i s reason the QED project 
was 
initiated.(JJ)) 
QED 
was 
to use statements of the 
principles 
together 
with 
a 
d e f i n i t i o n 
of 
the molecule and 
then 
infer 
a 
reasonable 
set of strategies for the synthesis of the molecule and 
write these to the SECS goal 
l i s t . 
F i r s t Order Predicate Calculus 
We chose the f i r s t order predicate calculus (PC) as our language for 
representing 
synthetic 
principles. 
The 
f i r s t 
order 
predicate 
calculus (PC) i s a "formal" system of logic.(JJ_)(Jj2)(J_3) 
In this 
context, formal means that i t i s the form of the arguments that i s 
important, not the actual content. 
The term "calculus" comes from 
the meaning "a method of calculation", and does not refer to Newton
1s 
d i f f e r e n t i a l calculus. 
To give an example, the following form of argument i s known as 
modus ponens: " I f statement A implies conclusion B, and we know A to 
be true, then we may conclude B" and may be represented as follows: 
A => Β 
Β 
:. 
Β 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

WIPKE A N D DOLATA 
A Predicate Calculus Approach to Synthesis Planning 
Figure 2. Symmetry-based strategies for 3-carotene. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

192 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
It i s possible to substitute various meanings to the statements A and 
B, and as long as t h i s form i s followed, the conclusion i s said to 
follow from the premises. A could be the statement "A ketone i s 
present" and Β could be "A carbonyl i s present". If A i s true, then 
Β follows from the premises. 
If the conclusion seems to be i n error, and the chain of 
reasoning i s v a l i d , we have then demonstrated that one (or more) of 
our i n i t i a l assumptions must be erroneous. For example, i f one of 
the premises was the implication " I f a ketone i s present then the 
compound i s an alkane", then the conclusion that would follow from 
the observation "a ketone i s present" would be obviously 
false. 
Since the PC i s l o g i c a l l y 
correct ( i n fact 
defines 
" l o g i c a l l y 
correct") any erroneous conclusions must arise from an erroneous 
axiom, and cannot be the fault of the calculating procedure used. 
This allows us to focus our attention on the assumptions and frees us 
from having to worry about the procedure. 
A Working 
Definition of the Predicate 
Calculus. In a formal 
theory(13) the statements are written i n a specially constructed 
symbolic language, and are manipulated i n accordance with specified 
rules which make no appeal to any possible meaning of the symbols. A 
string i s a f i n i t e sequence of these formal symbols. 
There exists a 
grammar for deciding i f a string i s a statement. There i s a method 
for determining i f a statement i s an axiom. 
This method involves 
pattern matching, and perhaps rearrangement and rewriting. 
Given a 
f i n i t e sequence S , ... ,S, of statements, there i s a procedure for 
deciding i f S follows from one or more S^ ... ,S^ by the rule of 
inference. The formal symbols defined are shown i n Table I. 
Table I. The Formal Symbols of the PC used by QED. 
Name 
Normal 
QED 
Representation 
Representation 
For A l l 
V 
$A11 
There Exists 
3 
$Exists 
And 
Λ 
•and. 
Or 
V 
.or. 
Not 
~ 
.not. 
If/Then 
=> 
i f 
then 
If and Only I f 
<-> 
i f 
o n l y - i f 
Therefore 
:. 
(not used) 
Parenthesis 
( 
) 
( 
) 
Brackets 
c 
] 
C ] 
Curly bracket 
t 
} 
{ 
} 
Comma 
Predicate 
P,Q,R... 
I n i t i a l capital l e t t e r 
Identifier 
i ,x,z... 
A l l small l e t t e r s 
To decide i f a formula i s a well formed formula (wff) of the 
i t must conform to the following d e f i n i t i o n : 
1. 
There exists a set of variable symbols, a ... z, which can 
hold places. We can also define a set of objects, o^ ... ο , 
also known as constants. 
This set of objects i s known as the 
domain. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

17. 
W I P K E A N D DOLATA 
A Predicate Calculus Approach to Synthesis Planning 
193 
2. 
For each of η = 0, 1, ... 
there i s a possibly empty set of 
η-place predicates. 
These are denoted by P(x^ f 
... 
»
χ
η^· 
This predicate may represent some property of an object, or a 
relationship between objects. 
3. 
An "atomic formula" of the PC i s formed by taking a n-place 
predicate symbol Ρ(χ^, 
... 
»
x
n^»
 a n c l substituting variables or 
constants for any of the χ.. 
4. 
A formula 
of the PC i s formed by combining atomic formulae 
using the connective symbols ν, Λ, ~, => or 
<->. 
5. 
A formula of the PC may be preceded by a quantifier, V or 3. 
6. 
Parentheses are used to avoid confusion when the order 
of 
evaluation 
or 
the 
scope 
of 
the 
arguments 
i s 
important. 
Parentheses, square 
brackets 
and 
curly 
brackets 
are a l l 
equivalent, and may be used interchangeably, as long the same 
type i s used to open and close the same term. 
If A, Β and C represent atomic formulae, then the following are 
examples of formulae: 
A 
V A 
Α ν Β 
3 χ Β 
Α
Λ Β 
A A ( B V C ) 
Α => 
Β 
( ( Α => 
Β ) => C ) 
Α ν ( Β => A ) 
An object may be any "thing". This can include tangible items 
such as atoms, or bonds, or can include non-tangible things such as 
goals, or plans. 
In the 
f i r s t order PC, an object may 
not be a 
predicate. 
Predicates are properties of objects, or relationships between 
objects. 
A predicate i s derived from the predicate clause of a 
sentence. 
In the sentence "atom 5 i s a carbon", the predicate clause 
i s " i s a carbon". This would be represented as Is-carbon(atom5). 
To 
avoid confusion, names of predicates and objects are written without 
embedded blanks or spaces. 
Translating 
Chemical Statements into Predicate 
Logic. 
In 
the 
following examples, we use the QED representation for connectives and 
quantifiers. 
an atom which i s a ring atom 
Ring-atom (x) 
(1) 
atom5 i s a ring atom 
Ring-atom (atom5) 
(2) 
atomU and atom5 are ring atoms 
Ring-atom (atomU) .and. 
Ring-atom (atom5) 
(3) 
atom4 and atom5 are alpha 
Alpha (atom4, atom5) 
(4) 
Note the difference between equations 3 and 4, where an e l l i p s i s 
makes the two phrases look similar. 
However, i f 3 i s rewritten as 
shown i n 5 the difference i s obvious. 
In equation 5, the English 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

194 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
word "and" i s used in the l o g i c a l sense, whereas i n equation 4, "and" 
indicates items which w i l l be related by a predicate phrase. 
atom4 i s a ring atom 
and 
atom5 i s a ring atom 
(5) 
atom4 and atom5 or atorn6 are beta 
Beta (atom4, atom5) .or. Beta (atom4, atom6) 
(6) 
bond12 i s not an appendage bond 
.NOT. Appendage-bond (bond12) 
(7) 
$A11 (x) $A11 (y) $A11 (z) 
[ I f Atom (x) .and. Atom (y) .and. Atom (z) 
.and. 
Alpha (x,y) .and. Alpha (y,z) .and. 
.not. Identity (x,z) then Beta (x,z) ] 
(8) 
Postulate 8 defines the beta 
relationship 
from 
the 
alpha 
predicate (alphaCx, y) i s true i f bond(x, y) i s true). 
The 
term 
".not. Identity (x,z)" must be included in axiom 8 to prevent an atom 
from being beta to i t s e l f (x=z). 
Definition of Axiomatic Theories. An axiomatic theory i s an 
attempt to formalize an i n t u i t i v e theory. 
Geometry was 
i n t u i t i v e 
before Euclid wrote "The Elements". 
An i n t u i t i v e theory i s defined 
as a body of knowledge which attempts to express relationships and 
causality between objects, but i s not formal. Most modern science i s 
s t i l l 
i n t u i t i v e , even though i t may represent many of i t
1 s findings 
in exact mathematical 
formulae. 
As long as the entire corpus of 
knowledge i s not expressed in a single formal system, i t w i l l remain 
i n t u i t i v e . 
The 
following 
l i s t of the steps i s necessary to create an 
Axiomatic Theory: 
1. 
Provide a set of symbols, and associated definitions. 
This set 
of symbols w i l l include both objects, and predicate relations. 
Together with the set of symbols defined by the associated 
l o g i c , these w i l l be the only allowed symbols. 
2. 
Provide a set of axioms (postulates). 
I f one i s attempting to 
create an axiomatic theory which mirrors experimental r e a l i t y , 
then these axioms should express some fundamental properties of 
the system you are trying to model. 
3. 
Choose a type of logic to associate with the symbols and 
definitions. 
This 
w i l l 
be 
used 
to deduce a l l further 
statements of the theory. 
This logic w i l l provide at least one 
rule of inference, and rules of combination of truth values. 
4. 
Any new 
statement created by the rule of inference upon the 
postulates i s known as a theorem of the theory and may 
be 
referred 
to as 
" v a l i d " 
or 
"proved" 
within 
the 
axiomatic 
theory. 
An axiom i s defined as a principle which holds across a l l 
domains of knowledge such as, " i f two objects are equal to a third 
object, 
then 
they 
are 
equal 
to each other". 
Postulates are 
statements 
which are 
given without 
proof, based 
only 
on 
the 
definitions provided before. 
Euclid called postulates "self-evident 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

17. 
W I P K E A N D DOLATA 
A Predicate Calculus Approach to Synthesis Planning 
195 
truths", and he f e l t that they mirrored some fundamental principle of 
the universe. 
The idea of postulating an obviously false statement 
such as "two 
p a r a l l e l 
lines may 
intersect at some point" seemed 
useless. However, Bolyai-Lobachevsky geometry does just this and has 
met with success in space time physics, where large bodies can create 
bends in space such that p a r a l l e l lines can intersect. 
In modern axiomatic theory, postulates and axioms are defined 
simply as given statements. 
By the d e f i n i t i o n of an axiomatic theory 
the concept of truth i s not considered relevant to i t s construction. 
If we can derive a theory which seems to mirror r e a l i t y as reported 
by 
our 
current 
experimental 
knowledge, then 
we 
consider 
the 
postulates to be "successful" in some sense of the word. 
If the 
theory 
derived 
from 
the 
postulates 
clash 
d r a s t i c a l l y 
with 
our 
observations, the postulates can be thrown away as 
"non-relevant". 
If 
the 
differences are 
s l i g h t , or 
i f the 
theory 
predicts 
new 
experiments which should show differences from what the 
i n t u i t i v e 
theory would 
predict, we 
can 
even 
c a l l 
the 
axiomatic 
theory 
"interesting". 
Why More Systems Haven
11 Been Axiomitized. Geometry i s unique i n 
that i t can be expressed in a simple l o g i c , the results are either 
true or false, and that the actual "experiments" were capable of 
being done with thought alone. 
In chemistry there was not s u f f i c i e n t 
knowledge to enumerate the basic definitions and 
postulates. 
The 
recent explosion of knowledge i n chemistry has made i t feasible to 
begin the process of axiomatization of chemical theories. 
Geometry i s also special in that most examples we wish to reason 
about 
consist 
of 
a 
few 
objects, 
with 
a 
limited 
number 
of 
relationships. 
Thus i t i s feasible to use a simpler sentential 
calculus 
form 
of 
logic 
which 
cannot 
reason 
with 
variables. 
Sentential calculus can only be used when the t o t a l space of a l l 
statements i s easily numerable, since a l l properties about objects 
and relationships must be stated in separate e x p l i c i t sentences. 
But i n chemistry, where a t y p i c a l molecule w i l l have 20 - 30 
atoms, as many bonds, several rings, stereocenters, hetereoatoms, 
etc., 
a theory expressed i n the sentential calculus would require 
thousands of statements. Thus chemistry had to await development of 
the predicate calculus,(14) to axiomatize the theory. 
F i n a l l y , while geometry was 
axiomatized 
with bimodal 
l o g i c , 
chemistry required creation of a new (within l a s t few decades) branch 
of logic 
r i c h enough in expressive power to manipulate uncertain 
statements without 
over 
or 
understating 
their 
value. 
The 
next 
section introduces these new logics. 
Bimodal Logic 
There i s a principle of logic called the principle of the "Excluded 
Middle", 
dating back to 
Plato. 
The 
principle 
states 
that 
"a 
statement i s either True or False". 
The 
Heisenberg uncertainty 
principle however forces us to recognize uncertainty as a r e a l i t y . 
Logics capable of expressing statements containing uncertainty are 
now available.(^5) 
These new logics can be viewed as extensions of 
bimodal logic. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

196 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
Redefining True, False, and the Value of Connectives, We begin by 
replacing Τ with 1, and F with 0, mapping atomic formula onto the 
range {0,1}. Then the truth value of a formula A i s either 0 or 1 : 
Definition 1: v(A) = 1 "true" 
Definition 2: v(A) = 0 "false" 
For any wff F, there exists a function v(F), which w i l l map F 
onto the range {0, 1}. We determine v(F) by the following technique: 
1. If F i s an atomic formula, P(x1, ... xn), then we can say that 
Ρ maps the tuple (x1, ... xn) onto the range {0, 1}. This 
mapping i s generally done by e x p l i c i t statement, i . e . 
Socrates i s Mortal. 
Mortal(socrates) maps to 1 
v(Mortal(socrates)) = 1 
2. If F i s a composite formula, we define functions which extend 
the values of the terms to the formula. 
Definition 3: 
v(A Λ Β) = min ( v(A), v(B) ) 
Definition 4: 
v(A ν B) = max ( v(A), v(B) ) 
Definition 5: v(A => B) = min ( 1, (1-v(A))+v(B) ) 
Definition 6: 
v(A <-> B) = min ( v(A), v(B) ) 
Definition 7: 
v(~ A) = 1 - v(A) 
We w i l l examine implication (Definition 5) i n d e t a i l because i t 
i s less obvious and quite important to QED. We start by enumerating 
the four possible cases for implication (Table I I ) : 
Table I I . Truth table from Definition 5 for A => B. 
A 
v(A) 
Β 
v(B) 
min (1, (1-v(a))+v(B)) 
True 
1 
True 
1 
1 
easel 
True 
1 
False 
0 
0 
case2 
False 
0 
True 
1 
1 
case3 
False 
0 
False 
0 
1 
case4 
Only case 2 has a zero value for the result of the combination 
formula. 
It i s only when the antecedent A i s true, but the 
conclusion i s false that the rule i s considered to be bad. For 
example, given the rule shown i n equation 10, then only i f the 
molecule i s a protein but i t contains no amide i s the rule shown to 
be faulty. If the molecule i s not a protein, the respective truth or 
f a l s i t y of the assertion that i t contains an amide would not affect 
the truth value of the implication. 
An implication rule sets no 
limitation upon the value of Β i f A i s not true, so case3 and case4 
are v a l i d . 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

17. 
W I P K E A N D DOLATA 
A Predicate Calculus Approach to Synthesis Planning 
197 
IF Is-protein(mol) then 
Contains-amide(mol) 
(9) 
In summary, the value of an implication 
rule i s an inverse 
measure of how 
often the antecedent 
has a higher value than the 
consequent. This i s very important i n multi-valued logics where the 
truth value ranges over many numbers rather than just 0 and 1. The 
more "valuable" the rule, the more often i t implies the correct 
consequence. 
Lukasiewicz-Tarski Multi-Valued Logic 
In chemistry, uncertainty may arise because we are ignorant of some 
of 
the 
underlying 
principles, 
or 
just 
have 
not 
done enough 
experiments yet. The normal two valued logic i s not satisfactory for 
many complex problems, e.g., principles of chemical synthesis. 
The 
solution i s to add additional values to our logic so that we 
can 
represent " I don't know." 
One 
of the more popular multi-valued 
logics (MVL
!s) was created by the Polish logicians, Lukasiewicz and 
Tarski 
(LT) about 50 years ago.(j1j>) 
This l o g i c , called 
LT, i s 
further identified as LT , where η represents the number of discrete 
values that are covered. 
LT 2 i s the same as the bimodal PC. 
Only small changes are necessary to convert our d e f i n i t i o n of 
the bimodal logic into the LT logic. 
For a given atomic formula, 
P(x^, ... 
x n) , we say that Ρ maps the tuple (x^, ... 
χ ) onto a 
range {0, 1? 
n-1}, where η i s the order of the LT. 
Every 
appearance of the number "1" i n our previous definitions (1-7) i s 
replaced by "n-1" where η i s the value of the LT. For example, 
Definition 5 i s changed from min (1, (1-v(A))+v(B)) to min ((n-1), 
((n-1)-v(A)) + v(B)). When n=2, the formula i s the same. 
We 
w i l l 
i l l u s t r a t e how the LT logic works using the simplest 
l o g i c , LT . The range of LT 
i s 0, 1, 2. These numbers can be thought 
of as expressing the English terms False/0, Maybe/1, and True/2. 
The 
rule for e x p l i c i t evaluation would be used to assign values to the 
following examples: 
There i s an atom alpha to atom5. 
v( $Exists χ Alpha(x, atom5) ) = 2 
(10) 
There are no atoms which are alpha to themselves. 
v( .NOT. $Exist χ Alpha(x,x) ) = 2 
(11) 
Having 
assigned values to the atomic formulae, the modified 
formulae of definitions 3 through 7 are used to assign values to 
wffs. 
Atom5 i s on a_ ring 
Atom6 might be on a ring 
v(0n-ring(atom5) ) = 2 
v(0n-ring(atom6) ) = 1 
(12) 
It might be true that both atom5 and atom6 are on a ring. 
v( 0n-ring(atom5) .AND. 0n-ring(atom6) ) = 
min ( v(A) , v(B) ) = min ( 1, 2 ) 
= 1 
(13) 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

198 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
It i s certainly true that at least one of atom5 
or atom6 are on a_ ring. 
v( 0n-ring(atom5) .OR. 0n-ring(atom6)) = 
max ( v(A) f 
v(B) ) = max ( 1, 2 ) 
= 2 
(14) 
The value of the rule " I f atom5 i s on a r i n g t then 
atom6 i s also on a ring" cannot be established from 
the data at hand. 
v( $A11 x $A11 y (If On-ring(x) 
then 
On-ring(y) ) ) = 
max ( n-1 - v(A), v(B) ) = max ( 2-2, 1 ) = 1 (15) 
Lets focus on the implication rule i n equation 15. If the rule 
i s considered to be "good" in LT , i t w i l l have a value of 2. Thus i t 
has to be the case that the second term in the valuation formula 
(Definition 5), (n-1 )-v(A)+v(B) must be greater than or equal to 2. 
Table I I I shows the values of Β allowed for given values of A as a 
function of the "goodness" of the rule. 
If the rule has value 0, 
then any value of Β i s acceptable no matter what the value of A i s . 
Table I I I . 
Allowed values of Β for A => Β in LT 
v(A) 
v(A => B) 
=2 
v(A => B) = 1 
v(A => B) = 0 
2 
2 
1, 2 
0, 1, 2 
1 
1, 2 
0, 1, 2 
0, 1, 2 
0 
0, 1, 2 
0, 1, 2 
0, 1, 2 
In assigning a value to Β from the possible range of values for 
B, we must select the lowest value, since only t h i s value i s 
supported by the implication, the other values are only p o s s i b i l i t i e s 
that 
cannot 
be 
ruled 
out. 
Other 
implications 
may 
infer 
the 
consequent Β with a higher value. 
Cumulative 
Evidence. 
LT does not mirror human 
i n t u i t i o n 
about 
accumulation of evidence. 
Generally i f one 
has more pieces of 
orthogonal evidence which support a deduction, then there i s more 
reason to believe that the deduction i s true. However, t h i s i s not 
the case with LT logic. 
For example, consider the following. 
(A1 => B) v=1 
(impD 
(A2 => B) v=2 
(imp2) 
(A9 => B) v=9 
(imp9) 
Assume that we are using LT 
, and that A1 ... 
A9 a l l are True 
with v=10. 
In this case, Β w i l l be inferred from each of these rules 
with v=1 to v=9 respectively. 
Using an LT combining function for two 
values, v1 and v2, we w i l l choose v(B) as max(v1, v2). Thus, only 1 
piece of evidence (imp9) w i l l actually matter, and A1 through 
A8 
could assume any value from 0 to 10 and not affect the value of B. 
The reader i s recommended to the book by Ackermann(_15_) f°
r 
t n e 
complete expostulation why 
LT logic uses t h i s combining 
function. 
Basically 
LT 
logic 
was 
designed 
to 
avoid some of 
the many 
d i f f i c u l t i e s that arise when applying MVL to mathematical domains. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

17. 
WIPKE A N D DOLATA 
A Predicate Calculus Approach to Synthesis Planning 
199 
Unlike chemistry, mathematics often deals with i n f i n i t e domains, and 
i n f i n i t e axiom sets. 
If we allow the fact that two axioms infer the 
same conclusion to increase the truth value of that conclusion, we 
must choose some increment that r e f l e c t s the importance of each 
individual axiom. 
If there are an i n f i n i t e number of such axioms, 
then each axiom becomes i n f i n i t e s i m a l l y important. 
Thus LT 
logic 
chooses to err on the 
side of conservatism, 
assuring that 
the 
conclusions w i l l be v a l i d , though perhaps less strong than they could 
actually be. 
Obviously we should not allow multiple iterations of the same 
rule to increase the value of the consequent. 
If t h i s were to be 
allowed then one could obtain any f i n a l value by simply re-iterating 
the same rule sufficient times. 
But redundancies i n rules arise i n 
subtle ways, e.g, Β => A and C => A where Β <-> C, i . e , Β i s another 
name for C. 
F i n a l l y , i t can be shown that even i f the chain of 
relation between Β and C contains l o g i c a l connectives other than 
<->, 
then allowing two successive inferences to increase the value of the 
consequence above that inferred by the strongest alone can lead to 
problems. 
In chemistry, where the axioms are generated by formalizing 
f i n i t e human experience, 
i t i s reasonable 
to allow evidence to 
accumulate and we did in QED. 
It i s probable that a l l our axioms 
w i l l not be orthogonal. 
Simple perception concepts are a part of the 
antecedents i n many different rules, hence there i s some commonalty. 
Assuring that our rules are orthogonal i n a l l of the many possible 
combinations i s a d i f f i c u l t task. 
Incremental Multi-Valued Logic (IMVL) 
We u t i l i z e d in QED a type of MVL which i s similar to a very popular 
form of MVL known as Bayesian Logic. There are several unfortunate 
problems with Bayesian l o g i c , including the fact that Russell showed 
that t h i s logic incorporates several fatal paradoxes. 
Fortunately, 
these paradoxes only manifest themselves i n i n f i n i t e systems. There 
are s t i l l problems with f i n i t e systems, such as the a b i l i t y to assign 
unwarranted values to conclusions 
i f the data base i s aapoorly 
constructed. 
But there are significant advantages to this l o g i c . 
Once again the logic maps a set of statements onto a range. 
In 
t h i s case the range w i l l be the rational numbers from -m to +m, where 
-m 
i s equivalent to False, and +m 
i s equivalent to True, with 
complete ignorance at 0. 
However, the value of an atomic formula i s comprised of three 
parts, 
the 
confirmation 
value, 
disconfirmation value, 
and 
the 
combined truth value: 
confirmation value 
CV: 
0 =< 
CV 
=< +m 
disconfirmation value 
DV: 
0 =< 
DV = < +m 
truth value, TV = CV - DV: 
-m =< TV 
=< +m 
An advantage of carrying CV and DV i s that one can 
recognize 
from the magnitude of CV and DV the amount of concurrence or c o n f l i c t 
in support of a given inference. 
For any e x p l i c i t assignment of an atomic formula, only the CV or 
DV i s assigned. 
The TV i s then calculated from that. 
For the value 
of wffs comprised of assigned terms, the following formulas are used: 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

200 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
Definition 8: 
CV ι (Α Λ B) = min ( CV (A), CV (B) ) 
Definition 9: 
DV < (Α Λ B) = max ( DV (A), DV (B) ) 
Definition 10: 
TV (Α Λ B) = : CV (Α Λ Β) - DV (Α Λ Β) 
Definition 11: 
CV (A V B) = : max ( CV (A) f CV(B) ) 
Definition 12: 
DV (Α ν B) = : min ( DV (A), DV(B) ) 
Definition 13: 
TV (Α ν B) = : CV (Α ν B) - DV (Α ν B) 
Definition 14: 
CV ( ~ A) = DV (A) 
Definition 15: 
DV ( ~ A) = CV (A) 
Definition 16: 
TV ( ~ A) = CV ( - A) - DV Γ A) 
Definition 17: 
CV ( A => Β ) = max ( DV (A), CV (B) ) 
Definition 18: 
DV ( A => Β ) = min ( DV (A), CV (B) ) 
Definition 19: 
TV ( A => Β ) = CV ( A => Β ) - DV ( A 
While these formulae are more complex than those of the LT, they 
give the same results as do those of LT logic. 
Two features of the 
IMVL are however quite different from the LT: 1) the rules for 
incrementally acquiring evidence; and 2) the rules for computing the 
value of a consequent of an implication when the antecedent i s not 
f u l l y True. 
Incrementally Acquiring Evidence. Unlike LT l o g i c , the IMVL allows 
successive inferences about a fact to increase the truth value of 
that fact. 
One way of viewing the way that the IMVL deals with 
inferences i s to say that an inference i n support of a 
theorem 
decreases our ignorance about that theorem. 
Thus, when the theorem 
i s f i r s t proposed, the ignorance i s maximal, the values for CV, DV, 
and TV are a l l 0. The amount of ignorance about the CV (or DV) could 
be said to be m. 
The f i r s t inference of a theorem with value ν, (v =< m) , then 
reduces our ignorance by v. 
If the value ν was i n confirmation of 
the theorem, then the values become DV = 0, CV = v, and TV = v. 
We 
have reduced our ignorance about the CV to m-v. 
Further confirmatory 
evidence for the theorem 
i s applied to the remaining measure of 
ignorance. 
The truth value i s calculated from CV and DV as normal. 
The formulae for this are: 
Definition 20: 
CV(A, given A1, A2) = CV(A1) + CV(A2)*[m -
CV(A1)]/m 
Definition 21: 
DV(A, given A1, A2) = DV(A1) + DV(A2)*[m -
DV(A1)]/m 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

17. 
WIPKE A N D DOLATA 
A Predicate Calculus Approach to Synthesis Planning 
201 
Definition 22: 
TV(A, 
given A1, A2) = CV(A, 
given A1f 
A2) 
-
DV(A, given A1 f 
A2) 
It can be shown that CV and DV approach the maximal value m 
asymptotically and that the order of acquiring truth values does not 
matter. 
Implication i n IMVL. The second major difference i s in how the value 
of the consequent of an implication i s calculated. 
The method i s 
multiplicative as compared to the minimum function of LT MVL. 
The 
formulae involved are shown below where TV(A) 
= TV(A) i f f TV(A) > 0; 
otherwise 0. 
Definition 23: 
CV (B, when A => B) = TV (A) * TV(A => 
B)/m 
Definition 24: 
DV (B, when A => B) = unchanged 
Definition 25: 
CV (B f when A => ~ B) = unchanged 
Definition 26: 
DV (B, when A => ~ B) = TV
1(A) * TV(A => 
~B)/m 
With this background on the theoretical representation issues, 
we 
w i l l now 
b r i e f l y describe the QED program that implemented this 
IMVL PC l o g i c . 
The QED Program 
QED was implemented on the SUMEX-AIM DEC 2060 TOPS-20 system. 
The 
source code consists of about 18000 lines for FORTRAN code and 
1500 
lines of macro code. A block diagram of the program modules i s shown 
in 
Figure 
3. QED 
i t s e l f 
contains no 
chemical 
information. 
The 
chemical knowledge i s stored as postulates in a formal 
f i r s t order 
predicate calculus language. 
The grammar for t h i s language i s also 
e x p l i c i t l y described in the BNF notation. 
The PARSER interprets the 
postulates and interaction with the user, both for entering questions 
and also for entering new rules interactively. 
The QED EXEC handles 
opening of 
f i l e s , entry of a molecule, and debugging aides. 
The 
AGENDA EXEC creates, 
p r i o r i t i z e s , selects, performs, and 
deletes 
tasks. 
The 
INFER EXEC selects rules, examines the 
data 
base, 
instantiates predicates and interprets the l o g i c . 
A l l information, 
including postulates, rules, dictionary, instantiations, tasks, etc., 
i s 
stored 
in an 
associative relational 
data 
base. 
The ANSWER 
EXTRACTER and FORMATTER communicates the answer to a question i n a 
form the chemist can understand and that SECS can understand. 
The 
design of the system i s very much l i k e the Japanese 5th 
Generation 
Computer System design which i s also based on l o g i c . 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

202 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
USER 
Token Scanner 
Output Formatter 
PARSER 
TRANSLATOR 
QED 
EXECUTIVE 
AGENDA 
EXECUTIVE 
i ANSWER 
INFER 
I EXTRACTION 
EXECUTIVE 
ASSOCIATIVE DATA BASE MANAGER 
ASSOCIATIVE MEMORY 
ν 
ν 
ν 
ν 
DICTIONARY POSTULATES 
AGENDA ITEMS 
INFERENCES 
Figure 3. Block diagram of the QED system. 
lASCII —> PARSER —> Parse —> SIMPLIFIER 
rule 
I 
tree 
I 
I 
grammar 
-> Simple 
tree 
rule i n 
<— 
OBJECT 
relational form 
SYNTHESIS 
<— 
Proper <— 
SEMANTIC 
tree 
ANALYZER 
dictionary 
Figure 4. Compilation process for rules. 
QED Rule Parsing 
Since 
FORTRAN 
(unlike 
LISP) 
cannot 
easily 
accept 
ASCII 
representations of rules and use them d i r e c t l y , they must be read, 
parsed, analyzed and translated to the form QED can interpret. 
The 
general flow of the compiler i s shown i n Figure 4. As an example, 
l e t s follow the processing of the rule "ALPHA-TO-SC" that defines 
sites where stereochemical induction may occur: 
Rule ALPHA-TO-SC 
$A11 Atom(x) $A11 Atom(y) 
[IF 
Stereocenter(x) .AND. Alpha (x,y) 
THEN Alpha-anisotropic (x)] CF 0.7 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

17. 
W I P K E A N D DOLATA 
A Predicate Calculus Approach to Synthesis Planning 203 
The rule i s parsed i n a top-down fashion(26) using a BNF driven 
parser according to the e x p l i c i t grammar, a portion of which i s shown 
in Figure 5. This i s a f a i r l y simple context free grammar, written i n 
the BNF (Backus Normal Form) style. (J_7) A condensed version of the 
parse tree for the sample rule i s shown in Figure 6. Semantic 
analysis checks f o r : 
- Recursive rules with identical bindings 
- Unbound variables 
- Variables that are improperly scoped 
- 
Predicates 
and 
functions 
having 
the 
incorrect number of 
arguments 
- 
Predicates and functions having improper types of arguments 
- 
Quantifiers incorrectly scoped 
- 
Predicates and functions incorrectly defined 
Once this has been done, the translation to internal form can be 
performed. 
F i n a l l y the rule i s added to the axiom data base. 
<z> ::= <rule> ';' ; 
<rule> ::= <ruleid> <quants> <implication> <certfact> ; 
<ruleid> ::= ( 'Rule' ! 'rule' ! 'RULE' ) <identifier> ; 
<quants> ::= <quanpair> [ <quants> ] ; 
<implication> ::= ' [ ' <antecedent> <impsymbol> <consequent> 
' ] ' ; 
<impsymbol> ::= 
'then' ! 'Then' ! 'THEN' ; 
<antecedent> ::= [ ' I f ! 'IF' ] <formula> ; 
<formula> ::= <and-node> ! <or-node> ! <atomicform> ! 
<quanpair> • [ ' <formula> ' ] • ; 
<and-node> ::= 
( <atomicform> ! '(' <or-node> ' ) ' ) <and-op> 
( <and-node> ! <atomicform> ! 
' ( ' <or-node> ' ) ' 
) ; 
Figure 5. A Portion of the BNF Grammar for QED/s language. 
<rule> 
/ 
/ 
<quants><quants><implicationXCF value> 
$A11 
/ 
Atom χ 
$A11 Atom 
/ 
/ 
/ 
y 
\ 
\ 
\ 
CF 0.7 
\ 
Stereocenter y 
<antecedent> <impsymbol> <consequent> 
/ 
/ 
<conjunction> 
/ 
! 
\ 
/ 
! 
\ 
•AND. 
Alpha 
ι 
! 
THEN 
! 
Alpha-anisotropic χ 
x y 
Figure 6. 
Simplified parse tree of the ALPHA-TO-SC rule. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

204 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
Associative Relational Data Base 
Everything 
in QED i s stored i n " t r i p l e s " 
l i k e 
i n the LEAP 
language.08) Each t r i p l e consists of an index, an attribute, and a 
value. 
QED maintains pointer l i s t s to entries that have the same 
index, attribute, or value so that i t can quickly retrieve relations 
given any combination of I, A, or V. The t r i p l e s are stored i n QED*s 
software implemented v i r t u a l memory that i s mapped to disk. The 
internal form of the ALPHA-TO-SC rule i s shown in Table IV. 
Table IV. The internal form of the ALPHA-TO-SC rule. 
Index 
Attribute 
Value 
1 
isa 
rule 
1 
Rule-id 
"Alpha-to-SC" 
1 
son 
index # 2 
2 
isa 
quant-description 
2 
quantifier 
$A11 
2 
variable 
"X" 
2 
parent 
index # 1 
2 
son 
index # 3 
3 
isa 
quant-description 
3 
quantifier 
$A11 
3 
variable 
"y" 
3 
parent 
index # 2 
3 
son 
index // 4 
4 
isa 
inference 
4 
antecedent-son 
index # 5 
4 
consequent-son 
index # 6 
4 
CF 
value 0.7 
4 
parent 
index # 3 
5 
isa 
conjunction 
5 
formula-son 
index # 7 
5 
formula-son 
index // 8 
5 
parent 
index # 4 
7 
isa 
atomic-formula 
7 
Predicate 
"Stereocenter" 
7 
variable-1 
"x" 
7 
parent 
index // 5 
8 
isa 
atomic-formula 
8 
Predicate 
"Alpha" 
8 
variable-1 
"X" 
8 
variable-2 
Il y II 
8 
parent 
index # 5 
6 
isa 
atomic-formula 
6 
Predicate 
"alpha-anisotropic" 
6 
variable-1 
"X" 
6 
parent 
index # 4 
Agenda L i s t Control 
QED puts problems to be solved on the Agenda L i s t . 
I n i t i a l l y the top 
goal i s the task to find a plan for a molecule. 
V i t a l information 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

17. 
WIPKE A N D DOLATA 
A Predicate Calculus Approach to Synthesis Planning 205 
such as task type, task pointer, parent, p r i o r i t y , clock t i c k , item 
depth, and the current unification set with truth values i s stored as 
part of the task, 
again as associative relations. 
QED uses 
heuristics to p r i o r i t i z e the tasks by examining the number of terms 
in a rule and the types of connectives and quantifiers and estimating 
the amount of work required to complete the task. 
Easy tasks and 
tasks which may f a i l early are chosen f i r s t i n order to truncate 
extensive search. 
We use the agenda l i s t to provide "best 
f i r s t " 
control. 
Example Rules 
Before we can consider an example application of QED, we need to 
present some of the rules we have developed for stereochemical 
control i n chemical 
synthesis and then see how they are used i n 
developing a plan. 
Rule Suggest-control-sc 
$A11 Atom (x) 
[IF Stereocenter (x) THEN Control-sc (x) ] CF 0.8 ; 
Rule Connect-to-control 
$A11 Atom (x) $A11 Atom (y) 
[IF 
Control-sc (x) .and. Anisotropic (y) 
THEN Connect (x,y) ] CF 0.8 ; 
Rule Connect-apps-for-control 
$A11 Atom(z) $A11 Appendage (y) $A11 Ring (r) 
[IF Root-of-appendage (z,y) 
.and. 
Control-sc (z) .and. Atom-of-ring (z,r) 
THEN Reconnect-app (y,r) ] CF 0.8 ; 
Rule Suggest-control-sc 
says simply i f there i s a stereocenter at an 
atom, then i t i s important 
to control stereochemistry 
there. 
Connect-to-control 
t e l l s one way for controlling stereochemistry at a 
center, namely to connect that center to another center that i s 
s t e r i c a l l y differentiated. 
Connect-app-for-control 
states that i f 
the center to be controlled i s on a ring and i s the root of an 
appendage, then i t might be a good idea to reconnect the appendage to 
the 
ring to form a new 
ring. 
Currently, QED has rules for 
reconnection 
of appendages, 
removal 
of 
stereocenters, 
making 
transannular 
bonds, breaking 
appendage bonds, increasing 
s t e r i c 
hindrance, and using functional groups. 
Example of Analysis 
A very simple dialog with QED w i l l be presented for the target 
molecule shown below: 
l r ... 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

206 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
Appendage 1 consists of atoms 1-4, Appendage2 consists of atoms 
9-12, and Appendage3 = atoms 5, 14-16. The molecule i s i n i t i a l l y 
represented as a standard SECS MOLFILE, i . e . , a connection table. In 
the QED dialog on t h i s problem i n Figure 7, the user typing i s shown 
underlined. 
The eolin command reads the connection table 3app.mol 
then 
converts the molecule 
to QED 
l o g i c a l 
predicates, e.g., 
Atom(atom3) TV 100; Atom(atom4) TV 100; Bond(atom3, atom4) TV 100; 
Stereocenter(atom4) TV 100; Root-of-appendage(atom4, appendage1) TV 
100; appendageC appendage 1) TV 100; etc. Thus the molecule i s 
represented as a set of premises within QED which are known to be 
completely true. 
The user then asks QED to infer a plan for a l l 
atoms x. Connecting two atoms Connect(x,y) i s one possible part of a 
plan. 
@QED 
- QED -
For commands type HELP 
QED: molin 3app.mol 
QED: 
infer 3app-example $A11 Atom (x) Plan (x) 
5 User Infer Request 3app-example Plan 
To Be Instantiated by rule "Planl" 
599 Rule " P l a n l " - Plan 
END OF AGENDA LIST 
QED: Lookup Reconnect-app-app 
appendagel, appendage2, 75 
appendage2, appendagel, 75 
QED: Lookup Reconnect-app 
appendagel, atom10, 67 
appendagel, atom5, 56 
QED: Lookup Connect 
atom2, atom11, 60 
atoml, atom5. 50 
QED: What Rule Infers Connect 
Rule "where-to-reconn" 
QED: Show rule where-to-reconn 
(rule i s printed out) 
QED: Lookup Stereo-center 
I don't know the word "Stereo-center" 
Please choose one of the following 
0) None of the following 
1) Stereocenter 
:: 1 
atom9, 100 
atom4, 100 
QED: 
Quit 
Thus i t i s shown. 
Figure 7. 
Sample QED dialog. 
To summarize the example, i n a l l cases, the 
non-stereo 
appendage, appendage3, was not u t i l i z e d for reconnection. The truth 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

17. 
WIPKE A N D DOLATA 
A Predicate Calculus Approach to Synthesis Planning 
207 
values for reconnecting appendagel to appendage2 was 75, and because 
of symmetry of reconnection, appendage2 to appendagel i s also 75. 
Reconnection of the appendage to ring atoms: for connection to 
stereocenter, TV = 72; for connection alpha to stereocenter, TV = 56; 
for connection beta to stereocenter, TV = 50. We w i l l present the 
chemical significance of some QED analyses separately elsewhere. 
Conclusion 
The multi-valued predicate calculus logic as implemented in QED has 
been demonstrated to be suitable for cleanly representing strategic 
axioms of chemical synthesis. QED i s a powerful tool for exploring 
inference i n the planning of synthesis strategies. 
QED helped us 
elucidate key strategic 
concepts and 
their 
interdependence and 
enabled us to create a consistent rule base. The c l a r i t y of the QED 
PC language allows anyone to easily read and understand the strategic 
principles and may encourage further axiomatization work by others. 
Acknowledgment 
This research was supported in part by NIH Grants RR01059 and 
ES02845, with 
computational 
support 
from SUMEX-AIM, NIH 
Grant 
RR-00785 and support from the users of the SECS synthesis program. 
Literature Cited 
1. Wipke, W. T. "Computer-Assisted 
Three-Dimensional 
Synthetic 
Analysis". 
In Computer Representation and Manipulation of 
Chemical Information; Wipke, W. T.; Heller, S. R.; Feldmann, R. 
J.; Hyde, E., Eds.; John Wiley and Sons, Inc.: 1974, pp 147-174. 
2. Wipke, W. T.; Braun, H.; Smith, G.; Choplin, F.; Sieber, W. 
"SECS — 
Simulation and 
Evaluation of Chemical Synthesis: 
Strategy and Planning"; American Chemical Society: Vol. 61, 
1977. 
3. Wipke, W. T.; Ouchi, G. I.; Krishnan, S. "SECS: An Application 
of Artificial Intelligence Techniques". 
Artificial Intelligence 
1978, 9, 173-193. 
4. Corey, E. J.; Wipke, W. T. "Computer-Assisted Design of Complex 
Molecular Syntheses". Science 1969, 166, 178. 
5. Corey, E. J.; Wipke, W. T.; Cramer, R. D.; Howe, W. J. J. Am. 
Chem. Soc. 1972, 94, 421, and adjacent papers 
6. Gelernter, H.; Sridharan, N. S.; Hart, H. J.; Yen, S. C.; 
Fowler, F. W.; Shue, H. J. "The Discovery of Organic Synthetic 
Routes by Computer". Topics Curr. Chem. 1973, 41, 113. 
7. Gelernter, H. L.; Sanders, A. F.; Larsen, D. L.; Agarwal, Κ. K.; 
Bovie, R. H.; Spritzer, G. Α.; Searlemen, J. E. Science 
1977, 
197, 1041. 
8. Wang, T.; Burnstein T.; Ehrlich S.; Evens M.; Gough, Α.; 
Johnson, P. Y. "Using a Theorem Prover in the Design of Organic 
Synthesis". 
In Applications of 
Artificial 
Intelligence in 
Chemistry; Hohne, B.; Pierce, T., 
Eds.; American Chemical 
Society: Washington D. C., 1986. 
9. Wipke, W. T.; Rogers, D. "Artificial Intelligence in Organic 
Synthesis. 
SST: Starting Material Selection Strategies. 
An 
Application of Superstructure Search". J. Chem. Inf. Comput. 
Sci. 1984, 24, 71-81. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

208 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
10. Dolata, D. P. QED: Automated Inference in Planning Organic 
Synthesis, PhD dissertation, University of California, Santa 
Cruz 1984. 
11. Robert R. Stoll "Set Theory and Logic"; Dover Publications: 
1963. 
12. A. Margaris 
"First 
Order 
Mathematical 
Logic"; 
Blaisdell 
Publishing Company: 1967. 
13. Haskell B. Curry "Foundations of Mathematical Logic"; Dover 
Publications: 1977. 
14. Frege, 
G. 
"Die 
Grundlagen 
der 
Arithmatik, 
Eine 
Logischmathematisce Untersuchung uber der Begriff der Zahl"; 
Marcus, Breslau: 1884. 
15. Ackermann, R. "Introduction to Many Valued Logics"; Dover, New 
York: 1967. 
16. Gries, D. "Compiler Construction for Digital Computers"; John 
Wiley and Sons, New York: 1971. 
17. Cleaveland, J. C.; Uzgalis, R. C. "Grammars for Programming 
Languages"; Elsevier North Holland, New York: 1977. 
18. Rovner, P. D.; Feldman, J. A. Massachusetts Institute of 
Technology, Lincoln Laboratory, The LEAP Language and Data 
Structure, 1968. 
RECEIVED December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch017
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

18 
A Self-Organized K n o w l e d g e Base 
for 
R e c a l l , D e s i g n , and Discovery in O r g a n i c C h e m i s t r y 
Craig S. Wilcox
1 and Robert A. Levinson
2,3 
1Department of Chemistry, University of Texas at Austin, Austin, TX 78712 
2 
Department 
of Computer Science, University of Texas at Austin, Austin, TX 78712 
The 
design and operation of a system which forms 
generalizations 
about organic chemical reactions and 
structures and uses these generalizations to organize the 
reactions 
and structures for efficient retrieval and to 
generate 
precursors to a given target molecule 
is 
presented. 
Approaches to computer based classificatory 
concept 
formation and organization are discussed. 
A new 
linear notation for organic reactions is described. 
The 
complex professional tasks accomplished by organic chemists are 
an 
intriguing example of i n t e l l i g e n t human 
a c t i v i t y . 
Organic 
chemists 
organize and r e c a l l a vast amount of information. In 
ascending 
order of complexity, the knowledge created and used by the 
organic 
chemist 
consists of individual 
observations, 
conceptual 
schemes and generalizations which organize this factual knowledge 
base, and, most importantly, procedures which describe how to use 
these 
facts and conceptual schemes to solve a given problem. We are 
interested in the ways i n which information i s organized and used for 
problem solving. 
Our 
objective is to design machines which w i l l encode reactions 
and 
structures, w i l l 
automatically create generalizations based on 
these 
data, 
and w i l l use these generalizations to organize the data 
and to solve the problem of precursor generation. 
Organic chemists 
often use structural features to c l a s s i f y reactions. The capacity to 
conceptualize 
i s an indispensable aspect of intelligence. We wished 
to 
determine whether a computer, given a large number of structures 
or 
reactions and a small set of rules, can create useful 
generalizations. 
In designing such a program, we have faced a number 
of 
interesting 
issues concerning 
conceptualization i n organic 
chemistry. 
Organic 
chemistry i s a unique theater for AI research because 
over the past 150 years 
organic chemists have created a powerful 
graphical knowledge representation scheme. This representation 
3 Current address: Board of Studies in Computer Science, University of California, Santa 
Cruz, CA 95064 
0097-6156/ 86/ 0306-0209S06.25/ 0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

210 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
method 
i s the 
second language of a l l organic chemists and supports 
tasks 
ranging 
from mundane 
r e c a l l 
of 
a 
specific datum to the 
generation 
of highly complex, creative proposals 
for multi-step 
syntheses 
of previously unknown molecules. 
Computer science and 
organic chemistry have been i n comfortable collaboration for the past 
25 years.(1-7) 
A number of important programs have been developed in 
that 
time. 
The DENDRAL project influenced AI 
research 
i n 
far-reaching ways.(8) Organic chemistry i s an enticing arena for AI 
research because to a limited but important extent, in the microworld 
of the organic chemist, the problem of how to represent knowledge has 
been solved. 
The graphical language shared by a l l organic chemists 
for 
over 
a 
century 
i s a remarkably 
sophisticated knowledge 
representation 
scheme which 
i s easily adapted 
to contemporary 
techniques 
i n computer science. The organic chemist does use many 
concepts 
(electronegativity, 
insights 
from quantum theory, 
and 
spatial 
relationships between molecular components) which are absent 
or are i n d i r e c t l y encoded i n his graphical notation. Nevertheless, a 
substantial amount of knowledge at the factual l e v e l , and a useful 
number of higher 
level 
concepts, 
can 
be 
expressed as connected 
graphs. 
Consider 
the 
following 
l i s t : 
functional groups, the 
aldol 
reaction, 
the Paterno-Buchi reaction, carbon-carbon bond formation, 
ene 
reaction, 
esters, alkenes, 
elimination, enamines, Claisen 
rearrangement, 
a l l y l i c alcohols, halogenation. These words describe 
just 
a few general categories used by chemists to c l a s s i f y reactions 
or structures. These categories, some i n use for over 100 years, can 
be 
described 
using organic stuctural formulae and find daily use i n 
c l a s s i f y i n g 
chemical 
facte. 
Computer systems have used such 
generalizations 
(provided by 
chemists) to guide data organization, 
r e c a l l , and planning. 
The benefits of o r i g i n a l machine calculated generalizations w i l l 
be 
realized when capable conceptualizing programs are available. 
I t 
w i l l 
be shown here that, given structures and reactions and a simple 
set 
of instructions, a computer can indeed discover generalizations, 
some of which are 
equal 
to the categorizations used by chemists. 
While 
the 
fact 
that some discoveries are very similar to known 
categories i s interesting, i t i s more important that the computer can 
also discover patterns previously unknown to chemists. 
In 
this 
program the 
generalizations about reactions 
and 
structures which are discovered by the system are used very much as 
man-made generalizations have been used. They organize the data, 
they 
are used during 
the 
r e c a l l 
procedure, and they are used to 
generate 
precursors 
to 
target structures. 
We 
hypothesize that 
because only a 
few 
chemistry 
specific heuristics are used i n the 
generalization 
algorithm, 
this 
system 
w i l l have more creative 
potential 
than 
systems which are more r i g i d l y constructed from many 
special 
rules based on 
detailed 
chemical knowledge. In current 
system the answers provided to the precursor generation problem are 
naive because we have not yet incorporated a heuristic based module 
to 
guide 
precursor 
selection. 
Here, as i n a c h i l d , however, this 
naivety 
i s accompanied by the potential to suggest fresh approaches 
to 
solving a problem. The answers are not directed to conform to a 
concensus view of 
correctness. 
We 
seek a system of answering 
questions, but not a system which provides only expected answers. 
The 
f i r s t 
part of this paper provides an overview of what the 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

18. 
W I L C O X A N D L E V I N S O N 
A Se If-Organized Knowledge Base 
211 
program 
does and how i t works. 
We present an approach to 
representing 
both 
structures and reactions as single connected 
graphs. 
We 
w i l l 
refer to a l l such labelled graphs as structural 
concepts or simply as concepts. 
Structural concepts range from the 
very general (carbon-carbon single bonds, carbon-oxygen double bonds) 
through 
intermediate 
size and generality (the aldol reaction, the 
pyran ring) up to the most complex real-world instances of molecules 
or 
reactions. 
By virtue of the graph representation 
scheme, 
reactions and structures, both real and abstract, may be stored i n a 
single data base. 
This 
system 
d i f f e r s i n several ways from other approaches to 
organic 
chemistry 
data base organization. The data organization of 
this 
system i s based on machine generated structural concepts rather 
than 
pre-determined 
screens. 
The 
rules 
which guide the 
generalization process w i l l be detailed. The data i s h e i r a r c h i c a l l y 
self-organized, i n a p a r t i a l ordering proceeding from the smallest, 
most general structural concepts (primitives) to the largest and most 
specific 
structures or reactions. The generalizations 
that are 
created aid r e t r i e v a l and are used i n precursor 
generation. 
The idea of a heirarchical organization of knowledge has history 
far 
predating computer science.(9) 
( Consider for example the arbor 
porphyriana, 
a "tree of concepts" proposed by Porphyry in the 3rd 
century A.D. ) 
We recognize that the heirachical organization and 
manipulation 
of graphs i s a general approach to knowledge processing 
and should find application outside of organic 
chemistry. 
In the second part of the paper examples of the system i n action 
w i l l be given. We feel that because our system uses clearly defined 
rules for creating generalizations, i t may offer fresh insights and 
solutions 
to 
problems. 
Rules 
for generalization can be 
systematically modified. 
The question of how such modifications 
affect the problem solving capabilities of the system i s unanswered. 
An 
appendix 
i s provided and details the new techniques used i n 
this program. 
An e f f i c i e n t algorithm based on a p a r t i a l ordering 
allows the r e c a l l of subgraphs, supergraphs and close-matches for any 
query graph. 
Some comparisons w i l l be made of this algorithm with 
previously used screen approaches for graph r e t r i e v a l . 
Overview of the System 
Reaction Representation. 
From the outset, this project was shaped by 
the graphical form of t r a d i t i o n a l organic reaction representations: 
Li-0 
^ 
8 
ι 
Ρ 
ο 
y K 
• ^ 
Reactions are invariably written this way, and obviously have a l e f t 
hand 
side and a right hand side. To the beginning organic 
student, 
this 
format naturally suggests a "before and after" or "cause and 
effect" 
perception of reactions. 
" I f the starting material i s 
treated 
i n this way, then the product w i l l result." 
This perception 
has 
influenced the design of some computer programs. Reactions have 
been represented either as two related structures or as one structure 
and a set of changes required to produce the other structure. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

212 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
To simplify comparisons between reactions, we sought to describe 
entire reactions as a single labeled graph. Just as cause and effect 
can be considered either 
as two 
separate events or as a unified 
process, changing with 
time, so a reaction can be perceived as two 
structures, as shown above, 
or as a 
single assembly of nuclei 
connected by bonds which change with time. The aldol-type reaction 
just i l l u s t r a t e d can be rewritten as follows: 
Note that bonds which are invariant with time are represented i n 
the 
usual way. 
The dotted lines represent bonds which change over 
the 
time course of the reaction event. Each changed-bond i s labeled 
to indicate i t s bond order before and after the reaction. Obviously, 
the 
unchanging bonds can 
also be labeled i n an identical fashion. 
(For 
example, 
"1:1" would 
represent an unchanged single bond.) A 
second example of this representation i s i l l u s t r a t e d i n Figure 1. 
These formulae are unorthodox only because they contain unusual 
types of bonds, bonds which change with 
time. I t i s this same 
feature which makes the formulae very useful. The single formulae 
represent entire reactions and can be stored or manipulated using any 
of 
the methods already devised for the storage of static structures. 
We 
have chosen 
to use a bond-centered approach to encoding these 
graphs. The smallest structural unit i s the atom-bond-atom fragment, 
and 
w i l l be referred to as a primitive. Connected networks of these 
atom-bond-atom fragments 
define a molecule or a reaction. These 
networks 
of primitives are node labeled connected graphs and can be 
represented 
as adjacency tables wherein the nodes are labeled with 
numbers corresponding to primitives. 
F i n a l l y , these adjacency tables 
are 
stored 
i n 
f i l e s 
as LISP 
l i s t s and reside i n core as arrays. 
Steps 
followed 
i n thç 
translation of a reaction into a LISP l i s t 
structure are i l l u s t r a t e d i n Figure 1. 
Reaction Generalizations Based on Specific Observations. 
Organic 
chemists have long sought to organize their observations. Reactions 
represented 
as connected graphs can be formed into groups on the 
basis of common substructures (subgraphs) shared by a l l the members 
of 
the group. 
These substructures 
(subgraphs) are 
structural 
concepts which are more general than the specific reactions from 
which they are derived. These structural concepts help to organize 
the large numbers of known reactions. 
Structural 
concepts 
derived 
from examples 
of 
real-world 
reactions may 
have the form of a normal 
reaction but are not 
necessarily good reactions as formulated. For example, most organic 
chemists would 
recognize the 
following as the generic form of the 
Diels-Alder 
reaction but few chemists expect this exact reaction to 
afford a high y i e l d . 
:12 
.Ν 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

W I L C O X A N D L E V I N S O N 
A Self-Organized Knowledge Base 
213 
(c=:-c1-:»c:-c2=:-c3:-),c2-c4-o-c5-c3,c4»o,c5«o,c1-i. 
(b) 
9 
C-C01 
NODE * 
CONCEPT* 
ADJACENCIES 
1 
1KC-F11) 
2.12 
2 
6(C-C12) 
1.3,12 
3 
5<C-C21) 
2.4 
4 
2ÎC-C01) 
5,13 
5 
KC-C11) 
4.6,7.13 
6 
9ÎC-022) 
5,7 
7 
16(C-011) 
5.6.8 
8 
16 
7,9,10 
9 
9 
8.10 
10 
1 
8,9,11.13 
11 
2 
10,12,13 
12 
5 
1.2,11 
13 
S 
4.5.10,11 
Lia Hat structure; 
(13(11 2 12X6 13 12) (524) (25 13)(1 4 6 7 13) (957) 
(16 5 6 8) (16 7 9 10) (9 8 10) (1 8 9 11 13) (2 10 12 13) 
<e) 
(5 12 10(545 10 11)) 
Figure 1. Five representations of the same chemical information. 
The canonical chemical reaction graph (a) can be represented i n 
linear notation (b, see Appendix) or as a bond-centered labeled 
graph (c) by using time-variant bonds. The labeled graph affords 
an adjacency table (d) and a LISP l i s t representation (e). 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

214 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
To imitate this traditional and human process of generalization, 
we 
use 
substructure 
discovery 
to 
create 
general 
concepts which 
organize 
our 
data base. 
This 
mechanical 
generalization occurs 
whenever 
a new 
reaction 
i s entered 
into 
the 
data base and i s 
accomplished i n two 
stages. 
F i r s t , for each new reaction (R) added, two generalizations, one 
very 
general 
and 
one 
very 
specific, 
are 
calculated. 
These 
generalizations 
(subgraphs) of R w i l l be referred to as the minimum 
reaction concept (MXC(R)) and the complete reaction concept (CXC(R)), 
respectively, and are defined as follows: 
MXC(R): A 
graph 
which 
i s 
equal 
to 
the 
smallest 
connected-subgraph of 
reaction R which contains 
a l l the changed bonds in that reaction. 
CXC(R): A graph made by i n i t i a l i z i n g a set C equal to a l l 
bonds 
i n the MXC(R), adding 
to 
C 
a l l bonds 
adjacent 
to 
C, 
and then continuing to add to C 
a l l 
bonds which 
are 
not 
carbon-carbon single 
bonds and 
which are adjacent to C u n t i l this i s 
no longer possible. 
The 
relationship between a reaction and i t s MXC and CXC i s more 
c l e a r l y i l l u s t r a t e d i n Figure 2. 
The MXC i s a very general statement 
about 
a 
specific 
reaction. 
The 
CXC 
i s a very 
specific 
"generalization" 
of 
that reaction. 
The value of the MXC i s that i t 
helps 
to organize 
the 
data base and i t w i l l be used later during 
r e t r i e v a l 
and 
comparisons of 
reactions, 
and 
i t i s used i n the 
precursor 
generation algorithm. 
The MXC 
w i l l not contain everything 
that 
i s necessary for the reaction to proceed. The value of the CXC 
is 
that 
i t w i l l 
very 
l i k e l y 
contain 
everything 
required for a 
successful 
reaction. 
The expected yield of the reaction represented 
by 
the 
CXC 
i s 
l i k e l y 
to approach or even exceed the y i e l d of the 
o r i g i n a l 
reaction. 
Obviously 
the 
CXC contains much more than i s 
necessary 
for 
the reaction. 
An organic chemist, i f asked to define 
what was 
essential to 
the success of the original reaction, would 
probably 
define 
a subgraph larger than the MXC and smaller than the 
CXC. 
The 
f i r s t stage of generalization begins, then, with calculating 
the 
MXC 
and 
CXC 
of a reaction and adding those graphs to the data 
base. 
A very 
simple 
heuristic used here i s that generalizations 
about 
reactions 
w i l l be subgraphs of reactions and w i l l contain a l l 
the 
changed bonds of 
the 
reactions. 
The reaction i t s e l f i s next 
added, and 
during that process previously known reactions which are 
similar to the new reaction are identified. 
The 
second stage 
of 
generalization begins with this l i s t of 
similar 
reactions. 
If a reaction (RR) on this l i s t contains MXC(R), 
(that 
i s , i t has 
the same MXC 
as the o r i g i n a l reaction, R), we 
calculate 
the 
largest common subgraph of R and RR which contains 
MXC(R). This new graph i s a specific plausible generalization formed 
by 
comparing R 
and 
RR. 
This 
process 
results 
i n 
identifying 
interesting 
reaction subgraphs of 
a 
size 
larger than an MXC 
and 
smaller 
than 
a 
CXC. 
An example of the effects of these algorithms 
for creating generalizations i s i l l u s t r a t e d in Figure 
3. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

con. 
osm 
csm 
con, 
CC21 
ccir 
•C022 
kccii 
tCC11 
(C011 
ccâTccoTccîï ccrfl 
csm 
csm 
ocm, 
ο
 
CM3? 
con 
con 
£011 
r 
SilCH,l3 
(R) 
Figure 2 . MXC(R) and CXC(R) are general statements about the 
reaction R and are readily derived by graph manipulations of the 
system graph representation. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
ID 
121 
131 
14) 
151 
Figure 3. When a reaction (1) i s added to the data base i t s MXC 
(2) and CXC (3) are also added. The reaction i s then compared 
with other reactions (4) and a maximum common subgraph (5) i s 
added. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

18. 
W I L C O X A N D LEVINSON 
A Se If-Organized Knowledge Base 
217 
Calculating Generalization V a l i d i t i e s . 
The knowledge base consists 
of a large number of structures and reactions from the real world and 
an 
even 
larger number of 
structures 
or 
transforms which 
are 
calculated based on these original data. 
These calculated graphs are 
generalizations based on the known reactions. 
If 
these 
generalizations 
are 
to be used for problem solving, 
then 
their v a l i d i t y is an important issue. 
By v a l i d i t y we mean the 
probability that the exact reaction represented by the generalization 
would work. If the generalization was considered as a reaction, what 
would be the yield of that reaction? 
Measuring 
the 
v a l i d i t y 
of 
these generalizations i s important 
because they 
are machine generated. 
In systems which use human 
generalizations 
about reactions 
to generate precursors estimated 
yields 
or 
r e l i a b i l i t y factors are provided for each generalization. 
Our 
system seeks 
to automate this approach to machine intelligence 
and a calculational approach to the r e l i a b i l i t y of generalizations i s 
required. 
The 
estimation 
of 
one 
type 
of 
v a l i d i t y 
i s a task faced by 
organic 
chemists every 
day. 
In the process of reviewing 
research 
grants, 
experts must predict whether proposed reactions, hitherto 
unknown, w i l l succeed. To make this judgement, the expert r e l i e s i n 
part 
on 
precedent. 
Previously 
observed reactions similar to the 
proposed 
reaction 
lend credence to the proposal. 
If many reactions 
(very 
similar to be proposed reaction) are known to proceed i n high 
y i e l d , 
the v a l i d i t y or l i k e l y yield of the new reaction i s high. 
If 
similar 
reactions 
are known to give low yields, then the proposed 
transform is of low v a l i d i t y . 
Before precedent 
can be used to estimate v a l i d i t y , the meaning 
of 
" s i m i l a r " (as i t is applied to reactions) must be defined. 
I t i s 
not 
surprising that problems of 
conceptualization and s i m i l a r i t y 
arise 
i n the same project. 
Philosophers have long recognized 
the 
complexity 
and 
interdependence of comparison and concept formation. 
What makes one 
reaction 
a 
better 
precedent than another? 
Can 
s i m i l a r i t y 
be 
quantified and i f so can the s i m i l a r i t y of a reaction 
and 
a proposed transform be quantified? 
The ways i n which reactions 
are 
similar or 
dissimilar and 
the 
prediction of yields based on 
precedent are important questions which deserve further study. 
At present, we calculate transform v a l i d i t i e s (estimated yields) 
for a generalization or an unknown reaction as follows. 
Let TV(i) = transform v a l i d i t y of i . 
Let 
A(i) = chemical r e a c t i v i t y of i . 
Currently 
chemical 
r e a c t i v i t y 
i s equal to the number of bonds 
which 
are 
not carbon-carbon single bonds. This i s a crude approach 
to 
estimating 
the 
potential r e a c t i v i t y of i . We wish to calculate 
TV(r) 
for 
a newly discovered 
transform 
r based on reactions of 
precedent. 
Let 
IS(r) = the set of known transforms upon which the 
v a l i d i t y of r i s to be based, then: 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

218 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
i ? i S ( r ) 
C
W
(
1
)
2 
TV(r) = 
(2) 
i Î s ( r )
 
C W ( i > 
CW(i) 
i s the closeness 
( s i m i l a r i t y ) weighted 
v a l i d i t y of 
transform i with respect to the new transform r. I f the denominator 
i n Equation 2 i s 0, TV(r) i s 0. The constant a determines the 
magnitude of the effect of closeness 
A(r)/A(i) on the calculated 
transform v a l i d i t y . 
Equations 
1 and 2 were intended to produce the following 
results. 
I f there are a large number of reactive bonds i n the 
precedent 
not i n the proposed 
transform, the closeness weighted 
v a l i d i t y of the precedent i s small. I f there be the same number of 
reactive bonds i n both reactions, the closeness weighted v a l i d i t y of 
the 
precedent 
i s equal to i t s yield or known v a l i d i t y . 
This i s an 
attempt 
to encompass the idea that i f the precedent has r e a c t i v i t y 
similar to the proposed transform, the proposed transform i s l i k e l y 
to work as well as the precedent. 
I f the precedent and the proposed 
transform are very 
different, the precedent 
i s not helpful. A 
weighted 
average of the closeness weighted 
v a l i d i t i e s of the 
precedents 
provides the estimated yield for the new transform. The 
weighting 
procedure 
favors close precedents 
of high y i e l d . 
This 
follows 
from the chemist's 
usual optimism: 
i f there are several 
equivalent good precedents, some of high yield and some of low y i e l d , 
the proposed transform i s judged to have a good chance. 
The 
comparison of "numbers of reactive bonds" crudely measures 
s i m i l a r i t y . 
A more appropriate but complex approach would evaluate 
s i m i l a r i t y i n terms of known functional groups or discovered reactive 
substructures 
shared or not shared by two reactions. Both these 
approaches to v a l i d i t y 
estimation are limited because they are 
entirely based on structure. 
The expert w i l l use other factors, 
including theoretical considerations, to refine v a l i d i t y . 
V a l i d i t y 
aids the precursor 
generation task i n a unique way. 
V a l i d i t y can be used to identify situations i n which a particular 
reaction i s not applicable. (Most structures have v a l i d i t y =* 100, 
but some, l i k e Bredt's rule v i o l a t o r s , would have a lower v a l i d i t y . ) 
Reactions of very low (predicted or known) y i e l d or impractical 
structures are called "negative instances". Mitchell uses negative 
instances i n the learning process to rule out otherwise plausible 
generalizations.(12) 
We use v a l i d i t y to define a continuum from the 
most 
positive to the most negative instances. The mechanism for 
precursor generation then automatically uses these negative instances 
(structures or reactions of low v a l i d i t y ) to block the use of good 
generalizations i n specific invalidating situations.(13) 
A l l the generalizations calculated from a set of known reactions 
are 
assigned a v a l i d i t y ( r e l i a b i l i t y factor) based on ( i ) how much 
these 
subgraphs deviate from the known reactions from which they are 
derived and ( i i ) the known yields of these known reactions. This 
primitive method of predicting yields based on precedent serves to 
i l l u s t r a t e 
challenges to be met i f machines are to acquire r e l i a b l e 
chemical 
judgement independent of, but consistent with, an expert's 
evaluations. 
The v a l i d i t i e s calculated here are used to guide the 
precursor 
generation task and provide a means of evaluating proposed 
precursors. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

18. 
W I L C O X A N D L E V I N S O N 
A Self-Organized Knowledge Base 
219 
The System in Action 
Interactive Sessions. 
The system has been implemented i n LISP (Franz 
Lisp) 
and 
Is 
running 
on 
a 
D i g i t a l Corporation VAX 11/780 at the 
University 
of Texas. 
Interactive sessions 
with 
the system are 
i l l u s t r a t e d 
i n Figures 4-7. 
(During the development stages of this 
project 
a linear notation was created for reaction input and output. 
A brief description of this notation i s provided i n the Appendix.) 
The 
figures 
are 
annotated 
and 
l i t t l e 
additional comment i s 
required. 
Figure 
4 
i l l u s t r a t e s 
r e t r i e v a l of a structure and i t s 
supergraphs and subgraphs. Figure 5 i l l u s t r a t e s reaction r e t r i e v a l . 
The 
system 
i s able to use i t s knowledge to generate precursors 
to 
a target molecule. Two examples are shown (Figures 6 and 7). 
At 
present, 
the program compares known reactions and generalizations 
based on known reactions to the target and chooses to apply reactions 
which have the most reactive bonds i n common with the target. 
The 
result 
is that precursors are suggested with l i t t l e sophistication. 
In fairness, i t should be emphasized that the data base was generated 
from only about 230 
reactions, 
and no generalizing concepts were 
provided 
by 
the 
operators. 
We look forward to testing the system 
when i t has acquired more knowledge. 
Conclusions 
The system described i n this paper stores and retrieves reactions and 
structures, 
creates 
generalizations which 
further organize 
the 
knowledge base, estimates the v a l i d i t y of these generalizations, and 
uses both 
specific reactions and machine derived generalizations to 
generate 
precursors. 
We 
have shown that 
the representation of 
reactions as single labeled graphs i s possible based on the idea of a 
bond which changes during a reaction and this graph representation 
simplifies 
the machine driven 
act 
of 
induction. 
Concepts are 
generated 
automatically 
and 
these concepts organize the data base, 
aid 
i n 
the 
r e t r i e v a l , 
and 
support 
the 
precursor-generation 
capabilities 
of the system. A method for calculating the v a l i d i t i e s 
of 
a 
given 
generalization has been devised and methods of refining 
these calculations have been i d e n t i f i e d . 
This study examined some unexplored aspects of conceptualization 
in 
organic chemistry. 
How are c l a s s i f i c a t o r y concepts created? 
Can 
the 
value 
of 
a generalization be quantified? Although here these 
questions are presented i n relation to organic chemistry, they are i n 
fact 
basic 
questions 
of 
epistemology 
and 
go beyond 
organic 
chemistry.(9) 
This 
program makes generalizations about real-world reactions 
and 
uses these 
generalizations to generate precursors. 
Mitchell's 
approach 
to 
conceptualization 
requires 
an 
"instance language" to 
represent 
observations, 
a 
"generalization language" to 
create 
concepts, and 
a "matching predicate" to associate observations with 
generalizations.(12,23) 
Our 
approach to generalization i n organic 
chemistry 
r e l i e s on a bond-centered labeled graph representations of 
reactions 
and 
structures 
(observations). 
In 
this 
language 
"more-general-than" 
i s defined 
as equivalent to "subgraph-of". 
We 
take advantage of 
the 
fact that i n organic chemistry the instance 
language 
and the generalization language are i d e n t i c a l , and matching 
predicates are based on graph comparisons. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
The system is now ready to process your requests. 
There are 1230 concepts. 
What would you like to do? 
1 - Change the database. 
2 = Ask a question. 
3 = Go to lisp level input. 
4 » Save changes. 
5- Quit 
2 
wttich of the following do you need help with? 
1 « Structure or reaction retrieval. 
2 » Finding a precursor. 
3 = Finding a postcursor. 
4 « A multistep synthesis. 
5 » Return to previous menu. 
/ 
Initiating a query... 
Please enter the list of classes: 
(s) 
Please enter the legal substitutions: 
nil 
Type in the structure please: 
(c I -c -c -c -c -c -), cl*o. 
Searching data-base of graphs... 
Exact matches: (282) 
( comments] 
Iteveral options axe m l table. 
I the user if interested in asking 
la question about the database. 
(structure retrieval or reaction 
[retrieval are possible. 
I the ays test asks for a list of 
(data types which will restrict 
Ithe search. We choose to 
(search only structures. 
I no substitutions are allowed 
I The user enters the following 
Structure using a mnemonic system: 
(graphic input is not yet available. 
Ithe query structure is known. 
ο 
Ô 
Subgraphs: (4 7 16 49 63 69 86 88 102 137 282 306 539) 
Supergraphs: (196 282 296 432 436 484 509 510 515 526 668 669 670 677 678 682 683 684 766 
815 816 817 819 828 829 830 831 987 989 991 1164 1183 1192 1193 1194 1225 1226 1227) 
Close matches: nil 
Number of concepts searched: 16 
Number of complete node-by-node searches required: 15 
(by convention, since supergraphs were 
I found, close matches are not sought. 
116 concepts were examined to 
jfind the 51 sutches shown above. 
|a complete subgraph isomorphism 
(test was required on 13 concepts. 
Going to lisp level input. 
To return to this menu type XhiT 
-> (show 539) 
C1-C2-C3.. 
-> (show 306) 
C1-C2-<:3-C4-C5-C6.C3=07.. 
-> (show 484) 
|a super graph is viewed. 
(C1 -C2-C3-C4-C5-C6-),C7-C3-C2-C 1 -012.C8-C2-C9-C 10-C 11.. 
|The user asks to view two sub-
(graphs. Eventually, graphical output 
Iwill be possible. 
Figure 4. 
S t r u c t u r a l r e t r i e v a l . 
Responses provided by the user 
are i n i t a l i c s . 
Annotations are inserted on the r i g h t . 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

WILCOX AND LEVINSON 
A Se If-Organized Knowledge Base 
What would you like to do? 
1 • Change the database. 
2 * Ask a question. 
3 = Go to lisp level input. 
A = Save changes 
5 = Quit 
2 
Initiating a query... 
Please enter the list of classes. 
libit time we are interested in 
(r) 
(only reactions. 
Please enter the legal substitutions: 
nil 
I no substitutions are allowed 
Type in the structure please: 
(the user wants to see reactions 
(which form c-c bonds at the alpha 
(c I -c2-c-c-c-c-),c1-o,c2:-c. 
Icarbon in cyclohexanone: 
Searching data-base of graphs... 
Exact matches: nil 
Ithe exact reaction is not in the data 
(bue. 
Subgraphs: nil 
|no known subgraphs. 
Supergraphs: (667 681 826 1224) 
If our known reactions are supergraphs 
Ιοί the query. 
Close matches: ((508 7) (814 7) (676 7) (136 4) (1063 3) (105 3) (1057 2) (359 2)) 
{concept 50S. for example, has a 7 bond 
Number of concepts searched: 21 
Isubgraph in common with the query. 
Number of complete node-by-node searches required: 19 
Would you like to add the structure as a new concept? (y-yes) 
no 
(this is one way in which the system 
(can learn new concepts 
J 
Going to lisp level input. 
To return to this menu type (hi Τ 
-> (show 826) 
Ithe user now examinee some 
laupergrapha of the query. 
(C1-C2-C3-C4-C5-C6-).(C12+C13+C14+C15+C16+C17* ),07-C 1 -C6-C8.C6 :-C9= :-C 10-C11 -C12.C 1 
1=018.. 
U 
Η 
Ο 
Ο 
-> (com 826)(Ύ 
( Q j l l 
[ T j
S
>
S [ Ô ] lc«w»em« include bibliographie 
^ 
^ 
^ 
^ 
(information. Yields are stored 
(House, H. 0. "Modem Synthetic Methods", pp 595-6 
Un a separate file. 
-> (show 1224) 
(C 1 -C2-C3-C4-C5-C6-),(C2-C3-C 10-C 11-N12-C13 :-).07=C 1-C2 :-C 13 :-N 12-C15.C 1 -C6-C8.C6-C9 
,C13=:014,. 
o 
0 
•> (com ,224) 
(Corey . E J.. étal J. Amer.Chem.Soc. 1974. 96.6516) 
Figure 5. Reaction r e t r i e v a l . 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

222 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
What is the target molecule? 
Type in the structure please: 
Ithe target: 
^ 
(c 1 -c2-c3-c-c-c-c7-c-), c 1*o, c2-c-c-c, c3-c7. 
CO-
Adding concept... 
Searching data-base of graphs... 
The concept is 1231. 
The following precursors are suggested: 
• reaction 
validity 
size 
1 
1216 
83 
13 
2 
11 
61 
13 
3 
236 
56 
14 
4 
193 
56 
13 
5 
27 
A} 
13 
Ithe system temporarily adds the target 
(to the data base. In this way known 
(subgraphs of the target are found together 
Iwith the reactions that will produce theei. 
I these reactions are then used to generate 
(precursors. 
Ithe table gives five precursors, the 
(concept used to generate the precurter is 
jehewn with the transform validity of this 
(application (see text), the last column 
(gives the number of bonds in a precursor. 
The precursors are on list pre'. 
Ithe veer new views the first three 
-> (view pro 1) 
(C1<2-C3-C7-œ-)XC3<4<5-C6-C7-),C3-C2-012-C11-C1CX9.. 
=rv 
a y 
-> (view pre 2) 
(C1 ^2-<^7<cVWC3^4-C5-C6-C7-).C3-C2-C\< 12.C2-C9-C 1(K 11 
-> (view pr$ 3) 
(C1^^3^7<8-).(C3<4<5^6^7-)/3^ 
-> (show 1216) 
(this is thee 
(C 1-M3-:-C3:-C6-:-C5MM-:).C5-O7. 
(to suggest the first precursor: 
-> (up 12f6) 
(1219) 
-> (up 1219) 
(1210) 
-> (com 1210) 
(Dsot)enW6J Org Chem 1972 37 1212) 
(the reference and a reaction from which 
-> (show 1210) 
(thai 
-
c 
<C1-<2<3-:<4^<W1<HXC5<6<7-Ce>^ 
5-C16.. 
lean easily be found. 
^OCM3 
^ •
 
M 0 C H3 
Figure 6. Precursor generation. Note that overall transforms 
may be encoded and applied without restrictions as to the actual 
mechanism. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

W I L C O X A N D L E V I N S O N 
A Self-Organized Knowledge Base 
What is the target molecule? 
Type in the structure please: 
(c 1 -c2-c3-c-c-c-). cï»o, c3~o, c2-c-c-c *n. 
Adding concept... 
Searching data-base of graphs... 
The new concept is added: 1232 
The following precursors are suggested: 
• 
reaction 
validity 
size 
1 
441 
77 
14 
2 
11 
76 
11 
3 
425 
36 
13 
4 
300 
20 
13 
The precursors are on list 'pre'. 
(as in Figure 7. the target is first added 
(to the data base, subgraphs ef the target 
(are identified and reactions known te 
Igenerate such subgraphs are applied in a 
Iretresynthetic sense to the target. 
Ithe user now views three of the 
6olng to lisp level input. 
-> (vf§w pr$ 1) 
07<3-C4-CT-C6-C2<1-<»-C9-C10»N11.C2-N13-<:i2.C3-ai5>l13-C14.. 
la very 
-> (view pro 2) 
(C1-C2-C3-).(C1-C2-C3-C4-C5-C6-).C2-C7-C8-C9*N10.. 
-> (view pre 3) 
(C1-C2^3-MC1^^3-C4-(^6-^ 
Figure 7. 
The capacity to generalize from s p e c i f i c facts i s 
revealed by the systems a b i l i t y to provide these 
precursors. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

224 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Following 
the 
seminal work of Corey and Wipke, elegant and 
powerful 
programs have been developed to aid the synthetic organic 
chemist. 
These programs use man-made generalizations and special 
heuristics to guide the computer to the solution of complex problems. 
This 
project complements these 
e a r l i e r 
and ongoing efforts. 
The 
l i m i t s 
and 
u t i l i t y 
of machine-made generalizations are our central 
interest. 
Acknowledgments 
Enlightening 
conversations 
with Dr. 
Elaine Rich (Department 
of 
Computer Science, 
University of Texas) are gratefully acknowledged. 
Mr. 
James Wells wrote 
the 
Pascal programs which allow input and 
output 
v i a mnemonic 
strings 
of 
characters. 
This 
research was 
sponsored 
in part by 
the Robert A. Welch Foundation, Research 
Corporation, 
and NSF (MCS-8122039). Additional support was provided 
by a National Science Foundation Graduate Fellowship to RAL. 
APPENDIX 
Data Organization and Retrieval 
A new 
data base organization for storing and retrieving organic 
structures was 
created 
for 
this project. Although this r e t r i e v a l 
system i s applied here 
to chemistry, 
i t is written i n a general 
manner 
and 
is applicable to other graph-based domains. 
The 
organization is based on a p a r t i a l ordering of graphs by the ordering 
relation
 
f ,subgraph-of
M. 
A simple yet powerful r e t r i e v a l algorithm 
has 
been developed to accompany the p a r t i a l ordering. These methods 
offer 
an 
alternative to the scheme used by most r e t r i e v a l systems -
the screen approach. 
The P a r t i a l Ordering. 
Labeled graphs stored in this data base w i l l 
be referred to as concepts because they represent structural features 
that 
are 
useful to consider when reasoning 
about molecules and 
reactions. 
Both molecules and reactions are represented as labeled 
graphs. 
Those graphs that represent known molecules and reactions 
s i t 
near 
the 
top 
of the p a r t i a l ordering. Primitives (the single 
node graphs 
that represent bonds) form the 
lowest level of the 
p a r t i a l 
ordering. 
As the system evolves, intermediate concepts are 
created. 
These concepts usually represent p a r t i a l structures (such 
as 
functional groups) or reaction generalizations. 
The intermediate 
concepts 
are 
discovered 
(constructed) by 
the system to improve 
r e t r i e v a l 
efficiency 
and 
precursor 
generation. 
Figure 8 shows a 
simple 
p a r t i a l 
ordering. 
Notice that the concepts i n the p a r t i a l 
ordering 
can 
be viewed as forming a continuum from general concepts 
to more specific concepts. 
The Retrieval Algorithm. 
The r e t r i e v a l algorithm e f f i c i e n t l y 
t e l l s 
the 
system user 
how 
a new 
concept 
relates 
to a l l other known 
concepts. 
The algorithm solves the following basic problem: 
Given 
an element G and a p a r t i a l ordering return the following four sets: 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

18. 
WILCOX AND LEVINSON 
A Self-Organized Knowledge Base 
225 
Figure 8. 
A s i m p l i f i e d view of the p a r t i a l ordering. 
A t y p i c a l 
upward chain i s 
shown. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

226 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
1. The 
set 
of elements that are the same as G. 
(exact 
matches) 
2. The 
set 
of elements 
that 
are 
predecessors of G. 
(subgraphs) 
3. The 
set 
of elements 
that 
are 
successors 
of 
G. 
(supergraphs) 
4. The 
set 
of elements that have predecessors i n common 
with G. 
(close matches) 
The 
algorithm does something more powerful: 
It finds the immediate 
predecessors 
to 
G (the 
largest known subgraphs of 
G), and the 
immediate 
successors 
to 
G (the 
smallest known supergraphs of 
G). 
This 
i s the 
key 
to the algorithm. 
By finding where G f i t s i n the 
p a r t i a l 
ordering 
we find the four desired sets. The algorithm must 
minimize 
the number of comparison operations required to find the 
four 
desired 
sets. 
This minimization of comparison operations i s 
very 
important 
i n a system 
that uses complex objects l i k e graphs 
since 
the 
complexity of these comparisons varies exponentially with 
size.(14) The algorithm i s easy to implement and searches nodes i n a 
l o g i c a l bottom-up order. 
This may be useful i n domains where, for 
example, one 
may 
wish 
to 
apply 
general 
concepts or rules to a 
situation before more specific ones are found to be applicable. 
Details of the Algorithm. 
The algorithm has two phases. In Phase 1 
the immediate predecessors (largest known subgraphs) are found and i n 
Phase 2 
the 
immediate successors (smallest known supergraphs) are 
found. 
These two phases are enough to answer a l l four parts of the 
query. 
To 
understand 
the 
algorithm, 
note that transitive edges 
between concepts in the p a r t i a l ordering are not stored: i f a 5 b 
(a 
is 
a subgraph of 
b) and b < c, an edge from a to c i s not stored. 
IP(y) 
i s the set of immediate predecessors of the data element y and 
IS(y) 
i s the set of i t s immediate successors. 
These sets are stored 
in 
f i l e s 
as LISP 
l i s t s , one line per concept. Phase 1 determines 
IP(G) where G i s the query object. 
S : - U 
-While 
there 
i s an unmarked element 
y i n the 
database such that each member of IP(y) i s marked 
Τ and y has fewer nodes than G: 
I f y < G (graph comparison needed) 
Then mark y as Τ 
{ β } : - 
{S - IP(y)} U 
{y} 
Else mark y as F. 
It can be shown that when this process terminates 
S • IP(G), the 
set 
of 
largest known subgraphs of the query graph. When Phase 1 
begins, 
a l l objects 
at 
the bottom of 
the p a r t i a l ordering (the 
primitives) 
are 
compared 
to 
G since 
they have no 
immediate 
predecessors. 
This process i s fast because the bottom of the p a r t i a l 
ordering 
contains 
single node graphs 
for which 
the 
comparison 
operation i s t r i v i a l . 
Phase 2 may 
be 
informally described as follows: The goal of 
Phase 2 
i s to calculate IS(G) - the immediate successors (smallest 
known supergraphs) of G: 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

18. 
WILCOX AND LEVINSON 
A Self-Organized Knowledge Base 
227 
-Sequence through the elements of IP(G) i n any 
order, 
chaining up the p a r t i a l ordering for each 
element. 
Beginning with 
the 
last element of 
IP(G) a breadth-first search i s required and i f 
an unmarked element y i s encountered which has 
been reached from 
a l l other elements of IP(G), 
execute : 
If G < y (comparison needed) 
Thenjs}:={s|u{y} 
-(mark a i l concepts chaining up from y as 
successors without further comparison) 
Else continue breadth-first search from y. 
When Phase 
2 terminates S
 β IS(G). A l l supergraphs of G have 
been 
identified 
by 
chaining up from each element of IS(G) as these 
are found. 
Phase 1 and Phase 2 answer parts 1-4 of the query as follows: 
1. Exact match: 
I f G already exists i n the database, 
then IP(G)
 s IS(G). G i s the single element contained 
i n these sets. 
2. Subgraphs: 
The 
subgraphs are simply a l l nodes that 
were marked Τ i n Phase 1. 
3. Supergraphs: 
The supergraphs are marked i n Phase 2. 
They are the union of the upward chains from each 
member i s IS(G). 
4. Close matches: 
The close matches are the union of the 
upward chains from each member of IP(G) (not including 
supergraphs). 
In the most obvious implementation of 
Phase 
2, a hash table i s used to manage the breadth 
f i r s t 
search. I t contains 
information about which 
nodes have been v i s i t e d and which upward chains they 
are 
on. 
The 
desired union can be found simply by 
collecting elements of the hash table. 
Other Chemical Structure Search Systems. Many e f f i c i e n t systems have 
been designed to 
identify 
graphs 
i n a f i l e that contain a given 
substructure. 
One 
system i s the Cambridge Crystallographic Data 
Base.(15) In the Cambridge system the query structure i s compared to 
every molecule of the database. This means that r e t r i e v a l time for a 
query goes up l i n e a r l y with the size of the database. Other search 
systems 
alleviate 
this 
problem. 
These systems use a screen 
approach.(16-22) 
The 
screen aproach i s an indexing scheme that 
includes, 
associated with each 
smaller concept of the database, a 
l i s t of data items that contain the smaller concept (a l i s t of upward 
pointers). 
Comparisons with the Screen Approach. 
The algorithm used by screen 
systems 
i s a 
special case of our algorithm, the difference between 
the 
screen approach and 
this 
approach i s i n the number of levels 
allowed 
i n the database 
organization and not i n the r e t r i e v a l 
algorithm. 
Which organization supports more e f f i c i e n t r e t r i e v a l i n terms of 
number of concept comparisons? 
No 
absolute conclusion can be 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

228 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
reached, but there are reasons to believe 
that 
i n general a 
multilevel 
aproach may be cheaper overall.(13) 
F i r s t , our approach 
tends to search smaller concepts than does the screen system. 
The 
cost of these searches w i l l be much cheaper. Second, i n Phase 2 of 
our system we ar^ able to infer that some graphs are supergraphs of 
the query without daing further searching. Finding a l l subgraphs and 
a l l 
supergraphs 
of 
a query, with 
precision, 
i s beyond 
the 
capabilities 
of most screen systems. 
F i n a l l y , experimental evidence 
supports our system. 
To compare the performance 
of the multilevel 
organization 
against a two-leveled one we ran our r e t r i e v a l algorithm on two data 
bases. The f i r s t contained molecular structures, discovered molecule 
concepts, and 
primitives, and had 
630 
concepts altogether. 
The 
second was 
a version of the f i r s t i n which a l l intermediate levels 
between primitives 
and 
top-level 
structures have been removed, 
leaving just two levels. This database had 521 concepts i n a l l . 
The 
algorithm ran more than twice as fast on the multi-leveled database, 
even 
though the two-level database contained fewer concepts. The 
algorithm produced 33% more answers (subgraphs and supergraphs) when 
running on database 1 than on database 2. 
Linear Notation for Reactions and Structures. 
To 
assist 
i n the 
development 
of 
this program 
a new linear grammar was developed to 
describe 
reactions and structures (Figure 1). A program written by 
Mr. James Wells at the University of Texas accepts alphanumeric 
strings 
created by the chemist. From these strings which represent 
structures or reactions the Pascal program generates a connectivity 
table of the 
sort used i n the Cambridge Crystallographic database. 
The connectivity f i l e s are transferred to the main LISP program which 
creates the LISP structure l i s t s shown i n Figure 1. 
The grammar for reactions and structures i s easily mastered by 
the organic chemist. The following symbols are used: 
- ; single bond 
= ; double bond 
* ; t r i p l e bond 
+ ; delocalized double bond 
Other 
than these symbols, the chemist needs to remember only two 
rules: 
( i ) rings are encoded i n parentheses wherein the last atom i s 
followed by a bond which connects i t to the f i r s t atom i n the 
parenthetical 
expression, and ( i i ) atoms at branching points must be 
numbered. 
Linear or 
c y c l i c 
strings are separated by commas. 
Hydrogens are 
ordinarily 
ignored. Thus cyclopentane i s encoded as 
(c-c-c-c-c-) and 
sec-butanol as c-cl-c-c,cl-o. A menu i s available 
which 
contains commonly used 
structures which can be used i n an 
abbreviated form to define molecules. The t-butyldimethylsilyl ether 
derived from n-propanol can be represented as *tbs*-o-c-c-c. Further 
examples of representations based on this system are shown i n Figures 
4-7. 
The 
chemist can encode a structure i n many ways and, provided 
the 
representation follows the above rules, each alphanumeric string 
w i l l 
generate 
a 
proper 
connectivity 
f i l e . 
For 
example, 
l f(c-c-c-cl-c-c-c-c2-) ,cl-c2" or
 11 (cl-c2-c-c-c-) ,cl-c-c-c-c2
l f are both 
proper 
representations of 3.3.0-bicyclooctane. IUPAC numbering can 
be followed or the numbering can be arbitrary. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

18. 
WILCOX AND LEVINSON 
A Self-Organized Knowledge Base 
229 
Reaction 
graphs 
are encoded i n the same way as s t a t i c 
structures. 
Bonds which change 
during the reaction are coded as 
"x:y" where χ i s the bond type before the reaction and y i s the bond 
type 
after the reaction. Thus "c-c=:-c" represents the reduction of 
propene 
to propane 
and
 11 (c-o:-cl-c-c-) , c l - : i " 
represents the 
formation 
of 
tetrahydrofuran 
and an 
iodine 
atom 
from 
4-iodobutan-l-ol. 
A second program accomplishes the reverse process and w i l l 
generate from a connectivity f i l e an alphanumeric representation of 
molecules or reactions based on this 
linear notation. While we 
recognize the need for a graphical interface for the main AI program 
we are enthusiastic about the efficiency of this linear grammar. 
This 
linear 
notation 
should be adaptable to use i n any application 
dealing with connected graphs. 
Literature Cited 
1. Lederberg, J.; Sutherland, G. L.; Buchanan, B. G.; Feigenbaum, 
Ε. Α.; Robertson, Α. V.; Duffield, A. M.; Djerassi, C. J. Amer. 
Chem. Soc. 1969, 91, 2973. 
2. Corey, E. J.; Wipke, W. T. Science 1969, 166, 178. 
3. Brandt, J.; Friedrich, J.; Gasteiger, J.; Jochum, C.; Schubert, 
W.; Ugi, I. In "Computer Assisted Organic Synthesis"; Wipke, W. 
T.; Howe, W. J., Eds.; ACS Symposium Series No. 61, American 
Chemical Society: Washington, D.C., 1977; pp. 33-59. 
4. Wipke, W. T.; Braun, H.; Smith, G.; Choplin, F.; Sieber, W. In 
"Computer Assisted Organic Synthesis"; Wipke, W. T.; Howe, W. 
J., Eds.; ACS Symposium Series No. 61, American Chemical 
Society: Washington, D.C., 1977; pp. 97-125. 
5. Hendrickson, J. B. J. Amer. Chem. Soc. 1971, 6844-6862. 
6. "Computer Assisted Organic Synthesis"; Wipke, W. T.; Howe, W. 
J., Eds.; ACS Symposium Series No. 61, American Chemical 
Society: Washington, D.C., 1977. 
7. Wipke, W. T.; Rogers, D. J. Chem. Info. Comp. Sci. 1984, 24, 
71-80. 
8. Lindsay, R. K.; Buchanan, B. G.; Feigenbaum, Ε. Α.; Lederberg, 
J. 
"Applications 
of 
Artificial 
Intelligence for Organic 
Chemistry"; McGraw-Hill: New York, 1980. 
9. Reidl, R. In "Biology of Knowledge"; John Wiley and Sons: New 
York, 1984. 
10. "Computer 
Representation 
and Manipulation 
of Chemical 
Information"; Wipke, W. T., Ed.; John Wiley and Sons: New York, 
1974. 
11. Michalski, R. S.; Stepp, R. E. "Learning from Observation: 
Conceptual Clustering" In "Machine Learning: An Artificial 
Intelligence Approach"; Michalski, R. S.; Carbonell, J. G.; 
Mitchell, Τ. Μ., Eds.; Tioga Press, 1983. 
12. Mitchell, T. M.; Utgoff, P. E.; Banerji, R. "Learning by 
Experimentation: 
Acquiring 
and 
Refining 
problem Solving 
Heuristics" In "Machine Learning: An Artificial Intelligence 
Approach"; Michalski, R. S.; Carbonell, J. G.; Mitchell, Τ. Μ., 
Eds.; Tioga Press, 1983. 
13. Levinson, R. A. Ph.D. Thesis, University of Texas at Austin, 
Austin, 1985. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

230 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
14. Tarjan, R. E. In "Algorithms for Chemical Computations"; 
Christoffersen, 
R. E., Ed.; American Chemical Society: 
Washington, D.C., 1977; pp. 1-20. 
15. Allen, F. H.; Bellard, S.; Brice, M. D.; Cartwright, Β. Α.; 
Doubleday, 
Α.; Higgs, H.; Hummelink, T.; Kennard, O.; 
Motherwell, W. D. S.; Rodgers, J. R.; Watson, D. G. Appl. Cryst. 
1979, 35, 2331-2339. 
16. Adamson, G. W.; Cowell, J.; Lynch, M. F.; McLure, H. W.; Town, 
W. G.; Yapp, M. A. J. Chem. Doc. 1973, 13, 153-157. 
17. Bawden, D. J. Chem. Inf. Comp. Sci. 1983, 23, 14-22. 
18. Dittmar, P. G.; Farmer, Ν. Α.; Fisanick, W.; Haines, R. C.; 
Mockus, J. ibid. 1983, 23, 93-102. 
19. Feldman, A.; Hodes, L. ibid. 1975, 15, 147-151. 
20. Fugmann, R.; Kusemann, G.; Winter, J. H. Info. Process. Mgmt. 
1979, 15, 303-323. 
21. O'Korn, L. J. In "Algorithms for Chemical Computations"; 
Christoffersen, 
R. E., Ed.; American Chemical Society: 
Washington, D.C., 1977; pp. 122-148. 
22. Willett, P. J. Chem. Inf. Comp. Sci. 1980, 20, 93-96. 
23. Mitchell, T. M. Artificial Intelligence 1982, 18, 203-226. 
RECEIVED December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch018
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

19 
E x p e r t - S y s t e m R u l e s for 
Diels-Alder 
Reactions 
C. Warren Moseley, William D. LaRoe, and Charles T. Hemphill 
Texas Instruments Inc., Dallas, TX 75265 
Expert systems of today are powerful when used in the proper domains. 
Unfortunately, the most difficult part of applying these systems is the struc-
turing of knowledge into rule format. This paper describes methods devel-
oped which allow the capture of Diels-Alder reaction knowledge into simple 
and elegant expert system rule format. Essential components of the system 
include: a grammar for matching the input molecular structure expressed 
in Wiswesser Line Notation (WLN), the unification of many reactions into a 
single generalized mechanism using synthon template patterns, use of WLN 
rules to produce valid synthons, and use of frontier molecular orbital theory 
(FMO) to verify the disconnection. This system is implemented in Prolog, 
whose natural backtracking and generation capabilities easily express and 
produce the many structural combinations possible. 
There have been attempts to apply formal methods to the representation of organic 
compounds [l],[2], some attempts to apply artificial intelligence to organic synthesis 
[3],[4], and numerous attempts to apply the use of molecular orbital calculations to 
the verification of the validity of compounds in the synthesis route. This effort was a 
moderate attempt to examine the representation issues involved in writing production 
rules for Diels-Alder disconnections. 
The disconnection approach [5] is adopted in this work because it is amenable 
to backward chaining systems. The starting point is the target compound, which is, in 
this case, a Diels-Alder product. The target compound is broken or disconnected into 
two distinct parts called synthons. The synthons are the ideal representations of the 
actual reactants used to produce the target compound. Synthons embody the physical 
properties of the actual compounds they represent. 
As an initial implementation approach, rules could consist of specific targets and a 
list of their synthons. No one uses this method because the naive approach of expressing 
every possible chemical disconnection is impracticable: the number of rules involved to 
express even trivial synthetic routes grows exponentially. Any expert system solution to 
0097-6156/ 86/0306-0231 $06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch019
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

232 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
the synthesis problem must attack two fundamental problems: the variety of functional 
groups which may participate in a given reaction and the symmetry involved between 
function groups in a reactant (intra-synthon and inter-synthon functional group interac-
tion, respectively). The thrust of this research has been to capture the reaction routes 
for a chemical disconnection in a clear, symbolic notation which accommodates quali-
tative reasoning with functional groups and which comprehends the symmetry of this 
problem. 
Ideally, an implementation language would support symbolic and linguistic ap-
proaches to representation and manipulation, a qualitative approach to verification, and 
a deductive approach to disconnection. Prolog [6] is a symbolic language which directly 
supports backward chaining deduction. Viewed as a declarative language it naturally 
supports elegant grammar formalisms and its procedural aspects support qualitative 
reasoning. For these reasons, Prolog was chosen as the implementation language for 
this project. 
In summary, the following research goals are addressed in this effort: 
1. A linguistic approach to the representation of chemical information. 
2. Use of molecular orbital theory to qualitatively validate derived synthons. 
3. Unification of synthetic disconnections into a general form. 
4. Use of symbolic structure rearrangement in WLN. 
2 
Grammar Rules for Structure Recognition 
The Definite Clause Grammar (DCG) formalism [7] is utilized throughout this project. 
Grammar rules are used in the expert system rules to recognize the general class of 
the parent molecule in the disconnection (e.g., cyclohexene). The class determines the 
patterns used to construct the resultant synthons (discussed in Section 4). 
2.1 
Background for W L N and D C G 
Many researchers have recognized the importance of having an unambiguous grammar 
for chemical notation, but they have mainly applied WLN [8] to on-line compound 
search [9] and structural summary (identification of common structural features) [10]. 
Johns and Clare point out that it is a linguistic rather than merely a symbolic notation. 
This means that the symbols are represented and manipulated in well defined structures. 
This section relies on the unambiguousness of WLN to recognize parent molecules while 
Section 5 relies on the WLN rules to actually manipulate symbol structures. 
The DCG formalism is based on first order predicate logic and provides a clear 
and powerful method for describing languages. The formalism generalizes the Context 
Free Grammar (CFG) formalism and DCG grammars may be efficiently executed. DCG 
is most often implemented through a translation process from the DCG notation to a 
top-down, left-to-right, backtracking Prolog program. This program becomes a parser 
for the language specified by the DCG. 
The required amount of work at each step in a backtracking parser is exponential 
in the number of constituents already found, just for recognition. This occurs because 
intermediate effort, which could become useful later, is not saved. Of course, classes of 
grammars exist for which this behavior does not occur. Most programming language 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch019
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

19. 
M O S E L E Y ET A L . 
Expert-System Rules for Diels-Alder Reactions 
233 
grammars are carefully written to avoid exponential behavior. However, parsing algo­
rithms exist (e.g., the active chart parser [11]) where the worst case parsing time is 
0(n
3) for any CFG grammar and 0(n
2) when the grammar is unambiguous (n is the 
sentence length). Nevertheless, Prolog provides an adequate DCG grammar parsing 
mechanism for the purposes of this work. 
2.2 
G r a m m a r for Diels-Alder Reactions 
This section examines grammars used to recognize parent molecules (carbocyclic rings 
for example). 
The following regular expression [12] recognizes cyclohexene: 
L6UTJ [ΑσΑ] [ΒσΒ] \Coc} {ΌσΌ} [ΕσΕ] [FaF] 
where if r is any regular expression, [r] is an abbreviation for (e + r) (in other words, 
r is optional), e is a regular expression that denotes the empty set and 
is the 
union operator for the languages represented by the regular expression arguments. The 
symbol V represents an arbitrary substituent, with the subscripts indicating to which 
ring locant the substituent belongs. 
Using DCG, the more general class of carbocyclic rings can be recognized. The 
grammar rule 
carbocyclic(Substituents, Number) —•
 a L " , number(Number),
 ttU",
 ttT",
 ttJ", 
substituents(Substituents, Number). 
achieves the desired result. Within this rule the logical variables are denoted by a 
leading capital letter. This declaratively states that carbocyclic rewrites into the letter 
ttL", followed by a number (which in turn is recognized by DCG grammar rules), followed 
by the letters "UTJ", followed by the substituents. The substituents rule recognizes 
the Substituents at each ring locant and uses the instantiated value for Number to 
verify that the ring locant values are within the proper range. Subsequent steps in the 
disconnection process utilize the variables mentioned in the head of the rule. 
Finally, using the grammar rule described above (and related rules not presented), 
the goal 
carbocyclic(S, N, "L6UTJ A l BNW F3", []) 
rewrites the string "L6UTJ A l BNW F3" into the empty set [] (meaning that the entire 
string is recognized) and produces the result 
S = [[A,1],[B,N,W],[F,3]],N = 6. 
S is a list of ring locants and the corresponding substituents used in subsequent discon­
nection stages. Ν represents the number of ring locants. 
2.3 
Application to Other Reactions 
The general grammars and the mixture of declarative and procedural Prolog code allows 
easy grammar rule writing for other reactions. As an additional example, consider 
heterocyclic rings. The grammar rule 
heterocyclic(Substituents, Number, Heteroatom) —• "T", number(Number), 
heteroatom(Heteroatom),
 ttJ", substituents(Substituents, Number), 
recognizes this class of molecules. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch019
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

234 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
The following grammar rule recognizes the heteroatom: 
heteroatom(Heteroatom) — • [Heteroatom], {member(Heteroatom, "NOS")}. 
Curly braces allow direct inclusion of Prolog terms within DCG grammars (the terms are 
not translated). In this case, the member predicate tests the value of the Heteroatom 
variable for membership in a list of heteroatoms. 
3 The Reaction Check 
This system covers concerted reactions of the π electron systems on tworeactants to form 
new σ bonds yielding carbocyclic rings with a single unsaturation. If the reaction follows 
the rule of maximum orbital overlap, then it is a suprafacial, suprafacial process and is 
termed a [,-4, + r29] reaction. By the Woodward-Hoffmann rules this is a symmetry-
allowed thermal reaction [13]. 
The theoretical underpinnings used in this program are derived from those used 
by Jorgensen et. al. in the CAMEO system [14], [15] with the exception that our system 
works backwards, going from a product to either the reactants which form it, or issuing 
a statement informing the user that a disconnection is not possible. 
3.1 
Basic Frontier Molecular Orbital Theory 
It is known from molecular orbital theory that molecules possess sets of individual 
molecular orbitals (as long as the molecules are sufficiently far apart from each other). 
These are the basic unperturbed molecular orbitals used in the evaluation of the reaction. 
As the molecules move more closely together, their orbitals begin to overlap. This 
interaction between the orbitals on the different molecules results in the mixing of the 
orbitals on each molecule [13]. 
According to frontier molecular orbital theory, the strongest interactions are be­
tween those orbitals that have coefficients with similar magnitudes relative to the unper­
turbed molecules, i.e. the interaction is between the small coefficient on the dienophile 
and the small coefficient on the diene [16], [17]. 
If both of the molecular orbitals involved in the bonding are filled, the resulting 
orbital is not significantly reduced in energy [18]. The greatest reduction in energy 
arises in the interaction between a filled molecular orbital and an empty one. Since 
the interaction is strongest between the orbitals of like energy, the ideal combination 
of orbitals is between the highest occupied molecular orbital (HOMO) on one molecule 
and the lowest unoccupied molecular orbital (LUMO). 
Although Diels-Alder reactions can occur in the unsubstituted case, the reaction 
is most successful when the diene and the dienophile contain substituents which exert 
a favorable electronic influence [19]. In the normal electron demand case, the most 
favorable interactions are between dienes with electron-donating groups and dienophiles 
with electron-withdrawing groups. Cases have been reported in which inverse electron 
demand occurs and the electronic nature of the diene and dienophile are reversed [20], 
[21], [22]. This case of inverse electron demand is accounted for in the system. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch019
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

19. 
MOSELEY ET AL. 
Expert-System Rules for Diels-Alder Reactions 
235 
3.2 
Structural Constraints on Reactants 
It became necessary early on in the project to develop a method for quickly checking the 
reactants for structural features which would make them unsuitable for the Diels-Alder 
reaction. The constraints are integrated into the notation package, since they are most 
easily recognized in terms of the notation patterns resulting from the disconnection. The 
synthons produced by a Diels-Alder disconnection are checked for proper configuration. 
All synthons are checked before the FMO algorithm begins, resulting in the failure of 
program execution and the return of a "no" to indicate no reaction. This assures that 
synthons produced by the rules are actually reactive. 
The following structural features of diene-synthons are considered unreactive in 
+ T2e] cycloadditions: 
1. Any diene-synthon unable to have an s-cts conformation. 
2. Diene-synthons in which an exocyclic double bond is conjugated to a double bond 
in the ring (e.g., a double bonded substituent on the diene). 
3. Diene-synthons in large (greater than 7-membered) rings. 
4. Acyclic compounds that have bulky substituents at the central positions on the 
diene-synthon. The substituents at these positions are relatively close to each 
other, and bulk leads to steric hindrance. 
5. Substitution at both terminal diene-synthon positions is allowed only if the sub­
stituent is a primary atom or a triply bonded functional group (such as a cyano 
group). 
All double bonds are perceived as possible dienophile synthons by the notation 
package. The screening involves only the elimination of all double bonds in aromatic 
compounds (WLN symbol
 
ttR"). 
3.3 
Basic H O M O - L U M O Calculations 
From work performed in 1983 by Burnier and Jorgensen [15], the following ab initio 
calculations for the HOMO and LUMO energies of the synthons were developed. The 
function n(x, parent) returns the number of atoms of type χ in the parent. This 
function is abbreviated below as simply n(x) where the parent is understood. The 
symbols UU, Ο, N, S represent triple bonds, oxygen, nitrogen, and sulfer, respectively. 
The subscripts 'c' and 't' denote central and terminal locations respectively in the 
parent for the elements which they modify. For brevity, the terms diene-synthon and 
dienophile-synthon will be replaced with diene and dienophile respectively. 
For Dienes: 
£ H O M O = -2n(0) - n(UU) - 0.2n(Nc) - 0.5n(St) - n(Sc) - 9.0 
(1) 
# L U M O = -n(O) - 0.5n(N) - 2n(St) + 1.5n(Sc) + 0.6 
(2) 
For Dienophiles: 
£ H O M O = -n(UU) - 4n(0) - 2n(N) - n(S) - 10.5 
(3) 
£ L U M O = n(UU) - n(O) - 0.5n(N) - 4n(S) + 1.8 
(4) 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch019
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

236 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
In the carbocyclic ring case, the HOMO-LUMO values default to the constants at 
the end of the equations. The formulas above are used to compute the orbital energies 
(both HOMO and LUMO) of the unsubstituted parent compounds. In the case of 
substituted compounds, additional formulas account for the electronic effects of the 
substituents. 
The explanation of the regiospecificity of Diels-Alder reactions requires knowledge 
of the effect of substituents on the coefficients of the HOMO and LUMO orbitals. In 
the case of normal electron demand, the important orbitals are the HOMO on the 
diene and the LUMO on the dienophile. It has been shown that the reaction occurs 
in a way which bonds together the terminal atoms with the coefficients of greatest 
magnitude and those with the coefficients of smaller magnitude [18]. The additions 
are almost exclusively cis and with only a few exceptions, the relative configurations of 
substituents in the components is kept in the products [19]. 
It is known that the effects of substituent groups on a diene or dienophile vary 
between different types of parents [23]. A function, τ(Υ), has been determined for several 
functional groups, with Y corresponding to their electron donating or withdrawing 
capability such that a reasonable estimate of the HOMO energy could be obtained by 
use of the equation [15]: 
This equation yields a value for the substituted molecule where η(Ρ) is the sensi­
tivity of the parent P. Some initial values, called r values, which describe the electronic 
effects of functional groups have been found and developed by Jorgensen et. al. Hydro­
gen was assigned a τ of 0.0 eV so that electron withdrawing substituents have negative 
τ values and electron donating groups have positive τ values. The values for τ were 
chosen so that a 0.5 eV change in the substituent gives a change of 10 in the τ value. 
This algorithm, when combined with the notation rules, yields useful results for many 
functional groups and gives reasonable estimates of the values for those not known. The 
factor 7(P) for an ethylene analog is given by: 
For any given diene the value for 7(P) can be adequately represented by the value 
0.03 eV. This provides the proper value for correction in the calculation due to the 
sensitivity of the parent compound towards different types of functionality. 
3.4 
Determination of Substituent Effects 
To determine substituent effects, substituent groups are built from primary recognized 
atoms and functional groups. A functional group is scanned one Wiswesser symbol 
at a time. A Wiswesser symbol can represent either an individual atom (e.g.,
 
a G " 
for chlorine) or a functional group (e.g.,
 
aZ" for the amino group). This allows us to 
adapt the "layer" method of Jorgensen to the scanning of the functional groups on 
the rings. These groups are provided as Prolog sublists as outlined in the previous 
section. Once the comparison between the functional group elements and the known 
values are compared, τ is calculated by the following method. The formula for the 
numeric calculation is: 
£ H O M O = l(P) 
+ T(Y) + 
EHOMO(P) 
(5) 
7(P) = O.Oln(UU) + 0.06n(O) + 0.03n(N) + 0.03n(S) + 0.05 
(6) 
+ 2 w / ( l + NFG) 
(?) 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch019
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

19. 
MOSELEY ET AL. 
Expert-System Rules for Diels-Alder Reactions 
237 
Table 1. Example τ Table Entries 
name 
WLN 
τ 
tau_entry (p-methoxyaryl, 
tau_entry(trimethylamino, 
tau_entry(aryl, 
tau_entry('methyl sulfate', 
tau _entry (amino, 
tau jent ry (olefinic, 
tau_entry (sulfate, 
"R", 
asr, 
"Z", 
"1U2", 
USH", 
"R DOl", 
"Ν1&Γ, 
51). 
44). 
42). 
38). 
36). 
36). 
32). 
The legend for this equation is: 
• Tmax - the largest calculated reference value of τ in either the positive or negative 
direction. 
• 
Tsum - the sum of the remaining r values in the functional group. 
• NFG - the number of functional groups attached to the parent system. 
The above is based on the calculation of a collective τ for the whole molecule. This 
value changes the HOMO of either the diene or dienophile, as is necessary. This equation 
is accurate to about 0.5 eV on either side of the "known" values [15]. The value of rtotai 
is inserted into the HOMO-LUMO calculation as the parameter τ(Υ). Note that in its 
pure form, this equation only yields values for the HOMO orbitals. Corrections are used 
for the calculation of the LUMO values. Table 1 contains examples of the Wiswesser 
Line Notation and the raw r values used in the computation of orbital energies. 
3.5 
Determination of Permutated L U M O Coefficients 
The following rules were used for the determination of the LUMO orbital coefficients 
from the values determined for the HOMO coefficients [15]. 
1. An electron donating functional group raises the energy of the HOMO orbital of 
a system about twice as much as it raises the LUMO. 
2. In contrast, an electron withdrawing functional group lowers the HOMO energy 
about one third as much as it lowers the LUMO. 
3. Groups which add conjugation such as olefinic, acetylenic and aromatic groups 
lower the LUMO orbital energy one third to one half as much as the HOMO 
The same equations are used to determine both the HOMO and LUMO values. 
This is consistent with the fact that the HOMO and LUMO orbitals are calculated from 
the same parent system, and that the difference between the orbital energies can be 
adequately covered by the two parameters 7(P) which represents the sensitivity of the 
parent to substitution and τ(Υ) which represents the electronic effect exerted by the 
functional group acting as a substituent. 
energy. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch019
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

238 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
To implement the rules mentioned above, only the r(Y) values for the functional 
groups are changed. Thus, the r(Y ) values for the calculation of the LUMO orbitals on 
both the diene and dienophile are changed following these rules: 
1. Positive τ values except those for conjugated hydrocarbons are divided by a factor 
of 2. 
2. Negative τ values are multiplied by 3. 
3. r values for conjugated hydrocarbons are divided by a factor of 3 and their signs 
are reversed. 
This method covers many combinations of functional groups that influence the 
orbital energies. A feature of this method is that it uses the same functional group 
r values as in the HOMO energy calculation. The algorithm described above is used 
for the calculation of both the HOMO and LUMO atomic coefficients. The r values of 
the substituents are permutated to give the proper values for the LUMO orbitals. The 
following steps are required: 
1. r values on terminal positions are taken from the list previously described. 
2. Resultant τ values on the central diene positions are divided by a factor of two 
to accommodate the fact that the orbital coefficients at these positions are very 
small. 
3.6 
Algorithm for Regiochemical Selection 
Any functional group attached to a terminal carbon on either a diene or dienophile 
increases the magnitude of the coefficient on the opposite terminal. Any functional 
group attached to a central position on the diene (there is no analogous case for the 
dienophile) increases the magnitude of the coefficient on the terminal farthest from the 
substituted position. For cyclohexene, the central locants are the A and Β positions 
on the Diels-Alder adduct. Thus, if a functional group is on position A the magnitude 
of the coefficient at terminal C increases. One of the remarkable aspects of the Diels-
Alder reaction is the specificity of the bonding between the carbon atoms [13]. The 
orientation of the addition can be accurately predicted by an extended form of the 
frontier molecular orbital theory as developed by Fukui and Fujimoto et. al. [16]. For 
dienes the coefficients are determined as follows: if the sum of the absolute values of 
r on positions F and Β is greater than the sum of τ on positions A and C, then the 
coefficient on position C has the greater magnitude, otherwise the coefficient of position 
F has the greater magnitude. On dienophiles, if the sum of the absolute values of τ is 
greater on position D than on position £ , then £ has the greater magnitude. 
4 Reaction Unification Using a General Form 
This section examines the notion of a general form for representing the possible synthons 
in a reaction. Derivation of this form is illustrated and examples of the general form 
are presented. Symmetry and the encoding of optional notation is discussed and some 
examples of the naive approach are presented. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch019
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

19. 
MOSELEY ET AL. 
Expert-System Rules for Diels-Alder Reactions 
239 
Table 2. The Naive Approach 
Parent 
Synthons 
discon(
tfL6UTJ Al Β Γ , 
discon(
aL6UTJ D1Q", 
discon(
ttL6UTJ Al Bl DOVI", 
discon(
aL6UTJ Al Bl Dl E N W , 
["lUYl&Yl&Ul", "lUl"]). 
[
t tlU2Ur,
 
aQ2Ul
w]). 
[«IUYI&YI&UI", "îvoiur]). 
["lUYlfcYlfcUl", "WN1U2"]). 
4.1 
Motivation: the Naive Approach 
In the naive approach, disconnections are simply listed as facts with the molecule to 
disconnect as the first argument and a list of the synthons as the second. Table 2 
contains some examples. This approach suffers in many ways; primarily, the number 
of rules would become unmanageable (quite huge even for cyclohexene), slowing the 
inferencing speed of the expert system. 
A sample inference mechanism using these facts (given the natural backward chain-
ing of Prolog) might be 
disconnect(Parent, Given.Synthons) :-
discon(Parent, Synthons), 
disconnect(Synthons, Given.Synthons). 
disconnect(Parent, [Parent]) 
: -
given(Parent). 
disconnect [First I Rest] . [First.Disc|Rest J)isc] ) :-
disconnect(First, FirstJ)isc), 
disconnect(Rest, Rest.Disc), 
disconnect ([] , []). 
This procedure recursively disconnects synthons until the final synthons for the orig-
inal parent are all available (or given) compounds. Upon successful completion, the 
variable Given-Synthons contains a tree (in list notation) which denotes the synthon 
combination order to reproduce the parent compound. 
4.2 
Derivation of the General Form 
Consider the domain of a six-membered ring with single unsaturation. Table 3 expresses 
the synthetic route with one substituent. Again, the symbol V represents an arbitrary 
substituent. Square brackets surrounding a set of symbols indicates optionality of those 
symbols (as in regular expression notation). For example, the string 
may reduce 
to the string V or
 ασ&* depending on whether the substituent represented by σ ends 
in a terminal symbol or not (following the rules of WLN). 
Symmetry in the patterns, however, hides many details in the diene and dienophile 
patterns. Table 4, with combinations of symmetric substituents, reveals more of the 
details. The order of the symmetric substituents may be chosen arbitrarily. Alphabetical 
ordering was chosen here for consistency. 
Finally, for a full cyclohexene molecule, the patterns become 
<rclUY<rA[&]Y<rB[&]Ul*F + 
σΒΐνΐσΕ 
(8) 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch019
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

240 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Table 3. Patterns for a Six-Membered Ring with One Substituent 
Substituent Position 
Diene 
Dienophile 
A or Β 
C or F 
D or Ε 
lUY<r[fc]Ul 
<rlU2Ul 
1U2U1 
1U1 
1U1 
σΐϋΐ 
Table 4: Patterns for a Six-Membered Ring with Two Substituents 
Substituent Position 
Diene 
Dienophile 
A and Β 
C and F 
D and Ε 
ΐυΥσ Λ[&]Υ<τ Β[&]υΐ 
<r clU2Ul* F 
1U2U1 
1U1 
1U1 
σρΐυΐσΕ 
It should be clear that this notation applies to many different classes of reactions. 
Use and manipulation of this general form will be discussed in the next section. The 
following discussion outlines its use in expert system rules. 
4.3 
Use of the Mechanism in Rule Formation 
Given the general form, it is possible to capture many disconnections of a given class 
with a single rule. The following example illustrates the approach advocated in this 
paper for cyclohexene. 
discon(WLN, [Diene, Dienophile]) :-
carbocyclic(Substituents, 6, WLN, []), 
collect.substs(Substituents, "CÀBF", Dn.substs) , 
collect.substs(Substituents, " D E " , Dl.substs), 
fmo(Dn.substs, Dl.substs). 
make_synthon(Dn_substs,
 
H*1UY**Y*«J1*
W. Diene), 
make_synthon(Dl_substs,
 
M*1U1*", Dienophile). 
This rule declaratively states that the compound represented by W L N disconnects to 
the Diene and Dienophile pair if the W L N matches the carbocyclic grammar rule 
with 6 substituents, the collected substituents for the Diene and Dienophile pass the 
fmo test, and the respective constituents may be successfully incorporated into the 
general form for the cyclohexene Diene and Dienophile. 
The goal make _synthon instantiates the general form and rewrites the instan-
tiated general form into a pseudo-WLN form. The pseudo-WLN form has adjacent 
number values combined and redundant ampersands eliminated, but the branch or-
dering does not necessarily follow all the WLN rules. The 
symbol in the second 
argument represents a general substituent, 'σ', where the subscript is determined by 
the order mentioned in the collect_substs predicate [e.g., "CABF" and "DE"). 
The following grammar rewrites the instantiated general form to the pseudo-WLN 
notation. The unit symbol '[]' in the following grammar represents the NIL symbol (or 
empty symbol) and arises when a substituent is not present in a particular position. This 
grammar captures the following conditions: the '[]' symbol next to a number disappears, 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch019
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

19. 
MOSELEY ET AL. 
Expert-System Rules for Diels-Aider Reactions 
241 
adjacent numbers are summed (for a longer carbon chain), a three way branch reduces 
to a carbon when one of the branches is empty, optional ampersands are eliminated, and 
required ampersands are retained. The rules must be applied to the string repeatedly 
until no changes to the string occur. 
N[] 
— 
N. 
[]N 
— 
N. 
<TN 
— • {number(<r), N N is σ + Ν}, NN. 
Νσ 
—-> {number(a), NN is Ν 
NN. 
NiN 2 
— {NN is Ni+ N2}, NN. 
Y[]& 
— 1. 
Υσ& 
—• {not(number(a)), endsJn_terminal(a)}, Υσ. 
Y<7& 
— • {not (number (σ)), not(endsJn_terminal(<r))}, Yak,. 
For example, performing these transformations with an empty cyclohexene (σΑ = 
[] ... up = []) yields the diene
 K1U2U1" and the dienophile " Ι ϋ Γ . Once the synthons 
are in pseudo-WLN form, they are rearranged to conform to the standard WLN form 
(described in Section 5). 
4.4 
Application to Other Reactions 
General forms are easily developed for other reactions. The machinery introduced in 
this section can then be utilized to write disconnection rules for other reactions. For 
example, consider the Diels-Alder adduct bicyclo[2.2.1]hept-2-ene. Using the regular 
expression notation described previously, the line notation for these types of compounds 
can be represented as 
L55 CU ATJ [ΑσΑ] [ΒσΒ] [Cac] [ΌσΒ] [ΕσΕ] [FaF] [GaG} [-A&(F+G)] [-B&(F+G)] 
The information following the hyphens describes the orientation of the substituents at 
locants where stereoisomerism can occur. F and G are the locants where the stereo­
chemistry may occur. 
This compound can be disconnected into a cyclopentadiene synthon and a dieno­
phile synthon similar to the the one previously described. The general form for the 
disconnection is then given in the notation by 
L5 AHJ ΑσΑ ΒσΒ Cac ΌσΌ ΕσΕ + aFl\JlaG 
(9) 
Additional pseudo-WLN rewrite rules would eliminate ring locant symbols which are 
followed by an empty substituent. 
5 Notation Rearrangement 
The previous section illustrated the formation of diene and dienophiles and noted that 
the intermediate notation did not necessarily obey the WLN rules. This section de­
scribes the transformation from pseudo-WLN form to legal WLN notation. 
A predicate called wln_order occurs within the make_synthon predicate. This 
predicate builds a graph from the pseudo-WLN (using WLN Rule 8(a)) and possibly 
reorders the graph as described below. The following Prolog code describes this manip­
ulation: 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch019
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

242 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
wln_order(Pseudo_WLN. WLN) :-
notation_graph(Pseudo_WLN), 
rule6(Chain), 
% uses graph in database 
mle7and8(Chain. WLN). 
Construction of the notation-graph requires general knowledge about terminal 
symbols and their interaction with branch symbols. The pseudo-WLN is parsed using 
this knowledge. Vertices are created when branch symbols are encountered and the edges 
are labeled with the notation which occurs between the branch vertices. An undirected 
graph results from this process and all vertices with outdegree one are considered roots. 
Rule 6 orients the molecule, collecting the vertices and edges in the proper order. 
To accomplish this, all root nodes are collected. Starting from each root, the primary 
chain of the notation is chosen using the longest path of notation symbols, breaking any 
tie by choosing the chain which ends in the latest notation symbol (Rule 2). 
Next, Rule 7 orients branch choices along the primary chain chosen above. This 
rule orders branches using the branches with the lowest branching factor and with the 
fewest notation symbols. Ties are again broken by Rule 2. Rule 8 guides the reassembly 
of the molecule in proper WLN form. It reintroduces ampersands and inserts hyphens 
where necessary. All of this was easily implemented in Prolog, using DCG to parse the 
pseudo-WLN form and the Prolog database to represent the graph. 
Many additional rules are required for other reactions. Probably the entire comple-
ment of WLN rules must be implemented for even moderately sophisticated chemistry. 
It may be desirable at this point, however, to design a notation which encompasses 
WLN'S strong points, but is more computationally oriented. 
6 Conclusions 
Other systems have developed FMO reaction checks and used WLN for cataloging, but 
this system has relied heavily on a symbolic approach to chemistry, including application 
of grammar techniques to WLN strings. We feel that our system is very successful in 
the domain that it has been applied, eliminating hundreds of naive expert system rules. 
We also feel that our techniques are applicable to many other reactions as well. 
This paper has primarily stressed concepts rather than implementation details. A 
prototype system based on these concepts has been implemented, with concentration in 
the cyclohexene domain. The entire system, including grammars, the FMO verification, 
and WLN manipulation required only 12 pages of Prolog code. Although execution 
speed was never considered a factor at this stage, the system performs the disconnection 
L6UTJ A l Bl D l ENW => 1UY1&Y1&U1 + WN1U2 
(10) 
in four seconds with a IK Logical Inferences Per Second (LIPS) interpreter. 
There are several future research directions for this project. First, results from 
the FMO reaction check are not infallible due to the qualitative nature of this check. A 
more precise, yet computationally feasible model may be possible. Second, more work 
remains in the WLN rearranger; a full system based on our concepts would require 
knowledge of the entire complement of WLN rules. It may also be desirable to adopt 
or develop another, more computationally tractable line notation for the purpose of 
synthetic analysis. Finally, we would like to extend our work to more reaction classes 
to examine its potential in more detail. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch019
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

19. 
MOSELEY ET AL. 
Expert-System Rules for Diels-Alder Reactions 
243 
Acknowledgments 
We wish to express our appreciation for the Texas Instruments IDEA program which 
sponsored the majority of this research. This is a unique program within a large com-
pany which provides excellent research opportunities. Texas Instruments' unsurpassed 
computing facilities also deserve acknowledgment. 
Literature Cited 
[1] Blower, P. E., Jr., An Application of Artificial Intelligence to Organic Synthesis, 
PhD Thesis, University of Wisconsin, 1975. 
[2] Gordon, John E., "Chemical Inference. 2 Formalization of Organic Chemistry: 
Generic Systematic Nomenclature," J. Chem. Inf. Comput. Sci., 24, (1984), pp. 
81-92. 
[3] Rodgers, David and W. T. Wipke. "Artificial Intelligence in Organic Synthesis. 
SST: Starting Material Selection Strategies. An Application of Superstructure 
Search," J. Chem. Inf. Comput. Sci., 24, (1984), pp. 71-81. 
[4] Sridharan, N. S., PhD Thesis, State Univerisity of New York at Stonybrook, 1971. 
[5] Warren, Stuart, Organic Synthesis: the Disconnection Approach, John Wiley & 
Sons, New York, 1982. 
[6] Clocksin, W. F. and C. S. Mellish, Programming in Prolog, Springer- Verlag, Berlin, 
1981. 
[7] Pereira, F.C.N., D.H.D. Warren, "Definite Clause Grammars for Language Anal-
ysis - a Survey of the Formalism and a Comparison with Augmented Transition 
Networks", Artificial Intelligence, 13, (1980), pp. 231-278. 
[8] Smith, Elbert G., ed., The Wiswesser Line - Formula Chemical Notation, McGraw-
Hill, New York, 1968. 
[9] Fritts, Lois E., Margaret Mary Schwind, "Using the Wiswesser Line Notation 
(WLN) for Online, Interactive Searching of Chemical Structures," J. Chem. Inf. 
Comput. Sci., 22, (1982), pp. 106-109. 
[10] Johns, Trisha M., Michael Clare, "Wiswesser Line Notation as a Structural Sum-
mary Medium," J. Chem. Inf. Comput. Sci., 22, (1982), pp. 109-113. 
[11] Winograd, Terry, Language as a Cognitive Process, Volume 1, Addison-Wesley, 
Reading, 1983. 
[12] Hopcroft, John E., Jeffry D. Ullman, Introduction to Automata Theory, Languages, 
and Computation, Addison-Wesley, 1979. 
[13] Woodward, R. B. and R. Hoffmann, The Conservation of Orbital Symmetry, Aca-
demic Press, New York, 1970. 
[14] Jorgensen, W. L. and Timothy D. Salatin, J. Org. Chem., 45, 2043, (1980). 
[15] Jorgensen, W. L. and Julia Schmidt Burnier, J. Org. Chem., 48, 3923, (1983). 
[16] Fukui, K., Top. Cur. Chem., 15, 1, (1970). 
[17] Herndon, W. C., Chem. Rev., 72, 157, (1972). 
[18] Lowry, T. H., K. S. Richardson, Mechanism and Theory in Organic Chemistry, 
2nd ed., Harper & Row, New York, 1981. 
[19] Onishchenko, A. S., Diene Synthesis, Daniel Davey and Co., New York, 1964. 
[20] Sustmann, R., Tetrahedron Lett., 2717, (1971). 
[21] Sustmann, R., Tetrahedron Lett., 2721, (1971). 
[22] Sustmann, R. and H. Trill, Agnew. Chem. Int. Ed., 11, 838, (1972). 
[23] Fleming I., Frontier Molecular Orbitals and Organic Chemical Reactions, Wiley, 
London, 1976, Chapter 4. 
RECEIVED December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch019
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

2 0 
Using 
a Theorem Prover in the D e s i g n 
of O r g a n i c Syntheses 
Tunghwa Wang, Ilene Burnstein, Michael Corbett, Steven Ehrlich, Martha Evens, 
Alice Gough, and Peter Johnson 
Illinois Institute of Technology, Chicago, IL 60616 
This paper describes an expert system for 
organic synthesis which uses a resolution 
based theorem prover as its 
reasoning 
component. 
This reasoning component 
is 
built upon LMA (Logic Machine 
Architecture), a collection of Pascal 
subroutines written by the theorem proving 
group at Argonne National Laboratory. 
The 
SYNLMA system (SYNthesis with LMA) 
represents the target compound as a theorem 
to be proved, while the starting materials 
and reaction rules become axioms. 
The main 
advantages of SYNLMA stem from the 
independence of the database from the 
inferencing mechanism. 
This separation 
makes it possible to experiment with 
different representations of knowledge and 
different data bases, like the large 
chemical databases made available by ISI 
and Chemical Abstracts, without 
reprogramming. 
U s i n g LMA ( L o g i c Machine A r c h i t e c t u r e ) , a c o l l e c t i o n o f 
P a s c a l programs w r i t t e n by the theorem p r o v i n g group a t 
Argonne N a t i o n a l L a b o r a t o r y (1-2), we have d e v e l o p e d 
SYNLMA (SYNthesis w i t h LMA), an e x p e r t system f o r o r g a n i c 
s y n t h e s i s t h a t uses a r e s o l u t i o n based theorem p r o v e r as 
the r e a s o n i n g component. 
The major advantages o f SYNLMA 
stem from the independence o f the database and the 
i n f e r e n c i n g . 
F i r s t , the database can be m o d i f i e d o r an 
e n t i r e l y d i f f e r e n t one used w i t h o u t reprogramming t h e 
d e c i s i o n making u n i t o f the system. 
T h i s c o n v e r s i o n 
i n v o l v e s m o d i f y i n g a s h o r t program t h a t t r a n s l a t e s a 
database r e p r e s e n t a t i o n f o r m o l e c u l e s i n t o a m o l e c u l a r 
r e p r e s e n t a t i o n the theorem p r o v e r r e c o g n i z e s ; SYNLMA i s 
not changed a t a l l . 
Second, the scheme f o r r e p r e s e n t i n g 
0097-6156/86/0306-0244$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch020
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

20. 
WANG ET AL. 
Using a Theorem Prover in Organic Syntheses 
245 
a molecule can be changed without changing SYNLMA. 
Once 
a g a i n SYNLMA remains the same, o n l y the i n t e r f a c e between 
the database and SYNLMA w i l l have t o be a l t e r e d . 
T h i s 
f l e x i b i l i t y makes SYNLMA an a t t r a c t i v e a l t e r n a t i v e t o 
o t h e r o r g a n i c s y n t h e s i s programs. 
SYNLMA performs a r e t r o s y n t h e t i c a n a l y s i s u s i n g a 
s p e c i a l purpose theorem p r o v e r b u i l t from LMA components. 
The compound t o be s y n t h e s i z e d becomes a theorem t o be 
proved. 
The r e a c t i o n r u l e s and s t a r t i n g m a t e r i a l s become 
axioms. 
The c h o i c e o f a knowledge r e p r e s e n t a t i o n has 
been one of our g r e a t e s t problems. 
Data f o r the theorem p r o v e r has to be t r a n s l a t e d 
i n t o c l a u s e s , the o n l y form the theorem p r o v e r 
r e c o g n i z e s . 
A c l a u s e i s the "OR" o f one o r more 
l i t e r a l s 
where a l i t e r a l i s a p r e d i c a t e and i t s arguments. A 
p r e d i c a t e i s a p r o p e r t y o r r e l a t i o n s h i p t h a t i s t r u e o r 
f a l s e . I t s arguments can encompass any number o f 
f u n c t i o n s . A f u n c t i o n r e t u r n s t r u e , f a l s e o r some o t h e r 
v a l u e . 
The statement "x + y > y + ζ" can be w r i t t e n as a 
c l a u s e u s i n g the f u n c t i o n "Sum" and the P r e d i c a t e 
"GreaterThan." The r e s u l t i n g o n e - l i t e r a l c l a u s e 
l o o k s 
l i k e 
t h i s : 
GreaterThan(Sum(x,y),Sum(y,z)) 
(See 3 f o r a formal d e f i n i t i o n o f a c l a u s e . ) 
M o l e c u l a r 
R e p r e s e n t a t i o n s 
The r e p r e s e n t a t i o n o f m o l e c u l a r s t r u c t u r e i n c l a u s e form 
i s c r u c i a l t o t h i s r e s e a r c h as i t i s a major determinant 
of the theorem p r o v e r
1 s 
e f f i c i e n c y . The c l a u s e 
r e p r e s e n t a t i o n a f f e c t s the time i t takes t o r e t r i e v e 
r e a c t i o n r u l e s and s t a r t i n g m a t e r i a l s and the time 
n e c e s s a r y t o make comparisons between s t r u c t u r e s . The 
importance o f the r e l a t i o n s h i p between e f f i c i e n c y and t h e 
c l a u s e r e p r e s e n t a t i o n i s i l l u s t r a t e d by the d i f f e r e n c e i n 
the r u n times between p r o v i n g our f i r s t c l a u s e s and 
c u r r e n t ones. 
Our f i r s t r e p r e s e n t a t i o n scheme was a 
s i m p l e one w i t h one p r e d i c a t e f o r each atom except 
hydrogen and one f o r each bond ( F i g u r e l a ) . U s i n g 
t h i s 
c l a u s e form, a molecule w i t h t e n atoms took s e v e r a l hours 
to prove on an IBM mainframe. F o r SYNLMA t o be a v i a b l e 
system f o r o r g a n i c s y n t h e s i s the " p r o v i n g time" has t o be 
r e a s o n a b l e and one key t o t h i s i s the c l a u s e 
r e p r e s e n t a t i o n . 
By u s i n g a s i n g l e p r e d i c a t e t o d e s c r i b e 
each atom and i t s "bond environment," the p r o o f of a 
m o l e c u l e has been reduced t o a few seconds. We w i l l 
c o n t i n u e t o experiment w i t h the r e p r e s e n t a t i o n f o r 
m o l e c u l e s , 
t r y i n g t o f i n d the r i g h t b a l a n c e between the 
number o f c l a u s e s and t h e i r l e n g t h . We c u r r e n t l y 
r e p r e s e n t s t a r t i n g m a t e r i a l s and compounds t h a t we want 
to s y n t h e s i z e ( t a r g e t s ) by a c l a u s e 
l i s t 
( F i g u r e l b ) . I n 
t h i s scheme: 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch020
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

246 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
1. 
A m o l e c u l e i s r e p r e s e n t e d by a l i s t o f c l a u s e s , where 
each c l a u s e corresponds t o one atom and d e s c r i b e s i t s 
environment 
( i . e . , i t s bonds, charge, 
e t c . ) . 
2. 
The number o f atoms i n a m o l e c u l e does not c o r r e s p o n d 
to the number of c l a u s e s i n t h e c l a u s e 
l i s t . An atom 
g e n e r a t e s a c l a u s e 
o n l y i f i t i s bonded t o two o r 
more atoms; o t h e r w i s e the atom w i l l be i g n o r e d as a l l 
i t s 
i n f o r m a t i o n w i l l be c o n t a i n e d i n a c l a u s e 
generated by another atom. 
3. 
Each c l a u s e c o n s i s t s o f the p r e d i c a t e c a l l e d 
Fragment, a Bond f u n c t i o n ( B r r l , B211, B l l l l , e t c . ) 
l i s t i n g the types o f bonds, such as a r o m a t i c , 
resonant, 
t r i p l e , double, 
s i n g l e , f o r the atom b e i n g 
d e s c r i b e d and an Atom f u n c t i o n f o r t h i s c e n t r a l atom 
of 
r e f e r e n c e and f o r each atom bonded t o i t . A c l a u s e 
i s t e r m i n a t e d w i t h a s e m i c o l o n . 
4. The arguments f o r the Atom f u n c t i o n a r e : t h e chemical 
symbol f o r the element, a number a s s i g n e d by our 
numbering scheme, the charge on the atom (-1, 0, +1, 
+2 e t c . ) , a s t e r e o c h e m i s t r y 
f l a g and a r i n g 
f l a g 
i n d i c a t i n g whether o r not the atom i s a member o f a 
r i n g . 
D e f a u l t v a l u e s f o r the l a s t t h r e e arguments 
a r e z e r o . 
H(7) 
0(3) 
C ( l ) ; 
\ 
// 
C ( 2 ) ; 
H ( 6 ) _ C(2) _ C ( l ) 
0 ( 3 ) ; 
/ 
\ 
0 ( 5 ) ; 
0(5) 
H(4) 
Double(1,3); 
/ 
Bond(2,1); 
H(8) 
Bond(2,5); 
F i g u r e l a . Our F i r s t C l a u s e R e p r e s e n t a t i o n f o r a Simple 
M o l e c u l e . 
The numbers f o l l o w i n g the element symbols i n 
the diagram a r e used t o i d e n t i f y atoms i n the c l a u s e s . 
Fragment(B211(Atom(C,1,0,0,0),Atom(0,3,0,0,0), 
Atom(C,2,0,0,0),Atom(H,4,0,0,0))); 
Fragment(Bllll(Atom(C,2,0,0,0),Atom(C,1,0,0,0), 
Atom(0,5,0,0,0),Atom(H,6,0,0,0), 
Atom(H,7,0,0,0))) ; 
Fragment(Β11(Atom(0,5,0,0,0),Atom(C,2,0,0,0), 
Atom(H,8,0,0,0))); 
F i g u r e l b . Our C u r r e n t C l a u s e 
R e p r e s e n t a t i o n 
f o r the Same M o l e c u l e 
F i g u r e l b i s a s i m p l e example o f a c l a u s e 
l i s t and 
the r u l e s f o r c o n s t r u c t i n g i t . In a c t u a l i t y , t h e r e a r e no 
spaces between c h a r a c t e r s i n a c l a u s e . They a r e i n c l u d e d 
to make i t e a s i e r t o g r a s p the c l a u s e n o t a t i o n . Note, 
t h a t a l t h o u g h t h e r e a r e e i g h t atoms i n the molecule o n l y 
t h r e e g e n e r a t e d 
c l a u s e s . 
F o r example, 0(3) does not 
generate a c l a u s e s i n c e i t would be redundant. The c l a u s e 
f o r 0(3) would be "Fragment(B2(Atom(0,3,0,0,0), 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch020
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

20. 
WANG ET AL. 
Using a Theorem Prover in Organic Syntheses 
247 
Atom(C,1,Ο,Ο,Ο)))" and a l l t h i s i n f o r m a t i o n i s c o n t a i n e d 
i n t h e c l a u s e g e n e r a t e d by C ( l ) . 
The f i r s t Fragment 
p r e d i c a t e i n f i g u r e l b i s : 
Fragment(B211(Atom(C,1,0,0,0),Atom(0,3,0,0,0), 
Atom(C,2,0,0,0),Atom(H,4,0,0,0))); 
The Bond f u n c t i o n d e s c r i b e s a c e n t r a l atom o f 
r e f e r e n c e and the atoms bonded t o i t . B211 s t a t e s t h a t 
t h e r e i s a c e n t r a l atom o f r e f e r e n c e bonded t o one atom 
by a double bond (2) and t o two o t h e r atoms by s i n g l e 
bonds ( 1 ) . The o r d e r o f the Bond f u n c t i o n arguments 
c o r r e s p o n d s t o t h i s Bond f u n c t i o n n o t a t i o n . 
These 
arguments a r e not s i m p l e atomic symbols, but Atom 
f u n c t i o n s t h a t can r e l a t e c o n s i d e r a b l e i n f o r m a t i o n about 
the atom. I n t h i s Bond f u n c t i o n , Atom(C,1,0,0,0) i s t h e 
c e n t r a l atom. The next t h r e e arguments a r e atoms t h a t a r e 
bonded t o t h i s c e n t r a l atom: the f i r s t , Atom(0,3,0,0,0) 
by a double bond; the next two, Atom(C,2,0,0,0) and 
Atom(H,4,0,0,0), by s i n g l e bonds. 
The f i r s t two arguments i n the Atom f u n c t i o n f o r a 
p a r t i c u l a r Atom never change, as they i d e n t i f y t h e atom. 
Atom(0,3,0,0,0) d e s c r i b e s the oxygen atom numbered 3, as 
opposed t o t h e oxygen atom numbered 5, i n t h e drawing i n 
F i g u r e l a . The number does not i n d i c a t e p o s i t i o n . I f 
some r e a c t i o n r e s u l t e d i n t h e "03" bond t o "CI" b e i n g 
broken and "03" was r e p l a c e d by some o t h e r atom, "03" 
remains "03"; the new atom w i l l have a new number. 
Suppose "03" were t o become charged, then the f u n c t i o n 
d e s c r i b i n g i t would become Atom(0,3,-1,0,0), r e f l e c t i n g 
the change. 
R e a c t i o n Rule Database 
Our p r e s e n t r e a c t i o n r u l e database i s made up o f 
a p p r o x i m a t e l y one hundred r u l e s adapted from a m i c r o f i c h e 
g e n e r o u s l y sent t o us by G e l e r n t e r ( 4 ) . F o r a g i v e n 
r e a c t i o n , a r u l e s p e c i f i e s the r e a c t a n t s (subgoal) and 
the p r o d u c t ( s ) ( g o a l ) , i n c o n n e c t i o n t a b l e format and any 
c o n s t r a i n t s on t h e i r c o m p o s i t i o n ( F i g u r e 2a). The r u l e s 
are 
i d e n t i f i e d by c h a p t e r and schema numbers. The 
c o n n e c t i o n t a b l e s a r e o r g a n i z e d as f o l l o w s : 
1. A r e a c t i o n r u l e c o n n e c t i o n t a b l e i n c l u d e s a l l the 
atoms i n both t h e g o a l and subgoal m o l e c u l e s . The 
atoms a r e numbered u n i q u e l y and the numbering o f the 
atoms (see the drawing o f the m o l e c u l e s ) c o r r e s p o n d s 
to t h e row numbers i n the t a b l e s . The same atom 
a p p e a r i n g i n both a g o a l and subgoal keeps the same 
number. I f an atom i n the g o a l does not appear i n t h e 
s u b g o a l , the subgoal c o n n e c t i o n t a b l e w i l l 
s t i l l 
i n c l u d e the atom as a row atom but a l l v a l u e s t o t h e 
r i g h t w i l l be z e r o . 
2. The symbols i n t h e f i r s t column ( t o the r i g h t o f t h e 
row number) i d e n t i f y the atom o r v a r i a b l e d e s c r i b e d 
American Chemical Society 
Library 
1155 16th St.f N.W. 
Washington, D.C. 20036 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch020
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

248 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
by the row. 
I t w i l l be r e f e r r e d t o as the row atom. 
There a r e t h r e e types o f row atom symbols: p e r i o d i c 
t a b l e n o t a t i o n f o r elements; the v a r i a b l e #J which 
r e p r e s e n t s a h a i i d e ; and a v a r i a b l e composed o f a 
d o l l a r s i g n f o l l o w e d by a number($1,$2...). The 
"$/even numbered" v a r i a b l e s can r e p r e s e n t any 
s u b s t r u c t u r e or any atom. 
The "$/odd numbered" 
v a r i a b l e s can r e p r e s e n t any s u b s t r u c t u r e o r any atom 
except hydrogen. 
The f o l l o w i n g f o u r s t r u c t u r e s c o u l d 
be e q u i v a l e n t . 
The s t r u c t u r e s range from the v e r y 
s p e c i f i c on the l e f t where the atom p o i n t e d t o i s 
d e f i n e d as a c h l o r i n e atom t o the v e r y g e n e r a l where 
the atom o r s u b s t r u c t u r e can be a n y t h i n g . 
0 
I I 
C 
/ 
\ 
$1 
CI 
c 
/ 
\ 
$1 
#J 
0 
11 
c 
/ 
\ 
$1 
$1 
c 
/ 
\ 
$1 
$2 
s p e c i f i c 
> 
g e n e r a l 
3. 
The next twelve columns ( s i x p a i r s : up, down, 
l e f t , 
r i g h t , i n , out) d e s c r i b e the bonds o f the atom i n 
column one. 
The f i r s t number i n each p a i r i s the row 
index, 
i d e n t i f y i n g the atom bonded t o the row atom. 
The second number i s one o f f i v e bond types (1: 
s i n g l e , 2: double, 3: t r i p l e , 16: resonant bond, 
8 : s i n g l e bond between an atom and a resonant 
s t r u c t u r e ) . I f the row atom does not appear i n the 
g o a l o r subgoal s t r u c t u r e s t h e d e f a u l t v a l u e s a r e 
z e r o . 
4. 
The l a s t s i x t e e n columns c o n t a i n symmetry 
i n f o r m a t i o n . 
F i g u r e 2a i s the G e r l e r t n e r r e a c t i o n r u l e f o r the 
" r e a c t i o n of magnesium w i t h a l k y l bromides". The number 
of ( s i x ) and type of row atoms (Mg, Br, C, $2, $4, $6) 
a r e i d e n t i c a l f o r b o t h the the g o a l and subgoal 
c o n n e c t i o n t a b l e s and i s a composite of a l l atoms i n b o t h 
the product and r e a c t a n t s . 
D i f f e r e n c e s between g o a l and 
subgoal s t r u c t u r e s a r e i n d i c a t e d by the numbers t o the 
r i g h t o f row atoms and not t h e i r presence o r absence i n 
the t a b l e s . F o r example, i n the g o a l t a b l e Row Atom 1, 
magnesium, i s bonded t o Row Atom 2 by a s i n g l e bond 
(index:bond = 2:1) and t o Row Atom 3 by a s i n g l e bond 
(index:bond = 3:1). While magnesium does not appear i n 
the subgoal s t r u c t u r e , i t i s s t i l l the f i r s t row atom i n 
the s u b g o a l
1 s t a b l e . But the v a l u e s f o r bond indexes and 
bond types a r e now z e r o ; t h a t i s , Mg(l) i s not bonded t o 
o t h e r atoms i n the t a b l e . 
An example of an atom t h a t 
appears i n b o t h the g o a l and subgoal s t r u c t u r e s i s Row 
Atom 3. 
One of the atoms t h a t C(3) i s bonded t o changes 
(Br t o Mg) but C(3) i s c o n s i d e r e d the same throughout the 
r e a c t i o n and keeps the same index. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch020
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

20. 
WANG ET AL. 
Using a Theorem Prover in Organic Syntheses 
249 
$2(4) 
$4(5) 
\ 
/ 
C(3) 
/ 
\ 
Br(2) 
$6(6) 
$2(4) 
$4(5) 
\ 
/ 
C(3) 
/ 
\ 
Mg(l) 
$6(6) 
/ 
Br(2) 
Diagram i l l u s t r a t i n g the f o l l o w i n g r e a c t i o n r u l e 
Schema 2 
Schema name i s r e a c t i o n o f magnesium w i t h a l k y l 
bromides. 
The s t a r t i n g v a l u e s f o r ease, y i e l d and 
c o n f i d e n c e a r e : 90, 95, 100. 
The reagent c l a s s f o r 
t h i s schema i s : 0. 
T h i s i s a s i n g l e a p p l i c a t i o n 
schema. 
The maximum no. o f n o n i d e n t i c a l subgoal 
m o l e c u l e s a l l o w e d f o r t h i s schema i s 9. 
The 
T r a n s f o r m a t i o n P a t t e r n s : 
Goal TSD 
no elem 
up down 
l e f t 
r i g h t 
i n 
out 
1 
Mg 
2 1 
3:1 
0:0 
0:0 
0:0 
0:0 
0000000000000000 
2 
Br 
1 1 
0:0 
0:0 
0:0 
0:0 
0:0 
0000000000000000 
3 
C 
1 1 4:1 
5:1 
6:1 
0:0 
0:0 
0000000000000000 
4 
$2 
3 1 
0:0 
0:0 
0:0 
0:0 
0:0 
0000000000000000 
5 
$4 
3 1 0:0 
0:0 
0:0 
0:0 
0:0 
0010000000000000 
6 
$6 3 1 0:0 
0:0 
0:0 
0:0 
0:0 
0010000000000000 
Subgoal TSD 
no elem 
up down 
l e f t 
r i g h t 
i n 
out 
1 
Mg 0 0 
0:0 
0:0 
0:0 
0:0 
0:0 
0000000000000000 
2 
Br 
3 1 0:0 
0:0 
0:0 
0:0 
0:0 
0000000000000000 
3 
C 
2 1 
4:1 
5:1 
6:1 
0:0 
0:0 
0000000000000000 
4 
$2 3 1 
0:0 
0:0 
0:0 
0:0 
0:0 
0000000000000000 
5 
$4 
3 1 0:0 
0:0 
0:0 
0:0 
0:0 
0000000000000000 
6 
$6 3 1 
0:0 
0:0 
0:0 
0:0 
0;0 
0000000000000000 
Schema Tests : Can' 
t have any o f the f o l l o w i n g a t t r i b u t e s : 
136 T h i o l 
126 Oxime 
122 Diazoketone 
(and o t h e r s ) 
F i g u r e 2a. G e r l e r n t e r r e a c t i o n r u l e . 
The c o n s t r a i n t s 
l i s t e d under the schema t e s t s g i v e 
l i m i t a t i o n s on the p o s s i b l e v a l u e s o f the v a r i a b l e s i n 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch020
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

250 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
column one, e t c . The r e a c t i o n r u l e s can be c h a r a c t e r i z e d 
as s i n g l e o r m u l t i s t e p , where a m u l t i s t e p r e a c t i o n i s 
d e f i n e d as a r u l e t h a t can be r e w r i t t e n as a s e r i e s o f 
s i n g l e s t e p r e a c t i o n s . 
An example o f a s i n g l e and 
m u l t i s t e p r e a c t i o n r u l e f o r a m a l o n i c e s t e r 
s y n t h e s i s 
f o l l o w s . 
M u l t i s t e p : 
0 
M 
1) NaOET 
ET-O-C 
2) RX 
0 
CH3 
\ 
3) OH-,H20 
I I 
/ 
CH2 
> H-0- C -CH2-C -H 
/ 
4) H+ 
\ 
ET-O-C 
CH3 
1 I 
0 
S i n g l e Step E q u i v a l e n t : 
0 
0 
II 
II 
ET-O-C 
ET-O-C 
\ 
\ 
CH2 + NaOET 
> 
CH-
/ 
/ 
ET-O-C 
ET-O-C 
II 
II 
0 
0 
0 
0 
II 
II 
ET-O-C 
H 
CH3 
ET-O-C 
CH3 
\ - 
\ / 
\ 
/ 
CH 
+ 
C 
> 
CH-C-H 
/ 
/ \ 
/ 
\ 
ET-O-C 
Br 
CH3 
ET-O-C 
CH3 
II 
II 
0 
0 
0 
0 
II 
II 
ET-O-C 
CH3 
H-O-C 
CH3 
\ 
/ 
OH-, H20 
\ 
/ 
CH-C-H 
> 
CH-C-H 
/ 
\ 
/ 
\ 
ET-O-C 
CH3 
H-O-C 
CH3 
I' 
JJ 
0 
0 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch020
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

20. 
WANG ET AL. 
Using a Theorem Prover in Organic Syntheses 
251 
Ο 
H-O-C 
CH3 
1) H+ 
Ο 
CH3 
\ 
/ 
2) -C02 
I I 
/ 
CH-C-H 
> 
H-O- 
C -CH2-C-H 
/ 
\ 
\ 
H-O-C 
CH3 
CH3 
I I 
Ο 
In t h i s example a f o u r s t e p s y n t h e s i s i s a l s o 
e x p r e s s e d as a v e r y g e n e r a l one s t e p r e a c t i o n . 
We have w r i t t e n a program t h a t t r a n s l a t e s the 
c o n n e c t i o n 
t a b l e s i n t o c l a u s e s , a form t h a t the theorem 
p r o v e r can p r o c e s s , and s t o r e s them i n f i l e s 
o r g a n i z e d 
f i r s t by g o a l or subgoal and then by the f u n c t i o n a l 
groups i n the m o l e c u l e . 
The c o n s t r a i n t s a r e i n another 
s e t 
of f i l e s . SYNLMA uses these f i l e s ; i t does not 
use 
the 
f i l e s of G e r l e r n t e r f o r m a t t e d 
r u l e s . In a d d i t i o n to 
the r e a c t i o n r u l e database, we have f u n c t i o n a l group and 
s t a r t i n g m a t e r i a l databases ( a l s o i n c l a u s e form). 
The T r a n s l a t i o n of R e a c t i o n Rules i n t o C l a u s e s 
Each atom i n a t a r g e t or s t a r t i n g m a t e r i a l molecule i s 
d e f i n e d . 
T h i s i s not t r u e f o r a r e a c t i o n r u l e or 
f u n c t i o n a l group m o l e c u l e where p a r t s of the molecule a r e 
r e p r e s e n t e d 
by v a r i a b l e s ($1, $J, e t c . ) . SYNLMA t r e a t s a 
r e a c t i o n r u l e or f u n c t i o n a l group s t r u c t u r e as a 
molecule, even though some of i t s atoms a r e unknown, and 
r e p r e s e n t s 
i t i n e s s e n t i a l l y the same form as known 
m o l e c u l e s ( F i g u r e 2b). A m o l e c u l e w i t h a v a r i a b l e 
s u b s t r u c t u r e d i f f e r s from a known m o l e c u l e i n the 
f o l l o w i n g : 
1. 
The p r e d i c a t e s a r e ORed f o r a m o l e c u l e w i t h v a r i a b l e s 
(one c l a u s e per molecule) i n s t e a d of ANDed (one 
l i s t 
of c l a u s e s f o r each 
m o l e c u l e ) . 
2. 
The s i g n of the p r e d i c a t e i s n e g a t i v e 
i n s t e a d of 
p o s i t i v e . 
3. 
V a r i a b l e atoms or s u b s t r u c t u r e s a r e r e p r e s e n t e d 
by 
the l e t t e r "y" f o l l o w e d by a number ( y l , y2) or 
the 
l e t t e r 
" j " ( y j ) . 
" Y j " r e p r e s e n t s a h a l i d e ; the 
"y/even numbered" v a r i a b l e s can r e p r e s e n t 
any 
s u b s t r u c t u r e or atom; and the "y/odd numbered" can 
r e p r e s e n t any s u b s t r u c t u r e or atom except hydrogen. 
4. 
The Atom f u n c t i o n s have v a r i a b l e s f o r arguments, not 
c o n s t a n t s . 
5. 
Each g o a l or subgoal c l a u s e i s t e r m i n a t e d 
w i t h 
the 
p r e d i c a t e Rxnrule whose f i r s t argument i s a r e a c t i o n 
r u l e i d e n t i f i c a t i o n number. 
A f t e r t h i s number, the 
p r e d i c a t e uses the f u n c t i o n LL ( f o r l i n k e d l i s t ) 
to 
l i s t a l l the atoms i n the c o n n e c t i o n 
t a b l e . 
F u n c t i o n a l group c l a u s e s a r e t e r m i n a t e d w i t h 
the 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch020
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

252 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
s i m i l a r f u n c t i o n Funcgr. The main d i f f e r e n c e between 
these two f u n c t i o n s i s t h a t Funcgr o n l y 
l i s t s atoms 
or s u b s t r u c t u r e s t h a t a r e i n the m o l e c u l e b e i n g 
d e s c r i b e d , w h i l e the r e a c t i o n r u l e l i s t s a l l atoms i n 
the c o n n e c t i o n t a b l e r e g a r d l e s s of whether they 
appear i n the s t r u c t u r e ( s ) b e i n g 
d e s c r i b e d . 
R e a c t i o n Rule Chapter 20, Schema 2: GOAL 
- F r a g m e n t ( B l 1 ( A t o m ( M g , x l , s 1 , t l , u l ) , A t o m ( B r , x 2 , s 2 , t 2 , u 2 ) , 
Atom(C,x3,s3,t3,u3)))| 
- F r a g m e n t ( B l l l l ( A t o m ( C , x 3 , s 3 , t 3 , u 3 ) , 
A t o m ( M g , x l , s l , t l , u l ) , y 2 , y 4 , y 6 ) ) | 
R x n r u l e ( 2 0 2 , L L ( A t o m ( M g , x l , s l , t l , u l , ) , 
LL(Atom(Br,x2,s2,t2,u2), 
LL(Atom(C,x3,s3,t3,u3), 
L L ( y 2 , L L ( y 4 , L L ( y 6 , N I L ) ) ) ) ) ) ) ; 
R e a c t i o n Rule Chapter 20, Schema 2: SUBGOAL 
- F r a g m e n t ( B l l l l ( A t o m ( C , x 3 , s 3 , t 3 , u 3 ) , 
Atom(Br,x2,s2,t2,u2),y2,y4,y6))| 
R x n r u l e ( 2 0 2 , L L ( A t o m ( M g , x l , s l , t l , u l , ) , 
LL(Atom(Br,x2,s2,t2,u2), 
LL(Atom(C,x3,s3,t3,u3), 
L L ( y 2 , L L ( y 4 , L L ( y 6 , N I L ) ) ) ) ) ) ) ; 
F i g u r e 2b. C l a u s e r e p r e s e n t a t i o n of the g o a l and 
subgoal 
i n r e a c t i o n r u l e Chapter 20, Schema 2. 
A comparison between the c o n n e c t i o n t a b l e s i n f i g u r e 
2a and t h e i r c l a u s e r e p r e s e n t a t i o n s i n f i g u r e 2b 
i l l u s t r a t e s the c o n v e r s i o n r u l e s and some of the 
d i f f e r e n c e s between a known m o l e c u l e ' s c l a u s e and a 
r e a c t i o n r u l e c l a u s e . Two row atoms, Mg(l) and C ( 3 ) , i n 
the g o a l and o n l y C(3) i n the subgoal a r e bonded to two 
or more atoms and t h e r e f o r e g e n e r a t e p r e d i c a t e s . 
U n l i k e 
the c l a u s e 
l i s t 
( f i g u r e l b ) these p r e d i c a t e s a r e not 
s e p a r a t e d by s e m i c o l o n s ( i m p l i c i t l y ANDed one p r e d i c a t e 
c l a u s e s ) but a r e j o i n e d by a v e r t i c a l bar, the symbol f o r 
OR. The p r e d i c a t e , Fragment, i s c o n s t r u c t e d i n the same 
way as f o r a known m o l e c u l e w i t h the e x c e p t i o n t h a t some 
of the Atom f u n c t i o n s arguments a r e v a r i a b l e s ( e . g . x l , 
s i , t l , e t c . ) . V a r i a b l e s a r e not w r i t t e n u s i n g Atom 
f u n c t i o n s (they a r e unknowns) but a r e s i m p l y 
l i s t e d i n 
the proper o r d e r i n the bond f u n c t i o n . The c l a u s e i s 
t e r m i n a t e d w i t h an i d e n t i f y i n g Rxnrule p r e d i c a t e t h a t 
l i s t s the r e a c t i o n r u l e c h a p t e r and schema 
( c h a p t e r 
number * 1000 + schema number) and e v e r y row atom i n the 
c o n n e c t i o n t a b l e . Note t h a t the Rxnrule p r e d i c a t e i s 
i d e n t i c a l f o r the g o a l and s u b g o a l , 
l i n k i n g the two 
c l a u s e s 
t o g e t h e r . 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch020
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

20. 
WANG ET AL. 
Using a Theorem Prover in Organic Syntheses 
253 
The S y n t h e t i c D e s i g n P r o c e s s 
SYNLMA i s c u r r e n t l y c a p a b l e o f h a n d l i n g the s y n t h e t i c 
d e s i g n f o r compounds the s i z e o f the a n a l a g e s i c Darvon 
u s i n g an i n - c o r e database o f a p p r o x i m a t e l y a hundred 
r e a c t i o n s . 
The s y n t h e s i s p r o c e s s s t a r t s w i t h the i n p u t 
of the s t r u c t u r e o f the compound ( i n c l a u s e form) t h a t we 
a r e t r y i n g t o s y n t h e s i z e . 
Next, an i n t e r n a l 
r e p r e s e n t a t i o n o f the compound i s g e n e r a t e d . 
T h i s 
becomes the t a r g e t ( t h e theorem t o be p r o v e d ) . The 
theorem p r o v e r b e g i n s by i d e n t i f y i n g the t a r g e t ' s major 
f u n c t i o n a l groups and uses them as keys i n t o the 
database. 
As the s e a r c h b e g i n s f o r r e a c t i o n s and 
compounds from which the t a r g e t can be s y n t h e s i z e d , the 
theorem p r o v e r o n l y s e a r c h e s the g o a l f u n c t i o n a l group 
f i l e s c o r r e s p o n d i n g t o the f u n c t i o n a l groups i t has 
a l r e a d y found i n the t a r g e t . 
F o r example, i f the t a r g e t 
c o n t a i n e d an a c i d and a benzene r i n g , the theorem p r o v e r 
would s e a r c h the g o a l 
f i l e s c o n t a i n i n g a c i d s and benzene 
r i n g s f o r a matching m o l e c u l a r s t r u c t u r e . 
When a 
matching s t r u c t u r e i s found, i t s c o r r e s p o n d i n g subgoal 
becomes the new g o a l and i s t r a n s l a t e d i n t o the i n t e r n a l 
r e p r e s e n t a t i o n f o r a m o l e c u l e . 
Then the f u n c t i o n a l group 
i d e n t i f i c a t i o n and the s e a r c h and match p r o c e s s i s 
r e p e a t e d . T h i s p r o c e s s o f examining a l t e r n a t i v e r e a c t i o n 
paths and s e t t i n g up i n t e r m e d i a t e compounds as new g o a l s 
i s r e p e a t e d u n t i l a l l the p o s s i b l e r e a c t i o n s can be 
performed u s i n g the a v a i l a b l e compounds. 
T h i s p r o c e s s o f working backward from the a v a i l a b l e 
s t a r t i n g m a t e r i a l s , c a l l e d " r e t r o s y n t h e t i c a n a l y s i s " by 
the o r g a n i c chemist, i s immediately r e c o g n i z e d as an 
example o f backward c h a i n i n g by workers i n a r t i f i c i a l 
i n t e l l i g e n c e . 
T h i s backward c h a i n i n g p r o c e s s c r e a t e s a 
l a r g e problem s o l v i n g t r e e i n which g o a l s o r nodes 
c o r r e s p o n d t o compounds w h i l e the branches c o r r e s p o n d t o 
p o s s i b l e r e a c t i o n pathways. (A more d e t a i l e d d e s c r i p t i o n 
of how SYNLMA handles t h i s p r o c e s s can be found i n 5-6.) 
An example o f a problem s o l v i n g t r e e f o r the 
s y n t h e s i s o f Darvon appears i n F i g u r e 3. The t r e e 
c o n t a i n s both AND nodes and OR nodes ( 7 ) . 
The AND 
branches, connected by double a r c s , i n d i c a t e t h a t both 
compounds a r e r e q u i r e d t o make the compound above them. 
The OR branches ( t h e r e a r e t h r e e OR paths t o make 
compound I I ) i n d i c a t e d i f f e r e n t r o u t e s f o r making the 
compound. 
The t e r m i n a l nodes c o r r e s p o n d i n g t o s t a r t i n g 
m a t e r i a l s a r e e n c l o s e d i n boxes. 
At p r e s e n t , a branch i s 
t e r m i n a t e d when the number o f c l a u s e s i n the c l a u s e 
l i s t , 
the i n t e r n a l r e p r e s e n t a t i o n o f the g o a l , i s l e s s than o r 
equal t o s i x o r the c l a u s e 
l i s t matches the c l a u s e 
l i s t 
of a s t a r t i n g m a t e r i a l m o l e c u l e . 
C u r r e n t l y , SYNLMA g e n e r a t e s one problem s o l v i n g t r e e 
f o r each m o l e c u l e t h a t i t s y n t h e s i z e s . Some o f the t r e e ' s 
paths a r e v i a b l e s y n t h e t i c r o u t e s , o t h e r s a r e deadends. 
U n f o r t u n a t e l y , 
good and bad paths a r e pursued w i t h the 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch020
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch020
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

20. 
WANG ET AL. 
Using a Theorem Prover in Organic Syntheses 
255 
ο 
10 
• H 
10 
<u 
SX 
•M 
CO 
<D 
u 
ο 
m 
ω 
ω 
u 
D> 
fi 
• H 
> 
Ο 
CO 
β 
ο u 
CO 
ω α 
u 
ο 
3 > 
en u 
•Η 
Q 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch020
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

256 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
same i n t e n s i t y and a l o t of time i s spent 
p u r s u i n g 
deadend p a t h s . 
The program has the p o t e n t i a l t o be more 
c l e v e r i n i t s approach. 
I t can g e n e r a t e a number of 
t r e e s of v a r y i n g s p e c i f i c i t y . 
F i r s t , SYNLMA c o u l d 
g e n e r a t e a t r e e of m u l t i s t e p r e a c t i o n r u l e s . 
A t r e e 
b u i l t from m u l t i s t e p r e a c t i o n r u l e s would be q u i c k e r 
t o 
b u i l d than one where each s t e p i s s p e c i f i e d . Then a 
second, more s p e c i f i c t r e e c o u l d be g e n e r a t e d u s i n g 
the 
knowledge g a i n e d from the 
f i r s t . 
For example, some 
s y n t h e t i c pathways c o u l d be r u l e d out on the b a s i s of 
the 
m u l t i s t e p r u l e s . 
The more pathways t h a t can 
be 
e l i m i n a t e d on the b a s i s of one m u l t i s t e p r u l e as opposed 
to a s e r i e s of s i n g l e s t e p r u l e s , the f a s t e r the system 
can work. 
For paths t h a t appear p r o m i s i n g , the p r o d u c t s 
and r e a c t a n t s i n the 
f i r s t t r e e form p a i r s of t a r g e t s 
and 
s t a r t i n g m a t e r i a l s t h a t w i l l d i r e c t the growth of 
the 
second t r e e . 
A s y n t h e t i c p a t h t h a t works i n the more 
g e n e r a l 
t r e e does not n e c e s s a r i l y work when SYNLMA t r i e s 
to 
f i l l 
i n the gaps between nodes w i t h s i n g l e s t e p r u l e s . 
Some o t h e r c o n d i t i o n , l i k e a s u b s t r u c t u r e 
c o n s t r a i n t , 
may 
b l o c k the pathway. So a c o m b i n a t i o n of the 
two 
approaches, g e n e r a l and 
s p e c i f i c , i s n e c e s s a r y . 
Two 
d a t a b a s e s , one of s i n g l e s t e p r u l e s , the o t h e r 
m u l t i s t e p , 
a r e n e c e s s a r y t o implement the two 
t r e e system. 
S i n c e 
our database i s a m i x t u r e of these two types of r u l e s , a 
two 
t r e e system i s not y e t p o s s i b l e . 
I t w i l l have t o 
wait u n t i l we can s e p a r a t e our database i n t o two 
p a r t s . 
F u t u r e D i r e c t i o n s 
A f t e r the two 
t r e e system i s f u n c t i o n i n g , we would 
l i k e 
to add a t h i r d t r e e d e f i n i t i o n l a y e r t h a t precedes the 
o t h e r s and determines an o v e r a l l s y n t h e t i c s t r a t e g y . 
The 
f o c u s d u r i n g 
t h i s s t a g e i s on the r e c o g n i t i o n of cogent 
s u b s t r u c t u r e s , thus i t r e q u i r e s a database of about 
200 
compounds i n s t e a d of r e a c t i o n r u l e s . 
The 
t a r g e t w i l l 
be 
compared t o these compounds r a t h e r than r e a c t i o n r u l e s 
and "matches" one of these compounds when a l a r g e 
s u b s t r u c t u r e 
i n the t a r g e t i s i d e n t i f i e d i n a compound. 
T h i s matching compound now becomes the new 
t a r g e t and 
the 
p r o c e s s i s r e p e a t e d , r e s u l t i n g i n a much more a b s t r a c t 
problem s o l v i n g t r e e . 
Then the two-tree system i s 
a p p l i e d t o t h i s t r e e t o d e f i n e t a r g e t s and s t a r t i n g 
m a t e r i a l s . 
The system moves from the g e n e r a l t o 
the 
s p e c i f i c , u s i n g the i n f o r m a t i o n from the 
f i r s t t r e e t o 
b u i l d the second t r e e and 
i n f o r m a t i o n from the second 
t r e e t o b u i l d the t h i r d . 
The 
t h i r d and 
f i n a l 
t r e e 
d e s c r i b e s the s p e c i f i c s t e p s i n the s y n t h e t i c pathway. 
I f an o r g a n i c s y n t h e s i s system i s t o be of 
p r a c t i c a l 
use to c h e m i s t s , i t must be s e t up to i n t e r f a c e w i t h 
l a r g e c h e m i c a l databases such as the databases made 
a v a i l a b l e by ISI (the I n s t i t u t e f o r S c i e n t i f i c 
I n f o r m a t i o n ) and by Chemical A b s t r a c t s . 
We have s t a r t e d 
to c o n v e r t 
our database to the CAS 
c o n n e c t i o n 
t a b l e 
format t o s i m p l i f y database i n t e r f a c e s . 
F o r t u n a t e l y , 
t h i s does not r e q u i r e changing SYNLMA. 
We o n l y need t o 
w r i t e a new program t o t r a n s l a t e c o n n e c t i o n 
t a b l e s i n t o 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch020
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

20. 
WANG ET AL. 
Using a Theorem Prover in Organic Syntheses 
257 
c l a u s e s , but t h i s i s a s h o r t program independent of 
SYNLMA. 
From the u s e r ' s p o i n t of view the most important 
s t e p i n improving SYNLMA i s to r e w r i t e and expand the 
u s e r i n t e r f a c e . 
C u r r e n t l y , the compound we want t o 
s y n t h e s i z e i s e n t e r e d i n c l a u s e form and the program i s 
run i n b a t c h mode. 
T h i s means t h a t the u s e r cannot 
a f f e c t 
SYNLMA's b e h a v i o r once the system s t a r t s working 
on a s y n t h e s i s . 
We p l a n t o d e v e l o p an i n t e r a c t i v e system 
where the u s e r e n t e r s the i n i t i a l t a r g e t molecule by 
drawing i t on the s c r e e n u s i n g a g r a p h i c s package and i s 
a b l e to monitor the p r o g r e s s of the theorem p r o v e r . 
The 
u s e r w i l l be a b l e c o n t r o l i t s a c t i o n s by removing 
i n t e r m e d i a t e t a r g e t s and s u g g e s t i n g s t a r t i n g m a t e r i a l s . 
Summary 
The s u c c e s s of SYNLMA shows t h a t i t i s p o s s i b l e t o base 
an e x p e r t system on a theorem p r o v e r . 
The advantage of 
u s i n g a theorem p r o v e r as d e d u c t i v e component i s t h a t i t 
a l l o w s us t o experiment w i t h a number of d i f f e r e n t 
r e p r e s e n t a t i o n s f o r c h e m i c a l i n f o r m a t i o n . 
The same 
f l e x i b i l i t y makes i t easy to add new s t a r t i n g m a t e r i a l s 
and r e a c t i o n r u l e s from l a r g e commercial o n l i n e 
d a t a b a s e s . 
Acknowledgments 
T h i s r e s e a r c h was p a r t i a l l y s u p p o r t e d by the N a t i o n a l 
S c i e n c e F o u n d a t i o n under Grant MCS 82-16432. 
Literature Cited 
1. 
Lusk, E.; McCune, W.; Overbeek, R. 
Proc. Sixth 
International Conference on Automated Reasoning, 
Loveland, D., Ed.; 
Computer Science Lecture Notes 
#138, Springer-Verlag: New York, 1982, pp. 85-108. 
2. 
Lusk, E.; McCune, W.; Overbeek, R. 
Proc. Sixth 
International Conference on Automated Reasoning, 
Loveland, D., Ed.; Computer Science Lecture Notes 
#138, Springer-Verlag: New York, 1982, pp. 70-84. 
3. Wos, L.; Overbeek, R.; Lusk, E.; Boyle, J. "Automated 
Reasoning"; Prentice-Hall: Englewood 
Cliffs, 
New 
Jersey, 1984. 
4. 
Gelernter, H.; Sanders, Α.; Larsen, D.; Agarwal, K.; 
Boivie, R.; Spritzer, G.; Searleman, J. 
Science, 
1977, 197, 1041. 
5. Wang, T.; E h r l i c h , S.; Evens, M.; Gough, Α.; Johnson, 
P. 
Proc. Conference on I n t e l l i g e n t Systems and 
Machines, 1984, pp. 176-181. 
6. Wang, T.; Burnstein, I.; E h r l i c h , S.; Evens, M.; 
Gough, Α.; Johnson, P. Proc. 1985 Conference on 
I n t e l l i g e n t Systems and Machines, 1985. 
7. 
Nilsson, N. "Principles of 
Artificial 
Intelligence"; 
Tioga: Palo Alto, C a l i f o r n i a , 1980. 
RECEIVED December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch020
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

21 
Acquisition 
a n d Representation of K n o w l e d g e 
for E x p e r t Systems in O r g a n i c C h e m i s t r y 
J. Gasteiger, M. G. Hutchings
1, P. Löw, and H. Saller 
Institute of Organic Chemistry, Technical University Munich, D-8046 Garching, 
West Germany 
Many of the models used by the organic chemist to ex­
plain his observations provide a good basis for repre­
senting chemical knowledge in an expert system. Such 
knowledge can be acquired by developing algorithms for 
these models and parameterizing them with the aid of 
physical or chemical data. This is demonstrated for 
concepts such as electronegativity, 
polarizability, 
or 
the inductive and resonance effects. Combination of 
these models permits construction of systems which 
make predictions worthy of an experienced chemist. 
This is exemplified by EROS, a system that can predict 
the course of chemical reactions or can design organic 
syntheses. 
Chemistry - as a s c i e n t i f i c and technological d i s c i p l i n e - has some 
unique characteristics. In contrast to physics, where most of the 
underlying laws can be given i n e x p l i c i t and sometimes simple mathe-
matical form, many of the laws governing chemical phenomena are 
either not e x p l i c i t l y known, or else have a mathematical form that 
s t i l l eludes an exact solution. S t i l l , chemistry does provide - and 
rests on- quantitative data of physical or chemical properties of 
high numerical precision. A search for quantitative relationships i s 
thus suggested, despite the lack of a tractable theoretical basis. 
Chemists have accumulated over the last two centuries an enormous 
amount of information on compounds and reactions. However, this i n -
formation appears largely as a collection of individual facts devoid 
of any comprehensive structure or organization. This i s most pain-
f u l l y f e l t by the novice studying chemistry. However, the more he 
progresses i n his s c i e n t i f i c d i s c i p l i n e , the more concepts and rules 
emerge that allow him to bring order into his knowledge. These con-
cepts include p a r t i a l atomic charges, electronegativity, inductive, 
resonance, or s t e r i c effects, which have a l l been coined by the 
1 Current address: Organics Division, Imperial Chemical Industries pic, Blackley, 
Manchester M9 3DA, England 
0097-6156/86/0306-0258$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

21. 
GASTEIGER ET 
AL. 
Acquisition and Representation of Knowledge 
259 
chemist do derive models for the principles governing chemical obser-
vations. The design of these models has involved the reduction of 
collections of individual observations to general principles. 
Throughout this paper we use the term model. I t w i l l refer to 
concepts of varying degrees of sophistication and specification. A 
model can be a notion developed by the chemist to c l a s s i f y an ob-
servation, i t can be an e x p l i c i t procedure for the calculation of a 
value for a physico-chemical concept, or, i t can refer to a mathe-
matical equation for the prediction of an observation. We intention-
a l l y do not distinguish between these different uses i n order to 
stress the point that the development of a model to further under-
standing i s quite a common approach i n science. 
The huge amount of information available i n chemistry early on 
invited the use of the computer for storing and retrieving inform-
ation. Documentation systems have been developed, and are being 
maintained, that contain a sizeable amount of the known chemical 
information. Thus, they have gained importance as a knowledge base 
for assisting the chemist i n solving his problems. Clearly, the con-
struction of a large chemical information r e t r i e v a l system i s an 
enormous endeavor. Furthermore, the work w i l l never be complete as 
new information i s constantly being gathered and should be incorpo-
rated into the system. Beyond that, pure r e t r i e v a l can only give 
access to known information. Without appropriate structuring of 
information no predictions can be made of new information. 
Thus, some of the most important and interesting problems of a 
chemist could not be tackled. 
These are: 
1. What w i l l be the properties of an unknown compound? 
2. What i s the structure of a new compound? 
3. How can a compound with a new structure be synthesized? 
These questions f a l l into the domains of structure-activity re-
lationships, structure elucidation, and synthesis design, respective-
l y . They a l l ask for new information not yet known e x p l i c i t l y . That 
i s , they require predictions. 
I t would be highly desirable to reduce the individual facts i n 
an information r e t r i e v a l system to general principles just as the 
chemist has done i n devising his empirical concepts mentioned pre^ 
viously. Such a reduction of information to i t s essential contents 
asks for insights, to transform information to knowledge. 
We have not attempted to make the computer do the job of auto-
matically finding the fundamental laws of chemistry from a compilation 
of individual facts. Rather, we have e x p l i c i t l y b u i l t into the 
computer specific models that we believe can represent the structure 
of chemical information. We were guided i n this endeavor by concepts 
derived by the chemist and have tried to develop models and proced-
ures 
that quantify these concepts. In doing so we have put more 
emphasis on the acquisition and representation of knowledge than on 
problem-solving techniques. In any expert system the quality of the 
knowledge base i s of primary and desicive importance. 
We are mainly concerned with the development of EROS (Elabora-
tion of Reactions for Organic Synthesis), a program system for the 
prediction of chemical reactions and the design of organic syntheses 
(J_-_3) . This system does not rely on a database of known reactions. 
Instead, reactions are generated i n a formal manner by breaking and 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

260 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
making bonds and s h i f t i n g electrons. In Figure 1 one of those reac-
tion schemes contained i n the program i s shown. This scheme, breaking 
two bonds and making two new ones i s quite important; many rather 
diverse reactions follow that scheme. Such a scheme can be applied i n 
both a forward search (reaction prediction; la and lb) as well as i n 
a retrosynthetic search (synthesis design; l c ) . 
Clearly, not a l l reactions obtained by such a formal scheme can 
be r e a l i s t i c ones. In fact, many have no chemical r e a l i t y (cf. Id). 
A major task i n program development i s therefore, to find ways of 
automatically extracting the chemically feasible reactions from 
amongst the formally conceivable ones. To this end a modelling of 
chemical r e a c t i v i t y seems indispensable. 
Finding the Pieces 
The high quality numerical data on physical and chemical properties 
of atoms, molecules, and compounds present a good starting point for 
the development of a knowledgebase. The task i s to condense the i n -
formation contained i n a series of individual data into a quantita-
tive parametric model which w i l l reproduce the primary data with a 
certain accuracy. I f this i s successful i t can be used to predict 
new, as yet unknown data for which the same kind of accuracy can be 
expected. Furthermore, the parameters could also be of use i n other 
models which i n turn give new types of data. 
In developing models for treating chemical r e a c t i v i t y we have 
been guided by the concepts used by the organic chemist i n discussing 
the causes of organic reactions and their mechanisms. Examples of 
the more prominent effects are shown i n Figure 2. 
Our intention has been to derive models that can quantify these 
various effects and thereby build a basis for a quantitative treat-
ment of chemical r e a c t i v i t y . The following simple models that enable 
calculations to be performed rapidly on large molecules and big data 
sets have been developed. 
Heats of Reaction and Bond Dissociation Energies. The simplest form 
of a model i s an a d d i t i v i t y scheme that derives a molecular property 
through summation over increments assigned to atoms, bonds or groups 
(4). We have explored such an approach by assuming that heats of 
formation can be estimated from values assigned to direct (1,2) and 
next nearest (1,3) atom-atom interactions (5). Values for these para-
meters have been derived from experimental heats of formation through 
multi-linear regression analyses (6). As an example, the heats of 
formation of 49 alkanes have been condensed into four fundamental 
parameters that reproduce the data with a standard error of 0.8 7 kcal 
/mol 
(6). 
This amounts to a sizeable reduction of the information that has 
to be stored, while conserving a rather good accuracy i n the data. 
With these four parameters unknown heats of formation of alkanes can 
be estimated by the a d d i t i v i t y scheme with a s i m i l a r l y high accuracy. 
This approach has been extended to other series of compounds. 
Using these parameters for the estimation of the heats of for-
mation of starting materials and products of a reaction and then 
taking the difference i n these two numbers provides values for reac-
tion enthalpies. Only parameters of those substructures that are 
changed i n a reaction need be considered. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

GASTEIGER ET AL. 
Acquisition and Representation of Knowledge 
I — J 
ι 
J 
+ 
—> I
 + I 
K — L 
Κ 
L 
a) 
CH3—Br 
H O — Η 
C H , 
Br 
I + I 
HO 
Η 
b) 
CH2=CH-C=N 
+ 
0 
H-OH 
CH9=CH—C=N 
2 
I I
 : 
H OH 
C H ^ C H - Ç - H 
H 
O-N-OH 
d) 
CH3— Br 
+ 
H—OH + 
CH. 
Br 
I + I 
H 
OH 
Figure 1. Formal reaction scheme with examples 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

262 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Furthermore, the effects of strained rings and of aromatic com­
pounds must be considered (7), and algorithms that perform these tasks 
have been developed (8,9). Values on bond dissociation energies can 
be calculated by extending the parametrization to radicals (10). 
Table I gives results obtained for methyl propionate; experimental 
values are from compounds containing similar structural situations 
around the bond being considered ( Π ) . 
Table I. Comparison between calculated and experimental bond d i s ­
sociation energies i n methyl propionate ( i n kcal/mol) 
ι
 
2 
2Λ 
C H - C H 2 - C < 0 _ 
5 6
 3 
bond 
BDE (calc) 
BDE (exp.)(ref. 
C'-H 
98.7 
98.2
 
± 1 
C
2-H 
93.4 
92.3 ± 1.4 
C
6-H 
93.8 
94
 
1 2 
c ' - c
2 
85.0 
86.4
 
± 1 
c
2 - c
3 
83.6 
81.2 - 1 
c
3 - o
4 
123.4 
-
c
3 - o
5 
96.9 
95.5 i 1.5 
c
6 - o
5 
86.4 
83.6 * 1.5 
An a d d i t i v i t y scheme i s a rather simple model, but despite t h i s , 
such schemes can be applied to a variety of physical data of mole­
cules. Benson and Buss have c l a s s i f i e d a d d i t i v i t y rules into suc­
cessive approximations and have given examples of their a p p l i c a b i l i ­
ty (40. According to their terminology the zero-order approximation 
of a molecular property i s given by a d d i t i v i t y of atomic properties, 
f i r s t - o r d e r approximation by a d d i t i v i t y of bond properties, and 
second-order approximation by a d d i t i v i t y of group properties. More 
recent widespread use of a d d i t i v i t y schemes i s found i n methods |or 
estimating spectroscopic data, i n particular those for deriving H-
or 
C-NMR chemical s h i f t s of organic molecules. 
P o l a r i z a b i l i t y Effects. The next model demonstrates 
that an addi­
t i v i t y scheme can be combined with other forms of mathematical re­
lations to extract the fundamental parameters of a model from primary 
information. And furthermore, i t shows than an a d d i t i v i t y scheme 
useful for the estimation of a global molecular proparty can be modi­
f i e d to obtain a l o c a l , s i t e specific property. 
M i l l e r and Savchik (12) have given Equation 1 for estimating the 
mean p o l a r i z a b i l i t y , a, of a molecule, where Ν i s the t o t a l number 
of electrons i n the molecule, and τ.is a p o l a r i z a b i l i t y contribution 
for each atom i , characteristic of èhe atom type and i t s hybridi-
zation state. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

21. 
GASTEIGER ET AL. 
Acquisition and Representation of Knowledge 
263 
ά = | ( Σ τ . )
2 
(!) 
i 
Mean molecular p o l a r i z a b i l i t y can be calculated through the 
Lorenz-Lorentz- Equation from refractive index, η , molecular weight, 
MW, and density, d, of a compound, demonstrating that the parameters 
T£ can be derived from these elementary molecular properties 
(Figure 
3). 
P o l a r i z a b i l i t y i s a measure of the r e l a t i v e ease of distortion 
of a dipolar system when exposed to an external f i e l d . The s t a b i l i ­
zation energy due to the interaction between an external charge and 
the induced dipole i s highly distance-dependent and can be calcula­
ted through c l a s s i c a l electrostatics. The situation i s , however, 
less clearly defined when the charge resides within the molecule 
that i s being polarized. To model the s t a b i l i z a t i o n resulting from 
p o l a r i z a b i l i t y i n these situations, we have modified Equation 1 by 
introducing a damping factor d
n i ~ ^ , where 0 < d < l , and n£ gives the 
smallest number of bonds between an atom i and the charge center 
(Equation 2)(13) · 
» d - i < ? *
n
i " S >
2 
<
2> 
i 
α i s called effective p o l a r i z a b i l i t y , as the damping factor models 
the distance dependent attenuation of the s t a b i l i z a t i o n effect. 
Furthermore, this factor gives different values for 
for the same 
molecule depending on where the charge center i s located. An alterna­
tive a d d i t i v i t y scheme (14) for estimating mean molecular polariza­
b i l i t y can be s i m i l a r l y modified to obtain values of effective 
p o l a r i z a b i l i t y (15). The significance of these values has been demon­
strated by correlation with physical data (13). 
Charge Distribution, Inductive and Resonance Effects. 
U n t i l now, 
the discussion has been concerned 
with models based on a d d i t i v i t y 
schemes and their modifications. However, we have also explored 
other types of models that can be put into algorithms that are fast, 
albeit less convenient for pencil and paper application. 
This i s true for our procedure for calculating p a r t i a l atomic 
charges i n σ-bonded molecules (16). The method starts from Mulliken's 
d e f i n i t i o n of electronegativity, χ, derived from atomic ionization 
potentials, IP, and electronegativities, EA (Equation 3)(17). 
χ = 0.5 (IP + EA) 
(3) 
Electronegativity was considered to be dependent both on o r b i t a l 
type, and on the occupation number of an o r b i t a l (or, equivalently, 
the charge on an atom). On bond formation, negative charge i s trans­
ferred from the less to the more electronegative atom. Because of 
the charge dependence, the electronegativities change i n the sense 
that they tend to equalize. The problem of the mutual dependence of 
electronegativity on charge and of charge transfer on electronega­
t i v i t y was solved by an interative procedure that takes e x p l i c i t ac­
count of the molecular topology (16). This gives access to a s e l f -
consistent set of values of p a r t i a l charges and associated residual 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

264 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
— heat of reaction and bond dissociation energy 
H3C—H + Χ—X 
^ H3C— X + H—X 
— charge distribution 
δ+.Ο 
H 3 C — + :Nu 
— inductive effect 
Cl-CH 2-COOH 
0 Θ 
I 
hUC — C—Nu 
Η 
Cl-CH 9-C00 G + H® 
— polarizability 
Br-CH 2CH 2-Cl + OHG 
HO-CH 2CH 2-Cl + Br 
resonance effect 
H2C=CH—+H-CN 
^ NC-CH2-CH2—C, 
A 
H 
H2C—CH=C 
Figure 2 . Concepts used i n discussing the causes of organic 
reactions 
MW 
d ' 
Lorenz-
Lorentz-
Equation 
»cc-
Additivity 
Scheme 
Attenuation 
Model 
7 
OU 
Figure 3. Deriving values for effective p o l a r i z a b i l i t y , ot^, from 
refractive index, n D , molecular weight, MW, and density, d 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

21. 
GASTEIGER ET AL. 
Acquisition and Representation of Knowledge 
265 
electronegativity values for each atom of a molecule, reflecting 
atomic type as well as the influence of the molecular environment. 
The charge values have been used to correlate or calculate a 
variety of physical data including dipole moments (18), ESCA chemical 
s h i f t s (16), ^H-NMR chemical s h i f t s (19), and
 1 J c _ H c o u p l i n g constants 
(20), thereby relating these physical data to the fundamental values 
of IP and EA, i n concert with a proper consideration of the network 
of bonds i n molecules. 
An extension of the method has been developed for conjugated 
π-systems which arrives at charge distribution i n these systems by 
generating the various resonance structures and assigning weights 
to them (21, 22). Again, the significance of the charge values was 
established by reproducing physical data of molecules. 
I t was found that the residual electronegativity values calcu­
lated for σ-bonded molecules can be taken as a quantitative measure 
of the inductive effect (23). In a similar manner, the values of π-
electronegativities can be used for quantifying the resonance effect. 
Hyperconjugation. Empty or p a r t i a l l y f i l l e d p-orbitals can be stabi­
l i z e d through overlap with adjacent C-H and C-C bonds of appropriate 
symmetry. Following a previous suggestion (24), we have taken the 
number of such bonds as a measure of this s t a b i l i z a t i o n through 
hyperconj ugat ion. 
Putting the Pieces Together 
The previous chapter has b r i e f l y presented methods that quantify the 
various effects used by the organic chemist to rationalize his obser­
vations on r e a c t i v i t y , reaction mechanisms, and the course of organic 
reactions. Physical data were chosen to demonstrate the significance 
of the calculated values. 
But are the values calculated by the above methods also useful 
for understanding and prediction of chemical r e a c t i v i t y data? Here, 
the situation i s less well-defined than with physical properties. In 
many cases our knowledge of chemical r e a c t i v i t y i s more of a semi­
quantitative nature. Furthermore, i n many reactions the various ef­
fects operate simultaneously, and they do so to varying degrees. 
Several s t a t i s t i c a l and pattern recognition techniques were used 
to unravel the relationships between chemical r e a c t i v i t y data and the 
previously described effects which influence them. 
Multilinear Regression Analysis. As an entry to the problem we have 
selected simple gas phase reactions involving proton or hydride ion 
transfer which are influenced by only a few effects and for which 
r e a c t i v i t y data of high accuracy are available. In these situations 
where a larger set of numerial data are available multilinear re­
gression analysis (MLRA) was applied. Thus, the simplest mathematical 
form, a linear equation i s chosen to describe the relationship bet­
ween r e a c t i v i t y data and physicochemical factor. The number of para­
meters (factors) simultaneously applied was always kept to a minimum, 
and a particular parameter was only included i n a MLRA study i f a 
definite indication of i t s relevance existed. 
The proton a f f i n i t y (PA) of alkylamines can be described by 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

266 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
only a single parameter, the effective p o l a r i z a b i l i t y α ,(13). For 49 
tmsubstituted alkylamines a method was found to calculate proton af-
f i n t i t y from the refractive index, molecular weight, and density (cf. 
Figure 3). For alkylamines carrying heteroatom 
substitution a 
measure of the inductive effect had to be included. This could be a-
chieved by using residual electronegativity values, χ"^ i n the two 
parameter equation 4 (23). 
P A 
= 
V
 
Cl°d "
 C2
Y12
 
( 4 ) 
The signs of the coefficients i n this equation are entirely con­
sistent with i n t u i t i o n , p o l a r i z a b i l i t y s t a b i l i z i n g , and electronega­
t i v i t y destabilizing the protonated form of the amine. Similar equat­
ions could be developed for proton a f f i n i t y data of alcohols and 
ethers, as well as of t h i o l s and thioethers (Figure 4b and 4c) (25). 
Furthermore, 
and χ ^ parameters were also sufficient to describe 
quantitatively gas phase acidity data of alcohols (Figure 4d) (25). In 
this case, the coefficients for the two parameters had the same sign 
as both effects provide sources of s t a b i l i z a t i o n for the alkoxide 
ion. Figure 5 shows the results obtained by MLRA. 
Simple linear equations could also be developed for the other 
three systems of Figure 4, PA of aldehydes and ketones(4e), and their 
hydride ion a f f i n i t i e s , both of the neutral (4f) and protonated forms 
(4g). However, i n addition to effective p o l a r i z a b i l i t y and electro­
negativity, hyperconjugation had also to be used as a parameter, as 
ρ-orbitals carrying a p a r t i a l positive charge are involved i n the 
reactions 4e to 4g (26). 
Multiparameter equations, such as Equation 4, obtained through 
MLRA are the simplest form of p a r a l l e l connection of several models. 
Each model has been parameterized from i t s own source of primary 
data. Combined application can reproduce new types of data and lead 
to new information and knowledge. 
The correlations with data on gas phase reactions have served 
to establish that the parameters calculated by our methods are indeed 
useful for the prediction of chemical r e a c t i v i t y data. Their applica­
tion i s , however, not restricted to data obtained i n the gas phase. 
This has been shown through a correlation of pK 
values ( i n H^O) of 
alcohols with residual electronegativity and poîarizability para-
meters, by including a parameter that i s interpreted to r e f l e c t 
s t e r i c hindrance of solvation (27). 
The Reactivity Space. In many reaction types the situation i s not as 
well defined as i n the chemical reactions so far investigated. If 
either fewer and less accurate r e a c t i v i t y data are available, or the 
chemical system i s under the influence of many effects, then MLRA i s 
no longer the appropriate analytical method. 
For such situations we have developed a different approach. The 
parameters calculated by our methods are taken as coordinates i n a 
space, the r e a c t i v i t y space. A bond of a molecule i s represented i n 
such a space as a specific point, having characteristic values for 
the parameters taken as coordinates. Figure 6 shows a three-dimens-
ional 
r e a c t i v i t y space spanned by bond polarity, bond dissociation 
energy, and the value for the resonance effect as coordinates. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

GASTEIGER ET AL. 
Acquisition and Representation of Knowledge 
R1
X 
R1
xe 
R2-^N + 
Η φ 
> R 2-N-H 
R3/ 
R
3 / 
R1 
R \
e 
p2/ 
R 
d) 
R - O - H 
*
 
R - 0
y + 
H* 
e) 
C=0 + 
> 
C=0-H 
f) 
\ = 0 + Η Θ 
» V o ® 
g) 
C=0-H + H 
> 
C-O-H 
Figure 4. Gas phase reactions for which linear equations have 
been developed using p o l a r i z a b i l i t y , electronegativity, and 
hyperconiugation parameters. Reaction a) réf. JJ3, 2_3; b)-d) ref. 
25; e)-g) ref. 26. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
MeOH 
-
R-0-H 
> 
R-0
 Θ 
+ 
Η
 
Φ 
ο "
5 
ε 
Ία 
ο 
-
- r
0
H . 
. 
1
370 
ΖΣΖ 
-
365 
χ
 
F
v r "
0
H 
Δ Η 
l F 
ν 
ι 
ι 
ι 
r= 
c
0 "
 C1X"
 c2
ad 
I 
I 
365 
370 
375 
ΔΗ ρ (calc.) 
kcal/mol 
Figure 5. Experimental gas phase acidity data of alcohols 
plotted against values calculated from electronegativity and 
p o l a r i z a b i l i t y parameters. (Reprinted from: Gasteiger, J . ; 
Hutchings, M.G. J. Am. Chem. Soc. 1984, 106, 6489). 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

21. 
GASTEIGER ETAL. 
Acquisition and Representation of Knowledge 
269 
Figure 6. 
R e a c t i v i t y space having bond p o l a r i t y , Q^, bond d i s -
s o c i a t i o n energy, BDE, and resonance e f f e c t parameter, R, as 
coordinates. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

270 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
In this space various bonds of 2-chlorobutyric acid are indicated. In 
fact, i n this case we have investigated heterolytic bond cleavages. 
Thus, each bond w i l l give r i s e to two points i n this space, depending 
on which direction the charges are shifted on heterolysis, i n the 
direction of bond p o l a r i t y , or against i t . For example, points 2 and 
3 of Figure 6 both refer to the carbonyl double bond. In the case of 
point 2, i t s heterolysis against the preformed polarization of that 
bond (Figure 7), and therefore the bond polarity parameter Qa has a 
negative sign. 
Points 2 and 3 are characterized by the same value for the (homo-
l y t i c ) bond dissociation energy. However, resonance s t a b i l i z a t i o n of 
charges can occur only for the heterolysis represented by point 3. 
Therefore i n this case, the resonance parameter R has a high value, 
whereas i t i s zero for the heterolysis represented by point 2. 
Figure 6 shows an additional feature, The points are d i s t i n ­
guished according to whether the associated bond i s considered react­
ive (breakable; small cubes) or not (non-breakable; small pyramides). 
Any chemist w i l l agree that the most reactive bonds of 2-chlorobutyric 
acid are the 0-H, the C=0, and the C-Cl bonds, where the negative 
charge goes to the more electronegative atom (0 or CI) on heterolysis. 
This heterolytic cleavage of the three bonds i s represented by points 
7, 3, and 4, respectively. The other bonds are considered as much 
less reactive, or non-breakable. I t can be seen that reactive and non-
reactive bonds clearly separate. Thus, this three-dimensional space 
already represents the ease of breaking a bond, a chemical r e a c t i v i t y 
phenomen, quite well. 
With Figure 6 a three-dimensional r e a c t i v i t y space i s shown. Where­
as this i s the l i m i t for p i c t o r i a l representation, s t a t i s t i c a l 
methods can deal with spaces of higher dimensionalities. In a study 
aimed at modelling the r e a c t i v i t y of single bonds i n aliphatic 
chemistry a data set of 28 molecules representing that f i e l d was 
chosen. Table I I gives this data set. 
The entire set of molecules contained 782 bonds out of which 111 
σ-bonds were selected. The parameters were calculated by our methods to 
build a r e a c t i v i t y space with electronegativity difference, resonance 
effect parameter, bond p o l a r i z a b i l i t y , bond p o l a r i t y , σ-charge d i ­
stribution, and bond dissociation energy as s i x coordinates. 
F i r s t , unsupervised-learning pattern recognition methods were 
applied. A principal component analysis showed that the dimension­
a l i t y of the space could be reduced without much loss of information. 
With three factors, instead of s i x , 85.9% of the variance of the data 
set could s t i l l be reproduced. The f i r s t factor can be identified as 
containing the σ-electron d i s t r i b u t i o n , the second factor i s highly 
loaded with the bond dissociation energy and bond p o l a r i z a b i l i t y . The 
third factor contains a mixture of effects. Cluster analysis was 
applied as a second unsupervised learning technique. In this case i t 
was applied to a r e a c t i v i t y space of reduced dimensionality using 
-
for reasons that become clearer below - the resonance effect, bond 
p o l a r i t y , and the bond dissociation energies as coordinates. The re­
sults are shown as a dendrogram i n Figure 8. 
It i s probably not too surprising that the same bond types 
cluster together, as they are characterized by similar values for the 
respective parameters. However, the interrelationships between d i f ­
ferent bond types indicated by the overall structure of the dendro-
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

21. 
GASTEIGER ET AL. 
Acquisition and Representation of Knowledge 
271 
\ 6 + 
6-
C=0 
/ 
\ θ θ 
\ φ 
θ 
C—Ο 
κ 
point 2 
point 3 
Figure 7. The two choices for heterolysis of the carbonyl double 
bond, and their representation as points i n Figure 8. 
Table I I . L i s t of compounds used i n deriving a r e a c t i v i t y function 
1) cyclopropane 
2) cyclobutane 
3) cyclopentene 
4) cyclopentadiene 
5) ethyl bromide 
6) ethyl iodide 
7) methylene chloride 
8) a l l y l chloride 
9) neopentyl chloride 
10) 1-methyl-1-cyclopropyl-ethy1 bromide 
11) 1-methyl-1-cyclobuty1-ethyl iodide 
12) 2,2,4,4,-tetramethylcyclobutanol 
13) acetaldehyde 
14) acetone 
15) trimethylacetaldehyde hydrate 
16) choral hydrate 
17) aldol 
18) methyl propionate 
19) ethyl acetoacetate 
20) ct-chloropropionic acid 
2Π 5-hydroxy-nona-3,5,8-triene-2-one 
22) 2-oxocyclopentane carboxylic acid 
23) 5-hydroxy-5-methyl-butylrolactone 
24) 1-dimethylamino-propene 
25) 4-amino-2,4-dimethyl-2-pentanole 
26) succinimide 
27) a-picoline 
28) 6-chloro-6-methoxy-bicyclo [3.1 .oJhex-2-
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

272 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Figure 8. Dendrogram of the relationship between the various 
bonds on heterolysis as obtained by a cluster analysis (A= accep-
tor* D= donor). 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

21. 
GASTEIGER ETAL. 
Acquisition and Representation of Knowledge 
273 
gram, and some of the smaller details of the dendrogram give inter­
esting information. To name just one: the C-C bonds of the three-
and four-membered carbocycles are found to be rather closely related 
to the carbon-halogen bonds ( i n both cases carbenium ions can be ob­
tained, either d i r e c t l y as with the C-Hal bond, or after attack of an 
electrophile (H
+, Lewis acid) as both with halocarbons and with cyclo-
propanes and cyclobutanes). 
Next, supervised-learning pattern recognition methods were ap­
plied to the data set. The 111 bonds from these 28 molecules were 
c l a s s i f i e d as either breakable (36) or non-breakable (75), and a step­
wise discriminant analysis showed that three variables, out of the 
six mentioned above, were p a r t i c u l a r l y significant: resonance effect, 
R, bond p o l a r i t y , QQ, and bond dissociation energy, BDE. With these 
three variables 97.3% of the non-breakable bonds, and 86.1% of the 
breakable bonds could be correctly c l a s s i f i e d . This says that chemi­
cal r e a c t i v i t y as given by the ease of heterolysis of a bond i s well 
defined i n the space determined by just those three parameters. The 
same conclusion can be drawn from the results of a K-nearest neigh­
bor analysis: with k assuming any value between one and ten, 87 to 
92% of the bonds could be correctly c l a s s i f i e d . 
One method that we have found p a r t i c u l a r l y useful for our pur­
poses i s l o g i s t i c regression analysis (LoRA). In this method, a 
binary c l a s s i f i c a t i o n i s taken as a probability, P Q (given the value 
0 or 1) and modelled by the two coupled equations 5 and 6. 
Ρ = 1/(1 + e"
f) 
(5) 
f = c + c.x. 
+ c 0 x 0 + ... 
(6) 
ο 
11 
II 
In the linear function f, the x. are the parameters considered 
relevant to the problem. The coefficients c. are determined to maxi­
mize the f i t of the calculated probability £ as closely as possible 
to the i n i t i a l c l a s s i f i c a t i o n P Q. 
The method applied to the problem of chemical r e a c t i v i t y trans­
lates into the following. A data set of molecules i s chosen and bonds 
i n these molecules are selected and specified either breakable or 
non-breakable (P 0 = 0/1). Then, the physicochemical parameters deemed 
important for the r e a c t i v i t y of the bonds under investigation are 
calculated and used as variables x. i n Equation 6. LoRA i s applied 
to model the i n i t i a l c l a s s i f i c a t i o n of bonds into breakable or non-
breakable classes. 
In this process, a function f i s obtained that can be used as a 
numerical estimate for the ease of breaking of a bond. We therefore 
c a l l i t a r e a c t i v i t y function. The all-important point i s that 
through LoRA the qualitative information of whether a bond i s break­
able or not i s used to construct a function that predicts chemical 
r e a c t i v i t y quantitatively. 
A r e a c t i v i t y function (Equation 7) applicable to single bonds i n 
aliphatic species was obtained with the data set of 111 bonds from 
the 28 molecules mentioned above. 
f = 2.87 + 0.162-R + 32.9-Q - 0.084-BDE 
(7) 
σ 
In a similar manner, a function quantifying the r e a c t i v i t y of 
bonds i n charged species was developed. These functions are of quite 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

274 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
general v a l i d i t y - The numerical values calculated with them permit 
prediction of which bonds and combinations of bonds w i l l react pre-
f e r e n t i a l l y . Inferences on the course of complex organic reactions 
can be drawn from this information. 
As an example: What w i l l be the product of heating 1,2:1,4—di— 
epoxy-p-menthane, J . (Figure 9) with alumina i n toluene? A chemist 
would assume i n i t i a l breaking of an epoxide-ring. But which one of 
the two? Or w i l l both break? Furthermore, for each epoxide ring there 
are two possible choices of C-0 bonds. 
Figure 10 shows the sequence of bond breaking obtained by a p p l i -
cation of the r e a c t i v i t y function for neutral aliphatic molecules and 
the one for charged species. The consecutive bond breakings that are 
explored lead to the conclusion that the pattern of breaking and 
making bonds as indicated i n structure 2 should be the most favored 
one. Thus, i t i s predicted that both oxirane-rings are broken, one 
even i n the direction leading to the seemingly less stable carbenium 
ion. Furthermore, even a bond i n the saturated six-membered ring i s 
found to be breakable. The mechanistic pattern of structure g permits 
to make the inference that compound 3 i s
 t n e most l i k e l y product of 
this reaction. This i s indeed the observed course and product of the 
rearrangement of 1 (28). 
Examples of other cases of prediction of complex organic react-
ions have been given elsewhere (3). Functions applicable to the 
r e a c t i v i t y of multiple bonds and of aromatic systems have been de-
veloped i n an analogous manner. 
Conclusion. 
I t has been demonstrated that the methods developed for 
the calculation of physicochemical effects can form the foundation 
for a general quantitative treatment of chemical r e a c t i v i t y . Based on 
the factors calculated with these various methods, r e a c t i v i t y funct-
ions can be elaborated that are able to assign a numerical 
r e a c t i v i -
ty to bonds and combinations of bonds i n a molecule. In this manner 
the course and outcome of organic reactions can be predicted. A 
quantitative treatment of chemical r e a c t i v i t y i s also an essential 
component i n synthesis design since i t allows evaluation of the 
f e a s i b i l i t y of various synthetic reactions and pathways. 
The knowledge base of that part of the EROS system that predicts 
chemical r e a c t i v i t y consists of the procedures for calculating the 
physicochemical effects and the way i n which they are connected. 
These methods can be part of a series connection (Figure 3) or of a 
p a r a l l e l connection (Equation 4). In other words, the knowledge base 
consists of the chemical models that form the building blocks and the 
s t a t i s t i c a l models that form the network of connections. 
As the chemical models mentioned here refer to some fundamental 
thermochemical and electronic effects of molecules, their application 
i s not restricted to the prediction of chemical r e a c t i v i t y data. In 
fact, i n the development of the models extensive comparisons were 
made with physical data, and thus such data can also be predicted 
from our models. Furthermore, some of the mechanisms responsible for 
binding substrates to receptors are naturally enough founded on 
quite similar electronic effects to those responsible for chemical 
r e a c t i v i t y . This suggest the use of the models developed here to c a l -
culate parameters for quantitative structure-activity relationships 
(QSAR). 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

GASTEIGER ET AL. 
Acquisition and Representation of Knowledge 
275 
1 
Figure 9. 
Example of a problem f o r r e a c t i o n p r e d i c t i o n 
3 
F i g u r e 
1 0 . 
Network of bond-breaking and -making p a t t e r n s 
explored by the r e a c t i v i t y f u n c t i o n s l e a d i n g to the c o r r e c t pre­
d i c t i o n of product 3 from Κ 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

276 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
In this sense, expert systems for the prediction of chemcial reactions, 
for the design of organic syntheses, for the prediction of physical 
data, for structure elucidation , and for QSAR can be founded on the 
knowledge base comprized by the models presented here. 
Acknowledgments 
Support of this work by the Deutsche Forschungsgemeinschaft and by 
Imperial Chemical Industries, p i c , United Kingdom, i s gratefully 
appreciated. 
Literature Cited 
1. Gasteiger, J.; Jochum, C. Topics Curr. Chem. 1978, 74, 93. 
2. Gasteiger, J. Chim. Ind. (Milan) 1982, 64, 714. 
3. Gasteiger, J.; Hutchings, M.G.; Christoph, B.; Gann, L.; 
H i l l e r , C.; Löw, P.; M a r s i l i , M.; Saller, H.; Yuki, K. Topics 
Curr. Chem., submitted. 
4. Benson, S.W.; Buss, J.H. J. Chem. Phys. 1958, 29, 546. 
5. Allen, T.L. J. Chem. Phys. 1959, 31, 1039 
6. Gasteiger, J.; Jacob, P.; Strauss, U. Tetrahedron 1979, 35, 139. 
7. Gasteiger, J.; Dammer, O. Tetrahedron 1978, 34, 2939. 
8. Gasteiger, J. Tetrahedron 1979, 35, 1419. 
9. Gasteiger, J. Comput. Chem. 1978, 2, 85. 
10. Gann, L.; Löw, P.; Yuki, K.; Gasteiger, J., unpublished results. 
11. a) McMillen, D.F.; Golden, D.M. Ann. Rev. Phys. Chem. 1982, 22, 
493. 
b) Egger, K.W.; Cocks, A.T. Helv. Chim. Acta 1973, 56, 1516. 
12. Miller, K.J.; Savchik, J.A. J. Am. Chem. Soc. 1979, 101, 7206. 
13. Gasteiger, J.; Hutchings, M.G. Tetrahedron Lett. 1983, 24, 2537; 
J. Chem. Soc., Perkin Trans. 2 1984, 559. 
14. Kang, Y.K.; Jhon, M.S. Theor. Chim. Acta 1982, 61, 41. 
15. Löw, P.; Gasteiger, J., unpublished results. 
16. Gasteiger, J.; Marsili, M. Tetrahedron Lett. 1978, 3181; Tetra-
hedron 1980, 36, 3219. 
17. Mulliken, R.S. J. Chem Phys. 1934, 2, 782. 
18. Gasteiger, J.; Guillen, M.D. J. Chem. Res. (S) 1983, 304; (M) 
1983, 2611. 
19. Gasteiger, J.; Marsili, M. Org. Magn. Resonance 1981, 15, 353. 
20. Guillen, M.D.; Gasteiger, J. Tetrahedron 1983, 39, 1331. 
21. M a r s i l i , M.; Gasteiger, J. Croat. Chem. Acta 1980, 53, 601. 
22. Gasteiger, J.; Sailer, H. Angew. Chem. 1985, 97, 699; Angew. 
Chem. Int. Ed. Engl., 1985, 24, 687. 
23. Hutchings, M.G.; Gasteiger, J. Tetrahedron Lett. 1983, 24, 2541. 
24. Kreevoy, M.M.; T a f t , R.W. J. Am. Chem. Soc. 1955, 77, 5590. 
25. Gasteiger, J.; Hutchings, M.G. J. Am. Chem. Soc. 1984, 106, 6489. 
26. Hutchings, M.G.; Gasteiger, J. J. Chem. Soc., Perkin Trans. 2, 
in press. 
27. Hutchings, M.G.; Gasteiger, J. J. Chem. Soc., Perkin Trans. 2, 
in press 
28. Ho, T.L.; Stark, C.J. 
Liebigs Ann. Chem. 1983, 1446. 
RECEIVED 
December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch021
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

22 
An E x p e r t System for High P e r f o r m a n c e 
Liquid 
C h r o m a t o g r a p h y M e t h o d s D e v e l o p m e n t 
René Bach
1, Joe Karnicky
1, and Seth Abbott
2 
1Varian Research Center, Varian Associates, Inc., Palo Alto, CA 94303 
2Varian Instrument Group, Varian Associates, Inc., Walnut Creek, CA 94598 
ECAT (Expert Chromatographic Assistance Team) is an 
expert system being developed at Varian Associates. 
The goal of our project is to create a computer pro-
gram that performs, at the human expert level, the 
tasks 
of 
designing, 
analyzing, 
optimizing, 
and 
trouble-shooting a high performance liquid chroma-
tography (HPLC) separation method. 
The program is 
successfully reaching conclusions relating to a number 
of 
probes that test the design and trouble-shooting 
capabilities. 
This paper describes the development of 
ECAT in terms of the overall strategy of the program, 
the hardware and software used, and the development of 
the knowledge bases. 
Current results and future plans 
are discussed. 
The goal of our current research i s to apply A r t i f i c i a l 
I n t e l l i -
gence (AI) techniques to the writing of an expert system for High 
Performance Liquid Chromatography (HPLC) methods development; that 
i s , to produce a computer program capable of developing HPLC 
separation methods i n a manner comparable to that of an expert 
chromatographer. 
The expert system program i s named ECAT (an 
acronym for Expert Chromatographic Assistance Team). 
Creating a machine chromatographer i s a highly ambitious 
goal. Because i t w i l l involve a very large effort to complete the 
ECAT program as envisioned, we are developing the system as a set 
of (eventually interacting) modules whose functionality can be 
separately specified and implemented. 
Once one has b u i l t or acquired an expert system s h e l l , an 
expert system i s usable and useful at an early stage of develop-
ment. 
Subsequent development consists of increasing and refining 
the knowledge, expanding the functionality and improving the 
efficiency of the system. 
The reader of this paper should be aware that the overall 
design of ECAT (described i n the sections on SYSTEM DESIGN and 
FUTURE WORK) has only been implemented to the extent of the 
running modules that are described under CURRENT STATUS. 
0097-6156/ 86/0306-0278$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

22. 
BACH ET AL. 
An Expert System for HPLC Methods Development 
279 
Background 
The original design for ECAT was described i n an a r t i c l e by Dessy 
(_1). 
The development of the system to date has deviated consider-
ably from this plan both i n implementation methodology and rate of 
progress. 
This i s primarily attributable to the fact that the 
s k i l l and experience of our group i n applying AI programming 
techniques has grown with time. 
Project Motivation. 
Chromatography, i n general, and methods 
development, i n particular, exhibit characteristics which indicate 
that writing an expert system i s worthwhile: 
while chromatography 
i s used by a large and diverse technical group ( i . e . , biologists, 
engineers), the number of s k i l l e d chromatographers i s i n f i n i t e 
supply. 
HPLC i s characterized by a dynamic, expanding knowledge base, 
which should benefit from a systematic reorganization of knowledge 
i n a common repository (the expert system). 
Writing an expert 
system for HPLC would make available to users of chromatographic 
techniques an automatic, reliable and fast application of existing 
chromatographic expertise. It could communicate this expertise i n 
an instructional manner, and provide for the convenient construc-
tion and manipulation of data (rule) bases containing structured 
representations of chromatographic knowledge. 
AI research i n the last decade has demonstrated that i t i s 
possible to capture and apply the human expertise related to a 
specialized f i e l d by means of an expert system computer program. 
Limitations of Conventional Programming. It i s clear that truly 
intelligent and comprehensive methods development i s s u f f i c i e n t l y 
complex to be beyond what a conventional computer program can 
manage. 
Conventional programming methods are inadequate because 
of the d i f f i c u l t y of writing, and subsequently debugging and 
modifying, a procedural algorithm which could perform the complex 
task of HPLC method development. In addition, conventional pro-
gramming methods don't support e f f i c i e n t l y the a b i l i t y to repre-
sent and manipulate information which i s non-numeric, judgmental, 
uncertain, and incomplete. 
Research i n AI over the last two 
decades has yielded programming languages and programming methods 
for writing expert systems which do not suffer from the above 
limitations. 
We have applied some of these methods, described 
below, to create ECAT. 
Expert System Programming. Many of the concepts and terms which 
w i l l be used i n the description of this work are unique to the 
fields of AI and computer science. The reader should refer to the 
a r t i c l e by Dessy (_2) or to the introductory a r t i c l e of this sympo-
sium for a more detailed description of these concepts. 
There i s some disagreement within the AI community as to what 
qualifies a computer program to be called an "expert system". We 
use the term to describe a program which has the following charac-
t e r i s t i c s : 1) The program performs some task (e.g., HPLC methods 
design) which requires specialized human expertise. 
This human 
expertise often takes the form of heuristics (empirical rules of 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

280 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
thumb); 
2) The "domain knowledge" ( i . e . , the knowledge i n the 
program specific to the task at hand, for example: methods design) 
i s e x p l i c i t l y encoded i n a computer readable form and i s segre-
gated from the mechanisms for i t s application (collectively called 
the "inference engine"); 
3) The system has the potential for 
explaining i t s reasoning; 
4) The amount of knowledge encoded i n 
the system i s non-trivial ( i . e . , for a rule-based system there are 
hundreds or thousands of rules). 
Figure 1 i l l u s t r a t e s the elements and individuals involved i n 
developing and using the ECAT expert system. The domain knowledge 
(including heuristic knowledge) i s e l i c i t e d from the domain expert 
by the knowledge engineer who uses software tools to convert the 
knowledge into computer processable form ( i . e . , facts and rules i n 
knowledge bases). An individual uses the program by communicating 
with the system v i a the user interface. 
In response to the user's 
requests, the inference machinery makes logical deductions and 
performs tasks by processing the appropriate knowledge base. 
Results are communicated back to the user via the user interface. 
Related Work 
Algorithmic Methods Development. 
The recent development of sta-
tistically-based HPLC solvent optimization computer programs (3-9) 
have achieved useful behavior i n experimental design by optimizing 
separations with respect to specific performance c r i t e r i a . How-
ever, AI programming techniques were not applied i n these pro-
grams. 
Expert Systems for Chemistry. 
At this time, there are a very 
large number of expert systems for chemistry i n various stages of 
development. 
(See, for example, some of the other papers i n this 
symposium.) Some of the more successful systems developed i n the 
past include: The DENDRAL series of programs from Stanford- These 
include DENDRAL (started i n 1965), CONGEN, and META-DENDRAL 
(10-11). 
These programs elucidate chemical structures from mass-
spectral information. 
Similar programs have been used to compu-
terize CI 3 NMR 
spectral analysis (12-13). 
Most recently the 
PROTEAN project aims at computing the three-dimensional structure 
of proteins i n solution using NMR data (14); The CRYSALIS program 
interprets a three-dimensional image of the electron density map 
obtained by X-ray crystallography of proteins (15); SYNCHEM and 
SYNCHEM2 (16-17), LHASA (18), and SECS (19) are examples of compu-
terized or computer-assisted organic synthesis. 
System Strategy 
The goal of ECAT i s to provide assistance to the user of a chroma-
tograph i n the development of an HPLC method. 
To do t h i s , one 
must specify the tasks performed i n developing an analytical 
method. 
The computer performs these tasks by processing informa-
tion. 
In ECAT we are c a l l i n g the collection of information spe-
c i f i c to a task a Module. 
The modules and information flow which 
w i l l be needed for the completely implemented ECAT are shown i n 
Figure 2. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

BACH ET AL. 
An Expert System for H PLC Methods Development 
DOMAIN 
EXPERT 
USER 
KNOWLEDGE 
ENGINEER 
USER 
INTERFACE x 
KNOWLEDGE BASE 
CONSTRUCTION 
AIDS 
N Kr 
MRS INFERENCE ENGINE: 
FORWARD CHAINING 
BACKWARD CHAINING 
META LEVEL 
ECAT SHELL 
CMP 
KNOWLEDGE 
BASE 
COLDIAG 
KNOWLEDGE 
BASE 
Figure 1. Elements involved i n development and application of 
the ECAT expert system. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
SAMPLE AND MATRIX 
INFORMATION 
DECIDE ON 
SAMPLE CLEANUP 
(MODULE 4) 
DIAGNOSE 
HARDWARE 
FAULTS 
(MODULE 6) 
OPTIMIZE THE 
SEPARATION 
(MODULE 5) 
~
~
r
~ 
OPTIMIZED 
SEPARATION 
Figure 2. ECAT task modules: flow of information i n the method 
design process. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

22. 
BACH ET AL. 
An Expert System for HPLC Methods Development 
283 
The complete ECAT system as envisioned i n Figure 2 w i l l take 
as input the user's specification of the sample to be analyzed 
(analytes, matrix) and w i l l ultimately produce a separation method 
that s a t i s f i e s the user's requirements for resolution and analysis 
time. 
The strategy adopted i s that the system w i l l 
f i r s t 
decide 
whether Gas Chromatography (GC) or Liquid Chromatography (LC) i s 
the best separation method. If LC i s the method of choice, and a 
qualified separation i s not found i n the program's l i b r a r y , i t 
w i l l design and optimize a separation, also specifying pre-column 
sample treatment where applicable. The design of this separation 
w i l l ultimately include cycles of designing an i n i t i a l separation, 
performing the experiment, analyzing the results, and redesigning 
u n t i l a satisfactory separation i s achieved. 
During the optimiza-
tion step i t may be necessary to diagnose for column and hardware 
f a i l u r e . 
The chemical information which the program w i l l need w i l l be 
stored i n data bases or input by the user. The details of these 
modules are discussed i n the sections on current results or future 
plans. 
To summarize, a complete methods development program must be 
able to: 
1. 
provide chemical information, 
2. 
choose between GC and LC, 
3. 
specify column, mobile phase 
constituents and 
detector, 
4. 
decide on sample cleanup, 
5. 
optimize (or redesign) the separation, 
6. 
diagnose hardware problems. 
Implementation 
Our program i s being implemented as a knowledge-based system. The 
knowledge about chromatography which i s imbedded i n the program i s 
i n the form of facts and rules. 
These facts and rules are repre-
sented within the computer by statements i n predicate logic. In 
predicate logic a statement i s represented by a l i s t of symbols, 
where the f i r s t symbol (the predicate) represents a relationship 
among the objects which are represented by the other symbols i n 
the 
l i s t . 
Complex facts are expressed 
using what are called 
" l o g i c a l connectives" (e.g., AND, OR, NOT, IF). We distinguish 
statements starting with IF and c a l l them rules. A rule i s also 
referred to as an IF-THEN statement. 
A rule asserts that the 
statements i n the l e f t hand side imply the statements i n the right 
hand side. An inference engine i s used to interpret those rules 
to generate new facts or to answer questions. 
Figure 3 shows examples of some ECAT facts and rules. 
A 
rule's components are a name, a type declaration, an English 
language description of the rule, an English language translation 
of the rule, and the actual form that i s processed by the program 
during inferencing. Variables are bound during inferencing. 
Development Environment. 
Hardware: the hardware currently con-
s i s t s of a Symbolics 3670 workstation, a Symbolics 3640 worksta-
tion, and a VAX 750, a l l connected by Chaosnet (an Ethernet proto-
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

284 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
(userl 
(type fact) 
(pform (largest-mw 500 daltons))) 
(user2 
(type fact) 
(pform (analyte-class phenols))) 
(user3 
(type fact) 
(pform (asked (analyte-class $class)))) 
(cmpgenl 
(descr n i l ) 
(type rule) 
(text 
( i f sample molecular-weight i s > 100 then there are more 
than three carbons i n the molecule)) 
(pform ( i f (and (largest-mw $mw daltons) 
(> $mw 100)) 
then (more-than-three-carbons)))) 
(cmpgen7 
(type rule) 
(text ( i f the analyte class i s not a protein and not a peptide, 
then use the specified analyte class for further 
inferencing)) 
(pform ( i f (and (analyte-class $class) 
(asked (analyte-class $class)) 
(unknown (analyte-class protein)) 
(unknown (analyte-class peptide))) 
then (consider (analyte-class $class))))) 
(cmpl 
(descr (a default rule for selecting separation mode)) 
(type rule) 
(text 
( i f the chemical class of the analyte i s not a protein, 
and the analyte has more than three carbons, and the 
analyte does not belong to a class for which straight 
phase i s recommended, then use a reverse phase sepa-
ration mode)) 
(pform ( i f (and (consider (analyte-class $class)) 
(more-than-three-carbons) 
(unknown (consider (analyte-class protein))) 
(unknown (straight-phase-packing 
$class $x $y))) 
then (separation-mode reverse-phase)))) 
Figure 3. Examples of facts and rules i n ECAT. $... are 
variables. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

22. 
BACH ET AL. 
An Expert System for H PLC Methods Development 
285 
col). 
Software: 
the Symbolics machines run Zetalisp, and we are 
using Franzlisp i n Eunice (a UNIX emulator running under VMS) on 
the VAX (see Figure 4). 
To develop the expert system we are using a first-order logic 
programming system called MRS (20). 
It i s a general inference 
engine 
providing for forward 
chaining, backward chaining and 
control of the inferencing by a meta-level reasoning system. 
Reasoning at the meta-level refers to reasoning about reasoning, 
that i s , reasoning about what needs to be done next, or what i s 
the best way to solve the problem at hand. 
Forward chaining i s reasoning from known facts via rules to 
conclusions. 
For example, i f a user asserted the three facts 
l i s t e d at the top of Figure 3 the program would conclude, by 
forward chaining, that the separation mode should be reverse 
phase. We use forward chaining to process the Column and Mobile 
Phase (CMP) design knowledge base. Backward chaining proves given 
hypotheses by testing whether the " i f " parts of relevant rules are 
known or provable using other rules. For example, i f the program 
was asked the equivalent of "What separation mode should I use?" 
i t could use backward chaining through the rules i n Figure 3 to 
infer that i t should ask the user about molecular weight and 
analyte classes to provide the answer to the question. We use 
backward chaining for the column diagnosis. MRS runs i n Zetalisp, 
Maclisp and Franzlisp. We have made some modifications to the MRS 
inferencing capability and provided a better user interface. 
We selected MRS for the following reasons: The domain exper-
tise of the column troubleshooting and of the CMP design i s read-
i l y expressed i n IF-THEN rules that MRS i s designed to handle. 
Previous users of MRS had indicated that i t was a versatile tool 
for reasoning with various forms of domain expertise and that the 
meta level reasoning could be used to solve particularly d i f f i c u l t 
problems. MRS doesn't require, although i t runs well on, special-
ized hardware such as a Lisp machine supporting high resolution 
graphics. 
Because the source code i s provided, i t i s easy to 
write extensions to MRS directly i n Lisp (such as the user i n t e r -
face). 
F i n a l l y , since MRS i s academic software, i t i s inexpen-
sive. 
Results 
Development of ECAT Knowledge Bases. 
The extent of an expert's 
domain knowledge t y p i c a l l y exceeds that which he or she realizes, 
or i s capable of immediately 
articulating. 
Our experience has 
shown that an expert asked to begin with a "tabula rasa" and 
perform an instantaneous brain dump of domain knowledge w i l l y i e l d 
only a small portion of that knowledge. 
The technique we are 
using to f a c i l i t a t e transfer of human expertise to the expert 
system program involves an iterative process which incrementally 
improves program functionality. 
Incorrect or incomplete conclu-
sions reached by the program are presented to the human expert who 
i s asked to provide the information necessary for the program to 
yield the expert's recommended solution. 
This process i s r e -
peated, expanding the knowledge base and hence the frequency with 
which successful problem solving occurs. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

286 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
This strategy i s i l l u s t r a t e d by our construction of the 
knowledge base of Module 3 of the ECAT program. 
Module 3 spe-
c i f i e s the HPLC analytical column, mobile phase constituents, and 
detector to be used. The design problem given to the program i s 
termed a "sample probe". A sample probe consists of a specifica-
tion of a user's sample (input) and the recommendations which the 
program SHOULD compute (output). 
Sample probes are prepared by 
colleagues outside the program ( i . e . , by chromatographers other 
than the domain expert) by selection from new separations ap-
pearing i n refereed chromatographic journals, and from standard, 
qualified HPLC methods. 
F i r s t Rules* 
The f i r s t probe tested was the trace analysis of 
phenols i n wastewater. 
At this point, the knowledge base con-
tained no rules and thus no answer was given as to column, mobile 
phase or detector specification. 
The expert stated that the 
separation should be run i n a reverse phase mode on a C18-silica 
column, with a water-acetonitrile mobile phase containing 0.1% 
acetic acid as a competing acid additive (to reduce peak t a i l i n g 
of weakly acidic phenols). At this point, the expert was asked to 
explicate his reasoning as a series of rules which concluded the 
correct design recommendation. Nine rules were specified. 
It should be noted here that i n specifying the rules for the 
f i r s t probe (phenols), i t became clear that rules for choosing the 
column and mobile phase 
interact 
significantly with detector 
rules. 
0.1% acetic acid works well as a competing acid additive 
i n terms of chromatography of the phenols. 
However, carboxylate 
ions are known to quench the fluorescence of phenols. 
Thus, i f 
one were to use a fluorescence detector for trace phenol detec-
tion, an alternative competing acid, such as 0.1% phosphoric acid 
should be substituted. 
It was decided that mobile phase/detector 
interaction rules would be the f i r s t detector rules to be added to 
the knowledge base. 
More Rules. 
Figure 5 tracks the number of IF/THEN rules added to 
the 
knowledge base to specify column and mobile phase consti-
tuents. 
Detector rules other than those relating to mobile phase 
compatibility were not entered at this time. 
As the knowledge 
base expanded, subsequent probes of similar molecular structure 
(and 
hence similar chromatographic properties) were solved with 
addition of few or no rules. 
Solution without requiring incre-
menting of the knowledge base i s termed a "direct h i t . " 
Spikes i n 
the 
graph of Figure 5 occur for new sample probes having major 
structural differences from those already tested - for example, 
the sample probe "LDH isoenzymes" required special rules regarding 
protein chromatography. 
It should also be noted that new sample probes can generate 
additions to the sample information queries asked of the user at 
the 
beginning of the "probe session." 
Thus, protein probes re-
quired the addition of queries regarding molecular weight, i s o -
e l e c t r i c point and whether biological a c t i v i t y i s to be preserved 
in the chromatographic step. 
These questions are triggered only 
i f the user specifies the sample as a peptide or protein i n answer 
to the i n i t i a l sample questions. 
Also, once the sample i s spe-
c i f i e d as a protein, the question as to the pKa or pKb of the 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

BACH ET AL. 
An Expert System for H PLC Methods Development 
287 
CHAOSNET 
TELEPHONE 
LINES 
Figure 4. Hardware and Software for the development of ECAT. 
PHENOLS 
OPIUM ALKALOIDS 
ACID EXTRACT OF URINE 
TETRACYCLINES 
SCH 28191 EXPT'L DRUG 
BETA-CAROTENE 
LDH ISOENZYMES 
HGH TRYPTICDIGEST 
UREA, THIOUREA 
TRICYCLIC ANTIDEPRESSANTS 
AVERMECTINS 
CARDIAC DRUGS 
IBUPROFEN 
CHL0R0-, NITRO-PHENOLS 
TESTOSTERONE STEROIDS 
AVERAGE OF RULES USED TO 
SOLVE A PROBE IS CA.15 
6 
7 
8 9 10 
PROBE NUMBER 
12 13 14 15 
Figure 5. Development of knowledge base rules to select column 
and mobile phase constituents. * indicates "direct h i t " . 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

288 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
sample w i l l not be asked, and the i s o e l e c t r i c point i s requested 
instead. 
Thus the i n i t i a l query session i s " i n t e l l i g e n t " i n the 
sense that the questions asked are specific to the sample probe 
i t s e l f . 
The next step i n the development of this knowledge base w i l l 
be to subject i t to probe input by chromatographers i n the Varian 
HPLC Applications laboratory. 
For each external probe which i s 
answered with an incorrect or incomplete answer by the ECAT pro-
gram, an interrogation of the probe creator by the ECAT domain 
expert w i l l generate additional rules to be conveyed to the know-
ledge engineers. 
Thus the knowledge base w i l l be incremented. 
Automatic Testing. 
As the knowledge base expands, the need to 
check each new rule for consistency with the existing rule set 
becomes c r i t i c a l . 
This i s done automatically. A program subjects 
the f i l e of previous sample probes to the expanded knowledge base 
and checks to see i f previous solutions are unaffected. 
If pre-
vious solutions have been affected, one must proceed to debug the 
new additions to the knowledge base. 
This often requires r e -
writing some rules. Sometimes i t provokes rethinking and reformu-
lating part of the knowledge base. 
Current Performance - Modules 
The performance of ECAT i s primarily determined by the correctness 
and extent of the knowledge and data bases, that i s , the modules 
shown i n Figure 2. 
Module 3, Column and Mobile Phase Design (CMP). 
This i s the core 
module for ECAT. It can currently specify i ) analytical column 
and mobile phase constituents for reverse phase chromatography of 
common classes of organic molecules; 
i i ) reverse phase, ion 
exchange phase and hydrophobic 
interaction chromatography of 
proteins and peptides; 
i i i ) a limited set of specialty classes 
of molecules best treated by straight phase chromatography (e.g., 
mono- and disaccharides). 
The rules for selection of the HPLC 
detector are under development within Module 3. Some of the rules 
for detector mobile phase compatibility are already encoded. A 
set of rules for detector selection i s ready but not yet encoded. 
The program infers design parameters using data base informa-
tion from Module 1 and user-supplied information, along with an 
extensive knowledge base of chromatography heuristics. 
Module 3 
currently contains ca. 160 rules, generated to cover 15 sample 
probes which represent some commonly separated classes of com-
pounds (see Table I ) . Figure 6 shows an example of the applica-
tion of ECAT to a design problem. The items i n Figure 6 are the 
user inputs and system recommendations i n the form i n which they 
are actually processed and generated by the program. 
Figure 7 shows part of the user consultation that e l i c i t e d 
the inputs l i s t e d i n Figure 6. 
The current user interface pro-
vides on-line help as well as a menu of numbered valid re-
sponses. 
The user may either type i n the number or the l i s t e d 
item. In answer to the user typing "?", the system rephrases the 
question, redisplays acceptable values, and specifies what other 
characters are recognized. 
If this i s not enough information, the 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

22. 
BACH ET AL. 
An Expert System for H PLC Methods Development 
289 
Table I. Sample probes used to develop knowledge base 
of Module 3 for specification of analytical 
HPLC column, and mobile phase constituents. 
Probe 1. phenoIs 
Probe 2. opium alkaloids 
Probe 3. acid extract of urine 
Probe 4. tetracyclines 
Probe 5. SCH 28191 
(experimental drug) 
Probe 6. beta-carotene 
Probe 7. LDH isoenzymes 
Probe 8. HGH tryptic digest 
Probe 9. urea, thiourea 
Probe 10. t r i c y c l i c a n t i -
depressants 
Probe 11. avermectins 
Probe 12. cardiac drugs 
Probe 13. ibuprofen 
Probe 14. chlorophenols 
nitrophenols 
Probe 15. testosterone steroids 
moderately polar, weakly acidic 
molecules 
polar, basic nitrogen hetero 
cycles, typical of many drugs 
carboxylic acids 
molecules with significant metal-
complexation character 
same as opium alkaloids (Probe 2) 
non-polar, neutral molecules 
proteins 
peptide fragments 
small, polar molecules 
same as opium alkaloids (Probe 2) 
moderately polar, neutral mole-
cules 
same as opium alkaloids (Probe 2) 
moderately polar carboxylic acid 
non-fluorescent phenols 
(see Probe 1) 
complex mixture of compounds 
sharing same hydrocarbon backbone 
and differing i n functional group 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
USER ENTRIES 
(analyte-class phenols) 
(specific-analyte phenol) 
(pka-of phenol 11) 
(largest-mw 400 daltons) 
(detector-type fluorescence) 
(smallest-analyte-amount 10 ng) 
(class-of sample-matrix river-water) 
RECOMMENDATIONS 
Guard column 
(additional-column guard-column) 
(packing-of guard-column p e l l i c u l a r ) 
(packing-of guard-column silica-based) 
(diameter-of p e l l i c u l a r 25 micron) 
Analytical column 
(separation-mode reverse-phase) 
( r e s t r i c t (diameter-of particle $value micron) 
(<= $value 5)) 
(packing-of $column silica-based) 
(prefer (bonded-phase $column CI8) 
(bonded-phase $column C8) 0.2) 
Mobile phase 
(prefer (liquid-of solventb acetonitrile) 
(liquid-of solventb methanol) 0.4) 
(liquid-of solventb methanol) 
(liquid-of solventb acetonitrile) 
(liquid-of solventa water) 
(additive-of solventb competing-acid 
phosphoric-acid) 
(additive-of solventa competing-acid 
phosphoric-acid) 
( r e s t r i c t (ph-of $3 $4) (>= $4 2) (<= $4 7.5)) 
(concentration-of phosphoric-acid solventb 0.1%) 
(concentration-of phosphoric-acid solventa 0.1%) 
gure 6. Example of user inputs and system recommendations for 
CMP probe. $... are variables. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

B A C H E T A L . 
An Expert System for H PLC Methods Development 
291 
You are running the Column and Mobile Phase Selection module. 
You should type ? or H any time you require help. 
Some prompts require an additional <CR> to terminate input acqui­
s i t i o n . 
Be careful not to type ahead. 
Valid values: 
1. amino-acid-hydrolysate 
17. 
oligonucleotides 
2. amino-acid-
18. 
oligosaccharides 
physiological-fluids 
19. 
oligosaccharides 
3. citric-acid-cycle-acids 
20. 
peptide 
4. diastereomers 
21. 
phenols 
5. carboxylic-acid 
22. 
phospholipids 
6. disaccharides 
23. 
porphyrins 
7. glucosamines 
24. 
porphyrins 
8. glycolipids 
25. 
prostaglandins 
9. glycosphingolipids 
26. 
protein 
10. 
hyd r oxyv i t ami ns d 2+d 3 
27. 
sphingolipids 
11. 
l i p i d s 
28. 
stereoisomers 
12. 
methylated-nucleosides 
29. 
steroids 
13. monosaccharides 
30. 
sugar-alcohols 
14. monosaccharides! 
31. 
tricarboxylic-acids 
15. nue le ο s i de s+nuc le ο t i de s 
32. 
other 
16. 
nucleotides 
Analyte class: phenols <CR> 
Analyte class: <CR> 
Valid value i s a number. 
phenol pKas: ? <CR> 
Enter the pKa values for phenol. 
Valid value i s a number, 
phenol pKas: 11 <CR> 
Valid value i s a number (unit: daltons). 
Largest molecular weight: H <CR> 
You are asked to enter the molecular weight of the largest mol­
ecule you are interested i n analyzing. Typical values are ranging 
from the low hundreds to a few hundred thousand ( i n the case of 
proteins). 
Any of the following i s a v a l i d response: <number> unknown 
Largest molecular weight: 400 <CR> 
Are you using a fluorescence detector ? [y]: <CR> 
Valid value i s a number (unit: Nanograms) 
Smallest analyte amount: 10 <CR> 
Figure 7. Excerpts from a user/expert-system consultation. 
Underlined items are user input. <CR> indicates user typed a 
carriage return. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

292 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
user can type "h" for help. 
The help text i s not yet completely 
written, but i s readily extensible. 
"How" and "why" queries are 
not yet recognized. 
Module 6, Column Diagnosis (COLDTAG). 
This module uses chroma-
tographic parameters such as efficiency, asymmetry, 
retention 
time, s e l e c t i v i t y and operating pressure, to detect failures of 
the column or other chromatographic hardware. Table I I l i s t s the 
types of column f a i l u r e which the module can currently handle. 
Note that the module w i l l also correctly diagnose some problems 
which are NOT column malfunctions but which might be interpreted 
as such by a user. 
Table I I . 
Types of Column Failure Diagnosed and Treated by 
Module 6 
Column Failures 
plugged column bed or f r i t s 
dissolution of column bed at high pH 
physical compression of column bed 
hydrolytic cleavage of bonded phase 
chemical alteration of cn bonded phase 
reaction of Nh^> bonded phase with C=0 
deactivation of Si adsorbtion sites by 
trace H^O 
loss of packing material from column 
irreversible adsorbtion of sample matrix 
components 
Non-column Failures too large an increase i n injection volume 
inadvertent change to strongly eluting 
injection solvent 
inadvertent overloading of column 
Module 1, Determination of Chemical and Structural Information on 
the 
Sample. 
The task of Module 1 i s to provide non-chromato-
graphic data for analytes prior to specification of the chromato-
graphic method. 
Data bases have been developed for pK values of 
organic molecules, i s o e l e c t r i c points of proteins, and fluores-
cence spectral properties of organic molecules. 
Other Modules. 
Modules 2, 4 and 5 are currently i n a design 
stage. 
Future Plans 
Module (Knowledge Base) Development. 
Future development of the 
ECAT system w i l l involve, i n chronological order: 
1) 
Incrementing Module 3 (CMP) according to sample probe 
testing by chromatographers not directly 
associated with the 
project and adding detector selection rules. 
2) Development of the knowledge base for Module 5 (optimiza-
tion of mobile phase composition and program). 
The column and 
mobile phase constituents having been specified by Module 3, the 
knowledge base of Module 5 w i l l be used along with inputs of 
required analysis time, and desired degree of resolution to guide 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

22. 
BACH ET AL. 
An Expert System for HPLC Methods Development 
293 
optimization of the mobile phase composition and program ( i f 
gradient elution i s required). 
This module w i l l require a great 
deal of effort as one must write knowledge base rules to determine 
which parameters (pH, ionic strength, ion-pair reagent concentra-
tion, organic modifier concentration, etc.) to optimize by either 
simplex or f a c t o r i a l design techniques. 
One must also develop 
algorithms to analyze the quality of chromatographic separations 
with respect to user input requirements. 
3) 
Integration of Module 6 (diagnosis of hardware problems) 
into Module 5. It i s sometimes necessary to detect and trouble-
shoot hardware and column failures during the optimization step. 
When abnormal changes i n separation parameters occur during an 
optimization, this detection can halt the series of optimization 
experiments and notify the user of the system f a i l u r e , preventing 
a useless optimization of a "broken" HPLC system. An example of 
this coupling of troubleshooting to optimization would be a s i t u a -
tion i n which one i s optimizing a reverse phase separation of 
opium alkaloids, with respect to the parameters pH and % acetoni-
t r i l e i n the mobile phase. Suppose one has run a series of exper-
iments varying the pH between 2 and 3 and the concentration of 
acetonitrile between 40% and 50%. Assume the efficiency has 
remained between 6000-7000 plates and asymmetry between 1.2-1.3. 
On the next experiment, with pH 3 and 55% a c e t o n i t r i l e , the reten-
tion time decreases as expected, but the peak efficiency drops to 
500 plates, and asymmetry increases to 9.0. 
Simultaneously, a 
slight 
pressure 
increase occurs. 
The column troubleshooting 
module would flag the abnormal change i n chromatographic param-
eters occuring for a very slight change i n mobile phase charac-
ter. 
It would then go back and repeat a previous experiment such 
as pH 3 and 50% a c e t o n i t r i l e . 
If the previous efficiency cannot 
be reproduced, i t i s certain a malfunction has occurred. 
The 
module could then halt the optimization, troubleshoot the f a u l t 
(collapse of column bed with formation of a void at head of c o l -
umn), and recommend corrective action to the user. 
4) Development of Module 4 (knowledge base for sorbent 
cartridge-based sample cleanup prior to the analytical chroma-
tography step). 
The column and mobile phase constituents spe-
c i f i e d by Module 3 w i l l be fed into Module 4 i n order to determine 
the procedure for sample cleanup, 
isolation and elution steps 
prior to the analytical chromatography step. 
In developing 
Module 4, we w i l l use the recently developed techniques based on 
sorbent cleanup and i s o l a t i o n of sample analytes rather than the 
c l a s s i c a l l i q u i d - l i q u i d extraction techniques. 
This decision was 
based on the a b i l i t y to automate the sorbent technique by using 
short chromatographic sorbent cartridges and on technical advan-
tages discussed i n d e t a i l elsewhere (21). 
5) 
Expansion of Module 3 to include rules for selection of 
detectors and detector parameters. The rules w i l l handle optical 
absorbance and fluorescence (including pre- and post-column d e r i -
vatization) and electrochemical detection. 
6) 
Expansion of the data bases i n Module 1 to include spec-
troscopic and electrochemical data to be used by the detector 
selection rules of Module 3. 
(This would include UV absorbance 
spectral properties of organic molecules, fluorescence quenching 
and activating properties of solvent environments, and electro-
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

294 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
chemical 
a c t i v i t y of organic molecules.) 
Additional data which 
w i l l eventually be needed i n ECAT includes s o l u b i l i t y characteris-
t i c s , boiling points, and melting points of organic molecules. 
7) Development of Module 2: Knowledge base for screening out 
samples which are best done by GC, and development of a library of 
standard, qualified HPLC and GC methods. 
The system w i l l 
decide 
whether the analytical demands of the separation are best served 
by gas chromatography or by l i q u i d chromatography. 
Information 
available from Module 1 i s needed (boiling and melting point data, 
molecular 
weight), 
along 
with 
information on analyte 
levels, 
matrix 
properties, sample complexity 
and 
resolution require-
ments. As the ECAT program evolves, one might eventually consider 
adding decision capability regarding other important 
separation 
techniques, such as gel electrophoresis, to the knowledge base of 
step 2. 
It w i l l be quite useful here to include a "library" of 
standard methods used i n GC and LC. 
The experts must specify 
those known analytes that are best separated by GC. 
For example, 
trace analysis of v o l a t i l e pesticides at sub-picogram levels i s 
best performed by GC, 
and the user should have access to the 
recommended GC method before considering an LC development. 
On 
the other hand, analysis of relatively non-volatile ionic drugs i s 
best done by HPLC, and here the user should be provided with a 
standard, qualified HPLC method i f such a method exists. 
Thus, 
Module 2 w i l l include both a knowledge base guiding the decision 
as to GC versus LC and w i l l provide a library of standard, qual-
i f i e d chromatographic methods. 
Knowledge Representation 
We 
are currently investigating the expansion of the ECAT capa-
b i l i t y to represent and process knowledge by including a represen-
tation scheme based on heirarchically structured descriptions of 
object 
properties 
(so-called "frame-based"). 
It i s sometimes 
awkward to express subtle or indirect knowledge i n the simple form 
of forward chaining reasoning we are currently using. 
A special-
ized planning software architecture such as SPEX (22) might be 
required to handle the f u l l fledged design module. 
We 
are looking into ways of expressing uncertainty. 
For 
example, uncertainty occurs i n ECAT when there are alternate sus-
pected causes of a separation malfunction or alternate choices of 
bonded phase for some sample classes. 
In ECAT, representation of 
uncertain information within causal reasoning i s currently handled 
by predicates such as "prefer" or "consider". 
There i s a long-
standing 
discussion of 
reasoning 
about uncertain, inexact 
or 
unreliable information (23). 
Certainty factors (24), s t a t i s t i c s , 
fuzzy sets (25) and e x p l i c i t reasoning are methods that can be 
applied to solve this problem. 
MYCIN-type certainty factor han-
dling can be revised to f i t entirely into the realm of s t a t i s t i c s 
(26). Gordon and Shortliffe have proposed a computable method for 
using the Dempster-Shafer theory of evidence (27). 
Cohen and 
Grinberg (28) have argued that i t i s best to reason e x p l i c i t l y 
about uncertainty i n ways similar to human thought processing. 
However, the latter method requires extensive computing which we 
f e e l i s hardly j u s t i f i a b l e i n our case. 
We w i l l thus investigate 
further 
application 
of 
simple 
s t a t i s t i c s 
and 
Gordon 
and 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

22. 
BACH ET AL. 
An Expert System for HPLC Methods Development 
295 
Shortliffe's proposal. 
In addition, we w i l l experiment with a 
simplified, domain restricted form of e x p l i c i t reasoning about 
uncertainty. 
User Interface 
This, of course, i s a very important part of the program. We are 
developing i t on an as-needed basis i n response to feedback from 
users. In particular, we s t i l l have not implemented a complete 
explanation 
f a c i l i t y . 
The user interface 
currently provides 
online help and a menu based selection of valid responses whenever 
applicable. 
Conclusion 
We have presented the development of an expert system i n HPLC. 
The overall project goals are f a i r l y ambitious and w i l l require 
continuous work for many years to come. However, the CMP design 
module (the key module of the project) and the COLDIAG module are 
beyond a prototype stage of development. Since those two modules 
cover the two modes of reasoning we consider using, we w i l l be 
able to complete the entire ECAT program using the approach de­
scribed i n this paper. 
Acknowledgments 
The authors wish to thank Steve Rosenblum for c r i t i c a l reviews of 
the manuscript and June Shelley for help i n the preparation of the 
manuscript. 
Literature Cited 
1. Expert Systems Part 2, Dessy, R. Ε., Ed.; Anal. Chem. 56, 
1984, 1312A 
2. Expert Systems Part 1, Dessy, R. Ε., Ed.; Anal. Chem. 56, 
1984, 1200A 
3. Glajch, J. L.; et al. J. Chrom. 1980; 199, 57. 
4. Glajch, J. L.; et al. J. Chrom. 1982; 238, 269. 
5. Kirkland, J. J.; Glajch, J. L. J. Chrom. 1983; 255, 27. 
6. Débets, H. G.; et al. Anal. Chim. Acta 1983; 150, 259. 
7. Schoenmakers, P. J.; Drouen, A. C. J. H.; Billiet, H. A. H.; 
de Galan, L. Chromatographia 1982; 15, 688. 
8. Haddad, P. R.; Drouen, A. C. J. H.; Billiet, H. A. H.; 
de Galan, L. J. Chrom. 1983; 282, 71. 
9. Billiet, H. A. H.; Drouen, A. C. J. H.; de Galan, L. 
J. Chrom. 1984; 316, 231. 
10. Barr, Α.; Feigenbaum, E. "Handbook of AI"; William Kaufman 
Inc., 1982; Vol. II, Chap. VIIB. 
11. Lindsay, R.; Buchanen, B. G.; Feigenbaum, Ε. Α.; Lederberg, 
J. "DENDRAL"; McGraw Hill; New York, 1980. 
12. Crandell, C. W.; Gray, Ν. Α. Β.; Smith, D. H. J. Chem. Inf. 
and Comp. Sci. 1952; 22, 48. 
13. Gray, Ν. Α. Β. Artificial Intelligence (1984); 22, 1-21. 
14. Jardetzky, 0. Proc. Int. Conf. on Frontiers of Biochemistry 
and Molecular Biology 1984. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

296 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
15. Terry, A. Stanford Heuristic Programming Project, Report 
No. HPP-83-19, May 1983. 
16. Agarwal, K. K.; Larsen, D. L.; Gelernter, H. L. Computers in 
Chemistry 1978; 2, 75. 
17. Gelernter, H. L.; et al. Science 1977; 197, 1041. 
18. Corey, E. J.; Long, A. K.; Rubenstein, S. D. Science 1985; 
228, 408-418. 
19. Wipke, W. T.; Ouchi, G. I.; Krishnan, S. Artificial 
Intelligence 1978; 11, 173. 
20. Russell, S. Stanford Knowledge Systems Laboratory, Report 
No. KSL-85-12, 1985. 
21. Van Home K.; Good, T. American Laboratory 1983; 15, 116. 
22. Bach, R.; Iwasaki, Y.; Friedland, P. Nucleic Acids Research 
1984; 12, 11-29. 
23. Panel on Reasoning with Uncertainty for Expert Systems, 
International Joint Conference on Artificial Intelligence, 
Los Angeles, California, 1985. 
24. Buchanan, B. G.; Shortliffe, Ε. H. "Rule Based Expert-
Systems"; Addison-Wesley, 1984, Chap. 10. 
25. Zadeh, L. A. in "Machine Intelligence"; Hayes, J.; 
Michie, D.; Mikulich, L.I. Eds.; John Wiley and Sons: 
New York, 1979; pp. 149-194. 
26. Heckerman, D. Proceedings of the Workshop on Uncertainty and 
Probability in Artificial Intelligence; American Association 
for Artificial Intelligence, 1985; pp. 9-20. 
27. Gordon, J.; and Shortliffe, E.H., Artificial Intelligence 
1985; 26, pp. 323-357. 
28. Cohen, R.; Grinberg, M. R. AI magazine 1983; 4, 17-24. 
RECEIVED January 16, 1986 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch022
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

23 
An Expert System for Optimizing 
Ultracentrifugation Runs 
Philip R. Martz, Matt Heffron, and Owen Mitch Griffith 
Beckman Instruments, Inc., Fullerton, CA 92634 
The SpinPro Ultracentrifugation Expert System i s a 
computer program that designs optimal u l t r a c e n t r i -
fugation procedures to s a t i s f y the investigator's 
research requirements. SpinPro runs on the IBM PC/XT. 
Ultracentrifugation is a common method in the separa-
tion of biological materials. 
Its capabilities, 
however, are too often under-utilized. 
SpinPro 
addresses this problem by employing 
Artificial 
Intelligence (AI) techniques to design e f f i c i e n t and 
accurate ultracentrifugation procedures. To use 
SpinPro, the investigator describes the centrifugation 
problem i n a question and answer dialogue. SpinPro 
then offers detailed advice on optimal and alternative 
procedures for performing the run. This advice 
results i n cleaner and faster separations and improves 
the efficiency of the ultracentrifugation laboratory. 
Ultracentrifugation i s a common and powerful method i n the separ-
ation of b i o l o g i c a l materials. Despite i t s widespread use, however, 
few investigators f u l l y exploit i t s c a p a b i l i t i e s . As a result, run 
times are unnecessarily long and separations are i n d i s t i n c t . In the 
long run, the efficiency and performance of the laboratory suffer. 
The fundamental cause of this situation i s the increasing 
complexity of the ultracentrifugation environment; the investigator 
must select the run parameters from a growing l i s t of rotors, 
gradient materials, and l i t e r a t u r e references. Knowing which rotor 
to use and at what run speed and run time i s a d i f f i c u l t matter. 
Furthermore, the selection of one parameter complexly limits the 
available choices for the remaining parameters. 
Reliance on procedures reported i n the l i t e r a t u r e has com-
pounded the problem. 
Often these procedures, perhaps i n i t i a t e d by 
investigators with a limited set of rotors, are i n e f f i c i e n t by 
today's standards: the rotor i s inappropriate, the run speed i s too 
slow, or the run time i s too long. A new investigator applying this 
procedure does not take f u l l advantage of the potential of u l t r a -
centrifugation. 
0097-6156/ 86/ 0306-0297S06.00/ 0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch023
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

298 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
One solution to the problem i s to provide the investigator with 
technical advice. Good advice should y i e l d several immediate 
benefits: 
1) Reliance on inappropriate or outdated techniques can 
be eliminated. 2) Better use can be made of the available equip-
ment; shorter run times and improved separations w i l l result. 
3) The advice can be specific to the research requirements of the 
investigator. 
4) The time usually wasted i n performing standardi-
zation runs, designing an ultracentrifuge procedure, or researching 
ultracentrifugation techniques can be minimized. 
In general, good 
advice w i l l improve the procedures, and thereby, improve the 
efficiency of most laboratories. 
Designing e f f i c i e n t ultracentrifugation procedures and pro-
viding good advice, however, i s a complex task; the knowledge and 
experience of an ultracentrifugation expert are often required. 
In 
this paper we describe a computer program, the SpinPro U l t r a c e n t r i -
fugation Expert System, that designs ultracentrifugation procedures 
in response to the requirements of the investigator. SpinPro runs 
on the IBM PC/XT. The program i s based on techniques from the f i e l d 
of A r t i f i c i a l Intelligence (AI) and expert systems: the powerful 
capabilities of the Lisp programming language; an inferencing 
procedure capable of drawing conclusions from a complex knowledge 
base; and a knowledge base derived from the expertise of u l t r a -
centrifugation experts. 
Indeed, SpinPro's use can be compared to 
the advice any person might seek from an expert. 
The investigator 
and SpinPro enter into a question and answer dialogue i n which the 
investigator describes the research goals and sample character-
i s t i c s . 
At the conclusion of the dialogue, SpinPro produces the 
following reports: 
1. 
The Design Inputs Report i s a summary of the SpinPro-
investigator dialogue. 
2. 
The Optimal Plan Report describes an optimal ultracentrifugation 
procedure designed to solve the problem described i n the 
dialogue. 
It uses the most appropriate rotor from the 
entire line of Beckman rotors. 
3. 
The Lab Plan Report i s similar to the Optimal Plan, but i t 
describes a procedure based exclusively on the ultracentrifuges 
and rotors available i n the investigator's laboratory. 
4. 
The Plan Comparisons Report compares the Optimal Plan and Lab 
Plan, identifying significant differences and trade-offs between 
the two plans. 
The reports constitute a complete set of recommendations for the 
ultracentrifugation problem posed to SpinPro. Thus, SpinPro 
performs the advisory role of an ultracentrifugation expert: 
interviewing the investigator for the problem description, offering 
expert advice on the most appropriate centrifugation procedure, and 
f i n a l l y , comparing alternative procedures. 
Major Functions 
SpinPro has four major functions: CONSULTATION, INFORMATION, 
CALCULATION, and CONFIGURATION. The CONSULTATION function performs 
the role of expert advisor. 
It i s the main topic of this paper. 
The INFORMATION function provides a database of ultracentrifugation 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch023
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

23. 
MARTZ ET AL. 
Optimizing Ultracentrifugation Runs 
299 
techniques, centrifuges, rotors, and literature references. The 
CALCULATION function performs a variety of routine calculations 
including rotor speed reductions, k factors, and pelleting time. 
The CONFIGURATION function records the ultracentrifuges and rotors 
in the investigator's laboratory. This information i s used by the 
CONSULTATION function when designing a run using the equipment from 
the laboratory. 
User Interface 
A l l user inputs are made by pointing at text on the computer screen 
with a "mouse" controlled cursor. The mouse i s a hand-held pointing 
device, which when moved by the investigator over a f l a t surface, 
controls the movement of a cursor or pointer on the computer screen. 
To run the CONSULTATION function, the user points at the text 
"CONSULTATION" on the screen and c l i c k s the mouse button. When 
using SpinPro, the keyboard i s not required. In our observations, 
novice users of the program have been able to design u l t r a c e n t r i -
fugation procedures within minutes of using the program. 
The CONSULTATION Function 
The primary goal of the CONSULTATION function i s to provide the best 
advice possible on precisely how to set up and run an u l t r a c e n t r i -
fugation procedure that i s s p e c i f i c a l l y designed for the i n v e s t i -
gator's research. 
SpinPro addresses v i r t u a l l y a l l problems i n the 
ultracentrifugation of biological samples excluding whole c e l l s . To 
this end, SpinPro i s "knowledgeable" about d i f f e r e n t i a l , rate-zonal, 
and isopycnic methods. It addresses the separation of proteins, 
glycoproteins, proteoglycans, lipoproteins, subcellular fractions, 
nucleic acids, and viruses. SpinPro's rotor knowledge includes 
swinging bucket, fixed angle, v e r t i c a l tube, zonal, and continuous 
flow rotors. 
Operation 
The CONSULTATION function i s run by using the mouse to select the 
text "CONSULTATION" from the computer screen. The f i r s t question of 
the dialogue, "Please enter the class of your sample of interest", 
appears on the screen. The pop-up menu l i s t s the sample types to 
chose from. The investigator then uses the mouse to select the 
appropriate response from the pop-up menu. This question and answer 
procedure continues u n t i l SpinPro has enough information, t y p i c a l l y 
10 to 15 questions, from which to infer a l l of the relevant param-
eters. The dialogue i s directed by SpinPro i n response to answers 
to previous questions. Thus, i f the sample i s a protein, SpinPro 
requests the sedimentation coefficient; i f the sample i s a nucleic 
acid, SpinPro requests the type of nucleic acid. At the conclusion 
of the dialogue, the reports are written to the disk. Using the 
pop-up menu, the reports can be read or saved. 
The dialogue includes capabilities to increase i t s f l e x i b i l i t y . 
F i r s t , the investigator can change an answer to a previous question 
without disrupting the course of the dialogue. This capability i s 
useful when describing a problem that d i f f e r s only s l i g h t l y from a 
previously described problem. Second, the investigator can ask why 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch023
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

300 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
the current question i s being asked. 
The "Why?" function informs 
the user what SpinPro i s attempting to infer ( i . e . , the line of 
reasoning) at any particular step, and i t describes the affect that 
different answers w i l l have on the line of reasoning. Third, when 
the answer to a question i s not known, the investigator can answer 
the question with "unknown". Depending on the question, SpinPro 
responds either by asking a related question or by assuming a 
reasonable answer and designing the procedures based on this 
assumption. 
Any assumptions that have been made are noted i n the 
reports. 
F i n a l l y , for the experienced users of SpinPro, there i s 
the option to request that, during the dialogue, a short form of the 
question be used. 
Optimization C r i t e r i a 
Two of the dialogue questions are of unique importance and are 
particularly representative of SpinPro's capabilities. 
The f i r s t i s 
a question of research requirements. Every ultracentrifugation pro-
cedure should reflect the investigator's concern for purity of the 
separation or short run time, goals that often run counter to each 
other. Rarely does any procedure state this trade-off e x p l i c i t l y . 
The optimization c r i t e r i a question, "Select one of the following 
optimizations:", not only identifies the trade-offs involved when 
designing a procedure, but allows the investigator to control them. 
The investigator can select the c r i t e r i o n which s a t i s f i e s the 
specialized requirements of the research. The c r i t e r i a are: 
1) 
purity, 2) minimize run time, 3) minimize cumulative run time, 4) 
minimize number of runs, 5) continuous flow rotor procedures, and 6) 
procedures for processing many samples of small volume. 
Based on the optimization c r i t e r i o n , SpinPro can select the 
most appropriate rotor. For example, suppose the investigator has a 
r e l a t i v e l y large sample volume, a l l of which needs to be processed 
as soon as possible. The "minimize cumulative run time" c r i t e r i o n 
would be the appropriate choice. SpinPro would then i n i t i a t e the 
following rotor selection procedure: 
SpinPro determines the total 
sample volume based on inputs of the sample volume, the current 
concentration of the sample, and a correction for any pre-run 
dilutions of the sample. Next, consideration i s made for whether 
tubes or bottles w i l l be used. 
The program then evaluates rotors 
for the number of tube positions and the amount of sample per tube. 
At this point, SpinPro w i l l have estimated for each rotor the number 
of runs required to process the sample. SpinPro then estimates the 
run time for each rotor to perform a single run. Based on these 
estimates, SpinPro selects the rotor that w i l l give the shortest 
t o t a l run time when the run time i s summed over the t o t a l number of 
runs. 
Similarly, the investigator can select any of the 
optimization c r i t e r i a and i n i t i a t e a variety of precise rotor 
selection procedures. 
Lab Rotors 
The second question of unique importance concerns the investigator's 
selection of a rotor for the Lab Plan. Whereas, i n the Optimal 
Plan, SpinPro selects the rotor; i n the Lab Plan, the investigator 
selects the rotor. The investigator, however, i s not required to 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch023
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

23, 
MARTZ ET 
AL. 
Optimizing Ultracentrifugation Runs 
301 
select the rotor blindly from those available i n the lab. SpinPro 
assists i n the selection by assigning each of the rotors i n the lab 
to a category based on how well the rotor s a t i s f i e s the requirements 
of the problem. The categories are as follows: 
1. 
Optimal rotors - the rotors that are both best suited to per-
form the run and to achieve the stated optimization c r i t e r i o n . 
2. 
Alternate rotors - other rotors that are not optimal but can 
perform the run. 
3. 
Not qualifying rotors - rotors that are not recommended for the 
problem usually because they are too large or too small for the 
sample volume, or because they do not generate s u f f i c i e n t l y 
high centrifugal forces. 
4. 
Not compatible rotors - rotors that are not c l a s s i f i e d , as part 
of the rotor safety program, for running i n the ultracentrifuge 
chosen from the lab. 
The investigator can select any rotor from categories 1 and 2 above. 
This allows the investigator to experiment with the rotors i n the 
lab and to design procedures as variations on the theme established 
i n the Optimal Plan. 
Ultimately, the rotor selected i n the Optimal 
Plan by SpinPro and i n the Lab Plan by the investigator are the 
major source of difference in the run parameters, purity, and 
overall effectiveness of the two plans. 
The Design Inputs Report 
As noted e a r l i e r , SpinPro writes four reports regarding the recom-
mended procedures. 
The Design Inputs Report summarizes the ques-
tions posed by SpinPro and the answers provided by the investigator. 
A Design Inputs Report i s shown i n figure 1. 
The pop-up menu on the 
right allows the user to switch between reports, print the reports, 
or perform other functions. 
The report summarizes the problem that 
i s addressed by the Optimal Plan (Figure 2) and the Plan Comparisons 
Report (Figure 
3). 
A summary of the report follows: 
The problem i s to separate 
proteins. Furthermore, SpinPro should pay particular attention to 
the purity of the separation. 
The sample i s not negatively affected 
by sucrose, has a sedimentation coefficient of 16 Svedbergs, and i s 
i n l i q u i d form of 3 mL and a concentration of 1% w/w. 
The protein 
of interest should be placed 45% from the top of the gradient at the 
end of the run. 
Of the gradient concentrations 10-40% and 5-20%, 
the 10-40% i s preferred by the investigator. There are no solvents 
i n the sample that are harmful to the tubes. 
F i n a l l y , from the lab, 
SpinPro should use the L2-75B ultracentrifuge and the SW 41 Ti 
rotor, which does not require a speed derating due to i t s age. 
The Optimal Plan Report 
The Optimal Plan i s SpinPro's recommendation of how best to perform 
the run. 
The Optimal Plan of figure 2 i s underlined and annotated 
below: 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch023
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

302 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
SpinPro Ultracentrifugation Expert System 
Design Inputs 
Experiment: SpinPro Consultation 11-Sept-1985 9:30:00 
Particle class: Protein 
Separation vs Concentration: Separation 
Optimization criterion: Purity 
Assoc/Dissoc in sucrose: No 
Sedimentation coefficient: 16.0 
10-40% or 5-20% gradient?: 10-40 
Sample form: liquid/semi-solid 
Total sample volume (mL): 3.0 
Sample concentration % w/w: 1.0 
Selected final location: 45.0 
Solvents: No 
Selected lab centrifuge: L2-75B 
Selected lab rotor: SW 41 Ti 
Rotor derated?: No 
Figure 1. The Design Inputs Report for the problem described to 
SpinPro. The Optimal Plan and the Lab Plan are based on this 
problem. The pop-up menu on the right allows switching to the 
other reports or performing other functions. 
Page Forward 
Page Backward 
Optimal Plan 
Lab Plan 
Comparisons 
Design Inputs 
Change Answer 
Save Reports 
SpinPro Top 
Exit to DOS 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch023
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

23. MARTZ ET AL. 
Optimizing Ultracentrifugation Runs 
303 
SpinPro Ultracentrifugation Expert System 
Optimal Plan 
Experiment: SpinPro Consultation 11-Sept-1985 9:30:00 
This is a complete plan for a protein sample separation 
Optimization criterion: Purity 
Method: Density gradient, Rate-zonal 
Gradient: 10-40% continuous sucrose 
Rotor/run conditions: SW 55 Ti rotor at 55000 rpm 
for approximately 6 hours 
Potential tube materials: Polyallomer, Ultra-Clear 
Centrifuge: L8-80M set at 4 degrees C 
Omega-squared t: 7.132x10
Λ11 
Acceleration/deceleration: fast/fast 
Prior to the run prepare sample as follows: 
No special sample preparation is required. 
Load 0.3 mL of the Protein sample in full tubes at 
the top position of the gradient. 
At the end of the run the 16 S particles will be 
approximately 45% from the top of the gradient. 
To process the entire sample volume requires approximately 
2 centrifuge run(s) with an estimated total run time of 
12 hours, 5 minutes. 
Figure 2. The Optimal Plan Report for the problem described i n 
the Design Inputs Report of figure 1. The plan gives the recom­
mended procedure for doing the run. 
SpinPro Ultracentrifugation Expert System 
Plan Comparisons 
Experiment: SpinPro Consultation 11-Sept-1985 9:30:00 
Run summaries: 
Optimal: SW 55 Ti at 55000 rpm for 6 hours per run 
in 2 run(s). Requiring a total of approximately 
12 hours, 5 minutes 
Lab: SW 41 Ti at 41000 rpm for 15 hours, 
45 minutes per run in 2 run(s). Requiring a total of 
approximately 31 hours, 30 minutes 
Comparisons: 
The Optimal Plan requires 38% of the Lab Plan run 
time for a single run. It requires 38% of the Lab 
Plan run time when processing the entire sample. 
Figure 3. The Plan Comparisons Report compares the Optimal and 
Lab Plans. The comparison shows that, because the Lab Plan uses 
the SW 41 Ti rotor, the run times are dramatically different. 
Page Forward 
Page Backward 
Optimal Plan 
Lab Plan 
Comparisons 
Design Inputs 
Change Answer 
Save Reports 
SpinPro Top 
Exit to DOS 
Page Forward 
Page Backward 
Optimal Plan 
Lab Plan 
Comparisons 
Design Inputs 
Change Answer 
Save Reports 
SpinPro Top 
Exit to DOS 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch023
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

304 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
This i s a complete plan for a protein sample separation. A l l of the 
relevant parameters have been inferred i n a "complete plan". 
" P a r t i a l plans" indicate that one or more parameters could not be 
determined. 
Optimization c r i t e r i o n : 
Purity. 
The report restates the optimiza-
tion c r i t e r i o n chosen by the investigator. 
Method: Density gradient, Rate-zonal. 
The rate-zonal method i s one 
of s i x addressed by SpinPro. 
The other methods are d i f f e r e n t i a l , 
d i f f e r e n t i a l - f l o t a t i o n , discontinuous, isopycnic, and 2-step 
isopycnic. These methods d i f f e r dramatically in their set up, 
principles of operation, and expected results. 
The rate-zonal 
method i s described here b r i e f l y so that the recommendations to 
follow can be appreciated. 
Prior to the run in a rate-zonal method, 
a gradient material i s introduced to the rotor tubes i n steps of 
increasing density from the top to the bottom of the tube. 
The 
sample to be separated i s layered, as a thin band, on the top of the 
gradient. As the run begins, each component i n the sample moves 
toward the bottom of the tube. Some components sediment faster than 
others. 
This fact i s the basis for the separation. 
If the run 
parameters are appropriate, the components w i l l form separate bands 
within the gradient. At the conclusion of the run, the band 
representing the component of interest can be removed from the tube. 
Gradient: 
10 - 40% continuous sucrose. 
SpinPro usually selects the 
gradient concentration and the gradient material. Here, SpinPro 
narrowed the choices to the 5-20% or 10-40% gradient, noting i n the 
dialogue that a trade-off between purity and run time exists between 
the 5-20% and the 10-40% gradient, but either w i l l work. The inves-
tigator selected the 10-40% gradient. The investigator could, i f 
desired, f i n i s h the plan based on the 10-40% gradient, and then 
using the change answer function, try the 5-20% gradient to find out 
how the recommendations d i f f e r . 
Sucrose i s the gradient material of 
choice here. 
SpinPro considers a wide variety of gradient materials 
including cesium chloride, Nycodenz, Metrizamide, glycerol, and 
potassium tartrate. 
Rotor/run conditions: SW 55 T i rotor at 55000 rpm for approximately 
6 hours. These recommendations form the core of any procedure. 
SpinPro usually considers more factors i n the rotor selection 
process than does the expert. 
In determining the run speed, SpinPro 
considers every possible reason to reduce the run speed. If there 
are none, the rotor i s run at f u l l speed. When there are reasons 
(e.g., when using salt gradients, bottles, d i f f e r e n t i a l pelleting, 
or discontinuous runs), the run speed may have to be reduced dramat-
i c a l l y , from 80,000 rpm to 40,000 rpm, for example. There are many 
cases of rotors being run too slow for the application or too fast 
for safety. Accurate determination of the run time i s a complex 
problem based on the gradient characteristics, calculations, i n t e r -
polations from numerical tables, and experience. 
SpinPro employs 
a l l of these methods i n order to infer run times for many special 
cases. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch023
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

23. 
MARTZ ET AL. 
Optimizing Ultracentrifugation Runs 
305 
Potential tube materials: 
Polyallomer, Ultra-Clear. SpinPro checks 
that a l l gradient materials, samples, and solvents are compatible 
with the tube materials. 
The affects of acids, bases, o i l s , organic 
solvents, and salts on the tube materials are considered. 
Centrifuge: L8-80M set at 4 degrees C. 
The Optimal Plan recommends 
the L8-80M ultracentrifuge. SpinPro selects a temperature that w i l l 
protect the integrity of the sample. 
Omega-squared t: 
7.132xl0Ell. 
SpinPro calculates this measure of 
the total force applied to the gradient and sample during the run. 
Acceleration/deceleration: 
fast/fast. Many investigators overlook 
the affect that improper acceleration or deceleration can have on 
disrupting the separation, especially when re-orientation of the 
gradient occurs i n fixed angle or v e r t i c a l tube rotors. SpinPro 
addresses many special cases. 
Prior to the run prepare sample as follows: No special sample 
preparation i s required. 
Proper sample preparation i s important to 
prevent
 , ,overloading
, , the gradient. 
A sample that i s too concen-
trated w i l l d r i f t through the gradient before the run i s started. 
If the sample i s i n a proper form, as i t i s here, then no 
preparation w i l l be recommended. 
Load 0.3 mL of the Protein sample i n f u l l tubes at the top position 
of the gradient. 
Applying the correct amount of sample i s important 
to prevent "overloading" the gradient. 
The rotor tubes can be run 
f u l l or half f u l l , or bottles can be used i n place of tubes. 
SpinPro determines which option i s most appropriate. 
A number of 
parameters are affected by this option, including the run time. 
Knowing where to load the sample i s important. 
Samples can be 
loaded at the top, middle, or bottom of gradients, or mixed 
homogeneously with them. 
At the end of the run the 16 S particles w i l l be approximately 45% 
from the top of the gradient. 
In the rate-zonal method, common 
practice i s to have the component of interest at the 50% position i n 
the gradient when the run i s over. SpinPro allows the f i n a l 
position to be specified, giving the investigator the opportunity to 
adjust the procedure so that components not of interest are widely 
separated from the component of interest. 
To process the entire sample volume requires approximately 2 
centrifuge run(s) with an estimated t o t a l run time of 12 
hours, 5 minutes. SpinPro determines how many runs are required to 
process the entire sample volume. The t o t a l run time i s estimated. 
When large sample volumes are involved, and thus many runs are 
required, the investigator can change the optimization c r i t e r i o n to 
"minimize number of runs" or "minimize cumulative run time" i n order 
to more e f f i c i e n t l y process the sample. Since two runs are required 
here, the investigator may want to select a larger rotor for use i n 
the Lab Plan. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch023
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

306 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
The Lab Plan Report 
The Lab Plan provides information similar to that of the Optimal 
Plan except that there i s the additional constraint of using only 
the ultracentrifuges and rotors available i n the laboratory. This 
requirement can result i n dramatic differences between the Optimal 
Plan and the Lab Plan. The run times can d i f f e r by hours, for 
example, or the purity of the separation can be s i g n i f i c a n t l y 
affected. A completely different gradient can be recommended as a 
function of the rotor selected from the lab. If there are no rotors 
i n the lab capable of doing the separation, SpinPro reports that the 
run cannot be done with the available rotors. 
The Plan Comparisons Report 
The Plan Comparisons report summarizes the differences between the 
plans i n terms of run time and number of runs required to process 
the sample (figure 3). In the figure the Optimal Plan uses the 
SW 55 T i rotor and the Lab Plan uses the SW 41 T i rotor. The 
different run times resulting from these rotors are compared on a 
percentage basis. A similar comparison i s made for the t o t a l run 
time required to process the entire sample. 
Each of the rotors 
requires two runs to process the entire sample. The comparison of 
the t o t a l run times can help i n identifying the slower, but larger 
capacity, rotors that are more e f f i c i e n t for handling large sample 
volumes. 
If warranted, SpinPro makes qualitative comparisons 
between the two plans. 
Expert System Details 
SpinPro i s a typical backward chaining, rule-based expert system. 
Rule-based systems are systems i n which the expert's knowledge i s 
encoded primarily i n the form of if-then rules, i.e., i f a set of 
conditions are found to be true then draw a conclusion or perform an 
action. "Backward chaining" refers to the procedure for finding a 
solution to a problem. In a backward chaining system, the inference 
engine works backwards from a hypothesized solution to find facts 
that support the hypothesis. Alternative hypotheses are t r i e d u n t i l 
one i s found that i s supported by the facts. 
SpinPro's backward chaining inference engine i s called "MP". 
"MP" has been developed by Beckman to support the development of 
expert systems. I t has several features that have been designed 
s p e c i f i c a l l y i n response to the requirements of the SpinPro project. 
Two of these requirements are that SpinPro run on an IBM PC/XT and 
that the program-user interface be advanced and easy to use. The 
report generator and the pop-up menu/mouse interaction provide the 
advanced user interface. To be able to run the program on the IBM 
PC/XT and s t i l l address the ultracentrifugation problem required the 
development of fact tables, "why responses", rule functions, rule 
groups, and "constraints". Development of these features has 
greatly improved the a b i l i t y of "MP" to make complex inferences. 
Some of these features are demonstrated i n the rule example of 
figure 4. The rule, one of approximately 800 rules i n SpinPro, i s 
assigned to the rule group 2-STEP.ISOPYCNIC.DNA.RULES. Only those 
rules, identified by the rule group name and pertinent to the solu-
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch023
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

23. 
MARTZ ET AL. 
Optimizing Ultracentrifugation Runs 
307 
tion of a particular problem, are applied to that problem. 
This 
breakdown of rules into rule groups i s one of the methods used to 
f a c i l i t a t e putting a complex expert system on a microcomputer with 
r e l a t i v e l y limited memory and processing power. 
The overall effect of the rule i n figure 4 i s to select, from a 
set of rotors, those rotors that are best for minimizing the run 
time when using the 2-step isopycnic method to separate DNA. The 
i n i t i a l set of rotors i s called USERS.MATCHED.ROTORS. The f i n a l set 
of rotors i s called the MINIMIZE.RUN.TIME.ROTORS. The body of the 
rule applies tests to the i n i t i a l set of rotors and concludes that 
the rotors passing the tests are the MINIMIZE.RUN.TIME.ROTORS. In 
greater d e t a i l , Clause 1 of the rule tests the value of the para-
meter VERTICAL.TUBE.ROTORS. The value of this parameter t e l l s 
SpinPro whether v e r t i c a l tube rotors should be considered for the 
run. 
Often this can be deduced by SpinPro, but when i t can't, the 
question "Do you want to consider using v e r t i c a l tube rotors i n this 
run" i s posed to the user. The parameter VERTICAL.TUBE.ROTORS has a 
set of properties that define i t s characteristics including the 
prompt used to request the information, the "expect" property used 
to specify the acceptable responses to the prompt, and the "Why 
Response" property used i n response to the investigator's input of 
"Why?". 
If the value of VERTICAL.TUBE.ROTORS i s found to be true (or 
"yes") then clause 2 of the rule i s evaluated. The references to 
"fact" i n clause 2 cause the system to refer to a table that 
contains the facts for particular rotors. References to the facts 
ROTOR.DESIGN, TUBE.VOLUME, and K.FACTOR are applications of p a r t i c -
ular constraints to the rotors. For example, two constraints are 
that the rotor must have a tube volume greater than 1 mL and a k 
factor less than 50. Clause 3 further pares the set of rotors on 
the basis of k factor by taking only the best rotor and any rotor 
with a k factor within 50% of the k factor of the best rotor. 
The Other Functions 
SpinPro includes two other functions that enhance i t s role as an 
expert advisor. 
This i s i n recognition that an expert provides more 
than expert advice. An ultracentrifugation expert serves i n many 
roles: a teacher of centrifugation principles, a describer of 
standard procedures, and a source of literature references. 
The INFORMATION function contains an extensive database of 
ultracentrifugation information organized i n a hierarchical fashion 
(Figure 5). The primary purpose of the INFORMATION function i s to 
provide an on-line reference to separation techniques, gradient 
materials, rotors, tubes, and centrifuges. For example, INFORMATION 
can be used to get information on the Type 70.1 T i rotor, the 
compatibility of polyallomer tubes with certain chemicals, a 
description of rate-zonal separations, and references to isopycnic 
methods. The subjects i n the information hierarchy can be expanded 
to give a more detailed breakdown of the subject. For example, 
expanding the "Fixed Angle" subject yields a detailed breakdown of 
the fixed angle rotors. The investigator could now select one of 
the rotor names on the screen and get information about that rotor. 
The INFORMATION function includes the subject "SpinPro", which i s a 
complete on-line manual of the SpinPro system. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch023
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

308 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
RULE 2667: (Rulegroup: 2-STEP.ISOPYCNIC.DNA.RULES) 
If: 1) VERTICAL.TUBE.ROTORS, and 
2) Find all instances of THAT.ROTOR among the value of USERS.MATCHED.ROTORS 
such that: 
1) the ROTOR.DESIGN fact of THAT.ROTOR = one of: 
SWINGING.BUCKET, 
FIXED.ANGLE, or VERTICAL.TUBE, and 
2) the TUBE.VOLUME fact of THAT.ROTOR > 1, and 
3) the K.FACTOR fact of THAT.ROTOR < = 50 
(saving those in COLLECTED.ROTORS), and 
3) Find all instances of THAT.ROTOR among COLLECTED.ROTORS for 
which: the K.FACTOR fact of THAT.ROTOR is within 50% of the smallest value 
so computed (saving those in COLLECTED. ROTORS) 
Then: 1) Conclude that MINIMIZE.RUN.TIME.ROTORS 
is each of COLLECTED.ROTORS. 
Figure 4. A rule that selects rotors to minimize the run time 
i n a plasmid DNA separation. The rule examines a set of rotors 
called USERS.MATCHED.ROTORS, selecting those rotors that s a t i s f y 
c r i t e r i a based on the rotor design, tube volume, and k factor. 
SpinPro 
= 
Fixed Angle^ 
= 
Sample Materials 
and Particles 
Vertical Tube 
Information 
Top Level 
= 
= = 
Separation Methods 
= 
Tubes and Bottles 
= 
Swinging Bucket 
= 
Continuous Flow 
= 
Ultracentrifuge Rotors 
= 
Zonal 
Ultracentrifuges 
= 
Table of Rotors 
by Use 
Glossary 
= 
Accessories 
===== Rotor Maintenance 
===== Rotor Warranties 
Point at an Information Item and click any mouse button for Options Menu. 
Figure 5 . The information hierarchy of SpinPro showing the ca-
tegories of information available. The positions i n the h i e r -
archy can be expanded to give a more detailed breakdown of each 
subject. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch023
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

23. 
MARTZ ET AL. 
Optimizing Ultracentrifugation Runs 
309 
The CALCULATION function provides a variety of routine calcula-
tions performed i n most ultracentrifugation laboratories. 
Included 
are dilution calculations for sucrose, a pelleting time calculation, 
and a calculation for determining rotor speed reductions for salt 
gradients. As with the INFORMATION function, the CALCULATION func-
tion i s a support tool i n the effort to e f f i c i e n t l y design and carry 
out a separation. 
Development of SpinPro 
There i s much concern about the length of time required to develop 
expert systems, particularly since so many have achieved various 
stages of prototype, but few have been completed. 
Our experience 
with SpinPro has led to many insights, more than can be f u l l y d i s -
cussed here. Nevertheless, a few major points are worth mentioning. 
It i s not particularly clear to us why SpinPro has succeeded i n 
achieving product status and other expert systems have not, although 
we suspect that an early decision to produce a product rather than 
to do AI research has been important. The problem domain of u l t r a -
centrifugation appears to have been a good choice. The domain has 
proven to be f a i r l y well bounded, even though the 800 rules required 
has exceeded early estimates by a factor of four. When considering 
the various stages of prototyping, debugging, and refinement, over 
25,000 rules have been written, and tossed out. 
Perseverance, 
sustained by having a concrete goal of "completeness" rather than a 
more indeterminate goal of "demonstrating f e a s i b i l i t y " or 
"prototyping", was crucial to the success of the project. 
In some ways expert systems programming i s l i t t l e different 
from more " t r a d i t i o n a l " programming. For example, similar to most 
software programs, about 50% of the code i n SpinPro i s for the user 
interface; debugging has been very time consuming; and miscommuni-
cation was the source of a great deal of additional e f f o r t . 
Since 
these problems are a part of traditional programming as well, tech-
niques designed to assist traditional programmers, such as organ-
ization principles, specification, and effective communication also 
apply to expert systems. 
In other ways expert systems programming i s much different. 
Traditional principles of specification and organization are tested, 
in part, because the program undergoes evolutionary and sometimes 
revolutionary revisions as an understanding of the problem domain 
grows. Despite early detailed specification, the tendency of the 
specification and the project to evolve toward i t s f i n a l d e f i n i t i o n 
seems to be unavoidable. 
From i t s inception to completion, the development of SpinPro 
has taken about s i x person years. The development team has included 
a manager, two knowledge engineers, one primary expert, four experts 
for review, and two people responsible for the content of the 
INFORMATION function. During this time, we have completed the 
following major a c t i v i t i e s : 
1. 
specification and prototyping 
2. knowledge acquisition from the expert 
3. knowledge coding into rules and debugging of rules 
4. 
design and implementation of the "MP" inference engine 
5. 
design and implementation of the user interface 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch023
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

310 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
6. collecting and writing the contents of the INFORMATION function 
7. converting from Interlisp-D on the Xerox 1108 AI workstation to 
Gold H i l l Common Lisp (GCLISP) on the IBM PC/XT 
Of these a c t i v i t i e s , task 3 (knowledge coding) and task 4 (inference 
engine) were the major efforts. Knowledge coding and debugging 
required at least five times as much effort as task 2, the knowledge 
acquisition from the expert. Task 7, converting from the develop-
ment environment to the product proved to be one of the major 
hurdles. 
There are two notable AI enhancements that are not a part of 
SpinPro. 
F i r s t , the "MP" inference engine does not include uncer-
tainty reasoning. The problem domain has only a limited use for i t , 
and where i t i s required, uncertainty i s handled within the capabil-
i t i e s of "MP". Second, "MP" does not include an a b i l i t y to explain 
i t s reasoning beyond the "Why?" function discussed e a r l i e r . An 
explanation capability was not implemented because the usual form of 
presenting a trace of the rules that have fired i s inadequate and 
potentially confusing to the user. Why? Because rules t y p i c a l l y 
encode "shallow" knowledge (the expert's experience and rules of 
thumb) and i n a rule trace, are inadequate for communicating the 
r e a l , "deep" knowledge, reasons for making a decision. 
SpinPro and the Expert 
How does SpinPro compare to the expert i n solving ultracentrifuga-
tion problems? For most problems, SpinPro designs procedures as 
good as the expert, i f not better. The inherent capabilities of 
computers are responsible for this achievement; they are consistent, 
they don't forget, and they are precise. For example, SpinPro 
contains a vast amount of knowledge that i s not a part of the 
expert's active memory. Many of the rules are an integration of the 
expert's knowledge and procedures reported i n the l i t e r a t u r e . 
Other 
rules are derived from l i t e r a t u r e references only. This vast amount 
of knowledge i s immediately available to SpinPro, but not to the 
expert. For the new problems, the ones never described to SpinPro, 
the expert i s far superior. The expert has intelligence, 
c r e a t i v i t y , common sense, and an understanding of the principles of 
ultracentrifugation. These are human tools that the expert can 
bring to bear on new problems. At this stage i n AI applications, 
and despite the goal of AI to recreate these human a b i l i t i e s , 
SpinPro, l i k e other expert systems, i s lacking. 
From the SpinPro project emerged a strong SpinPro-expert 
relationship. 
Early i n the project the expert was doubtful about 
the prospects of capturing years of education and experience i n a 
software program. Also the expert f e l t threatened by the expecta-
tion that his role would be subsumed by a computer. These problems 
soon disappeared as the challenge of creating SpinPro became more 
important. As the project neared completion, the expert took 
personal responsibility for the accuracy of SpinPro and pride i n i t s 
level of achievement. SpinPro's future development remains closely 
tied to the expert. 
SpinPro required that the expert c r i t i c a l l y review the science 
of ultracentrifugation and his knowledge of i t . For example, 
SpinPro sometimes designed a procedure using a rotor that was not 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch023
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

23. 
MARTZ ET AL. 
Optimizing Ultracentrifugation Runs 
311 
expected or recommended an exceptionally short run time that was 
shorter than thought possible. These procedures required careful 
review. Sometimes they were accepted as v a l i d improvements to 
existing procedures. 
Isopycnic runs are one example, where SpinPro 
found that procedures t y p i c a l l y requiring 12-16 hours, could be run 
for 7-9 hours with the same results. Thus, SpinPro i s i n d i r e c t l y 
responsible for advancing the expert's understanding of u l t r a c e n t r i -
fugation and for improving ultracentrifugation techniques. SpinPro 
promoted a degree of rigorousness that had never before been applied 
to ultracentrifugation. 
Updates to SpinPro continue as new rotors and new techniques 
are developed or as inadequacies are found. New expert systems 
techniques, such as the a b i l i t y to incorporate the principles of a 
problem domain, rather than just the experience of the expert, 
should give SpinPro the a b i l i t y to design procedures for novel 
problems and to explain i t s reasoning. The updates insure that 
SpinPro w i l l be a repository of knowledge about the current state of 
ultracentrifugation; SpinPro's expertise should continue to improve. 
Furthermore, the expert remains gainfully employed as a f i n a l 
arbitrator on the inclusion or exclusion of any new knowledge. 
Conclusion 
The SpinPro Ultracentrifugation Expert System provides an integrated 
package of expert advice, information, and calculation functions. 
Its purpose i s to allow investigators to f u l l y exploit the c a p a b i l i -
ties of ultracentrifugation, thereby improving the efficiency of the 
ultracentrifugation laboratory. 
It uses AI techniques to provide 
the a b i l i t y to advise on the best selection of run parameters that 
s a t i s f y the investigator's requirements. Our experience with 
SpinPro has shown that i t effectively performs the role of an expert 
advisor: designing e f f i c i e n t ultracentrifugation procedures that 
can reduce run times and improve the quality of separations. 
Acknowledgments 
For their contributions to the SpinPro Ultracentrifugation Expert 
System, the authors thank Gertrude Burguieres, Mike Brown, P h y l l i s 
Browning, Marsha Chase, Judy Cummings, Manny Gordon, Mary Jane 
MacDwyer, Edna Podhayny and Bruce Wintrode. 
RECEIVED January 14, 
1986 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch023
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

24 
Elucidation 
of 
Structural Fragments 
by C o m p u t e r - A s s i s t e d Interpretation of IR Spectra 
Hugh B. Woodruff, Sterling A. Tomellini
1, and Graham M. Smith 
Merck Sharp & Dohme Research Laboratories, Rahway, NJ 07065 
Since its introduction to the scientific community in 
late 1980, PAIRS (Program for the Analysis of IR Spec-
tra) has been used successfully by a large number of 
researchers. Recent improvements to PAIRS have made 
this package incorporate most of the aspects of expert 
systems. 
The improvement highlighted in this paper is 
the capability for scientists to inquire of the system 
why a particular interpretation result was achieved. 
This capability enhances the ability for scientists to 
learn from the knowledge base of interpretation rules 
present in PAIRS. 
It also simplifies the process by 
which the PAIRS knowledge base can be refined through 
incorporation of improved rules from expert 
spectroscopists. 
One of the more interesting areas available for development i n analy-
t i c a l spectroscopy i s the generation of algorithms and software capa-
ble of interpreting IR spectra. A number of papers have been 
published recently on computerized interpretation of vibrational 
spectra (1-22). Thegeneration of such software requires the a n a l y t i -
cal chemist to understand the interpretation process and be able to 
translate the process into an algorithm which the computer can per-
form. While generating the actual computer code i s by no means 
t r i v i a l , the chemical knowledge required to solve the interpretation 
problem makes a chemist and not a computer scientist the l i k e l y pro-
ducer of such a program. 
Among the most widely distributed of these interpretation pro-
grams i s a package called PAIRS Program for the Analysis of IR Spec-
tra) which has been distributed by the authors and the Quantum 
Chemistry Program Exchange to nearly 100 researchers. The program i s 
available i n both IBM mainframe and DEC VAX versions. A simplified 
schematic of the information flow i n PAIRS i s shown i n Figure 1. 
Spectral information i n the form of a d i g i t i z e d IR spectrum including 
peak location, width and intensity values may be entered either 
1 Current address: University of New Hampshire, Durham, NH 03824 
0097-6156/ 86/0306-0312$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch024
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

24. 
WOODRUFF ET AL. 
Computer-Assisted Interpretation of IR Spectra 
313 
interactively or from a f i l e created previously, perhaps with the 
aid of a d i g i t i z i n g tablet. 
Since the introduction of PAIRS i n 1980, considerable effort 
has been expended on improving various aspects of the package to 
make i t more valuable to researchers. A version of PAIRS capable of 
running on a Nicolet FTIR instrument-based minicomputer was deve-
loped to eliminate the time required to d i g i t i z e spectra and to 
make the program available to the practicing analytical spectrosco-
p i s t (12). Recently, versions of PAIRS capable of running on other 
FTIR systems have been reported (23, 24). 
Generating Interpretation Rules 
The generation of interpretation rules for PAIRS has proven to be a 
time-consuming and often inexact process. Many man-years were re-
quired to generate the f i r s t set of rules. 
Trulson and Munk (18) 
emphasized the massive effort required for rule development i n 
their report on their promising work on a table-driven approach to 
infrared spectral interpretation. 
Rule development and subsequent 
testing are generally much more time consuming than either acquiring 
test spectra or programming the interpretation routines. 
One of the strengths of PAIRS i s the a c c e s s i b i l i t y of the i n -
terpretation rules i n a form that i s easily understandable and modi-
fiable by the s c i e n t i s t . 
To accomplish this feat, a special 
English-like language known as CONCISE (Computer Oriented Notation 
Concerning Infrared Spectral Evaluation) was developed (19). 
CONCISE has a very small (62 words) and well-defined vocabulary 
which can be mastered by non-computer-oriented s c i e n t i s t s . 
I t con-
s i s t s of if-then-else logic and begin-done blocking. Once the voca-
bulary and structure of CONCISE are known, the s c i e n t i s t i s free to 
create or change interpretation rules at w i l l . 
In order to expand the usefulness of the PAIRS package, an 
automated rule generation program has been developed. 
An advantage 
of automated rule generation i s that a more mathematical and uniform 
method of determining expectation values can be developed and used. 
(An expectation value i s a measure of the likelihood of occurrence 
for the presence of a particular functionality i n the unknown com-
pound.) A detailed description of the algorithms used for the auto-
mated rule generator i s presented elsewhere (21). 
The simplicity and c l a r i t y of CONCISE has been retained i n the 
automated rule generator which creates CONCISE interpretation rules 
for PAIRS based on a representative set of IR spectra. The rule 
generator uses peak position, intensity, and width tables produced 
by an automated peak picking routine. This method reduces the de-
pendency on published frequency correlation data and enhances the 
usefulness of data already available. 
A l l work was done using the 
version of PAIRS running on a Nicolet 1180 minicomputer and programs 
generated have been optimized for this system. 
CONCISE rules are generated based on the frequency of occur-
rence of peaks i n compounds i n a spectral database. Good interpre-
tation rules have been created using a r e l a t i v e l y small number of 
spectra i n the database. To recreate interpretation rules for the 
168 classes of compounds currently addressed by PAIRS i n an auto-
mated manner would require a substantial effort and a better 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch024
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

314 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
spectral database than currently exists. However, the automated 
rule generator provides the tools to accomplish this task and to 
expand the current rule base. 
Tracing Interpretation Rules 
The discussion thus far has centered on input to the interpreter; 
however, the s c i e n t i s t i s perhans most interested i n the informa-
tion returned by PAIRS. The results were previously limited to a 
numerical indication of the likelihood that any particular function-
a l i t y or sub-functionality i s present. While the rules upon which 
interpretations are based are available i n an English-like language, 
CONCISE, i t i s normally a rather d i f f i c u l t process to determine why 
a given functionality was assigned a given value. The usefulness of 
PAIRS would be greatly enhanced, especially as a research t o o l , i f 
the program were able to provide the user with a clear trace of the 
decision making process. 
Very recent efforts have resulted i n an 
improved version of PAIRS which not only allows the user to question 
which functionalities may be present, but also why they are thought 
to be present (22). 
Major changes and additions were required to make PAIRS capable 
of providing an easily understandable trace of the interpretation. 
The interpreter required the vast majority of these modifications, 
including the addition of a number of new subroutines. 
F u l l use was 
made of the decompiling features already present i n the interpreter. 
Therefore, input-output and decision controlling routines make up 
the majority of the subroutines added. The decision controlling 
routines actually serve a dual purpose. Not only do these routines 
decide which data should be printed during a trace, but they also 
keep track of the progress of the interpreter as i t makes i t s way 
through the interpretation rules. Thus, the controlling routines 
know at any given moment which rules have already been interpreted 
and which rules remain to be interpreted. The rule compiler was 
modified to create a f i l e containing the "header" names, which are 
the names of the major f u n c t i o n a l i t i e s . The CONCISE interpretation 
rules were not changed during this process. Now the user i s pres-
sented with three options for interpreting a spectrum: 1.) trace 
the decision making process for a l l f u n c t i o n a l i t i e s ; 2.) trace the 
decision making process for any of the major functionalities (e.g., 
acid) and i t s corresponding sub-functionalities (e.g., acid-satur-
ated); or 3.) interpret the spectrum without any tracing as was 
done previous to the modifications described i n this paper. In any 
case, an entire interpretation takes place and, therefore, a numeri-
cal indication i s available for the likelihood that each functiona-
l i t y and sub-functionality i s present. 
It i s important to remember that the if-then-else logic of the 
CONCISE language forces the interpreter to follow one unique path 
through the interpretation rules, a path dictated by the spectral 
data entered. A very important consequence of being able to follow 
only one path i s that a trace of the decision making process can 
give information about what decisions were made but cannot give any 
information about what decisions might have been made had the spec-
t r a l data been different. Knowing what decisions were made can, 
however, give a good indication why a given functionality might have 
been reported at a lower value than expected. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch024
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

24. 
WOODRUFF ETAL. 
Computer-Assisted Interpretation of IR Spectra 
315 
The best way to demonstrate the added capability and increased 
v e r s a t i l i t y of the interpreter due to the tracing feature i s through 
example. Since the interpreter generally bases a good deal of impor-
tance on peak intensity information, i t i s obvious that mixtures and 
larger molecular weight compounds w i l l often cause the interpreter to 
return less than desirable results. 
In cases where the intensities 
are lower than would normally be expected for a given functionality, 
a valuable feature of the modified program i s the a b i l i t y to see 
quickly what decisions have been made and why these decisions were 
made. 
The a n t i b i o t i c actinospectacin, the structure of which i s given 
below, was chosen to demonstrate the improved interpreter. A spec-
trum of actinospectacin (published i n Volume 10 of the B u l l e t i n of 
the International Center of Information on Antibiotics) was d i g i t i z e d 
with the resulting peak data being presented i n Table I. The peak 
data i n Table I were entered into the interpreter without any empiri-
cal formula information. The sample state entered reflected the fact 
that the spectrum was taken as a KBr p e l l e t . 
Table I I contains the 
twenty functionalities and sub-functionalities which the interpreter 
predicted as most l i k e l y to be present i n the sample. 
(The *1*, *2*, 
and *3* terminology indicated one, two, or three occurrences, respec-
t i v e l y , of alpha branching or unsaturation i n the alcohol.) 
Pre-
viously this information was essentially a l l that the user could 
learn using PAIRS without investing the time necessary to decipher 
the CONCISE rules for the functionalities i n question. 
The improved 
version of PAIRS, however, allows the user to ask, for example, "Why 
was "sulfone" indicated with such a high expectation value?". 
If the 
data i n Table 1 are reinterpreted with the decision process for the 
functionality "sulfone" being traced, the user learns that the high 
likelihood for a "sulfone" i s due to the presence of the 1330 and 
1351 cm""l bands of intensity 7 and 6, respectively, the 1121 and 
1145 
cm"-'- bands of intensity 7 and 9, respectively, and the presence of 
more than two bands between 1090 and 1170 cm
- 1 with intensities 
greater than 7. 
The actual decision trace i s given i n Figure 2. 
Should the user suspect that these bands are due to another function-
a l i t y , knowledge of how these bands were used i n predicting the pre-
sence of a "sulfone" may allow the interpreter's prediction of a high 
likelihood of "sulfone" to be less highly regarded. 
Conversely, one may suspect the presence of a particular func-
t i o n a l i t y but discover that the interpreter predicts that functiona-
l i t y with a low expectation value. Knowing the structure of actino-
spectacin, one would expect that "ketone" should be predicted to be 
present with a f a i r l y high expectation value. 
The interpreter, how-
ever, returns a value of 0.01 for the likelihood of presence of the 
"ketone". 
In this case, the user learns that the low expectation 
value for "ketone" was based on the absence of any peak with i n t e n s i -
ty 7 or greater i n the carbonyl region between 1571 and 1800 cm~^-. 
In the case of an unknown compound, knowledge of the interpreter's 
decisions can give the user added insights and ideas, especially 
when the spectrum i s not ideal for a given functionality. 
The user, 
i n any case, now has the a b i l i t y to work with the program to see i f 
minor variations i n the data would result i n different and possibly 
more reasonable interpretations. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch024
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Digitized 
Spectrum 
CONCISE 
Rules 
PAIRS 
(Interpreter) 
Chemical 
Functionality 
Predictions. 
Figure 1. Information flow i n PAIRS. 
Structure of the a n t i b i o t i c 
actinospectacin. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch024
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

24. 
WOODRUFF ET AL. 
Computer-Assisted Interpretation of IR Spectra 
317 
Table I. Digitized Actinospectacin Spectrum 
Relative 
Peak No. 
Position (cm 
Intensity 
Width 
1 
3527 
9 
Broad 
2 
3401 
10 
Broad 
3 
3311 
10 
Broad 
4 
3254 
10 
Broad 
5 
3071 
9 
Broad 
6 
2962 
9 
Average 
7 
2796 
6 
Broad 
8 
2486 
2 
Average 
9 
1645 
5 
Average 
10 
1629 
5 
Average 
11 
1581 
4 
Average 
12 
1566 
4 
Average 
13 
1460 
8 
Average 
14 
1429 
6 
Average 
15 
1392 
8 
Average 
16 
1351 
6 
Sharp 
17 
1330 
7 
Average 
18 
1271 
2 
Average 
19 
1235 
3 
Average 
20 
1215 
3 
Average 
21 
1190 
6 
Average 
22 
1176 
7 
Sharp 
23 
1145 
9 
Average 
24 
1121 
7 
Average 
25 
1107 
8 
Average 
26 
1087 
9 
Average 
27 
1078 
10 
Average 
28 
1046 
9 
Average 
29 
1037 
9 
Average 
30 
1024 
9 
Sharp 
31 
999 
7 
Sharp 
32 
981 
3 
Average 
33 
952 
4 
Sharp 
34 
936 
4 
Sharp 
35 
923 
7 
Average 
36 
891 
2 
Average 
37 
875 
3 
Average 
38 
859 
5 
Average 
39 
814 
3 
Average 
40 
728 
5 
Average 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch024
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

318 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Table I I . 
PAIRS I n t e r p r e t a t i o n Results for Actinospectacin 
FUNCTIONALITY 
EXPECTATION VALUE 
1 
ALCOHOL 
0.99 
2 
SULFONE 
0.85 
3 
OLEFIN-(NON-AROMÏ 
0.75 
4 
0LEFIN-CHR=CH2 
0.75 
5 
ALCOHOL-PHENOL 
0.75 
6 
ALC0H0L-PRIM(*1*) 
0.75 
7 
ALCOHOL-PRIMARY 
0.75 
8 
ALCOHOL-SEC-(*1*) 
0.75 
9 
ALCOHOL-SEC-(*2*) 
0.75 
10 
ALCOHOL-SEC-RING 
0.75 
11 
ALCOHOL-SECONDARY 
0.75 
12 
ALCOHOL-TERT-(*1*) 
0.75 
13 
ALCOHOL-TERT-(*2*) 
0.75 
14 
ALCOHOL-TERT-(*3*) 
0.75 
15 
ALCOHOL-TERT-RING 
0.75 
16 
ALCOHOL-TERTIARY 
0.75 
17 
SULFONAMIDE 
0.75 
18 
SULFONAMIDE-PRIM 
0.75 
19 
SULFONAMIDE-SEC 
0.75 
20 
SULFONAMIDE-TERT 
0.75 
FUNCTIONALITY 
SULFONE 
PASSED I N I T I A L 
EMPIRICAL 
FORMULA 
TEST 
PEAK QUERY 
ANY P E A K ( S ) 
POSITION: 
1290 - 1360 
INTENSITY: 
7 - 
10 
WIDTH : 
SHARP TO 
AVERAGE 
ANSWER 
YES 
PEAK QUERY 
ANY P E A K ( S ) 
POSITION: 
1110 
- 
1170 
INTENSITY: 
7 - 
10 
WIDTH: 
SHARP TO 
BROAD 
ANSWER 
YES 
ACTION 
SET SULFONE TO 
0 . 5 0 0 
CURRENT 
VALUE=0.500 
PEAK QUERY 
AT LEAST 
2 PEAK(S) 
POSITION: 
1260 - 1360 
INTENSITY: 
4 - 1 0 
WIDTH: 
SHARP TO 
AVERAGE 
ANSWER 
YES 
ACTION 
ADO 0 . 1 0 0 TO 
SULFONE 
CURRENT 
VALUE=0.600 
PEAK QUERY 
AT LEAST 
2 P E A K ( S ) 
POSITION: 
1260 - 1360 
INTENSITY: 
7 - 
10 WIDTH: 
SHARP TO 
AVERAGE 
ANSWER 
NO 
PEAK QUERY 
AT LEAST 2 PEAK(S) 
POSITION: 
1065 - 
1170 
INTENSITY: 
4 - 1 0 
WIDTH: 
SHARP TO 
AVERAGE 
ANSWER 
YES 
ACTION 
ADD 0 . 1 0 0 TO SULFONE 
CURRENT 
VALUE=0.700 
PEAK QUERY 
AT LEAST 
2 PEAK(S) 
POSITION: 
1065 - 
1170 
INTENSITY: 
7 - 1 0 
WIDTH: 
SHARP TO 
AVERAGE 
ANSWER 
Y E S - - - - -
ACTION 
ADD 0 . 1 5 0 TO SULFONE 
CURRENT 
VALUE=0.850 
Figure 2. Trace of sulfone functionality during interpretation 
of actinospectacin. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch024
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

24. WOODRUFF ETAL. 
Computer-Assisted Interpretation of IR Spectra 
319 
This point i s i l l u s t r a t e d by a second example. A vapor-phase 
spectrum of p r o p i o n i t r i l e was obtained and i t s d i g i t i z a t i o n i s shown 
i n Table I I I . For the sake of example, assume the s c i e n t i s t entered 
the 2246 cuT* peak as average rather than sharp. The interpretation 
would result i n likelihoods of 0.90 for isocyanate and 0.30 for n i -
t r i l e . 
Performing the interpretation with the tracing function 
turned on would quickly show that the rules base the d i s t i n c t i o n be-
tween isocyanate and p r o p i o n i t r i l e very heavily on the width of the 
peak i n the v i c i n i t y of 2260 cm
-*. Reinterpreting this spectrum 
with the correct, sharp width entered for the 2246 cm"* peak results 
in a n i t r i l e likelihood of 0.50 and isocyanate of 0.40. 
Table I I I . 
Digitized P r o p i o n i t r i l e Spectrum 
Relative 
Peak No. 
Position (cm 1) 
Intensity 
Width 
1 
2246 
10 
Average 
2 
2996 
8 
Average 
3 
1461 
7 
Average 
4 
2950 
6 
Average 
5 
1431 
5 
Average 
6 
1074 
4 
Average 
7 
787 
3 
Average 
8 
2892 
3 
Average 
9 
1319 
2 
Average 
10 
1386 
1 
Average 
11 
546 
1 
Average 
Summary 
Through the addition of automated spectrum input on instrument-based 
computers, automated rule generation, and automatic tracing of deci-
sion rules, PAIRS has been enhanced to be an even more valuable tool 
for the spectroscopist. PAIRS i s available for distribution from 
the Quantum Chemistry Program Exchange, Indiana University, Blooming-
ton, IN 47405 (Catalog No. QCPE 497). 
Literature Cited 
1. Gray, N.A.B. Anal. Chem. 1975, 47, 2426. 
2. Woodruff, H.B.; Munk, M.E. J. Org. Chem. 1977, 42, 1761. 
3. Woodruff, H.B.; Munk, M.E. Anal. Chim. Acta 1977, 95, 13. 
4. Zupan, J. Anal. Chim. Acta 1978, 103, 273. 
5. Visser, T.: Van der Maas, J.H. J. Raman Spectros. 1978, 7, 125. 
6. Visser, T.; Van der Maas, J.H. J. Raman Spectros. 1978, 7, 278. 
7. Leupold, W-R; Domingo, C.; Niggemann, W.; Schrader, B. Fresenius' 
Z. Anal. Chem. 1980, 303, 337. 
8. Woodruff, H.B.; Smith, G.M. Anal. Chem. 1980, 52, 2321. 
9. Visser, T.; Van der Maas, J.H. Anal. Chim. Acta 1980, 122, 337. 
10. Varmuza, K. "Pattern Recognition i n Chemistry"; Springer-Verlag; 
New York, 1980, No. 2, Lecture Notes i n Chemistry Series 
11. Woodruff, H.B.; Smith, G.M. Anal. Chim. Acta 1981, 133, 545. 
12. Tomellini, S.A.; Saperstein, D.D.; Stevenson, J.M.; Smith G.M.; 
Woodruff, H.B.; Seelig, P.F. Anal. Chem. 1981, 53, 2367. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch024
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

320 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
13. Farkas, M.; Markos, J.; Szepesvary, P.; Bartha, I.; Szalontai, 
G.; Simon, Z. Anal. Chim. Acta/Computer Techniques and Optimiza-
tion 1981, 133, 19. 
14. Szalontai, G.; Simon, Z.; Csapo, Z.; Farkas, M.; Pfeifer, Gy. 
Anal. Chim. Acta/Computer Techniques and Optimization 1981, 133 
303. 
15. Debska, B.; Duliban, J.; Guzowska-Swider, B.; Hippe, Z. Anal. 
Chim. Acta/Computer Techniques and optimization 1981, 133, 303. 
16. Frank, I.E.; Kowalski, B.R. Anal. Chem. 1982, 54, 232R. 
17. Zupan, J. Anal. Chim. Acta 1982, 139, 143. 
18. Trulson, M.O.; Munk, M.E. Anal. Chem. 1983, 55, 2137. 
19. Smith, G.M.; Woodruff, H.B. J. Chem. Inf. Comp. Sci. 1984, 24, 
33. 
20. Tomellini, S.A.; Stevenson, J.M.; Woodruff, H.B. Anal. Chem. 
1984, 56, 67 
21. Tomellini, S.A.; Hartwick, R.A.; Stevenson, J.A.; Woodruff, H.B. 
Anal. Chim. Acta 1984, 162, 227. 
22. Tomellini, S.A.; Hartwick, R.A.; Woodruff, H.B. Appl. Spectrosc. 
1985, 39, 331. 
23. Saperstein, D.D.; "A Scheme For Optimized Infrared Interpreta-
tions", paper # 216, 1985. Pittsburgh Conference & Exposition on 
Analytical Chemistry and Applied Spectroscopy, Feb. 25-March 1, 
1985. 
24. DeHaseth, J.A.; Mir, K.A., "A Minicomputer Based Structure Eluci-
dation Program", paper # 217, 1985. Pittsburgh Conference & 
Exposition on Analytical Chemistry and Applied Spectroscopy, 
Feb. 25-March 1, 1985. 
RECEIVED December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch024
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

25 
Automation of Structure Elucidation 
from Mass S p e c t r o m e t r y - M a s s S p e c t r o m e t r y 
Data 
K. P. Cross
1, P. T. Palmer, C. F. Beckner
2, A. B. Giordani
3, H. G. Gregg
4, P. A. Hoffman
5, 
and C. G. Enke 
Department of Chemistry, Michigan State University, East Lansing, MI 48824 
A system has been designed to automate the extraction 
of structural information from mass spectrometry/mass 
spectrometry (MS/MS) spectra. 
Currently operational 
elements in this system include data bases for MS/MS 
spectra and molecular structures, spectrum matching 
programs, and a structure generator. 
Individual 
spectra within the complete set of MS/MS spectra are 
related to the molecular substructures from which they 
arise. 
The correlations between individual MS/MS 
spectra and specific substructures can be determined by 
identifying the compounds that have matching MS/MS 
spectra, and then identifying the substructures they 
have in common. 
These correlations can supply 
identified substructures to a molecular 
structure 
generator such as GENOA. This empirical scheme assumes 
no knowledge of the fragmentation 
process, ion 
structures, or rearrangements. 
The development of mass spectrometry/mass spectrometry (MS/MS) has 
provided the chemical analyst with a powerful tool for structure 
elucidation. 
The primary goal of this project i s to develop the 
f u l l capacity of t r i p l e quadrupole mass spectrometry (TOMS) as a 
tool for routine structure determination. To accomplish t h i s , we 
have designed and developed computer data bases for spectra and 
structures (1,2), programs for matching spectra (3), and procedures 
1 Current address: Chemical Abstracts Service, Columbus, OH 43210 
2Current address: Finnigan MAT, San Jose, CA 95134 
JCurrent address: Department of Psychiatry, Mt. Sinai School of Medicine and Bronx 
Veterans' Administration Medical Center, New York, NY 10029 
'Current address: Lawrence Livermore National Laboratory, University of California, 
Livermore, CA 94550 
5Current address: Lederle Laboratories, American Cyanamid Corporation, Pearl River, 
NY 10965 
0097-6156/ 86/ 0306-0321 $06.00/ 0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

322 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
for determining spectrum/ substructure correlations. These tools 
were designed for integration into a complete system for on-line 
structure determination by MS/MS. 
Structure analysis by MS/MS d i f f e r s from normal MS i n that each 
of the fragment ions from the sample ionization process i n the 
source can be selected, one mass at a time, for further 
fragmentation and subsequent mass analysis. The ion i n the normal 
mass spectrum selected for analysis i s called a parent ion. The 
fragments of that ion, generally produced by collision-induced 
dissociation (CID) are called daughters. A mass spectrum of a l l the 
daughters of a particular parent ion (called a daughter spectrum) i s 
obtained by holding the f i r s t mass analyzer constant at the mass of 
the selected parent ion and scanning the second mass analyzer. A 
complete MS/MS spectrum i s a three-dimensional array i n which there 
i s a daughter spectrum for every mass represented i n the normal mass 
spectrum. 
MS/MS data are very e x p l i c i t ; daughter spectra may reveal 
structural characteristics of isolated portions of the molecule (4), 
and under certain conditions, a l l masses i n a daughter spectrum are 
single-event neutral 
losses from the parent ion. 
Thus, clear 
substructure/property 
relationships can be obtained from MS/MS 
spectra. 
These relationships can be used to identify substructures 
in unknown compounds. 
Possible compound structures can then be 
developed from the i d e n t i f i e d substructures. 
This approach should 
f a c i l i t a t e the i d e n t i f i c a t i o n of unknown compounds not previously 
studied by mass spectrometry. 
Data from the TOMS instrument are used i n two different ways: 
1) to develop a l i b r a r y of spectrum/substructure correlations from 
studies of known compounds and 2) to use the developed correlations 
to determine the substructures and thence the overall structures of 
unknown compounds. The data base required for this process i s a 
l i b r a r y of the spectral 
characteristics of many substructures, 
rather than a l i b r a r y of the spectra of a l l known compounds. In 
principle, millions of compounds could be i d e n t i f i e d using a l i b r a r y 
of only a few thousand spectrum/substructure relationships. 
A block diagram of our target system f o r the automatic 
elucidation of molecular structure i s shown i n Figure 1 (5). While 
the system i s not yet complete, the three data bases and a spectrum 
matching program have been 
developed and integrated 
into a 
comprehensive system to acquire, store, match, and correlate the 
MS/MS data. 
Descriptions of their structures and c a p a b i l i t i e s and 
examples of their application are included i n this paper. 
Also a 
molecular structure generator, GENOA (6), has been acquired and 
implemented, but i s not yet integrated into the system. An example 
of the determination of spectrum/substructure correlations and t h e i r 
application i n structure determination through GENOA i s also given 
here. 
The flow of data through the system shown i n Figure 1 depends 
on whether the experimental data are from a reference compound for 
the development of the l i b r a r y or from an unknown compound for 
analysis. 
Reference compound 
spectra are collected i n the 
experimenter's data base and may be archived i n the reference data 
base. 
They can also be matched against other spectra from other 
reference compounds by the spectrum matching program. When a match 
i s 
found 
indicating 
that the two compounds have produced an 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

REFERENCE SPECTRA 
EXPERIMENTAL DATA 
Id 
Ό 
Ο 
m 
m 
À
. 
REFERENCE SPECTRA 
DATA BASE 
o ο 
o\J/ 
LIBRARY STORAGE 
MULT! —DIMENSIONAL 
DATA BASE 
REF 
SPECTRA 
TEST SPECTRA 
INVERTED 
|DATA BASE 
2 k . 
DATA PLOTS 
SPECTRUM MATCHING 
MATCH LISTS 
ο til 
a. 
SUBSTRUCTURE 
SEARCHINO 
TEST STRUCTURES 
LIBRARY STORAGE 
STRUCTURE/ 
SUBSTRUCTURE 
DATA BASE 
MATCHED 
IDENTIFIED 
SUBSTRUCTURES 
SUBSTRUCTURES 
MOLECULAR 
STRUCTURE 
GENERATOR 
ALL 
POSSIBLE STRUCTURES 
Figure 1. 
Overall System f o r determination 
of structure by 
MS/MS. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

324 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
identical ion structure, the molecular structures are compared by 
the substructure searching function to determine the substructure(s) 
they have i n common. 
These common substructures are candidate 
precursors of the common ion. 
Through rearrangements, i t i s 
possible for more than one substructure to produce a particular ion. 
Additional compounds with matching spectra or substructures are 
studied u n t i l clear spectrum/substructure 
correlations are produced. 
Once the correlations are made, the substructure(s) associated with 
a particular spectrum are stored i n the structure/substructure data 
base, and are l o g i c a l l y linked to that spectrum. 
The spectra from an unknown compound are matched against the 
reference spectra to produce a l i s t of the substructures that are 
related to the matched spectra. When this substructural information 
has been extracted from the MS/MS spectra, i t i s entered into the 
molecular structure generator 
called GENOA (6). GENOA, which i s 
constrained by heuristic 
chemical 
rules, uses a l l available 
composition and structure information, including overlapping and 
nonunique substructures, to postulate the number and identity of a l l 
possible molecular 
structures of the unknown compound. 
I f the 
resolution of any remaining 
structural ambiguities i s essential to 
the experiment, additional information derived from MS/MS or other 
sources i s fed to GENOA to further reduce the number of output 
structures. 
This 
structure 
elucidation scheme combines an 
exhaustive and automatic algorithm f o r the evaluation of the 
structural p o s s i b i l i t i e s , the experimenter's chemical i n t u i t i o n , and 
the 
knowledge 
base 
of 
the 
experimentally 
determined 
spectrum/substructure correlations. 
There are three 
data bases present i n our MS/MS information 
management system, one for immediate experimental data and two for 
archival data. 
The experimenter's data base has been described 
elsewhere (1). One archival data base manages the MS/MS spectra, 
while the other manages the structures and substructures. The two 
archival data bases are l o g i c a l l y 
linked together so that a l l 
information concerning a particular molecule or substructure i s 
associated with i t s spectra. 
The MS/MS spectrum data base i s capable of storing and 
correlating a l l types of MS/MS spectral data 
including parent, 
daughter, neutral loss, and conventional mass spectra (2). A l l 
spectra are stored i n an unabridged format and a l l spectra for each 
compound are l o g i c a l l y associated with that compound. 
Redundant 
spectra such as those taken under different operating conditions are 
a l l 
associated with a single compound registry number 
thereby 
simplifying both the r e t r i e v a l and maintenance of the data base 
information. 
The most important feature of the reference spectrum data base 
i s the provision to generate and store inverted data (data that are 
presorted on various secondary elements of the record). The data 
present i n the spectrum data base may be inverted upon any specified 
characteristic, such as m/z value, and then be retrieved using that 
characteristic. 
For instance, a data 
f i l e 
inverted about the 
daughter m/z value 
w i l l contain, for each m/z value, a l i s t of 
pointers to the reference daughter spectra that have a peak at that 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

25. 
CROSS ET AL. 
Automation of Structure Elucidation from MS-MS Data 
325 
mass. 
Hence the pointers to a l l reference spectra containing a 
particular m/z value may be very quickly retrieved. When Boolean 
algebra operations are performed on inverted data l i s t s , the power 
of the design increases dramatically. A prescreen for a l l reference 
daughter spectra containing the major features of a test spectrum 
such as peaks at 43.0 and 57.0 but not 119.0 reduces greatly the 
number of reference spectra that need to be matched i n greater 
d e t a i l . In addition to a daughter m/z value, spectral data may be 
inverted about molecular weight, empirical formula, and parent ion 
m/z value. 
Over 30,000 primary spectra and other information are 
currently stored i n the spectrum data base as well as MS/MS spectra 
corresponding to several s p e c i f i c classes of compounds. 
The structure data base was designed to contain both molecular 
structures and substructures (7). The MS/MS instrument 
s p e c i f i c a l l y 
provides a substructure/property relationship where several daughter 
spectra may correspond to a single substructure and any daughter 
spectrum may correspond to more than one substructure. 
Even though 
a 
simple 
1:1 
correspondence 
between 
daughter 
spectra and 
substructures cannot be assumed, there i s a basis for a l o g i c a l l i n k 
between the MS/MS spectra i n the spectral data base and the 
respective substructures i n the structure data base. 
This 
l i n k 
allows 
r e t r i e v a l of structural 
information 
from the reference 
daughter spectra best matching the unknown spectrum. 
Structures 
present i n the structure data base may be retrieved v i a substructure 
number, Chemical Abstracts Service number, or spectrum data base 
number, and then drawn. 
The structures and substructures are stored unambiguously using 
a modified version of the Morgan algorithm for encoding molecular 
structures v i a connectivity tables. The version of the algorithm 
implemented included the modifications described by Wipke and Dyott 
(8) for the representation of stereochemical isomers. 
The notation 
of the elements was expanded to include a l l known elements. Any 
molecule up to 128 atoms i n size (excluding hydrogens) may be 
included i n the data base. The structure data base contains over 
30,000 structures corresponding to the spectra present i n the MS/MS 
spectrum l i b r a r y as well as substructures corresponding to various 
reference daughter spectra. 
Matching MS/MS Spectra 
The MS /MS spectra matching program allows the chemist to match any 
MS/MS spectrum against either MS or MS/MS spectra i n the reference 
spectrum data base (3). The program uses inverted data organized by 
m/z value to l o g i c a l l y eliminate inappropriate reference spectra. 
The program f i r s t determines the data base frequency (length of the 
pointer table) of each major peak i n the experimental 
daughter 
spectrum and then ranks the peaks i n ascending order of frequency. 
Inverted data 
l i s t s of reference 
spectra 
containing peaks are 
retrieved i n this order and l o g i c a l l y ANDed together 
u n t i l the 
number of candidate 
reference 
spectra i s s u f f i c i e n t l y 
small. 
Additional reductions i n the number of candidate spectra i s possible 
by using molecular weight, parent ion m/z value, and empirical 
formula may also be invoked to further reduce the number of 
candidate spectra. When matching daughter spectra, specifying the 
parent ion m/z value alone usually produces a s u f f i c i e n t l y small 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

326 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
number of candidate spectra. 
Abundance values are not 
considered 
and the reference data base i s not accessed u n t i l intensity-based 
matching i s performed. 
The short matching times achieved with t h i s 
design makes i t p r a c t i c a l to work with unabridged spectra. 
Once the number of candidate reference spectra has been reduced 
to reasonable size (25-100), intensity-based matching i s performed 
to 
characterize the correspondence between the experimental 
and 
remaining candidate spectra. 
Several different factors indicating 
the degree to which the spectra match i n various respects 
are 
determined. 
The 
values 
of 
these match factors are used 
to 
distinguish spectra that arise from identical substructures from 
those that arise from different substructures. 
The various match factors calculated by the matching program 
are 
l i s t e d 
i n Table 
I. 
The 
overall match factor (PT) 
i s a 
combination of forward and reverse searching techniques. 
I t takes 
into account the deviations i n intensity of the sample spectrum 
peaks with respect to the candidate spectrum peaks and vice versa 
for a l l peaks i n both spectra. 
The pattern correspondence match 
factor (PC) i s a forward searching match factor which takes into 
account the 
intensity deviations of sample spectrum peaks with 
respect to the candidate spectrum peaks for peaks common to both 
spectra. 
This factor detects structural 
s i m i l a r i t i e s , such as 
substructures, based on common spectral patterns. 
NC, NS, and 
NR 
give an indication of the number of peaks upon which the match was 
based and i n which direction i t was most successful. 
IS and IR 
indicate 
the magnitude of 
the 
ion current unmatched i n each 
direction. 
These match factors are similar to those proposed by 
Damen, Henneberg, and Wiemann (9). 
Because instrument 
operating conditions can seriously affect 
the r e l a t i v e intensities of ions i n daughter spectra, there was 
a 
need to know the range of conditions over which the daughter spectra 
of identical parent 
ions could be distinguished from a l l other 
daughter spectra. 
Daughter spectra were collected for several 
compounds for every 
combination 
of a wide range of 
operating 
parameters. 
An acceptable range of standard conditions was defined 
as that over which the spectrum matching system would provide high 
match factors for daughter spectra of the same compound. 
Of the 32 
instrumental parameters on our TOMS, only 
the 
c o l l i s i o n 
energy 
and 
c o l l i s i o n 
c e l l 
pressure 
were found 
to 
s i g n i f i c a n t l y 
affect MS/MS spectra. 
The 
acceptable 
range 
of 
c o l l i s i o n 
c e l l 
pressure 
was 
that found to 
y i e l d 
f i r s t 
order 
fragmentation 
regardless of the compound type. 
Since 
different 
c o l l i s i o n 
c e l l 
pressures 
are 
required to 
obtain 
f i r s t 
order 
fragmentation for different compounds, b r i e f k i n e t i c studies are 
used to determine the fragmentation order, and to ascertain the 
pressure necessary to provide f i r s t order fragmentation. 
Similarly, 
we have determined a useable operating range for the 
c o l l i s i o n 
energy of 15 to 25 eV. 
The procedure for obtaining the spectrum/substructure relationships 
i s as follows. 
For a selected known compound, a daughter spectrum 
i s acquired for every mass value greater than 1% relative intensity 
that appears i n the primary spectrum of that compound. 
These 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

25. 
CROSS ET AL. 
Automation of Structure Elucidation from MS-M S Data 
327 
Table I. 
Match Factor Definitions 
PT 
An overall 
match 
factor 
that 
indicates how well the 
intensities of a l l the peaks i n the two spectra match. 
PT = (Σ Ys + Yr - 2* |Yr - Ys|) / (Σ Ys + Σ Yr) * 100 
where Y i = log2 (Intensity/Total Ion Count) 
Ys and Yr correspond to the adjusted abundances at each mass 
in the sample and reference spectra respectively 
PC 
A pattern correspondence factor that indicates how well the 
intensity of the peaks i n common match. 
PC = (Σ Ys - |Yr - Ys|) / (Σ Ys) * 100 
NC 
The number of peaks common to both the candidate and unknown 
sample spectrum. 
NS 
The number of peaks remaining unmatched i n the unknown 
sample spectrum. 
NR 
The number of peaks remaining unmatched i n the reference 
spectrum. 
IS 
The percent t o t a l ion current of the sample spectrum that 
was unmatched in the comparison due to NS. 
IR 
The percent t o t a l ion current of the reference spectrum that 
was unmatched i n the comparison due to NR. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

328 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
daughter spectra are then matched against a l i b r a r y of daughter 
spectra from reference compounds. 
After the spectral matching process has been completed, the 
l i s t 
of compounds with the 
top matching daughter spectra 
are 
i d e n t i f i e d and retrieved for each daughter spectrum i n the reference 
compound. 
The molecular 
structures of the compounds with 
best 
matching spectra are drawn and compared for common substructures. 
The 
common substructures 
y i e l d 
candidate 
spectrum/substructure 
correlations. 
Additional compounds are then tested to confirm or 
modify each correlation. 
Once the daughter spectrum i s correlated 
with one or more substructures, this daughter spectrum i s stored i n 
the spectrum data base and i s linked to the associated substructures 
stored i n the structure data base. 
An heuristic program written by Shelley (10) has been adapted 
for 
our 
computer system 
to display molecular 
structures 
and 
substructures from 
connectivity tables. 
Since 
the 
molecular 
structure and substructure representations are stored i n a unique, 
irredundant 
form, 
the 
structure 
drawings 
f a c i l i t a t e 
visual 
comparison for commonalities. 
An example of the spectrum/substructure 
determination 
process 
i s 
i l l u s t r a t e d 
for the 
reference compound di-n-octylphthalate. 
Daughter spectra were acquired for every major ion (above 
1* 
relative intensity) that appeared i n the conventional mass spectrum 
(Figure 2) of the reference compound. A l l the daughter spectra were 
then matched against the reference daughter spectra of the same 
parent mass (but from different compounds) i n the data base. 
The 
results of some of the matches are described below. 
The match of the 105+ daughter spectrum of di-n-octylphthalate 
against the reference 
l i b r a r y of m/z 
105 
daughter spectra i s 
presented i n Table I I . The top four matching spectra a l l correspond 
to structure I I I i n Figure 3. 
Some of the spectra used i n this 
match are shown i n Figure 4. 
Note that the top four matching 
daughter spectra are very similar; a l l three contain the same peaks, 
only the intensity patterns are different (NR, NS, IS, and IR for 
the three are a l l zero). 
There i s a large difference i n overall 
match factor values (PT) between daughter spectra representing the 
correct substructure and that of the next best match. 
Table I I . 
Match of 105+ Daughter Spectra vs. Di-n-octylphthalate 
PT 
PC 
NC 
NS 
NR 
IS 
IR 
Compound 
100 
100 
2 
0 
0 
0 
0 
Di-n-octylphthate 
99 
99 
2 
0 
0 
0 
0 
D i-n-pentylphthalate 
98 
98 
2 
0 
0 
0 
0 
D i-n-butylphthalate 
98 
98 
2 
0 
0 
0 
0 
D i-n-ethylphthalate 
66 
93 
2 
0 
2 
0 
31 
4-t-butyl-l,2-benzenediol 
60 
85 
2 
0 
2 
0 
20 
2-t-butyl-4-methylphenol 
38 
50 
1 
1 
3 
42 
29 
p-t-butylbenzyl alcohol 
36 
50 
1 
1 
3 
42 
52 
2-t-butyl-6-methylphenol 
The results of the match of the m/z 
149 daughter spectrum of 
di-n-octylphthalate against m/z 
149 daughter spectra from 
other 
compounds i n the reference 
l i b r a r y i s given in Table I I I . 
The 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

CROSS ET AL. 
Automation of Structure Elucidation from MS-M S Data 
329 
Figure 3. 
Substructure 
(I and I I I ) , ionic structure ( I I ) , and 
molecular structure (IV) produced by structure drawing program. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

330 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
.4? 
100 
"en 
S 
1 0 -î 
Dî—η —octyl —phthalate 
1 
100 
c 
10 
100 
10 
-T? 
100 
'cn 
5
 
1 0 
^ 
100 
'(0 
I
 
1 0 
c 
1 
100 "1 
'cn 
5 
c <u 
10 1 
c 
1 
'to 
£ 
10 
1 
100 
S 
1 0 
Ί 
' 
1
 
1 
H " 
Di-n--pentyl-phthalate 
Ί
 
1 
1
 
r ~ 
Di—n —butyl —phthalate 
τ 
1 
1 
1 — 
I" 
p-t-butylbenzyl alcohol 
ι 
• 
1 
• 
1 
' — η 
· 
r 
2—t—butyl — 6 — m e t h y î p h e n o ! 
π 
j 
1 
1 
1 
Τ 
1 
Γ 
Senzy!—t—butano! 
I
 
1 
1
 
1 
ι
 
1 
Γ 
2~t-butyl—4-methylphenol 
Τ
 
1 
1
 
1 
1
 
1 
1
 
1 
Γ 
4—t—butyl—1,2-benzenedioi 
τ 
j 
1 
1 
« 
j 
1 
[ 
1 
Γ 
0 
20 
40 
60 
80 
100 
m / z 
Figure 4. 
Selected daughter spectra of parent mass 105 from 
reference l i b r a r y . 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

25. 
CROSS ET AL. 
Automation of Structure Elucidation from MS-MS Data 
331 
daughter spectra u t i l i z e d i n the matching process are shown i n 
Figure 5. The top four matching spectra a l l correspond to the same 
molecular substructure, namely the phthalate substructure (structure 
I i n Figure 3). At this point, i t i s necessary to make a 
d i s t i n c t i o n between a substructure and an ionic structure. The 
substructure 
correlated with the top four matching spectra i s 
structure I I i n Figure 3 whereas the ionic structure of the parent 
ion m/z 149 i s structure I I i n Figure 3. I t i s not necessary to 
know the ionic structure for t h i s empirical approach. 
Table I I I . Match of 149+ Daughter Spectra vs. Di-n-octylphthalate 
PT 
PC 
NC 
NS 
NR 
IS 
IR 
Compound 
100 100 
4 
0 
0 
0 
0 
D i-n-octylphthalate 
96 
96 
4 
0 
0 
0 
0 
D i-n-butylphthalate 
87 
86 
4 
0 
0 
0 
0 
D i-n-pentylphthalate 
87 
86 
4 
0 
0 
0 
0 
Di-n-ethylphthalate 
54 
57 
3 
1 
7 
3 
2 
2-t-butyl-4-methylphenol 
44 
56 
3 
1 
10 
9 
15 
p-t-Butylbenzyl alcohol 
42 
35 
1 
3 
1 
19 
29 
p-t-amylphenol 
35 
61 
3 
1 
10 
3 
26 
2-t-butyl-6~methylphenol 
The compounds yielding the top four daughter spectra are di-n-
octylphthalate, 
di-n-butylphthalate, 
di-n-pentylphthalate, and 
diethylphthalate. Once again, only the r e l a t i v e intensities d i f f e r 
between these daughter spectra. I t i s important that these spectra 
are properly grouped by the spectrum 
matching program and that 
there i s a substantial difference between the overall match factors 
of the matched 
spectra and those 
corresponding 
to unrelated 
substructures. 
The difference between the overall match factor of 
the unknown and the best matching daughter spectra corresponding to 
a different substructure i s 46. 
Since the overall match factor 
range i s 0-100 and the variance within the similar daughter spectra 
i s 13, a value of 46 represents a good separation. The next best 
matching daughter 
spectrum 
outside of this 
group of three 
corresponds to a substructure of 2-t-butyl-4-methylphenol. 
From the daughter spectra of di-n-octylphthalate, we were able 
to determine two spectrum/substructure 
correlations; the 149+ 
daughter spectrum to structure I i n Figure 3 and the 105+ daughter 
spectrum to structure I I I i n Figure 3. In order to obtain spectrum 
substructure relationships for the a l k y l portions of the reference 
molecule di-n-octylphthalate, we would then match other portions of 
the complete MS/MS spectrum against those of compounds containing 
a l k y l substructures. However, this portion of the reference l i b r a r y 
has not yet been developed. 
Thus, to complete the structure 
elucidation we have used standard methods of spectral interpretation 
(11). 
As w i l l be shown, these methods can also lead to useful 
spectrum/substructure relationships. 
Since the substructure represented by the daughter spectrum of 
the m/z 149 ion was the largest i d e n t i f i a b l e substructure i n the 
compound, the parent spectrum of m/z 149 was used to obtain data 
related to the R groups attached to the phthalate 
substructure 
(Figure 6). The largest ion (149+) associated with the phthalate 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

332 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
-t? 
100 
'to 
5
 
1 0 i 
.i? 
100 -ν 
'co 
5 
5
 
1 0 -3 
100 -m 
'co 
S 
1 0 
& 
100 
5
 
1 0 
^ 
100 
Έ 
'co 
1 
s 
1 0 -a 
£ 
100 -g 
'to 
S
 
1 0 - i 
1 
^ 
100 
'co 
S 
1 0 
'co 
S 
ίο -i 
Di —η —ο cty I —phthalate 
—
1 
Τ­
ο 
20 
r—-i 
j 
r 
r 
D i - n - pentyl — phthalate 
Ί 
1 
Γ 
D i — η — b u t y l — p h t h a l a t e 
_L 
Ί
 
1 — \ 
1 
Benzyl—t—butanol 
r — Γ 
1 
1 
ι —
1 — ι —
1 — ι —
1 — ι —
1 — Γ 
p-t-buty!benzyl alcohol 
1L 
Ί
 
1 
1
 
1 1
 
f 
1
 
1 Τ 
2—t—butyl —4—methylphenol 
Ί 
1 
Γ 
ι — ' — I —
1 — I —
1 — Γ 
ρ — t - a m y l p h e n o l 
40 
"Τ 
60 
I 
80 
m / z 
100 
r — • — ι — · " 
Ί
 
1 
Γ
- ^ 
1 
—I
 
1 
Γ 
« 
1 
τ 
2 - t - b u t y l - 6 - m e t h y l p h e n o l 
, hi, ll I 
ι
—
1
—
ι
— 
120 
1 40 
Figure 5. 
Selected daughter spectra of parent mass 149 from 
reference library. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

25. 
CROSS ET AL. 
Automation of Structure Elucidation from MS-MS Data 
333 
substructure was used since the neutral losses leading to i t s 
formation correspond to the groups attached to the phthalate 
substructure. 
This parent spectrum need not be acquired from the 
TOMS d i r e c t l y , since i t can be generated from the set of daughter 
spectra for the unknown. The parent spectrum of m/z 149 has 4 major 
(non-isotopic) peaks at m/z 167, 261, 279, and 391. 
This 
corresponds to neutral losses of 18 (167-149) 112 (261-149), 130 
(279-149), and 242 (391-149). The neutral loss of 112 i s CsHie, the 
loss of 130 i s CeHi70H (which may represent an a l k y l group) and the 
loss of 242 i s C8H17OC8H17 (which i s a rearrangement product). The 
neutral losses i n the m/z 149 parent spectrum are thus 
d i r e c t l y 
related to the two CeHi7 
a l k y l substructures i n the reference 
compound. The low mass ion series i n the primary mass spectrum i s 
also related to the a l k y l chains and the unbroken sequences of ions 
every 16 mass units i s indicative of unbranched alkanes (11). 
The GENOA program i s a constrained molecular structure generator 
resulting from the Stanford Dendral project (12,13,14) and marketed 
by Molecular Design Ltd (6). 
This program generates molecular 
structures using the overlapping substructural information obtained 
from the daughter 
spectrum/substructure 
relationship and the 
empirical formula of the compound. 
Additional spectral and non-
spectral information from other sources may also be included. 
Heuristic rules determine whether a particular generated structure 
i s chemically plausible, and whether or not i t i s retained. The 
advantage of the GENOA program i s i t s a b i l i t y to exhaustively 
produce a l l the plausible 
compounds 
given the generation 
constraints. 
This capability eliminates the p o s s i b i l i t y that the 
chemist might overlook any possible compounds. In many cases, the 
number and types of different structures that are produced suggest 
the nature of the missing structural data. The experiments needed 
to 
acquire such 
data may then be obtained from the known 
spectrum/substructure correlations. 
An essential piece of information required by GENOA i s the 
empirical formula of the unknown compound. 
We have developed 
software that adapts the standard "molecular weight versus possible 
empirical formulae" table. 
U t i l i z i n g a l l pertinent MS/MS data, 
several 
constraints can be placed upon the empirical 
formula 
generator, and i t generates 
a l l possible 
empirical 
formulae 
consistent with those constraints and the molecular weight. We have 
been using M+l daughter 
spectrum 
information instead of high 
resolution mass spectrometry to aid i n the determination of the 
empirical formula of an unknown compound (4,15). 
The daughter 
spectrum of the M+l isotope ion contains peak pairs at adjacent 
masses representing the distribution of the
 
1 3 C atom between the 
ionic and neutral fragments. 
The r e l a t i v e intensities of these 
daughter pairs depends on the r a t i o of carbon atoms lost to carbon 
atoms retained i n fragment ion of the M+l ion to the observed 
daughter ion. Hence the peak height or area ratios can be u t i l i z e d 
to obtain the number of carbon atoms present i n the compound. Once 
the number of carbon atoms i s determined by this method, i t used as 
a constraint to the empirical formula generator. 
The resulting 
reasonable empirical formulae are given to GENOA. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

334 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
100.0 
-a 
10.0 
-
& 
1 
c 
t> 
·+-» 
c 
a* 1.0 
-
3 
: 
0.1 
Ι ' Γ I ' V l ' I
1 
I 1 
I'I 1 
I
1 1 ' 1 ' Γ ' Ι ' ΐ ' 1 ' I ' I ' 1 ' I
1 
1 ' Ι Ί Ί
1 
I ' l ' l 
140 
160 
180 
200 
220 
240 
260 
280 
300 
320 
340 
360 
380 
400 
M/Z 
Figure 6. Parent spectrum of mass 149 from di-n-octylphthalate. 
100 
- ι 
80 Η 
60 Η 
S 
40 
20 H 
J I I I I J ι' ι ι ι 
ι ι j ι ι ι ι j f ι ι ι j ι ι ι ι y ι ι ι r 
50 
100 
150 
200 
250 
300 
350 
400 
Μ/Ζ 
Figure 7. 
Daughter spectrum of the
 1 3C-containing 
protonated 
molecular ion of di-n-octylphthalate. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

25. CROSS ET AL. 
Automation of Structure Elucidation from MS-MS Data 
335 
For 
example, 
to determine 
the empirical 
formula of 
di-n-octylphthalate, the daughter spectrum of the
 
1 3 C containing 
molecular ion (392) was obtained (Figure 7). The relative peak 
areas of adjacent peak pairs at m/z 149 and 150 i s 2:1. This 
indicates that the M+l ion i s twice as l i k e l y to lose a
 1 3 C atom as 
retain i t . 
Thus the ratio of the number of carbon atoms lost to 
those retained i s 2:1. Since the identified phthalate substructure 
contains 8 carbons, the unknown compound (di-n-octylphthalate) must 
contain 24 carbon atoms. 
These data, along with the molecular 
weight of 390 as determined from the conventional CI mass spectrum 
of the unknown was fed into the empirical formula generator and the 
output was one empirical formula: 
C 2 4 H 3 8 O 4 . 
Given the phthalate substructure, the two alkyl substructures 
and the empirical formula, GENOA can now be used to generate a l l 
plausible molecular structures. The oxygen in the C8H17OH group i s 
allowed to overlap with either terminal phthalate oxygen. With this 
information, 
GENOA 
constructs 
only 
one molecular 
structure 
(structure IV of Figure 3) and i t i s di-n-octylphthalate. The 
number of generated structures depends on the completeness of the 
information provided. I f the branching of the alkyl group i s not 
specified, 89 different structures are generated which represent a l l 
the isomeric permutations of the alkyl groups. 
The identities of 
these generated 
structures, however, would provide clues as to 
further needed information. In cases where MS/MS information cannot 
determine a unique 
result, additional spectral and non-spectral 
information may be given to GENOA as structural constraints. 
Conclusions 
The software tools for structure determination by MS/MS are now at a 
stage where we can begin to apply them to real elucidation problems. 
Nearly a l l of the software 
tools have been integrated into a 
comprehensive, interactive system. The system has been successfully 
used to develop 
daughter 
spectra/substructure correlations and 
extend the MS/MS data bases. 
The elucidation process i s totally 
empirical and does not assume that 
structural 
integrity i s 
maintained in the ionization or fragmentation process. As a result, 
the ion structures need not be identified. 
Preliminary results from 
applying the system to structure determination problems have been 
very encouraging. 
Acknowledgment 
This work was supported by NIH grant no. 2R01GM28254. 
Literature Cited 
1. 
Gregg, H.R., Hoffman, P.Α., Enke, C.G., Crawford, R.W., Brand, 
H.R., Wong, CM., Anal. Chem. 1984, 56, 1121. 
2. 
Hoffman, P.Α., Enke, C.G., presented at 31st Annual Conference 
on Mass Spectrometry and A l l i e d Topics, Boston, MA (1983); 
bound p. 556. 
3. 
Cross, K.P., Enke, C.G., Computers and Chemistry in press. 
4. 
Bozorgzadeh, M.H., Morgan, R.P., Beynon, J.H., Analyst 1978, 
103, 613. 
"™ 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

336 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
5. 
Enke, C.G., presentation at "Applications of AI in Mass 
Spectrometry", Workshop at 33rd Annual Conference on Mass 
Spectrometry and Allied Topics, San Diego, CA, May 26-31, 
1985. 
6. 
Molecular Design Ltd., 1122B Street, Hayward, CA 94541. 
7. 
Cross, K.P., Beckner, C.F., Enke, C.G., in preparation for 
submission to Computers and Chemistry. 
8. 
Wipke, T. W., Dyott, Τ. M., J. Am. Soc. 1974, 96, 4834. 
9. 
Damen, H., Henneberg, 
D., Weimann, 
B., Anal. Chim. Acta 1978, 
103, 289. 
10. 
Shelly, C.A., J. Chem. Inf. Comput. Sci.1978, 23, 61. 
11. 
McLafferty, F.W. "Interpretation of Mass Spectra", Univ. 
Science Books, Mill Valley, CA, 1980. 
12. 
Lindsay, 
R.K., 
et al., "Applications of 
Artificial 
Intelligence to Organic Chemistry: The Dendral Project", 
McGraw Hill, New York, NY, 1980. 
13. 
Barr, Α., Feigenbaum, E.A., "Handbook 
of 
Artificial 
Intelligence, Vol. II", William Kaufman, Inc., Los Altos, CA, 
1981. 
14. 
Carhart, R.E., et. al., J. Org. Chem. 1981, 46, 1708. 
15. 
Todd, P.J., Barbalas, 
M.P., 
F.W., 
Organic Mass 
Spec. 1982, 17, 79. 
RECEIVED January 14, 1986 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch025
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

26 
A r t i f i c i a l Intelligence, Logic P r o g r a m m i n g , and Statistics 
in M a g n e t i c R e s o n a n c e I m a g i n g a n d S p e c t r o s c o p i c 
A n a l y s i s 
Teresa J. Harner, George C. Levy, Edward J. Dudewicz, Frank Delaglio, and Anil Kumar 
National Institutes of Health Resource for Multi-Nuclei NMR and Data Processing, 
Department of Chemistry, Syracuse University, Syracuse, NY 13210 
Logic Programming in combination with expert directed 
statistical analysis makes possible a unique aproach to 
new expert systems for NMR and other chemical analyses 
as well as for medical applications of NMR. 
We have 
used this approach to begin understanding the behavior 
of T1, T2 and
 1H density in magnetic resonance imag-
ing (MRI). 
Also, we are u t i l i z i n g this technique 
to develop intelligent behavior within our NMR1 and 
NMR2 spectroscopic data reduction systems. 
Sets of rules generate a solution space which may be 
s t a t i s t i c a l , functional or symbolic (non-numerical). 
unlike other expert system environments, the stat-
istical foundations which govern many of the "macro-
scopic" inferences are included, allowing for modifica-
tion to the underlying "implicit" statistical bases at 
any time. The logic programming environment allows 
modifications to the knowledge-base through automatic 
and user-generated commands, and lends itself to the 
development of easily understood natural language 
interfaces. 
Software for NMR 
applications i s now in widespread use and i t i s 
therefore important that such packages work well not only i n more 
traditional chemical s h i f t , relaxation or resonance applications but 
in the more recent context as potential pre-processors of imaging data. 
In particular, two systems for NMR 
spectroscopic analysis, 
IURL(1) (one-dimensional analysis) and MR2(2J (two-dimensional anal-
ysis) , are f u l l y operational, while a third system for analysis of 
magnetic resonance imaging (MRI) parameters, i s beginning to emerge. 
While NMR1 and NMR2 are written in conventional numerically based code 
(FORTRftN-77), the MRI system, MRLJÛGLESP combines the use of FORTRAN 
and the logic programming language, Prolog. 
Our research on human tissue discrimination methods deriving 
from MRI parameters i s leading to the evolution of prescribed s t a t i s -
t i c a l methods for data screening, normalization and discrimination. 
These are driven by Prolog. 
In Prolog, sets of logical inferences 
0097-6156/ 86/ 0306-0337$06.00/ 0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch026
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

338 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
which carry information about application data types, are capable of 
distinguishing important features. Procedures pass the data through 
those analyses which optimize c l a s s i f i c a t i o n . 
In this paper we note some of the failures inherent i n most 
current computer-aided (and manual) NMR spectroscopic techniques and 
reflect on possible solutions v i a A r t i f i c i a l Intelligence (AI) tech-
niques. 
A description of current AI methods which lend themselves to 
problems of this type i s included, as well as a d e s c r i p t i o n of 
applications to NMR spectroscopy and MR imaging. 
Lastly, there i s a 
brief description of MRLJiOCLESP i n i t s current preliminary state. 
IWO.- Model Computer Software for Spectroscopic Analysis 
NMR1 i s a graphics-oriented software system containing over 100 
options, each allowing the user a large degree of freedom to analyze 
spectroscopic data i n a single dimension. At the core of NMR1 i s a 
set of procedures for data reduction, estimation of i n i t i a l parameters, 
and the u t i l i z a t i o n of a set of convergence methods for baseline 
conditioning, peak identification and curve f i t t i n g . 
Curve f i t t i n g i s c u r r e n t l y accomplished using a non-linear 
minimization 
(modified Levenberg-Marquardt) algorithm f o r three-
parameter Lorentzians, as well as five additional non-linear peak 
shapes. 
Generally, a user/Chemist may learn a great deal from the 
displays of the Fourier transformed spectra using the options for 
analysis available with graphics interaction. 
Nevertheless there i s 
a great deal of room for improvement. The following l i s t summarizes 
the most salient current d i f f i c u l t i e s with traditional computer-aided 
analysis: 
1. 
Subroutines used to obtain quantitative measures of the 
parameters associated with overlapping peaks can end 
in misleading results i f an incorrect theoretical line 
shape has been u t i l i z e d . 
2. 
Automated i n i t i a l parameter estimation may not be 
accurate and then the user w i l l be required to intercede 
with manual estimation. 
3. 
It may be necessary to manually i n s t a l l or delete peaks; 
especially when signal-to-noise i s low or when the peaks 
are largely un-resolved. 
In cases of very small peaks 
or when overlap between peaks i s high, standard algorithms 
may f a i l and return unrealistic linewidth values. 
4. 
If i n i t i a l estimates are too far from correct values, 
calculations may diverge. Then the process must be 
restarted with better i n i t i a l estimates. 
5. 
Because of the underlying mathematical assumptions i n -
herent i n s t a t i s t i c a l modeling of the data, i f the 
assumptions are for any reason incorrect the f i n a l f i t 
may be poor or good, but not significant. Currently, 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch026
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

26. 
HARNER ET AL. 
Magnetic Resonance Imaging and Spectroscopic Analysis 
339 
software users must have sufficient background i n the f i e l d 
to properly interpret the v a l i d i t y of the output from curve 
f i t t i n g and other algorithms. 
In addition to these problems, there exist the set of conditions 
under which the user must manually set a l l i n i t i a l parameter estim-
ates. Manual constraints on the parameters may often be the only way 
to obtain a proper convergence i f the true, bounded region of the 
solution i s known by the user, or i f one has some specific knowledge 
of the correct starting values. 
This may be particularly true i f 
there are additional parameters with complex functional forms such as 
phase angle. 
Automated paramater setting which takes into account 
some of these problems could lead to more consistent results and 
require less user expertise. 
MR Imaging 
While analytical spectroscopy has been used for many years in order to 
obtain information regarding chemical structure, magnetic resonance 
imaging i s a r e l a t i v e l y new 
f i e l d . 
Misleadingly well-resolved 
images may aid an expert Physician in diagnosing human tissue abnormal-
i t i e s , but as l i t t l e i s understood about the relationships which exist 
between tissue MRI parameters and tissue health, not to mention 
secondary f a c t o r s (genetic, environmental, 
macro-physiological, 
etc.), such judgements, accurate or not, are often purely subjective. 
In similar applications, precedents are well established for the use 
of expert systems as medical diagnostic tools (1,1,5). 
The optimal research strategy involves the systematic search to 
uncover these relationships at the same time as the development of a 
computer methodology proceeds. Such software systems w i l l not only 
give the kind of information about physicochemical structure as have 
previously designed systems for NMR spectroscopic analysis, but w i l l 
serve as co-investigators, f a c i l i t a t i n g through automated procedures, 
analytical tasks which are normally time-consuming and complex. 
Experimental data analysis of tissue parameters and construction 
of an automated format for MRI research has been proceeding in our 
laboratory with seme success. 
S t a t i s t i c a l Analysis has 
revealed 
that, with the proper normality transformations applied to T^, ^ 
and 
1H density over eight regions of interest i n the human brain 
(left 
and right sides respectively of Cortical White Matter, Internal 
Capsule, Caudate Nucleus, and Thalamus), the values within tissue 
type generally follow a normal distribution(£). 
This implies that 
existing discriminant functions may 
be able to optimally 
c l a s s i f y 
data according to tissue type (although 
i n i t i a l results also show 
large overlaps between the normal distributions of several tissue 
types). 
Indeed, preliminary results have yielded correct class-
i f i c a t i o n percentages between 73 and 86%(2). 
As shown in Figure 1, however, s t a t i s t i c a l analysis alone i s 
only one of the steps towards realizing a f u l l y functional system for 
MRI 
tissue discrimination. 
Experimental data i s passed through 
software (eventually NMR1/NMR2) f o r pre-processing. 
Since 
the 
s t a t i s t i c a l analyses must themselves be applied to an ever-increasing 
number of regions of interest (ROI's) i t would be of great use to 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch026
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

340 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
develop an automated s t a t i s t i c a l treatment methodology for future 
research. 
Also f i t i s not yet known just what f i n a l precision to 
expect from discriminant analysis, even including secondary descriptor 
data which should help to obviate overlaps between MRI responses from 
different R0I"s. 
It seems quite l i k e l y that additional, qualitative 
information, or non-traditional numerical discrimination procedures, 
might be required at some point to approach an accuracy acceptable 
for future c l i n i c a l use of MRI expert systems. 
Lastly, a general 
computer system a r c h i t e c t u r e must control these procedures for 
highest efficacy. 
Overview of Proposed AI Techniques 
Most researchers 
are now aware that " A r t i f i c i a l Intelligence" has 
diverse meanings both inside and outside Computer Science. 
Such a 
situation i s understandable given the actual variety of methods which 
could, without being s t r i c t l y inaccurate, f a l l under the heading of 
AI. 
It i s therefore important, i f one intends to use AI techniques to 
develop a computer program architecture, to f i r s t define clearly the 
AI related approaches which one has chosen to apply. 
For the present, the following AI tools and techniques comprise 
the building materials intended for construction of our automated 
spectroscopic analysis and MRI tissue discrimination systems: 
Logic Progranmingr and specifically, the programming language 
Prolog, s a t i s f i e s a specified goal by resolving i t s premises. 
For 
resolution to take place, these premises must in turn become the 
subgoals for premises which can be satisfied. 
A goal i s specified 
with a predicate name and a set of arguments whose values must be 
instantiated for the goal to succeed. 
The goal-to-premise structure 
forms sets of clauses which operate upon the principles of 
f i r s t 
order predicate logic(8). 
Decision Trees provide the overall structure for problem resolution 
in the current system. The outcome of a test at a particular node in 
the tree i s recorded and directs the next decision for branching. 
If 
a failure i s encountered at a l l possible branches, the un-resolved 
problem i s passed back up to the node at which there last existed a 
possible, untested, solution. 
Prolog lends i t s e l f nicely to this 
structure since i t s basic architecture includes decision-making via 
such a "depth-first" search strategy(2J 
Mnfk>i M a s h i n g 
a n d 
fiîmîiarîiy 
Μ « ί ΐ Ω ) are the means by which, at 
any node in the decision tree, an actual test i s made. Within a 
database, l i e s a set of model data structures, to which an attempt i s 
made to match the actual input and output format. The i n i t i a l problem 
i s to find a model which, of a l l stored models, contains the fewest 
d i f f e r e n c e s i n structure between model and actual data set. 
An 
example i s shown in Figure 2, a system designed to c l a s s i f y human 
brain tissue type. 
A data set i s entered which contains variable 
names "Cbs","^", " τ 2 " and "1H density" as headings in the 
f i r s t 
row. 
In the f i r s t column, i t i s found, l i e s a set of integer numbers 
running from 1 to 4, and within the set i t s e l f are "*" 's. 
Stored 
within the system are a series of general models which identify data 
matrices in sets of predicates defining " f i r s t row", 
"column", and 
other distinguishing characteristics of data sets. 
By searching the stored models for such characteristics, the 
program constructs a model data set which appears to come closest to 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch026
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

HARNERETAL. 
Magnetic Resonance Imaging and Spectroscopic Analysis 
[NATURAL LANGUAGE INTERFACE 
IPRE-PROCESSOR: NMR1/NMR2 
[PROLOG CONTROL PROGRAM 
I 
X Z 
ISTATISTICAU 
EXPERT 
SYSTEM 
LOGICAL 
INFERENCE 
ENGINE 
EXPERIMENT 
CONTROL 
Figure 1. System Flow Chart 
ACTUAL DATA SET 
Ob? 
T1 
T2 
Densitv 
1 
663.000 
77.0000 
96.798 
1 
775.000 
84.0000 
107.554 
2 
659.000 
82.0000 
99.556 
2 
* 
76.0000 
* 
3 
619.000 
79.0000 
99.467 
3 
667.000 
79.0000 
102.868 
4 
* 
79.0000 
* 
4 
651.000 
80.0000 
84.752 
LOGIC PROGRAMMING COPE 
, o b s , . . . , T 1 , . . . , 
list_of_yariable_jiaees [ a, b, 
T 2 , . . . , D e n s i t y , . . . ] . 
symbol__list[<integers>,<real_numbers>, " *
n , . . . ]. 
position_peanings[column(Number,Symbol,Meani ng), 
row(Number1,Symbol1,Meaning 1)]. 
Model_data_sets[model1(column(A,B,C),row(D, Ε , F ) ),. 
m o d e l n ( c o l u m n ( I , J , K ) , r o w ( X , Υ , Ζ ) ) ] . 
MODEL DATA SET - CLOSEST (GENERAL) MATCH 
Obs 
T1 
T2 
Density 
1 
VAL 
VAL 
VAL 
1 
VAL 
VAL 
VAL 
2 
VAL 
VAL 
VAL 
2 
NONVAL 
VAL 
VAL 
3 
VAL 
VAL 
VAL 
3 
VAL 
VAL 
VAL 
4 
NONVAL 
VAL 
NONVAL 
4 
VAL 
VAL 
VAL 
Figure 2. Pattern Matching with Prolog 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch026
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

342 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
that defined by the structure of the input data set. For that 
particular model, there are now a set of options for action upon the 
data. The variable name "Cbs" i s associated with a set of classes, 
therefore the program knows that 4 classes are represented by the 
data set. The variable names "Ti
n, "T2
W and "1H" density are untrans-
formed names, which information, taken with the fact that "*" has 
been used i n the place of data i n certain positions identifies the 
set as being raw and untransformed. 
The program w i l l then proceed by 
"cleaning up" the raw data set, making appropriate transformations 
and applying a discriminant analysis to the set, under the assumption 
of four classes. 
In actual practice a number of tests must be passed at various 
nodes before f i n a l c l a s s i f i c a t i o n takes place. Also, a prohibitive 
time would be required to search a large database of models for ones 
which most closely approximated the actual data set. For this reason 
the concept of similarity nets i s introduced. In this case, a more 
general model i s f i r s t chosen, one which i s clearly not completely 
absurd. A subset of other models which are variations of this f i r s t 
general model then provides the index for the f i n a l choice of model. 
Such a reduction i n the model l i s t s greatly reduces the search space 
for the closest f i t . 
While a great many other techniques may be employed to ensure 
a consistent, and efficient, logic-driven software, the techniques 
described above are the primary drivers for the effective resolution 
of goals i n the prototype expert system MRILJ/XLESP. Once a detailed 
accounting i s made of the characteristics which f u l l y describe input 
and output, providing Prolog code i s quite easily accomplished. 
Specific Applications: 
Imaging 
The prototype expert system, MRXJJOG_ESP has been written to aid 
in classifying tissue type from primary and secondary tissue descrip-
t o r s and i s capable of limited applications. 
While i t would be 
incorrect to say that the current system i s a robust expert system, 
since i t i s not yet able to f u l l y make the inferences regarding the 
input data sets which would lead to automatic tissue c l a s s i f i c a t i o n , 
the program does successfully enable s e r i a l combinations of s t a t i s t i c a l 
procedures to be run from a central Prolog c o n t r o l l i n g program. 
Commands are parsed so that simple English language structures can be 
interpreted, and a tracking procedure keeps an automatic l o g of 
analyses run and steps taken. 
At the experimental interface, we expect to ultimately assemble 
a data set of approximately 500 patients. Thus far we have only worked 
on a much smaller data set of 23 individuals. The actual protocol for 
obtaining this data i s described elsewhere(S) · 
Figure 3 provides a sample session with MRI_JOG_ESP. 
The 
controlling code i s written i n Prolog, while numerically oriented, 
analytical procedures for c l a s s i f i c a t i o n are written i n Fortran-77. 
xhe system has been written to run under Data General's AOS/VS 
operating system (MV series computers) but i t i s expected t o be 
easily ported to the Digital Equipment VAX VMS environment. 
At the front end of the controlling program there are three main 
branches i n the form of predicates: 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch026
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

26. HARNER ET AL. 
Magnetic Resonance Imaging and Spectroscopic Analysis 343 
WELCOME TO MRILOG 
Use the o p t i o n s l i s t below t o guide your 
i n t e r a c t i o n 
w h i l e k e e p i n g your r e s p o n s e s r e l a t i v e l y s i m p l e , and 
you should have few problems w o r k i n g w i t h i n the system. 
GENERAL FEATURES 
I . 
a u t o _ a n a l y s i s : based on a user s p e c i f i e d 
d a t a f i l e , program determines a n a l y s e s and 
runs them. 
I I . 
u s e r _ d r i v e n _ a n a l y s i s : user s p e c i f i e s 
f i l e s 
and r u n l i s t , 
I I I . 
h e l p _ f i l e : p r o b a b l y a good p l a c e t o s t a r t . 
What i s your g e n e r a l o b j e c t i v e , 
based on the i n f o r m a t i o n 
j 
NOTE 
! 
s u p p l i e d above? 
! Answers can take a 
! 
j n a t u r a l language form) 
! but user should t r y j 
I t o respond w i t h i n 
t h e i 
j c o n t e x t of the prompt! 
! : I would 
l i k e t o perform a user d r i v e n 
a n a l y s i s . 
Reset? 
( y e s / n o / a l l ) 
REMEMBER: 
Regular " r e s e t " 
w i l l 
d e l e t e a l l the d a t a f i l e s accum-
u l a t e d so f a r EXCEPT: 
< u s e r _ a n a l y s i s ( x x x ) > 
and 
<auto__analysis (xxx )>. 
By s p e c i f y i n g 
" a l l " i n the r e s e t 
command, these w i l l a l s o go. 
See Users Manual or Help 
f i l e 
f o r 
f u r t h e r i n f o r m a t i o n . 
no, 
Figure 3. An I n t e r a c t i v e Session w i t h MRI_LOG_ESP. 
Continued on next page 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch026
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

344 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
P l e a s e e i t h e r g i v e a c l e a r and 
c o n c i s e d e s c r i p t i o n of 
your o b j e c t i v e , or type i n 
a l i s t of the procedures 
you wish t o invoke f o r d a t a 
a n a l y s i s . 
AVAILABLE PROCEDURES FOR ANALYSIS 
c a l l name 
<twod> 
<normtest > 
<tran> 
< t r a n _ d i s c > 
<disc__fun> -
d e s c r i p t i o n 
two d i m e n s i o n a l 
g r a p h i c s . 
- n o r m a l i t y t e s t i n g . 
- t r a n s f o r m a t i o n of 
v a r i a b l e s . 
- d i s c r i m i n a n t a n a l y s i s 
of t r a n s f o r m e d v a r s . 
d i s c r i m i n a n t 
a n a l y s i s 
(untransformed 
d a t a ) 
L e t ' s do a normtest. 
SEARCHING AVAILABLE ANALYSES FOR YOUR SPECS 
The f o l l o w i n g a n a l y s e s w i l l be run u s i n g d a t a from an 
i n p u t 
f i l e . 
I f the l i s t i s not c o r r e c t 
i n d i c a t e 
t h a t a change i s r e q u i r e d . 
O t h e r w i s e , type "go", 
(or some o t h e r a f f i r m a t i v e ) 
RUN LIST: 
[normtest ] 
I : go. 
INPUT FILE SPECIFICATION: normtest 
W i l l 
t h i s be new data? 
! : no. 
You can use any f i l e which c o n t a i n s PROPERLY FORMATTED d a t a . 
What i s ( a r e ) your i n p u t f i l e name(s)? 
I: I want t o examine t 1 c c and t 2 c l . 
Do you wish t o examine f i l e t 1 c c 
i : no. 
Do you wish t o examine f i l e 
t 2 c l 
i : no. 
Figure 3. 
Continued. 
Continued on next page 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch026
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

26. 
HARNER ET AL. 
Magnetic Resonance Imaging and Spectroscopic Analysis 
S p e c i f i e d i n p u t 
f i l e s 
scanned. 
S t a r t i n g normtest u s i n g i n p u t 
f i l e : t 1 c c 
S t a r t i n g normtest u s i n g i n p u t 
f i l e : 
t 2 c l 
NORMALITY TESTING OF VARIABLES (normtest) 
A l l output has been appended i n u s e r _ _ a n a l y s i s . 007 
Do you want a p r i n t o u t 
i : no. 
P l e a s e e i t h e r g i v e a c l e a r and 
c o n c i s e d e s c r i p t i o n of 
your o b j e c t i v e , or type i n 
a l i s t of the procedures 
you wish to i n v o k e f o r d a t a 
a n a l y s i s . 
AVAILABLE PROCEDURES FOR ANALYSIS 
c a l l name 
d e s c r i p t i o n 
<disc_fun> 
<twod> 
<normtest > 
<tran> 
< t r a n_d i s c > 
two d i m e n s i o n a l 
g r a p h i c s . 
n o r m a l i t y 
t e s t i n g , 
t r a n s f o r m a t i o n of 
v a r i a b l e s . 
d i s c r i m i n a n t a n a l y s i s 
of transformed v a r s . 
d i s c r i m i n a n t a n a l y s i s 
(untransformed 
data) 
h a l t . 
Figure 3. 
Continued. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch026
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

346 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
• 
aiito__analysis 
• ujser^âriveru^nalysis 
• helçL/ile 
In the emerging system, auto_analysis represents the automated 
l o g i c - d r i v e n search tree which i s able to apply the appropriate 
analysis from logical inference and/or upon receipt from the user of 
a description of the problem space (data set). The program w i l l then 
search, sort and c l a s s i f y the data as appropriate to each reasoning 
technique l o g i c a l l y demanded by the problem/data 
input. In many 
respects auto_analysis represents the "expert system core". For the 
i n i t i a l input data set, the user i s questioned regarding a f i n a l 
objective. 
This objective, i n combination with the results obtained 
from each analysis, are what provide deterministic control, as the 
i n i t i a l data set i s formatted for subsequent analysis and output from 
previous analysis i s i t s e l f reformatted (as a result of computer 
generated interpretation of the output). 
This reformatting of the 
output i s , once again, determined by the next analysis which the 
program deams essential to the satisfaction of the primary, user-spec-
i f i e d goal. 
The capability of determining the order of procedures, based on 
the user specification of the end goal alone f and to know at what 
point computation should stop with a result recorded, i s the implemen-
tation of the theoretical AI techniques described above. 
Conversely, useiudriveru^nalysis allows the user to specify from 
one to a l l of the available analyses and the specific data sets to 
use for each given analysis. 
Thus, i f predicates twod and normtest 
were specified, a "Rurulist" would be interpreted consisting of: 
[tnod rnoimtest] 
It should be noted that a l l the formatting knowledge required to run 
auto-analysis i s also required to run a user analysis. In this case 
one i s simply overriding the computers "better judgement" i n terms 
of procedural protocol. 
The following predicates comprise the current s t a t i s t i c a l pro-
cedures handled by the system. 
1. 
<twod> - two dimensional graphics 
2. 
<threeD> - three dimensional graphics 
3. 
<nonntest> - normality evaluation of variables 
4. 
<trans> - normality transformation of variables 
5. 
<disQ_fun> - linear discriminant analysis 
These programs, written i n Fortran-77 are accessed through 
systems c a l l s i n Prolog. Naturally this l i s t w i l l be greatly augmented 
in future versions of the program. However this set of s t a t i s t i c a l 
analyses i s comprehensive in-so-far as a data set may be screened and 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch026
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

26. 
HARNER ET AL. 
Magnetic Resonance Imaging and Spectroscopic Analysis 347 
c l a s s i f i e d using these routines alone, thereby providing a general 
but simplified model upon which t o base the l o g i c a l inferences 
which govern choice of analysis. 
At the top level of the program, having provided the "analytical 
objective" for a given data set, the user i s asked to verify that the 
program has understood the command correctly. If this i s v e r i f i e d the 
program w i l l go on to ask the user for the name of the input f i l e 
containing data from which i t i s desired to proceed with testing. 
A copy of the results of every test on a set of data i s saved 
and when a single run of a series of tests has been made, the results 
of each procedure i s appended i n a single f i l e . 
Commands are requested from the user at f a i r l y regular inter-
vals. The program w i l l accept most general sentences which may be 
construed by the parser to e l i c i t some form of action for which the 
program has been written. 
While several predicates require and accept only affirmative 
(yes) or negative (no) responses from the user, for the most part, 
communication with the program i s governed by what has been termed a 
"Context Parser", the main predicate of which has three levels to 
handle varying levels of l i n g u i s t i c complexity. 
The aim of the graphics software, (twod, threeD), i s to enable 
the user to rapidly examine a large number of two- and three-dimension-
a l scatter plots. At present the program i s capable of handling up to 
120 variables with up to 200 observations for each. 
Predicate normtest tests/evaluates normality of the given set of 
data points (corresponding to any variable), while, disc_fun performs 
a linear discriminant analysis on groups of data (maximum of 10 
groups) with respect to any selected variables (maximum of 20 var-
iables) · 
There are only two types of output f i l e s and output f i l e names. 
These are: 
autXL_3nalysia_out<xxx> 
and 
user%jEmalysis_out<xxx> 
Where "<xxx>" symbolizes a sequence number. As runs are made, each 
one i s placed i n a l i s t of output f i l e s . As runs are made, whether 
i n auto or user mode, an accumulation of results i s i n e v i t a b l e . 
Also, due to the method by which input and output f i l e s are appended, 
there i s some accumulation of "garbage" f i l e s . The procedure reset 
provides a way of deleting unecessary f i l e s . 
NMRI and similar Software (a>eçtresçppic Analysis) 
Precisely how the AI techniques discussed above might improve the 
current, numerically-based software i s s t i l l somewhat speculative. 
Close inspection of the current f a i l i n g s discussed previously 
indicates that their source l i e s in two main areas which are d i f f i c u l t 
for numerically based algorithms to handle: 
1. The problem of defining the baseline and locating and 
defining the spectral features (peaks). 
American Chemical Society 
Library 
1155 16th St., N.W. 
Washington, D.C. 20036 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch026
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

348 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
2. 
The correct setting of i n i t i a l parameters. 
For quantitative characterization of molecules including analyses 
of in vivo (metabolic) NMR spectra, the problem of peak overlap and 
baseline identification (which are particularly problematic for i n 
Vivo spectroscopy) i s really only one part of the more general 
experimental problem of discovering spectral differences arising i n 
complex environments. We can greatly increase the efficiency of the 
o v e r a l l experimental 
process and solve the peak quantification 
problem u t i l i z i n g the data base structure inherent i n a logic program­
ming framework. 
With sets of rules providing the facts from which a f u l l model 
can be constructed, the program i s informed regarding the origin of 
the spectrum to be analyzed. A comparison i s then made between model 
and actual spectra. Anomalous features are thus identified. 
In (2) above, a second d i f f i c u l t y with spectral analysis i s 
identified which might be alleviated through the use of logic program­
ming methods: The setting of i n i t i a l parameters. As noted above, 
this i s generally an automated procedure i n NMR1 but sometimes 
does require user intervention. A minimization algorithm which did 
not derive i t s information from a pre-set local minimum could be 
applied at each minimum i n the spectrum and then proceed to examine 
the consistency of the results. Such a method would not be d i f f i c u l t 
to implement within the framework of a logic-driven, controlling algor­
ithm. By applying this minimization algorithm at multiple minima and 
by examining consistancy (and not by numerical methods alone!), a 
determination would be made as to whether the derived minimum was 
false or global. 
Investigation thus far has been made into characteristic i n Vivo 
3 1 P peaks with some thought to localized pattern matching (1). 
In the 
coming year we w i l l begin to look at coding characteristic i n Vivo 
spectra and developing a Prolog algorithm which analyzes the results 
of the minimization algorithm. For the most part, i t i s hoped that 
MRI^J/DQ_ESP w i l l provide the "expert system s h e l l " which may be 
effectively applied to the problems i n spectroscopic analysis. 
Acknowledgments 
The authors acknowledge the collaboration of Dr. Felix Wehrli and 
co-workers at General Electric Medical Systems and also p i l o t project 
funding from NIH (Grants RR-01317, and RR-01831) and the General 
Electric Company. 
Literature Cited 
1. 
Dumoulin, C.L., Levy, G.C.; Journal of Molecular Spectroscopy, 
113, 299-310 (1984); Dumoulin, C.L., Levy, G.C.; Computers and 
Chemistry, 5, 9-18 (1981). 
2. Levy, G.C., Delaglio, F., Macur, Α., Begemann, J.; Computer 
Enhanced Spectroscnpy, in press (1986). 
3. 
Buchanan,Β.Α., Shortliffe, E.H.; "Rule Based Expert Programs: 
The MYCIN Experiments of the Stanford Heuristic 
Programming Project", Addison-Wesley, Reading, MA (1984). 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch026
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

26. 
H A R N E R ET A L . 
Magnetic Resonance Imaging and Spectroscopic Analysis 
349 
4. Miller,R., Pople, H., Meyers, J.; New E n g l a n d 
Journal of 
Medicine, 
307, 468-476 (1982). 
5. Weiss, S.M., Kulikowski, C.A.; "A Practical Guide to Design-
ing Expert Systems", Rowman and Allanheld, Totowk, NJ (1984). 
6. Dudewicz, E.J.; "Statistical Analysis of Magnetic Resonance 
Imaging Data in The Normal Brain, Part I: Data, Screening, 
Normality, Discrimination, Variability"; unpublished report, 
1985. 
7. Levy, G.C., Dudewicz, E.J., Harner, T.J., Wehrli, F.W., Breger, 
R.; (Submitted),Magnetic Resonance in 
Medicine, (1985). 
8. Kowalski, R.; "Logic for Problem Solving", Computer Science 
Series, North-Holland Publishing Co., NY (1979). 
9. Clocksin, W.F., Mellish, C.S.; "Programming in Prolog",Springer-
-Verlag,Berlin, (1981). 
10. Winston, P. H. ,"Artificial Intelligence",Second Editoin, 
Addison-Wesley, Reading Massachusetts (1984). 
RECEIVED January 24, 1986 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch026
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

27 
An E x p e r t S y s t e m for O r g a n i c Structure D e t e r m i n a t i o n 
Bo Curry 
Chemical Systems Department, Hewlett-Packard Laboratories, Palo Alto, CA 94304-1209 
We are developing an expert system which interprets 
low-resolution mass spectra, infrared spectra, and 
other user-supplied information and produces a l i s t of 
functional groups present in an unknown organic com-
pound. The input data are interpreted as evidence 
supporting the presence or absence of each of the over 
900 functional groups and organic substructures repre-
sented in the knowledge base. This evidence is then 
combined by an "inference engine" to determine the 
probability that the group is present. Each type of 
input spectra is interpreted by a separate module, 
which has private internal data structures; these 
modules can use different techniques and even be 
written in different computer languages. The modular 
architecture was designed to allow new modules inter-
preting different types of spectra to be easily in-
corporated into the system. A major goal has been the 
reduction of the number of false positive assertions. 
An analyst attempting to identify an unknown compound from spectral 
data begins by searching l i b r a r i e s of spectra of known compounds 
(Figure 1). Programs which rapidly and r e l i a b l y search spectral 
l i b r a r i e s are widely available.(1-2) However, although these 
l i b r a r i e s continue to grow, i t w i l l remain true that the majority of 
compounds encountered i n real samples are not represented i n the 
l i b r a r i e s . These compounds can at present be i d e n t i f i e d only through 
a laborious manual process requiring considerable expertise. 
Interpretation of molecular spectra involves four basic steps. 
F i r s t , major skeletal and functional group components of the mole-
cule are i d e n t i f i e d , either from assumptions about the compound 
o r i g i n or from features of the spectra. Second, non-localized 
molecular properties such as the molecular weight, elemental compo-
s i t i o n , and chromatographic behavior are considered. These global 
constraints can be used to eliminate unlikely functional groups, 
deduce the presence of groups and skeletal units which have no dis-
t i n c t i v e features i n the spectra, and detect multiple occurrences of 
0097-6156/86/0306-0350$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch027
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

27. 
CURRY 
An Expert System for Organic Structure Determination 
351 
functional groups. 
Complete candidate structures are then generated 
by assembling the functional groups subject to the global con-
s t r a i n t s . More data may be collected to narrow down the number of 
candidates. 
F i n a l l y , the candidate structures are tested for compat-
i b i l i t y with a l l o r i g i n a l data. Final confirmation i s obtained by 
synthesis of the candidate compound and comparison with the unknown. 
We are developing an expert system to automate the f i r s t step 
of this process, the interpretation of molecular spectra and identi-
f i c a t i o n of substructures present i n the molecule. 
The automatic 
interpretation of spectra would by i t s e l f provide a useful tool for 
an organic chemist who may not be an expert spectroscopist. Also, 
reported algorithms for the assembly of candidate structures from 
known substructures, such as the GENOA program.(3-6) rely on the 
input of accurate and specific substructures i n order to function 
correctly and e f f i c i e n t l y . Identification of substructures i s thus a 
l o g i c a l starting point. 
Information about substructures present i n an unknown can be 
obtained from a wide variety of sources, and one of our major object-
ives has been to allow a l l available data to be used by the program. 
Programs have been described i n the l i t e r a t u r e which interpret C-13 
and 1-H NMR spectra,(7-13) low and high-resolution mass spectra, 
(14-15) infrared spectra,(16-23) MS-MS spectra,(24) and 2D-NMR 
spectra.(25) The methods employed may be generally c l a s s i f i e d as 
rule-based methods or pattern-matching methods. Rule-based methods 
apply interpretation rules to discrete features of the spectra.(26) 
These rules are usually empirical correlations having physical sig-
nificance , expressed i n a form similar to that used by human inter-
preters. 
Rule-based systems maintain a r e l a t i v e l y detailed internal 
representation of their knowledge, and can explain their conclusions 
i n a language i n t e l l i g i b l e to the user. Pattern-matching methods 
attempt to c l a s s i f y the spectrum based on some global measure of 
"spectral distance" from spectra of known compounds.(27) Any physical 
knowledge used by the algorithm i s embodied i n i t s distance measure, 
which may be a complicated function of many features of the spectra. 
The c l a s s i f i c a t i o n decision i s made from a s t a t i s t i c a l analysis of 
the distance from representative members of the classes being dis-
tinguished. 
Explanations of the system's conclusions are are usually 
limited to reporting the computed spectral distances. Whichever 
method i s employed, the output i s i n the form of a l i s t of suggested 
substructures, chosen from a predefined set, with confidence factors 
variously computed. 
The choice between rule-based and pattern-matching approaches 
depends not only on the predilection of the experimenters, but also 
on the nature of the data being interpreted. 
The reported NMR 
inter-
preters a l l use rule-based methods. The pattern-matching algorithm 
used i n the STIRS program (14) appears to be the most successful at 
interpreting low-resolution mass spectra of general organic com-
pounds. Both rule-based and pattern-matching techniques have been 
applied to the interpretation of infrared spectra. The rule-based 
methods seem to be the most successful.(16-23) We have therefore 
designed our program to allow each type of spectrum to be interpreted 
by the most e f f i c i e n t method; different methods can even be simul-
taneously applied to the same spectrum. 
When the unknown i s present i n sub-microgram amounts, as i s 
often the case when i t has been isolated chromatographically, the 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch027
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

352 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
primary structural techniques are mass spectrometry, infrared spec-
troscopy, and various methods of determining elemental composition. 
We have therefore concentrated our i n i t i a l efforts on interpreting 
these types of data, while recognizing the need to be able to use 
data from other sources, such as NMR, when they are available. 
A 
s k i l l e d chemist can often correctly identify an unknown of moderate 
size (molecular weight < 200) using only the IR spectrum, the low-
resolution mass spectrum, and some knowledge of the sample o r i g i n . 
Even when a precise i d e n t i f i c a t i o n i s not possible, a generic class-
i f i c a t i o n of the compound type i s useful and often s u f f i c i e n t . 
A 
program which interprets IR and mass spectra i s therefore a useful 
a n a l y t i c a l tool i n i t s own right, and provides the basis for develop-
ment of more comprehensive c a p a b i l i t i e s i n the future. 
In our present system, infrared spectra are interpreted using a 
rule-based approach, while mass spectra are interpreted by the STIRS 
algorithm. 
The a b i l i l i t y to use different techniques for different 
types of data implies a modular architecture, i n which the "expert" 
responsible for the interpretation of each spectrum maintains i t s own 
rules and data structures (Figure 2). I t i s important, however, that 
the interpretation of the various spectra be mutually consistent. 
Information obtained from the mass spectrum, for example, should 
affect the way the infrared spectrum i s assigned. 
Conversely, the 
interpretation of mass spectral lines must be consistent with the 
presence of functional groups known to be present from other sources. 
This requires a means of communication among the parts of the program 
responsible for the interpretation of different types of data. Con-
sistency also requires a means of combining evidence from different 
sources. When data from different sources contradict each other, the 
individual modules should be able to reinterpret their data so as to 
resolve the contradiction. 
As i n any c l a s s i f i c a t i o n problem, there i s a tradeoff between 
the rate of r e c a l l , or proportion of correct substructures detected, 
and the r e l i a b i l i t y , or avoidance of false positive assertions. I t 
i s rather the exception than the rule for an observation to have a 
single, unequivocal explanation. When reasonable alternative inter-
pretations are possible, a decision must be made about what to 
report. 
At one extreme, a l l p o s s i b i l i t i e s could be asserted, ensur-
ing 100% r e c a l l ( i . e . no substructure which i s actually present w i l l 
f a i l to be detected) at the cost of a high rate of false positives. 
At the other extreme, ambiguous data could be ignored, which guaran-
tees no false positives, although many substructures which are 
present w i l l be missed. 
We have taken a middle road between these 
extremes by developing a measure of the "best" or most probable 
interpretation, taking into account a l l of the data available. When 
the best choice i s not clearcut, the disjunction of the competing 
alternatives i s e x p l i c i t l y asserted. The goal has been to minimize 
the rate of false positives, while reporting the most specific 
possible interpretation of the data. 
An important feature of expert systems i s the a c c e s s i b i l i t y to 
the user of the knowledge base and the reasoning process. 
Both the 
terminology used by the program and i t s interpretation of data have 
chemical significance. Each conclusion reached by the program can be 
traced by the user to the o r i g i n a l data. When alternative explana-
tions for an observation are possible, the choice i s v i s i b l e to the 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch027
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

27. 
CURRY 
An Expert System for Organic Structure Determination 
I d e n t i f y 
S u b u n i t s 
S p e c i f y 
G l o b a l 
C o n s t r a i n t s 
Figure 1. Flow chart for i d e n t i f i c a t i o n of an organic compound. 
MS 
J, ι 
ill. il., il 
MW 
rnQthyl-ketone 
1 4 8 
monosubst-benzQnQ 
Figure 2. Schematic drawing of the interpreter. 
The program i s 
represented by the area inside the s o l i d rectangle. 
Program 
modules are drawn as c i r c l e s , and their associated databases as 
rectangles. A l l of the modules have read access to the Chemical 
Classes database. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch027
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

354 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
user. 
I f the program has made an error, the user can correct i t , 
thereby modifying the o r i g i n a l conclusions. 
Program Description 
The architecture of our current system i s shown schematically i n 
Figure 2. 
The design i s modular, with a Controller module, a 
Reasoner module, a database of over 900 organic substructures, and a 
separate "Expert" module assigned to each kind of input data. 
The 
Controller module controls the progress of the calculation by con-
sidering each of the substructuras which has not yet been eliminated, 
beginning with the most general. I t requests each of the Expert 
modules to supply i t with evidence supporting or denying the presence 
of the substructure currently being considered. This evidence i s 
collected and passed to the Reasoner. When no more evidence can be 
collected, the analysis i s finished. 
The Reasoner combines evidence from a l l sources and makes 
deductions from this evidence. 
The combination of evidence results 
i n a single "confidence l e v e l " for each substructure. These confi-
dence levels designate the degree to which the evidence supports the 
presence of the substructure i n the unknown compound. They range 
from -100% (substructure d e f i n i t e l y absent), through 0% (no infor-
mation) , to +100% (substructure d e f i n i t e l y present). The confidence 
levels are ultimately derived from s t a t i s t i c a l analysis of represent-
ative spectral l i b r a r i e s . 
Details of the generation and propagation 
of confidence levels w i l l be described i n a separate report.(28) 
Each Expert module i s permitted to use any convenient method to 
carry out i t s mission of interpreting i t s assigned data. The Experts 
use private rules and data structures, and communicate with the 
Controller module both by suggesting the presence of substructures, 
and by evaluating the likelihood of substructures under considera-
tion. 
Each Expert can read the current confidence l e v e l associated 
with each substructure, and thus has access to information generated 
by other Experts or deduced by the Reasoner. 
Communication among these modules i s accomplished i n two ways. 
F i r s t , the chemical database, besides storing the chemical knowledge 
of the program, serves as a "blackboard" on which the progress of the 
computation i s recorded.(29) 
Only the Controller and Reasoner 
modules are allowed to write on the blackboard, but a l l modules can 
read i t . 
In this way the conclusions of each Expert module are 
available to a l l the others to guide their interpretation. 
Second, 
the Controller module controls the overall path of the analysis by 
sending messages to the individual Experts. The only requirement of 
a new Expert module being added to the system i s that i t be able to 
respond appropriately to these messages. 
The current prototype system includes three Expert modules, the 
IR Expert, the STIRS Expert, and the Human. A l l modules are written 
i n Lisp. 
The IR Expert i s a rule-based infrared interpreter which we 
have developed. The STIRS Expert i s an interface to the STIRS 
program, a pattern-matching mass spectrum interpreter developed by 
McLafferty and coworkers at Cornell University, which i s written i n 
Fortran.(14) The interface translates the output of STIRS into a form 
palatable to our program, and handles the message-passing protocol 
required by the Controller. 
The Human module controls communication 
with the user. 
I t allows user-supplied elemental or substructure 
information to influence the course of the analysis. 
The power of 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch027
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

27. 
CURRY 
An Expert System for Organic Structure Determination 
355 
the modular approach i s shown by our a b i l i t y to integrate the results 
of three interpretation methods which d i f f e r profoundly i n their 
internal details. 
The Chemical Database. The chemical knowledge of the system i s em-
bodied i n a database of over 900 organic substructures, arranged i n a 
hierarchy (Figure 3). With each of these substructures i s associated 
a connection table, s t a b i l i t y information, and a probability of oc-
currence denoting how common the group i s . This information may be 
used by the Expert modules when deciding among possible interpreta-
tions . 
As the analysis progresses, evidence i s accumulated supporting 
the presence or absence of defined substructures. 
The evidence i s 
combined by the Reasoner module to form a b e l i e f function, which 
describes the degree to which each substructure i s currently be-
lieved. 
This information i s stored i n the chemical database, where 
i t i s available to the Expert modules and to the Controller as i t 
decides the course of the analysis. As the b e l i e f function evolves, 
the current state i s displayed graphically to the user, who may h a l t 
the analysis, query the current state, and redirect the course of the 
analysis by supplying evidence for or against a substructure. 
IR Expert Module. The IR Expert's rule base consists of over 1000 
correlations between observed infrared bands and v i b r a t i o n a l modes of 
s p e c i f i c substructures. Associated with each rule i s a wavenumber 
range, an intensity range, and two confidence levels. 
Four intensity 
levels are allowed. 
The intensity levels are defined on an approxi-
mate semilog scale, r e l a t i v e to the most intense peak i n the spec-
trum: WEAK - 2 - 5%, MEDIUM - 5 - 15%, STRONG - 15 - 40%, VSTRONG -
40 - 100%. 
The program does not attempt to assign bands weaker than 
2% of the strongest band. Each IR rule i s equivalent to the pair of 
propositions : 
a) IF a band of intensity I appears i n the region x l - x2 
cm-1, 
THEN i t i s due to the vibrational mode M of substructure S, AND 
b) IF no band of intensity I appears i n the region x l - x2 
cm-1, 
THEN the substructure S i s not present i n the unknown. 
About 800 of these rules were chosen by testing a l l the IR cor-
relations we could f i n d i n the literature,(30-32) mostly for con-
densed phases, against the EPA gas-phase l i b r a r y of 2300 compounds. 
(33-34) About 30% of the l i t e r a t u r e correlations were not generally 
s a t i s f i e d by the l i b r a r y spectra, and were discarded. Another 200 
rules were discovered by searching for patterns i n compound classes 
i n the l i b r a r y which could reasonably be attributed to expected vib-
rational modes of those classes. S t a t i s t i c s were generated for the 
probability that each of the IR rules would be s a t i s f i e d for com-
pounds which contained, or did not contain, the substructure speci-
f i e d by the rule. These s t a t i s t i c s were used to compute two confi-
dence levels for each rule, corresponding to the confidence i n the 
two propositions a) and b) implied by the rule. 
Messages. As noted above, the expert modules communicate their 
results to the user and to the Controller by responding to messages 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch027
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

356 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
sent by the Controller. 
There are s i x messages to which each Expert 
module i s required to respond: 
The ALIVE? message asks the Expert i f i t i s available for con-
sultation i n this analysis. The receiving Expert resets i t s internal 
state, and responds TRUE i f i t has data, FALSE i f i t doesn't. 
The SUGGESTIONS message asks the Expert to report any substruc-
tures i t believes, on i t s own, to be present or absent. The report 
takes the form of a l i s t of items of evidence, each supporting the 
presence or absence of a particular chemical group. 
The SPECIALIZE message asserts the hypothetical presence of a 
chemical group, and asks the Expert which subgroups may be present. 
For example, the message "SPECIALIZE carbonyl" would cause the re-
ceiving Expert to return evidence for or against the presence of 
ketone, aldehyde, ester, amide, and other specific types of carbonyl, 
under the assumption (for the moment) that the compound does i n fact 
contain a carbonyl group. 
The TEST message asks the Expert to return any evidence i t may 
have against the presence of the group being tested. 
The REEVALUATE message i s sent when a piece of evidence sup-
p l i e d by an Expert has been contradicted. I t asks the Expert to 
modify or retract the evidence, i f possible. Many infrared correla-
tions have known exceptions i n specific cases. For example, a n i t r o 
group on a benzene ring raises the expected frequency ranges of the 
hydrogen wags. I f the presence of a n i t r o group i s known or suspec-
ted, the aromatic wag assignments must be reevaluated. 
The EXPOUND message asks the Expert to print out, for the user's 
benefit, the reasons supporting a piece of evidence. Each piece of 
evidence originated i n i t i a l l y i n some feature of the data. 
The 
degree of d e t a i l supplied i n response to this message depends on the 
individual Expert. The IR Expert, for example, can report the i n f r a -
red bands which were assigned to a particular vibrational mode of a 
substructure, as well as possible alternative assignments. The STIRS 
Expert reports the incidence of the substructure among the best h i t s 
i n different STIRS data classes. 
Example : 
4-phenyl-2-butanone 
The results of the interpretation of the gas phase IR and low-resolu-
tion mass spectra of 4-phenyl-2-butanone are given i n Figure 4. This 
compound, with a molecular weight of 148, i s t y p i c a l of the size and 
complexity of compounds which our program handles well. 
The IR spec-
trum was taken from the EPA gas-phase IR l i b r a r y , and the mass spec-
trum from the Registry of Mass Spectral Data.(35) 
The program was run three times: f i r s t with only the STIRS 
results, second with only the results of the IR interpretation, and 
f i n a l l y with both spectra together. A l l functional groups reported 
by the program with confidence levels > 10% are l i s t e d . 
In addition, 
STIRS correctly determined the molecular weight. 
The most specific defined functional groups actually present i n 
the unknown are benzyl, monosubstituted-benzene, X-CH2CH2-X (where 
the "X" represents any group other than -H or -CH2-), and methyl-
ketone. That i s , the program would have achieved a perfect score had 
i t reported these substructures and no others. 
In fact, the program 
was unable to determine the correct environments of the ketone and 
-CH2- groups, although i t reported only one incorrect substructure. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch027
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

27. 
CURRY 
An Expert System for Organic Structure Determination 
357 
These results are consistent with our goal of reducing the rate of 
false positives, at the cost of f a i l i n g to report the most s p e c i f i c 
possible substructures which are actually present. 
I f the low-confi-
dence report of the presence of benzyl and X-C-CH3 groups i s accepted 
(Figure 4), the reported results suffice to uniquely determine the 
complete structure. 
The effects of the low-level combination of evidence are i l l u s -
trated by two features of the output. 
F i r s t , the confidence l e v e l 
for the ketone group increases from 19% for the IR-only interpreta-
t i o n to 30% for the combined interpretation, despite the fact that 
STIRS had nothing to say about the presence of a ketone or even of a 
carbonyl. 
This i s explained by the increased confidence i n monosub-
stituted-benzene derived from the combined spectra, which causes a 
fingerprint l i n e tentatively assigned to an ester C-0 stretch to be 
reassigned to a phenyl vibration. Reducing the l i k e l i h o o d of an 
ester group increases the likelihood that the C-O stretch i s due to a 
ketone group. Secondly, the contradiction between STIRS' assertion 
of methyl-benzene and the IR denial not only reduces the b e l i e f i n 
methyl-benzene, but also allows the assertion of benzyl and unsatur-
ated- CH3 (X-C-CH3). These substructures were not suggested by either 
spectrum taken alone. 
A s l i g h t l y abridged explanation offered by the program for i t s 
b e l i e f i n methyl-benzene i s shown i n Figure 5. There i s both posi-
tive and negative evidence. 
The positive evidence comes primarily 
from STIRS, and the negative evidence results from the f a i l u r e to 
observe a medium intensity C-H stretching band expected for methyl-
benzene. A small amount of positive support for methyl-benzene i s 
also supplied by the IR Expert, showing that c o n f l i c t s can occur 
between different features of a single spectrum. The degree to which 
each piece of evidence i s i n c o n f l i c t with other evidence i s noted. 
The explanation f a c i l i t y traces the f i n a l b e l i e f back to primitive 
pieces of evidence supplied by the Expert modules. The Experts are 
then responsible for explaining how the evidence depends on the ob-
served spectrum. STIRS i s unable to do more than report which of i t s 
data classes supported the substructure and with what probability. 
The IR Expert module, on the other hand, can give a r i c h l y detailed 
description of the assignment of the spectrum. 
Results 
We have evaluated our prototype system at several levels. 
Each Ex-
pert module has been tested individually. 
Detailed results of tests 
of the STIRS program have been published by McLafferty et al.(36) 
The IR Expert module was tested extensively against the EPA l i b r a r y . 
The effects of competition among the IR rules were explored by 
using the complete system, with the STIRS module disabled, to inter-
pret the spectra of 1807 compounds from the l i b r a r y . 
For the test, 
we selected 500 of the 900 chemical substructures which both are 
chemically interesting and display at least one d i s t i n c t i v e infrared 
band. Some of the selected substructures were subsets of others: for 
example, alcohol, phenol, and primary alcohol were a l l i n the test 
set. 
As expected, some functional groups displaying very d i s t i n c t i v e 
infrared bands were detected much more r e l i a b l y than others. Figure 6 
shows the r e l i a b i l i t y , false positive and r e c a l l rates for a few 
selected functional groups. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch027
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

358 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
900 d e f i n e d s u b s t r u c t u r e s 
Figure 3. A subset of the chemical substructures database, 
showing the hierarchical ordering. 
ο 
^ ^ C H 2 C H 2 C C H 3 
C l a s s 
MS O n l y 
IR O n l y 
MS 8, IR 
©
χ 
8 0 % 
6 9 % 
9 9 % 
9 5 
9 5 
• 
CCC 
19 
3 0 
-CH 2-
6 5 
6 5 
-CH 3 
9 8 
5 6 
9 8 
6 9 
-44 
2 5 
O
r 
14 
X=C-CH 3 
37 
Figure 4. Substructures reported for 4-phenyl-2-butanone at > 10% 
confidence, for three runs of the interpreter using different 
data sets. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch027
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

27. CURRY 
An Expert System for Organic Structure Determination 
359 
Why 
wQthyl-bQnzQno? 
36% POSITIVE: 
41% from STIRS ( c o n f l i c t 27%) 
8% from IR band at 2933 cm-1 
assuming unsaturatQcJ-C-CH3 (37%) 
( c o n f l i c t 27%) 
11% NEGATIVE: 
23% bQcausQ of f a i l u r e to s a t i s f y 
C-Hsym-mQthy 1 -benzQne-1 
IR band 2860-2883 m 
( c o n f l i c t 45%) 
Figure 5. Sample of the explanations provided by the program f o r 
i t s c o n c l u s i o n s . 
More d e t a i l about the source of the reported 
c o n f l i c t , the assignments of IR bands, or the data c l a s s e s 
responsible f o r the STIRS evidence can a l s o be provided. 
IR r e s u l t s f o r 1807 compounds 
R e l i a b i 1 i t y 
F a l s e p o s i t i v e s 
IXXXXI 
Recal1 
> 45% c o n f i d e n c e 
Figure 6. S t a t i s t i c s for 5 selected substructures of the 500 
tested on the EPA IR database. Values of the R e l i a b i l i t y , False 
Positives, and Recall (see text) are compared at the 45% 
confidence l e v e l . The number of compounds i n the database 
containing each substructure i s given beneath the substructure 
name. Note the expanded scale used to plot the False Positive 
measure. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch027
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

360 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
The " r e c a l l " i s the probability that a substructure present i n 
the unknown w i l l be reported, while the " r e l i a b i l i t y " i s the proba-
b i l i t y that a reported substructure i s actually present.(36) These 
functions are defined as: 
Recall(S) - Number_correctly_reported(S) / Total_number_present(S) 
R e l i a b i l i t y ( S ) » Number_falsely_reported(S) / Total_number_reported(S) 
for a l l compounds i n the database containing substructure S. Both 
measures are functions of the confidence l e v e l (CL) threshold above 
which we count a substructure as "reported". 
A l l substructures are 
reported at CL > -100%, while none are reported at CL > +100%. We 
have a r b i t r a r i l y chosen CL > 45% as a threshold i n Figure 6. 
An alternative measure of r e l i a b i l i t y often used i s the "false 
positive" rate, defined as: 
FP(S) - Number_falsely_reported(S) / Total_number_present(NOT S) , 
which i s related to the r e c a l l and r e l i a b i l i t y measures by: 
Total_number_present(S) * Recall * R e l i a b i l i t y 
FP(S) -
Total_number_present(NOT S) * (1 - R e l i a b i l i t y ) 
This i s the probability that a compound which does not contain sub-
structure S w i l l be incorrectly reported to contain i t . For sub-
structures which occur rarely i n the database, the (1 - FP) rate w i l l 
be considerably greater than the r e l i a b i l i t y , and may be misleading. 
For example, for the S02 group (1% of the database), the FP rate was 
< 8%, although the r e l i a b i l i t y was only 25% (Figure 6). That i s , 
although the program f a l s e l y asserted the presence of an S02 group 
(with > 45% CL) only 8% of the time, 3/4 of the assertions of S02 
were incorrect. The l a t t e r s t a t i s t i c i s probably of more interest to 
an analyst trying to evaluate the program's reports. On the other 
hand, the FP i s a better measure of the raw discriminating power of 
the program, since i t would presumably be unchanged by changing the 
proportion of the target substructure i n the database. The two meas-
ures serve different functions, and should both be reported. 
The tradeoff between r e l i a b i l i t y and r e c a l l can be adjusted for 
individual functional groups by changing the frequency ranges allowed 
for the IR correlations. For some of the functional groups which are 
well represented i n the EPA l i b r a r y (e.g. esters, alcohols) we have 
manually optimized the rule ranges to maximize ( 3 * R e l i a b i l i t y + 
Recall). 
Since the l i b r a r y i s known to contain errors, and i s skewed 
towards the smallest (often anomalous) members of homologous series, 
we have not t r i e d to do this for a l l groups (e.g. S02). Further 
testing on larger l i b r a r i e s w i l l allow further refinements of the IR 
rules. 
Many of the errors observed result from the consistent confusion 
of two particular functional groups. For example, although the pres-
ence of a methyl group was erroneously reported (at >45% confidence) 
for 30% of the 400 compounds which lack methyl groups, a methyl group 
was reported for only 1 of the 33 compounds lacking both CH3 and CH2 
groups. Conversely, the presence of a methylene group was never i n -
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch027
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

27. CURRY 
An Expert System for Organic Structure Determination 
361 
correctly asserted for compounds which lack methyl groups. Examina-
t i o n of the reasons for the confusion confirm that the C-H stretching 
and HCH deformation vibrations, whose frequency and intensity ranges 
are similar for methyl and methylene, are often misassigned. 
Such 
consistent confusion between similar substructures can be dealt with 
by assigning the bands to a generic -CH2X group, and deciding between 
methyl and methylene only after the nearby environment has been 
determined. 
Average results for 500 IR-active substructures are shown i n 
Figure 7 at four different confidence levels. The average compound 
i n the database contains 8.1 of the 500 substructures. At a confi-
dence l e v e l of > 45%, only 1.4 (of 492) incorrect substructures are 
reported, while 4.6 of 8.1 substructures actually present are repor-
ted. 
In other words, a " t y p i c a l " analysis w i l l report 6.0 substruc-
tures at > 45% confidence, of which 4.6 are correct. 3.5 substruc-
tures actually present i n the compound w i l l f a i l to be reported. In 
an actual analysis, infrared data i s combined with other types of 
data, so that many of the substructures undetected by infrared would 
be found by other techniques. 
We have analyzed over 100 unknown compounds using both the mass 
spectrum and the IR spectrum i n combination. 
The combination of the 
two techniques gives substantially better results than does either 
technique alone. As expected, many functional groups are preferen-
t i a l l y detected by one technique or the other. For example, ketone 
groups are rarely detected i n the mass spectrum, but are usually cor-
r e c t l y interpreted from the infrared. 
Chlorine and bromine, on the 
other hand, are easily detected i n the mass spectrum but often missed 
by the infrared interpreter. 
Also, because of the interaction be-
tween the two interpretation methods, substructures are frequently 
detected by the combined techniques which are not found by either 
technique alone. This can occur as a result of resolving a contra-
d i c t i o n between the two Experts, as i n the example above, or because 
one Expert i s able to further specialize a result suggested by the 
other. For example, i n the interpretation of bis-2-chloro-ethyl-
ether, the IR Expert alone f a i l s to detect the presence of chlorine. 
When chlorine i s suggested by the STIRS Expert, however, the IR 
Expert correctly reports the -CH2C1 group. A few substructures, such 
as non-terminal o l e f i n s , are not r e l i a b l y detected i n either mass or 
infrared spectra. For such groups, other techniques (NMR, UV absorp-
tion, Raman) are necessary. 
In many cases, the results of the IR and mass spectrum inter-
pretation are s u f f i c i e n t to allow a complete molecular structure to 
be deduced. In preliminary tests on 12 unknown compounds of molecu-
l a r weight 100-200, the author, using the results reported by the 
program but without access to the o r i g i n a l spectra, was able to 
correctly identify 9 of the unknowns. 
These results are encouraging, and suggest that our system i n 
substantially i t s present form could serve as a useful tool for an 
a n a l y t i c a l chemist, as well as eventually providing a framework for 
completely automated i d e n t i f i c a t i o n of organic compounds. 
Conclusions 
We have developed an expert system which can interpret various kinds 
of data and report functional groups present i n an unknown organic 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch027
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

362 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Avorago Correct and Incorroct 
A s s o r t i o n s f o r 
1807 Compounds 
ο 
0 
Infrared Only 
Confidence Level (%) 
Figure 7. Average number of substructures reported correctly 
( s o l i d color) and incorrectly (hatched) at four different 
confidence levels, for IR data only. A t o t a l of 500 
substructures were considered, of which an average of 8.1 were 
present i n each compound. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch027
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

27. 
CURRY 
An Expert System for Organic Structure Determination 
363 
compound. The program employs a modular construction, which allows 
each type of data to be interpreted i n the most e f f i c i e n t way. The 
conclusions derived by different modules are able to influence each 
other at a low l e v e l . 
The program knows the chemical relationships between functional 
groups, and can use this knowledge i n i t s reasoning 
process. 
The reasoning process i s accessible to the user, so that each 
conclusion can be traced back to the o r i g i n a l data responsible for 
i t . 
Choices made by the program can be isolated and overridden by 
a knowledgeable user. 
Contradictions arising among evidence from different sources 
are resolved i n a natural way, using knowledge about the effects of 
perturbations and common interferences on the spectra. 
A rule-based infrared spectra interpreter has been developed as 
a major module of the program. This module has been tested as a 
stand-alone system, and i n conjunction with STIRS. The low rate of 
false positive assertions i s encouraging, and work continues to 
reduce this rate s t i l l further by incremental refinement of the 
knowledge base. 
In i t s present form, our system can provide s i g n i f i c a n t assist­
ance to a chemist trying to identify an unknown organic compound. 
Research i s i n progress to extend the c a p a b i l i t i e s of the program 
both by expanding the number of different data sources i t can handle 
(NMR, UV/visible absorption spectra) and by incorporating a "molecule 
builder" which assembles complete candidate structures, where pos­
s i b l e , from the suggested substructures. 
Acknowledgments 
I would l i k e to thank Reed Letsinger and others i n the Expert Systems 
Department at HP Labs for helpful discussions and technical assist­
ance . 
Literature Cited 
1. Hippe, Z.; Hippe, R. Appl. Spectrosc. Reviews 1980, 16, 135-186. 
2. Bally, R. W.; van Krumpen, D.; Cleij, P.; van't Klooster, H. A. 
Anal. Chim. Acta 1984, 157, 227-243. 
3. Masinter, L. M.; Sridharan, N. S.; Lederberg, J.; Smith, D. H. 
J. Am. Chem. Soc. 1974, 96, 7702-7723. 
4. Carhart, R. E.; Smith, D. H.; Gray, Ν. A. B.; Nourse, J. G.; 
Djerassi, C. J. Org. Chem. 1981, 46, 1708-1718. 
5. Nelson, D. B.; Munk, M. E.; Gash, Κ. B.; Herald, D. L. 
J. Org. Chem. 1969, 34, 3800. 
6. Shelley, C. Α.; Hays, T. R.; Munk, M. E. Anal. Chim. Acta 
Computer Techniques and Optimization 1978, 103, 121-132. 
7. Fujiwara, I.; Okuyama, T.; Yamasaki, T.; Abe, H.; Sasaki, S. 
ibid 1981, 133, 527-533. 
8. Szalontai, G.; Simon, Z.; Csapo, Z.; Farkas, M.; Pfeifer, Gy. 
ibid 1981, 133, 527-533. 
9. Debska, B.; Duliban, J.; Guzowska-Swider, B.; Hippe, Z. ibid 
1981, 133, 303-318. 
10. 
Dubois, J.-E.; Carabedian, M.; Dagane, I. Anal. Chim. Acta 
1984, 158, 217-233. 
11. 
Gribov, L. Α.; Elyashberg, M. E.; Koldashov, V. N.; Plentnjov, 
I. V. ibid 1983, 148, 159-170. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch027
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

364 
A R T I F I C I A L I N T E L L I G E N C E A P P L I C A T I O N S IN C H E M I S T R Y 
12. Small, G. W.; Jurs, P. C. Anal. Chem. 1984, 56, 1314-1323. 
13. Gray, Ν. A. B. Artificial Intelligence 1984, 22, 1-21. 
14. Haraki, K. S.; Venkataraghavan, R.; McLafferty, F. W. 
Anal. Chem. 1981, 53, 386-392. 
15. Buchs, Α.; Schroll, G.; Duffield, A. M.; Djerassi, C.; Delfino, 
A. B.; Buchanan, B. G.; Sutherland, G. L.; Feigenbaum, Ε. Α.; 
Lederberg, J. J. Am. Chem. Soc. 1970, 92, 6831. 
16. Ishida Y.; Sasaki, S. Computer Enhanced Spectrosc. 1983, 
1, 173-184. 
17. Varmuza, K. Anal. Chim. Acta 1980, 122, 227-240. 
18. Zupan, J. ibid 1978, 103, 273-288. 
19. Visser, T.; van der Maas, J. H. ibid 1980, 122, 363-372. 
20. Smith, G.; Woodruff, H. B. J. Chem. Inf. Comp. Sci. 1984, 
24, 33. 
21. Gray, Ν. A. B. Anal. Chem. 1975, 47, 2426. 
22. Delaney, M. F.; Denzer, P. C.; Barnes, R. M.; Uden, P. C. 
Anal. Lett. 1979, 12 963-978. 
23. Bink, W. G.; van 't Klooster, H. A. Anal. Chim. Acta 
1983, 150, 53-59. 
24. Cross, K. P.; Giordani, A. B.; Gregg, H. R.; Hoffman, P. Α.; 
Beckner, C. F.; Enke, C. G. "An Automated Structure 
Determination System for MS/MS Data", 190th ACS National Meeting, 
Chicago, IL (1985). 
25. 
Christie, B. D.; Munk, M. E. "Computer-assisted Structure 
Elucidation Using 2-Dimensional NMR Data", 190th ACS National 
Meeting, Chicago, IL (1985). 
26. Buchanan, B. G.; Shortliffe, Ε. H. "Rule-based Expert Systems"; 
Addison-Wesley: Menlo Park, CA, 1984. 
27. Jurs, P. C.; Isenhour, T. L. "Chemical Applications of Pattern 
Recognition"; Wiley: New York, NY, 1975. 
28. Curry, Β., manuscript in preparation. 
29. Charniak, E.; McDermott, D. "Introduction to Artificial 
Intelligence"; Addison-Wesley: Menlo Park, CA, 1985. 
30. Bellamy, L. J. "The Infrared Spectra of Complex Molecules"; 
Chapman and Hall: London, 1975. 
31. Nyquist, R. A. "The Interpretation of Vapor-Phase Infrared 
Spectra", vol. 1; Sadtler Research Labs: Philadelphia, PA, 1984. 
32. Socrates, G. "Infrared Characteristic Group Frequencies"; 
John Wiley and Sons, Ltd.: New York, NY, 1980. 
33. 
Griffiths; et al., GC-IR Subcommittee of the Coblenz Society 
Evaluation Committee, Appl. Spectrosc. 1979, 33, 543. 
34. de Haseth, J., Chemistry Dept., Univ. of Georgia, Athens, GA, 
personal communication. 
35. "Registry of Mass Spectral Data"; Electronic Data Division, 
Wiley: 605 Third Ave., New York, NY 10158. 
36. Dayringer, H. E.; McLafferty, F. W. Org. Mass Spectrosc. 
1976, 11, 543-551. 
RECEIVED December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch027
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

28 
C o n c e r t e d O r g a n i c A n a l y s i s of M a t e r i a l s and 
E x p e r t - S y s t e m D e v e l o p m e n t 
S. A. Liebman
1, P. J. Duff
1, M. A. Schroeder
1, R. A. Fifer
1, and A. M. Harper
2 
1U.S. Army Ballistic Research Laboratory, Aberdeen Proving Ground, MD 21005-5066 
2Chemistry Department, University of Texas at El Paso, El Paso, TX 79968-0513 
A prototype multilevel expert system network 
has been developed for application to materials 
characterization. 
Selected 
analytical 
instruments 
generate 
databases 
which are 
treated and interpreted within an analytical 
strategy 
toward a desired 
goal. 
Using a 
commercial expert system shell, TIMM, a linked 
network of expert systems, EXMAT, has been 
developed. The expertise of a chemometrician 
is embedded within the network at the data 
analysis and interpretation stages as a linked 
expert system, EXMATH. For general chemical 
analysis, expert systems capable of symbolic 
and numeric processing appear necessary to 
provide integrated 
decision structures using 
data generated from appropriate instruments and 
sensors. 
Final implementation of EXMAT will 
demonstrate the potential 
significance of 
artificial 
intelligence (AI) in analytical 
chemistry with varied intelligent laboratory 
and process instrumentation. 
Requirements for high-performance materials have focused on the 
a b i l i t y to relate structure/composition to end-use behavior. 
Analytical instrumentation designed over the past decade has made 
impressive advances i n defining the composition of complex 
polymeric systems, including detailed description of polymer 
chemical microstructure. 
Concerted organic analysis has been 
followed since the early '70s (1-3), including multivariate 
p r o f i l e analysis of gas chromatographic (GC) patterns (Α), and 
computer simulations of GC/spectral patterns to aid interpretation 
(_5_). Work reported i n 1968 (6,7) included automated data 
acquisition and computer-aided interpretation from multiple 
analytical spectrometers (mass, nuclear magnetic resonance (NMR), 
infrared (IR), and u l t r a v i o l e t (UV)). The four spectrometers were 
tied to individual computers which fed data into a central 
0097-6156/86/0306-0365$06.00/0 
© 1986 American Chemical Society 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

366 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
computer programmed for structure elucidation based on a 
combination of a l l four types of data. Most recently, 
applications of computer models that describe relationships 
between chemical, physical, and mechanical responses were 
described by Kaelble (8). Many correlations between chemical 
structure and polymer composite performance have been established 
over the past decade within the industrial R&D community. 
Kaelble
1s work emphasizes the significance of modern 
characterization methods for this purpose. 
Concurrently, pattern recognition programs were developed as 
interpretive aids along with comprehensive experimental design, 
factor analysis, and other s t a t i s t i c a l approaches within the 
chemometrics f i e l d (9-15). Only within the past few years has the 
precision and high reproducibility of appropriate key 
instrumentation made possible r e a l i s t i c applications for materials 
analysis. 
Microprocessor-based chromatographic, 
pyrolysis/ 
concentrator, thermal, and spectral instrumentation are combined 
with chemometric tools to provide chemically significant 
information as " i n t e l l i g e n t
1 1 instruments become available (16). 
These advances are a l l i e d to highly automated hardware common i n 
c l i n i c a l labs and computer-controlled process equipment (17-19). 
Automated calibration and data-handling methods have been 
integral parts of commercial analytical systems for many years, as 
well as embedded software to automate complex pneumatic/electronic 
sequences in concentrator and chemical reactor instrumentation 
using on-line GC analysis (20). Recently, a commercial high 
pressure l i q u i d chromatograph (HPLC) system (21) demonstrated 
adaptive intelligence to optimize separations for complex sample 
mixtures. 
The optimization program, OPTIM I I , i n i t i a l l y queries 
the chromatographer and then performs a sequence of automated 
steps. 
Likewise, library search algorithms (22-28), pattern 
recognition (29-36), and optimization (37-42) methods have 
developed in numerous laboratories. 
The well-known DENDRAL and META-DENDRAL programs (43) are 
noted as the major AI success in chemical applications over the 
past decade. However, advances in analytical technology and 
computer capabilities have led to new approaches (44-56). 
Information fusion from selected instrumental tools often is a 
more productive route than exhaustive data analysis from a single 
source. 
Furthermore, combination of chromatographic separation 
with spectral, thermal, and microchemical analyses can be 
r e a l i s t i c a l l y achieved in many laboratories. 
Generalizing and 
documenting this trend using an AI approach seemed appropriate at 
this time. 
Results and Discussion 
General. 
We have studied the characterization of multicomponent 
materials by combining modern analytical instrumentation with a 
commercially available AI expert system development tool. 
Information generated from selected analytical databases may be 
accessed using TIMM, ("The 
Intelligent Machine Model,") available 
from General Research Corp., McLean, VA. 
This Fortran expert 
system shell has enabled development of EXMAT, a h e u r i s t i c a l l y -
1inked network of expert systems for materials analysis. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

28. 
L I E B M A N ET A L . 
Concerted Organic Analysis of Materials 
367 
An important aspect of our AI application i s the attention 
paid to including well-established Fortran programs and database 
search methods into the decision structure of an expert system 
network. Only certain AI software tools (such as TIMM) 
effectively handle this c r i t i c a l aspect for the analytical 
instrumentation f i e l d at this time (57-60). 
The a b i l i t y to 
combine symbolic and numeric processing appears to be a major 
factor i n development of multilevel expert systems for practical 
instrumentation use. 
Therefore, the expert systems i n the EXMAT 
linked network access factor values and the decisions from EXMATH, 
an expert system with chemometric/Fortran routines which are 
appropriate to the nature of the instrumental data and the 
information needed by the analyst. 
Pattern recognition and 
correlation methods are basic capabilities i n this f i e l d . 
TIMM - The Intelligent Machine Model. The expert system s h e l l , 
TIMM, i s a frame-like system which employs an analogical p a r t i a l 
match inferencing procedure, similar to a forward-chaining 
proces
c 
when the e x p l i c i t linking method i s followed. 
P a r t i a l match 
inferencing, as proposed by Hayes-Roth and Joshi (61) means 
matching on a subset of clauses i n individual rules. Analogical 
inferencing uses s i m i l a r i t y , as well as exactitude, to match rule 
clauses. Thus, TIMM effectively uses incomplete and approximate 
knowledge i n a supervised learning format. The created expert 
system is divided into two sections: (1) a decision structure 
with ordered input factors and values, and (2) the knowledge base 
containing rules that are displayed to the user i n an " i f , then" 
format. A set of test conditions i s compared to those contained 
in the knowledge base and a weighted s i m i l a r i t y metric i s 
applied. A variation of the nearest neighbor search algorithm i s 
used for 
pattern-matching. 
Heuristically-linked individual expert systems (ES) are 
prepared using implicit and/or e x p l i c i t linking methods to permit 
processing of "microdecisions" that are part of more complex 
"macrodecisions". 
The prototype EXMAT was developed using an 
i m p l i c i t linking procedure wherein the decision choices of one ES 
become the f i r s t ordered factor/values of another ES. Prior to 
l i n k i n g , each system i s independently 
b u i l t , trained, exercised, 
checked for consistancy and completeness, and then generalized. 
Terse or verbose explanations may be included, as well as decision 
confidence levels that are trained into the system by the domain 
experts. TIMM i s domain independent, permitting expert systems to 
be readily developed i n fields wherein expertise exists. EXMAT 
was developed within this protocol with the important advantage 
that TIMM ES can be embedded i n routines which are basic to the 
analysts
1 problem-solving capability and accessed using the 
advanced REASON subroutine developed by General Research 
Corporation. 
EXMAT - A Linked Network of Expert Systems for Materials Analysis. 
Seven individual expert systems comprise EXMAT: (1) problem 
d e f i n i t i o n and analytical strategy; (2) instrumental configuration 
and conditions; (3) data generation; (4) chemometric/search 
algorithms; (5) results; (6) interpretation; (7) analytical goals. 
Dynamic headspace (DHS)/GC and pyrolysis GC 
(PGC)/concentrators 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

368 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
interfaced to Fourier transform infrared (FTIR) and mass spectral 
(MS) detectors, combined with HPLC, thermal, and elemental 
analyses have been chosen in this approach for composite materials 
characterization. 
Generation of databases in the prototype EXMAT 
system w i l l focus on the specific domain of propellants and 
polymer composites. However, the general concept of integrating 
information from relevant databases emulates the actions of a 
pragmatic problem-solver in many domains. Clearly, the specific 
analytical strategy, instrumental configurations, databases, and 
interpretive aids must be developed accordingly (8_). EXMAT 
i l l u s t r a t e s the inherent potential of combining i n t e l l i g e n t 
instrumentation with AI symbolic processing in a problem-solving 
format. 
Figure la outlines the decision and control structure of 
TIMM; Figure l b , the expert systems network; and Figure l c , the 
overall decision structure of EXMAT. Expert System (ES) #1 i s 
given ( i n part) in Figure 2 showing the decision choices and 
factors/values needed to establish the problem definition and 
analytical strategy. 
Analytical systems included in the strategy 
s p e c i f i c a l l y emphasize those tools available in the 
B a l l i s t i c 
Research Laboratory and which have a proven capability of 
generating precise, reproducible data on a wide variety of 
materials. 
Therefore, the analyst may select the combination of 
instrumentation (chromatographic, 
spectrometric, thermal, or 
elemental) dependent on the scope of the problem, nature of the 
information needed, details of the samples involved, and the 
available analytical tools and methods. There are approximately 
85 rules in the knowledge base of ES #1 at this time, four of 
which are shown in Figure 3. 
Figure 4 outlines a portion of ES #2 for choice of the 
specific instrumental configuration and conditions which are 
indicated by the decisions and factors provided in ES#1. 
This i s 
a c r i t i c a l step, since the databases generated i n ES #3 must be 
d i r e c t l y correlated to the specific instrumental configuration and 
conditions in ES #2 for the concerted analysis of samples, 
references, etc.; e.g., pattern comparisons between analyses with 
specialty GC detectors (FID-flame ionization, TCD-thermal 
conductivity, NPD-nitrogen/phosphorus, PID-photoionization). 
This 
stage focuses on the attributes of modern analytical 
instrumentation: 
f l e x i b l e , modular, microprocessor/computer-
controlled hardware that can be readily interfaced for e f f i c i e n t 
data-acquisition and handling. 
ES #2 also emphasizes varied 
sample processing, such as pyrolysis and dynamic headspace, i n 
order to analyze materials which cannot be introduced d i r e c t l y 
into the chromatographic or spectral systems. Also, instrumental 
methods designed for trace organic analysis or for sample-limited 
studies are important capabilities. 
The instrumental 
configurations are grouped into six major systems - Sys 1-GC, 
Sys 
2-FTIR, Sys 3-MS, 
Sys 4-HPLC, Sys 5-Thermal, and Sys 6-Elemental. 
ES #3 dictates the selected databases and 
sample-tracking 
mechanism that are based on the decisions of ES #2. 
For example, 
data obtained using a direct FTIR method as suggested i n the 
decisions of ES #1 and #2 would be put into the FTIR database 
under D conditions. However, a sample examined with the GC-FTIR 
configuration would be entered into the GC-FTIR database with 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

LIEBMAN ET A L . 
Concerted Organic Analysis of Materials 
Ι Τ Ι Μ Μ 
E X P E R T 
S Y S T E M 
BUILDERJ 
| U S E R 
A P P L I C A T I O N 
S Y S T E M | 
Figure l a . 
Expert system shell - TIMM. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
EXMAT 
ESTABLISH FRAMEWORK FOP INTEGRATING ES 
DECISIONS AND ACTIONS TO-BE-TAKEN 
REASON 
A SUBPROGRAM PRODUCED BY GRC 
ENABLES 
(A) APPLICATION TO CALL ES 
AS A LINKED 
SUBROUTINE 
(B) 
AN ES TO CALL AND UTILIZE DATA 
FROM OTHER 
FILES/PROGRAMS 
(C) 
TIMM ES TO PASS A DECISION TO 
AN ACTION-TO-BE-TAKEN COMPONENT 
OF THE PROGRAM 
Ο EXMATH 
CALLS USER DEFINED DATA FILE 
FOR CHEMOMETRICS 
DECISION INVOKES MATH SUBROUTINE 
AND 
ACCEPTS EXMAT DECISIONS 
CONVERTS MATH RESULTS TO FACTOR VALUES 
FOR INPUT TO TIMM EXPERT SYSTEMS 
Figure l b . An expert system network. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

28. 
L I E B M A N ET A L . 
Concerted Organic Analysis of Materials 
371 
A LINKED NETWORK OF EXPERT SYSTEMS FOR MATERIAL ANALYSIS 
ES #1 
ANALYTICAL STRATEGY FOR DEFINED PROBLEM 
ES #2 
INSTRUMENTAL CONFIGURATION/CONDITIONS 
ES #3 
DATABASE GENERATION 
ES #4 
DATA TREATMENT 
ES #5 
DATA 
RESULTS 
ES #6 
DATA INTERPRETATION 
ES #7 
ANALYTICAL GOAL 
Figure l c . 
Development of EXMAT. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

372 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
D E C I S I O N : 
ANALY STRATEGY 
Choices: 
GC/SYS1 
FTIR/SYS2 
MS/SYS3 
LC/SYS4 
TA/SYS5 
EL/SYS6 
FACTORS: 
SCOPE 
Type of Values: Unordered Descriptive Phrases 
Values: 
SCREEN 
TIME/FUND LIMIT 
QUAL/QUANT 
QUANT 
PURITY 
VOLATILES 
TRACE DETECT 
KINETICS 
MECHANISM 
CORRELATION 
R&D 
SAMPLE AMT 
Type of Values: Linearly-Ordered Descriptive Phrases 
Values: 
UNLIMITED 
GM 
MG 
MICROGM 
TRACE 
SAMPLE FORM 
Type of Values: Unordered Descriptive Phrases 
Values: 
POWDER 
BULK 
SEMISOLID 
LIQUID 
FILM/LAMIΝ 
FIBER 
MULTIMEDIA 
Figure 2. P a r t i a l decision structure of ES #1 analytical 
strategy. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

LIEBMAN ET A L . 
Concerted Organic Analysis of Materials 
Rule 17 
If: 
SCOPE 
SAMPLE AMT 
SAMPLE FORM 
IS SCREEN 
IS GM 
IS MULTIMEDIA 
SAMPLING PROCESS IS RANDOM 
SAMPLE HISTORY 
INSTR. AVAIL 
Then: 
ANALY STRATEGY 
IS UNKWN 
IS NO LC 
IS GC/SYS1(50) 
FTIR/SYS2Î5Û) 
Rule 18 
I-f : 
SCOPE 
SAMPLE AMT 
SAMPLE FORM 
IS TRACE DETECT 
IS MG 
IS POWDER 
SAMPLING PROCESS IS STATIC 
SAMPLE HISTORY 
INSTR. AVAIL 
Then: 
ANALY STRATEGY 
IS DEGRADATION 
IS NO LC 
IS GC/SYS1(30) 
MS/SYS3(70) 
Rule 19 
If: 
SCOPE 
SAMPLE AMT 
SAMPLE FORM 
IS QUANT 
IS TRACE 
IS FILM/LAMIΝ 
SAMPLING PROCESS IS STATIC 
SAMPLE HISTORY 
INSTR. AVAIL 
Then: 
ANALY STRATEGY 
IS UNKWN 
IS NO METHOD 
IS MS/SYS3(100) 
Rule 20 
If: 
SCOPE 
SAMPLE AMT 
SAMPLE FORM 
IS TRACE DETECT 
IS TRACE 
IS FILM/LAMIN 
SAMPLING PROCESS IS RANDOM 
SAMPLE HISTORY 
INSTR. AVAIL 
Then : 
ANALY STRATEGY 
IS DEGRADATION 
IS NO ELEM 
IS GC/SYS1(20) 
MS/SYS3(80) 
Figure 3. Typical rules in ES #1. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

374 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
DECISIONS 
EXPTL CONFIG 
Choices: 
GCSYS1/A 
GCSYS1/AEC 
FTIRSYS2/D 
FTIRSYS2/ABCD 
MSSYS3/E 
MSSYS3/ABCE 
LCSYS4/FIK 
LCSYS4/GJK 
LCSYS4/FIL 
LCSYS4/GJL 
TASYS5/M 
TASYS5/N 
TASYS5/0 
TASYS5/P 
ELSYS6/Q 
ELSYS6/R 
FACTORS: 
ANALY STRATEGY 
Type of Values: Unordered D e s c r i p t i v e Phrases 
Values: 
GC/SYS1 
FTIR/SYS2 
MS/SYS3 
LC/SYS4 
TA/SYS5 
EL/SYS6 
GC CONFIG 
Type of Values: Unordered Descriptive Phrases 
Values: 
DIRECT GC/FID/TCD 
DIRECT GC/FID/NPD 
DHS/FID/TCD 
DHS/FID/NPD 
PGC/FID/TCD 
PGC/FID/NPD 
DHS/PGC/FID/TCD 
DHS/PGC/FID/NPD 
FTIR CONFIG 
Type of Values: Unondered Descriptive Phrases 
Values: 
DIRECT 
MICROSAMPLING 
DRIFT 
ATR 
VARIABLE Τ 
DHS/FTIR 
GC-FTIR 
DHS/GC-FTIR 
PGC-FTIR 
DHS/PGC-FTIR 
MS CONFIG 
Type of Values: Unordered Descriptive Phrases 
Values: 
RIC 
SIM 
PYROL/MS 
DUG/MS 
GC-MS/P1D 
Figure 4. P a r t i a l decision structure of ES #2 configuration. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

28. 
L I E B M A N ET A L . 
Concerted Organic Analysis of Materials 
conditions designated AD, ABD, or ABCD. In the f u l l y documented 
ES form, the conditions A/B/C/etc. w i l l be described i n 
appropriate detail for the user and accessed by using the "verbose 
version" from the menu. Format for instrumental database 
generation and management was aided by the work reported e a r l i e r 
by R. Crawford, C. Wong, and coworkers at Lawrence Livermore 
Laboratory (62,63). 
Additionally, data report transfer from GC 
data stations to the host VAX-VMS system was aided by recent work 
reported from Argonne National Laboratory 
(64,65). 
Data treatment in ES #4 incorporates chemometric methods 
available for chromatographic or spectral analysis: preprocessing 
of data, normalization, smoothing, deconvolution, optimization, 
fingerprinting, pattern recognition, factor analysis (eigenvector 
and canonical methods), and other appropriate routines. The 
l a t t e r have been purchased or incorporated from the l i t e r a t u r e ; 
e.g., PAIRS, an infrared interpretive program by H. Woodruff and 
coworkers (66), and the MS library/search programs provided by 
Hewlett-Packard 
for their MS systems. These searches provide a 
"hit 
l i s t " from the respective l i b r a r i e s and some additional 
options for spectral interpretation. 
Our linked pattern recognition expert system, EXMATH, 
operates on given databases via the preprocessing, data 
manipulation, c l a s s i f i c a t i o n , factor analysis, or plotting 
packages as driven within EXMAT. For example, the c l a s s i f i c a t i o n 
package includes linear discriminant analysis, regression 
analysis, principal component catagory analysis, nonlinear mapping 
and nearest neighbors analysis. The factor analysis package 
provides loading extraction, factor scores, factor rotations, and 
canonical correlation analysis. 
The results of data treatment are documented and evaluated i n 
ES #5 and the interpretation in ES #6 i s guided by the analyst's 
constraints and requirements. 
For instance, simple visual pattern 
comparisions may be acceptable for sample i d e n t i f i c a t i o n , or a 
combined database (GC-FTIR/GC-MS), (PGC/FTIR), (GC/TA), etc., 
analysis may be required. Judgmental decisions must be trained 
into the system as to depth of analysis, i t s acceptability and 
r e l i a b i l i t y (e.g., the h i t quality index (HQI) of the MS search 
combined with that from the FTIR search may confirm within a 95% 
confidence level the GC peak or sample identity). 
F i n a l l y , ES #7 incorporates the interpretive results of these 
treatments to direct the analyst toward the designated analytical 
goal(s) v i a i m p l i c i t / e x p l i c i t linking mechanisms. The f i n a l goal 
(structure, composition, mechanism, k i n e t i c s , correlation, 
experimental design analysis, or library extension) i s approached 
by incorporating the e a r l i e r decision/choices of ES #1-6 for 
evaluation i n the decision structure of ES #7. Some procedures 
may be straightforward; e.g., a screening analysis with a single 
instrument/configurâtion generates a sample pattern that v i s u a l l y 
matches a known reference to the satisfaction of the analyst. 
Other studies involving several instrumental systems ( i n our 
scenario...chromatographic, 
spectral, thermal, or elemental), may 
require feedback from several interpretive results. 
Since TIMM i s 
easily modified, the f i n a l form of EXMAT w i l l l i k e l y be improved 
over that described for this prototype; i . e . , including e x p l i c i t 
and i m p l i c i t linking mechanisms. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

376 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
EXMATH - An Expert System for Pattern Recognition. A prototype 
expert system for pattern recognition and data analysis, EXMATH, 
has been developed to embed a chemometrician
1s expertise into an 
accessible form for researchers. 
The selected library of 
subroutines developed over the past ten years comprise a portion 
of the EXMATH program to permit an integrated expert systems 
approach (Figures 5 and 6). 
For each analytical system, expert systems drivers were 
written which control data input to and operation of the 
algorithm. A second, more i n t e l l i g e n t set of drivers: (1) receive 
input i n the form of a decision from the external expert system 
network; (2) collect the necessary subroutines for a heuristic 
algorithm to solve data questions; (3) inspect the v a l i d i t y of the 
input data; (4) drive the algorithm; and (5) transfer the results 
via GRC's REASON algorithm back to the external expert network for 
future decision-making. For example, i f a least squares 
regression on the data f i l e i s called by the external expert 
network, the EXMATH system inspects the input data, drives the 
regression under jacknifing protocols, and collects variable, 
residual, and f i t correlation results for analysis by the other 
expert system modules. The procedure i s implemented and executed 
without any mathematical expertise from the user. 
Summary 
Development of a linked network of expert systems, EXMAT, has been 
described for application to materials characterization. 
Selected 
instrumentation which are common to modern laboratories generate 
databases that are treated and interpreted within an analytical 
strategy directed toward a desired goal. 
Extension to other 
problem-solving 
situations may use the same format, but with 
specialized tools and domain-specific 
l i b r a r i e s . 
Importantly, a 
chemometrician
1s expertise has been embedded into EXMAT through 
access to information derived from a linked expert system, 
EXMATH. Figures 7 and 8 outline this multilevel expert systems 
approach developed for application of selected analytical 
instruments to the f i e l d of materials science. 
Additionally, use of a commercial AI shell for expert system 
development has been demonstrated without the need to learn 
computer programming languages (C, Pascal, LISP or any of i t s 
variations), nor to have an intermediary knowledge engineer. 
Although this development effort of 4-5 man months was on a 
minicomputer, adaptation of EXMAT to the microcomputer version of 
TIMM is anticipated. The completed implementation of EXMAT w i l l 
support the belief that AI combined with i n t e l l i g e n t 
instrumentation can have a major impact on future analytical 
problem-solving. 
In general, i t appears that expert systems which combine 
symbolic/numeric processing capabilities are necessary to 
effectively automate decision-making in applications involving 
analytical and process instrumentation/sensors. 
Furthermore, 
these integrated decision structures w i l l l i k e l y be embedded (67-
69) within the analytical or process units to provide 
f u l l y 
automated pattern recognition/correlation systems for future 
i n t e l l i g e n t 
instrumentation. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

LIEBMAN ET AL. 
Concerted Organic Analysis of Materials 
E X A M P L E - A L G O R I T H M 
B UIL DI Ν G - Ε X S Ρ D S 
P U R P O S E - E M U L A T I O N 
OF S P S S P R O C E D U R E FOR 
DISCRIMINANT 
A N A L Y S I S 
- 
USED IN A N A L Y S I S 
OF V A R I A N C E 
MODE 
- 
P R O D U C E S DATA MAPPING OF 
S P A C E 
OF S A M P L E R E P L I C A T E VARIATION A B O U T 
S A M P L E 
MEANS 
O P E R A T I O N - 
I N S P E C T S 
INPUT DATA 
FOR 
(1) 
PRIOR 
P R E P R O C E S S I N G 
(2) 
N E C E S S I T Y 
OF RANK 
REDUCTION 
PRIOR TO 
A N A L Y S I S 
- 
S C A L E S DATA IF 
NEEDED 
- P E R F O R M S F A C T O R A N A L Y S I S 
REDUCTION 
IF 
NEEDED 
- C O M P U T E S S A M P L E MEANS AND A R R A N G E S DATA AS 
A TRAINING S E T OF MEAN V E C T O R S AND T E S T 
S E T 
OF R E P L I C A T E 
V E C T O R S 
- 
P R O J E C T S BY F A C T O R A N A L Y S I S 
OF MEAN 
V E C T O R S 
- 
R E P R O D U C E S V A R I A B L E WEIGHTS FOR 
P R O J E C T I O N 
AND FURTHER 
A N A L Y S I S 
Figure 5. EXMATH - heuristic design. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
E X T G R T 
. I N S P E C T S 
INPUT DATA 
M A T R I C E S 
FOR P R E P R O C E S S I N G 
T A S K S 
- L O C A T E S T A R G E T AND M E R G E S / S O R T S 
FILE 
FOR INPUT TO DATA 
A N A L Y S I S 
- P E R F O R M S F A C T O R A N A L Y S I S IF 
N E E D E D 
- L E A S T S Q U A R E S R O T A T I O N TO 
T A R G E T OR H Y P O T H E S I S 
- R E C O N S T R U C T I O N 
OF 
M E A S U R E M E N T 
INFORMATION 
MATRIX TO R E F L E C T 
C O R R E L A T I O N S 
WHY? 
(1) 
D E C O N V O L U T I O N OF C O M P O N E N T S 
IN 
MIXTURES 
(2) 
H Y P O T H E S I S T E S T S ON I N T E R P R E T A T I O N OF 
R E S P O N S E S 
(3) S P E C T R A L MATCHING TO R E F E R E N C E R E S P O N S E S 
(4) 
L E A S T S Q U A R E S R E G R E S S I O N 
MODELING WITH 
"NOISE FILTERING" 
(5) 
DETERMINATION 
OF F U N D A M E N T A L 
PHYSICAL 
F A C T O R S 
UNDERLYING S A M P L E M E A S U R E M E N T 
R E S P O N S E S 
Figure 6· Target rotation - subroutine i n EXMATH. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

L I E B M A N ET A L . 
Concerted Organic Analysis of Materials 
EXMAT 
A LINKED NETWORK OF EXPERT SYSTEMS 
WITH P A T T E R N RECOGNITION AND S E A R C H P R O G R A M S 
FOR MATERIALS 
C H A R A C T E R I Z A T I O N 
C O M P O N E N T S 
A T T R I B U T E S 
1. D A T A B A S E MANAGEMENT 
A. S T O R A G E OF P A R A M E T E R S 
< ~ ~ ~ ~
B ™~ ~ ™
, " ™~
B ~ 
AND D A T A O N S A M P L E S FOR 
S E L E C T E D 
INSTRUMENTAL 
T E C H N I Q U E S 
B. 
RETRIEVAL OF S E L E C T E D 
S A M P L E S FORMING A DATA 
SET 
F O R M A T T E D FOR 
MULTIVARIATE 
A N A L Y S I S 
C. 
C R E A T E , A D D , D E L E T E , HELP 
AND SHOW 
FUNCTIONS 
2. EXPERT SYSTEMS AND 
EMBEDDING SUBPROGRAMS - TIMM 
A. F O R T R A N S O U R C E C O D E 
B. EMBEDDING OF TIMM S Y S T E M 
WITHIN USER 
PROGRAMS 
C. 
C A P A B L E OF HANDLING 
METRIC AND NON-METRIC 
INFORMATION 
D. HEURISTIC DESIGN 
Figure 7. EXMAT - a linked network of expert systems. 
Continued on next page 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

380 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
COMPONENT 
3. P A T T E R N 
R E C O G N I T I O N 
A. 
E X P E R T S Y S T E M 
-
E X M A T H 
B. 
C. 
D. 
E. 
4. 
S P E Ç T R A I , ? ^
R 9 f 1
 A
N
P 
M A T C H 
A L G O R I T H I M S 
P A R T I A L 
I N T E R P R E T A T I O N 
A I D S 
A T T R I B U T E S 
HEURISTIC 
DESIGN 
S U P E R V I S E D AND U N S U P E R V I S E D 
P A T T E R N R E C O G N I T I O N , 
F A C T O R 
A N A L Y S I S , 
P L O T T I N G 
E X P E R T I S E INCLUDES DATA 
P R E P R O C E S S I N G AND 
E V A L U A T I O N OF R E S U L T S 
USER 
I N T E R V E N T I O N 
FOR 
D A T A B A S E 
MODIFICATIONS 
I M P L E M E N T A B L E AS J A C K N I F I N G 
P R O C E D U R E 
A. PAIRS INFRARED S P E C T R A 
B. P B M - M A S S S P E C T R A 
Figure 7. Continued. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

PROBLEM S T A T E M E N T 
OR HYPOTHESIS 
HE 
E A S U R E M E N T S 
SOLUTION OR DATAI 
LABORATORY AUTOMATION USING EXPERT S Y S T E M S DRIVERS 
INSTRUMENT 1 
CONTROL 
OPTIMIZATION 
PREPROCESSING 
INTERPRETATION 
EXPERT S Y S T E M S 
EXPERIMENTAL DESIGN 
INSTRUMENT 2 
CONTROL 
OPTIMIZATION 
PREPROCESSING 
INTERPRETATION 
INSTRUMENT Ν 
CONTROL 
OPTIMIZATION 
PREPROCESSING 
INTERPRETATION 
tn 
> 
m 
H 
? 
s. 
Ci 
9" 
D A T A B A S E MANAGEMENT EXPERT S Y S T E M 
DATA ANALYSIS 
INTERPRETATION 
I 
s* 
Figure 8. Multilevel expert systems outline, 
experimental design and decision-making. 
Automated 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

382 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Acknowledgments 
Contributions to data transfer and computer interfacing by 
J. Romanski, K. Fickie, and R.M. Cahoon at the B a l l i s t i c Research 
Laboratory are gratefully acknowledged. We appreciate the 
cooperation provided by the General Research Corporation and 
discussions with M.J. Aiken during this development effort. 
Literature Cited 
1. Liebman, S.A. Amer. Lab., 1971, 18. 
2. Liebman, S.A.; Ahlstrom, D.H.; Quinn, E.J.; Geigley, A.G.; 
Meluskey, J.T. J. Polym. Sci., Part A-1, 1971, 9, 1843. 
3. Liebman, S.A. ACS 6th Northeast Regional Meeting, 
Burlington, VT, 1974, Sympos. Computers in Chemistry. 
4. Liebman, S.A.; Ahlstrom, D.H.; Hoke, A.T. Chromatographia, 
1978, 11, 427. 
5. Liebman, S.A.; Ahlstrom, D.H.; Starnes, Jr., W.R. Schilling, 
F.C. J. Macromol. Sci., Chem., 1982, A17(6), 935. 
6. Sasaki, S.; Abe, H.; Ouki, T. Anal. Chem., 1968, 40, 2221. 
7. Yamasaki, T.; Abe, H.; Kudo, Y.; Sasaki, S. In "Computer-
Assisted Structure Elucidation"; Smith, D.H., Ed.; ACS 
SYMPOSIUM SERIES, No. 54, American Chemical Society, 
Washington, DC, 1977; p. 108. 
8. Kaelble, D.H. "Computer-Aided Design of Polymers and 
Composites"; Marcel Dekker, Inc., NY, 1985. 
9. Jurs, P.C.; Kowalski, B.R.; Isenhour, T.L. Anal. Chem., 
1969, 41, 21; Ibid., 690, 695. 
10. Pichler, M.A.; Perone, S.P. Anal. Chem., 1974, 46, 1790. 
11. Kowalski, B.R. Ed., "Chemometrics: Theory and 
Applications"; ACS SYMPOSIUM SERIES No. 52, American Chemical 
Society, Washington, DC, 1977. 
12. Malinowski, E.R.; Howery, D.G. "Factor Analysis in 
Chemistry", J. Wiley & Sons, NY, 1980. 
13. Delaney, M.F. Anal. Chem. Fund. Rev., 1984, 56, 261R. 
14. Harper, A.M.; Meuzelaar, H.L.; Metcalf, G.S.; Pope, D.L. In 
"Analytical Pyrolysis"; Proc. 5th International Symposium, 
Voorhees, K.J., Ed.; Butterworths Publ., London, 1984, 
Chapter 6. 
15. Harper, A.M. In "Pyrolysis and GC in Polymer Analysis"; 
Liebman and Levy, Eds., Marcel Dekker, Inc., NY, 1985; 
Chapter 8. 
16. Harper, A.M.; Liebman, S.A. Chemometrics Research 
Conference, Gaithersburg, MD, May 1985, to be published in 
NBS Research Journal. 
17. Beckman Instruments, Inc., Spinco Div., Palo Alto, CA 94304; 
Spin Pro Expert System, Brochure SB-664. 
18. Kraus, T.W.; Myron, T.J., Control Engineering, 1984, 106. 
19. Proc. 9th Annual Advanced Control Conf., Purdue University, 
W. Lafayette, IN, 1983. 
20. Chemical Data Systems, Div. of Autoclave Engineering, 7000 
Limestone Rd., Oxford, PA 19363. Sample Concentrators, Models 
320, 330; CDS Geochemical Research System, Model 820; Model 
8000 Series Micro-Pilot Plant Systems. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

28. 
L I E B M A N ET A L . 
Concerted Organic Analysis of Materials 
383 
21. Spectra-Physics, Autolab Div., San Jose, CA Liquid 
Chromatograph, Model SP8100 XR; Technical Bulletin D/S-01, 
12/84. 
22. Delaney, M.F.; Uden, P.C. J. Chromatogr. Sci., 1979, 17, 
428. 
23. Delaney, M.F.; Warren, Jr., F.V.; Hallowell, Jr., J.R. Anal. 
Chem., 1983, 55, 1925. 
24. Delaney, M.F.; Hallowell, Jr., J.R.; Warren, Jr., J.R. J. 
Chem. Inf. Comput. Sci., 1985, 25, 27. 
25. Stauffer, D.B.; McLafferty, F.W.; Ellis, R.D.; Peterson, 
D.W. Anal. Chem., 1985, 57, 1056; Ibid., 899 and refs. 
26. Kalchhauser, H.; Robien, W. J. Chem. Inf. Comput. Sci., 
1985, 25, 103. 
27. Fein-Marquart Assoc., Inc., 7215 York Rd., Baltimore, MD 
21212; Mass Spectral Info. System (MSIS); MASCOT: software 
pkg. MS data on a PC. 
28. Sadtler Research Laboratores, Inc., Spring Garden St., 
Phila., PA 19122. 
29. Lysyj, I.; Newton, P.R. Anal. Chem., 1972, 44, 2385. 
30. Kanal, L. IEEE Trans. Info.Theory, 1974, Vol. IT-20, 697; 
and Proc. IEEE, 1972, 60, 1200. 
31. Kowalski, B.R. Chemtech, 1974, 300. 
32. Byers, W.A.; Perone, S.P. Anal. Chem., 1980, 52, 2173. 
33. Moncur, J.G.; Bradshaw, W.G. J. High Resol.Chromatogr. & CC, 
1983, 6, 595. 
34. Frankel, D.S. Anal. Chem., 1984, 56, 1011. 
35. Fredericks, P.M.; Osborn, P.R.; Swinkels, D.A.J. Fuel, 1984, 
63, 139; and BHP Tech. Bulletin No. 27, 1983. 
36. Infometrix, Inc., 2200 Sixth Ave., Seattle, WA 98121. 
37. Deming, S.N.; Morgan, S.L. Anal. Chem., 1973, 45, 278A. 
38. Deming, S.N. Amer. Lab., 1981, 13, 42. 
39. Deming, S.N.; Morgan, S.L. "INSTRUMENTUNE-UP: A Computer 
Program for Optimizing Performance of Common Lab. 
Instruments"; Elsevier Scientific Software, Amsterdam, The 
Netherlands, 1984. 
40. Galjch, J.L.; Kirkland, J.J.; Squire, K.M.; Minor, J.M. J. 
Chromatogr., 1980, 199, 57. 
41. Sabate, L.G.; Diaz, A.M.; Tomas, X.M.; Gassiot, M.M. J. 
Chromatogr. Sci., 1983, 21, 439. 
42. 
Statistical Designs, 9941 Rowlett, Suite 6, Houston, TX; 
"Software for Experimental Design and Optimization". 
43. Barr, Α.; Feigenbaum, E.A.; Eds. Handbook of AI, William 
Kaufman, Los Altos, CA, Vol. II, 1981. 
44. Cooper, J.R.; Johlman, C.; Laude, D.A.; Brown, R.S.; Wilkins, 
C.L. Proc. Pitts. Conf. Anal. Chem. & Spectr., New Orleans, 
LA, 1985; and Anal. Chem., 1984, 56, 1163; Ibid., 57, 1044. 
45. Greene, W.W.; Isenhour, T.L. Proc. Pitts. Conf. Anal. Chem. 
& Spectr., New Orleans, LA, 1985; and Anal. Chem., 1983, 55, 
1117. 
46. Borman, S.A. Anal. Chem., 1982, 54, 1379. 
47. Hayes-Roth, F.; Waterman, D.A.; Lenat, D.B.; Eds. "Building 
Expert Systems", Addison-Wesley Publ. Co., Reading, MA, 1983. 
48. Buchanan, B.G.; Shortliffe, E.H. "Rule-Based Expert 
Systems"; Addison-Wesley Publ. Co., Reading, MA, 1984. 
49. Lenat, D.B. Sci. Amer., 1984, 204. 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

384 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
50. Kinnucan, P. High Tech., 1984, 30; Ibid., 1985, 16. 
51. Third Annual Conf. on Applied AI, Boston, MA, 1985, 
DPMA/Tech. Training Corp., and Embedded Computer Software 
Conf., Boston, MA, 1984. 
52. Dessy, R.E. Anal. Chem., 1984, 56, 1200; Ibid., 1313. 
53. Klass, P.J. Aviation Wk. & Space Tech., April 22, 1985, 46. 
54. Harmon, P.; King, D. "Expert Systems", J. Wiley & Sons, Inc. 
NY, 1985. 
55. Bramer, M. & D. "The Fifth Generation", Addison-Wesley Publ. 
Co., Reading, MA, 1984. 
56. Pearl, J. "Heuristics-Intelligent Search Strategies for 
Computer Problem-Solving", Addison-Wesley Publ. Co., Reading, 
MA, 1984. 
57. Selected AI Literature: ICS Applied AI Reporter, Univ. Miami, 
Intell. Computer Systems Res. Institute, Coral Gables, FL 
33124; The AI Magazine, Amer. Assoc. AI (AAAI), Menlo Park, 
CA 94025; and Expert Systems, Internat. J. of Knowledge 
Engineering, Croall, Ishizuka, Waterman, Eds., Learned 
Information, Inc., Marlton, NJ 
58. Michie, D.; Muggleton, S.; Riese, C.; Zubrick, S. First 
Conf. AI Applns., Denver, CO, 1984 RuleMaster-A Second-
Generation Knowledge Engineering Facility Radian Tech. Rpt., 
MI-R-623, Radian Corp., P.O. Box 9948, Austin, TX 78766. 
59. SRL DEXPERT, Systems Research Labs., Inc., Dayton, OH 45440-
3639; Integrates LISP algorithms into Fortran or Ada systems. 
60. Proc. Workshop on Coupling Symbolic and Numerical Computing 
in Expert Systems, sponsored by AAAI, Aug 1985, Boeing 
Computer Services, Bellevue, WA. 
61. Hayes-Roth, F. In "Pattern-Directed Inference Systems", 
Waterman and Hayes-Roth, Eds., Academic Press, NY, 1978. 
62. Crawford, R.W.; Brand, H.R.; Wong, C.M.; Gregg, H.R.; 
Hoffman, P.Α.; Enke, C.G. Anal. Chem., 1984, 56, 1121. 
63. Wong, C.M. Energy & Techn. Rev., Lawrence Livermore National 
Laboratory, University CA, Livermore, CA, 1984, 8. 
64. Demirgian, J.C. J. Chromat. Sci., 1984, 22, 153. 
65. Demirgian, J.C.; Eikens, D.I. Proc. Pitts. Conf. Anal. 
Chem.& Spectr., 1985. 
66. Tomellini, S.A.; Hartwick, R.A.; Woodruff, H.B. Appl. 
Spectr., 1985, 39, 331. Quantum Chemistry Program Exchange, 
Univ. Indiana, Bloomington, IN, Program #426. 
67. Wilson, J.W.; Levine, J.B. Business Wk., June 10, 1985, 82. 
68. Robinson, P. BYTE, June, 1985, 169. 
69. Yianilos, P.N. Electronics, 1983, 56, 113. 
RECEIVED December 17, 1985 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ch028
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

Author Index 
Abbott, Seth, 278 
Bach, René, 278 
Beckner, C. F . , 321 
Bellows, James C , 52 
Bertz, Steven Η . , 169 
Burnstein, Ilene, 244 
Cabrol, Daniel, 125 
Cachet, Claude, 125 
Corbett, Michael, 244 
Cornelius, Richard, 125 
Cross, K. P . , 321 
Curry, Bo, 350 
Delaglio, Frank, 337 
Dolata, Daniel P . , 188 
Dudewicz, Edward J . , 337. 
Duff, P. J . , 365 
Edelson, David, 119 
E h r l i c h , Steven, 244 
Enke, C. G . , 321 
Evens, Martha, 244 
F e r r i n , Thomas E . , 147 
F i f e r , R. Α . , 365 
G a r f i n k e l , David, 75 
G a r f i n k e l , L i l l i a n , 75 
Gasteiger, J . , 258 
Giordani, A. B . , 321 
Gough, A l i c e , 244 
Gregg, H. G . , 321 
G r i f f i t h , Owen Mitch, 297 
Hahn, Mathew Α . , 136 
Hansch, Corwin, 147 
Harner, Teresa J . , 337 
Harper, A. M., 365 
Hawkinson, Lowell B . , 69 
Heffron, Matt, 297 
Hemphill, Charles T . , 231 
Herndon, William C , 169 
Hoffman, P. Α . , 321 
Hohne, Bruce A . , 87 
Houghton, Richard D., 87 
Huang, Conrad, 147 
Hutchings, M. G . , 258 
Johnson, Peter, 244 
Karnicky, Joe, 278 
K e i t h , L. H . , 31 
K l e i n , Teri E . , 147 
Knickerbocker, Carl G . , 69 
Kulikowski, Casimir Α . , 75 
Kumar, A n i l , 337 
Langridge, Robert, 147 
LaRoe, William D., 231 
Levinson, Robert Α . , 209 
Levy, George C , 337 
Liebman, S. Α . , 365 
Low, P . , 258 
Martz, P h i l i p R., 297 
Moore, Robert L . , 69 
Moseley, C. Warren, 231 
Palmer, P. T., 321 
Pavelle, Richard, 100 
Renkes, Gordon D., 176 
Riese, Charles Ε . , 18 
S a i l e r , H . , 258 
Schroeder, Μ. Α . , 365 
Smith, Allan L . , 111 
Smith, Dennis Η . , 1 
Smith, Graham Μ . , 312 
Soo, Von-Wun, 75 
Stuart, J . D., 18,31 
Tomellini, S t e r l i n g Α . , 312 
Trindle, C a r l , 159 
Wang, Tunghwa, 244 
Wilcox, Craig S . , 209 
Wipke, W. Todd, 136,188 
Woodruff, Hugh B . , 312 
Subject Index 
Abstraction, 189 
Actinospectacin 
d i g i t i z e d spectrum, 315,317t 
PAIRS i n t e r p r e t a t i o n , 315,3l8t 
structure, 315-316 
Actinospectacin—Continued 
trace of sulfone functionality during 
PAIRS i n t e r p r e t a t i o n , 315,3l8f 
Actions, d e f i n i t i o n , 94,95t,96 
A g r i c u l t u r a l formulations 
requirements, 87 
structure of the expert 
system, 89,91-97 
386 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ix001
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

Author Index 
Abbott, Seth, 278 
Bach, René, 278 
Beckner, C. F . , 321 
Bellows, James C , 52 
Bertz, Steven Η . , 169 
Burnstein, Ilene, 244 
Cabrol, Daniel, 125 
Cachet, Claude, 125 
Corbett, Michael, 244 
Cornelius, Richard, 125 
Cross, K. P . , 321 
Curry, Bo, 350 
Delaglio, Frank, 337 
Dolata, Daniel P . , 188 
Dudewicz, Edward J . , 337. 
Duff, P. J . , 365 
Edelson, David, 119 
E h r l i c h , Steven, 244 
Enke, C. G . , 321 
Evens, Martha, 244 
F e r r i n , Thomas E . , 147 
F i f e r , R. Α . , 365 
G a r f i n k e l , David, 75 
G a r f i n k e l , L i l l i a n , 75 
Gasteiger, J . , 258 
Giordani, A. B . , 321 
Gough, A l i c e , 244 
Gregg, H. G . , 321 
G r i f f i t h , Owen Mitch, 297 
Hahn, Mathew Α . , 136 
Hansch, Corwin, 147 
Harner, Teresa J . , 337 
Harper, A. M., 365 
Hawkinson, Lowell B . , 69 
Heffron, Matt, 297 
Hemphill, Charles T . , 231 
Herndon, William C , 169 
Hoffman, P. Α . , 321 
Hohne, Bruce A . , 87 
Houghton, Richard D., 87 
Huang, Conrad, 147 
Hutchings, M. G . , 258 
Johnson, Peter, 244 
Karnicky, Joe, 278 
K e i t h , L. H . , 31 
K l e i n , Teri E . , 147 
Knickerbocker, Carl G . , 69 
Kulikowski, Casimir Α . , 75 
Kumar, A n i l , 337 
Langridge, Robert, 147 
LaRoe, William D., 231 
Levinson, Robert Α . , 209 
Levy, George C , 337 
Liebman, S. Α . , 365 
Low, P . , 258 
Martz, P h i l i p R., 297 
Moore, Robert L . , 69 
Moseley, C. Warren, 231 
Palmer, P. T., 321 
Pavelle, Richard, 100 
Renkes, Gordon D., 176 
Riese, Charles Ε . , 18 
S a i l e r , H . , 258 
Schroeder, Μ. Α . , 365 
Smith, Allan L . , 111 
Smith, Dennis Η . , 1 
Smith, Graham Μ . , 312 
Soo, Von-Wun, 75 
Stuart, J . D., 18,31 
Tomellini, S t e r l i n g Α . , 312 
Trindle, C a r l , 159 
Wang, Tunghwa, 244 
Wilcox, Craig S . , 209 
Wipke, W. Todd, 136,188 
Woodruff, Hugh B . , 312 
Subject Index 
Abstraction, 189 
Actinospectacin 
d i g i t i z e d spectrum, 315,317t 
PAIRS i n t e r p r e t a t i o n , 315,3l8t 
structure, 315-316 
Actinospectacin—Continued 
trace of sulfone functionality during 
PAIRS i n t e r p r e t a t i o n , 315,3l8f 
Actions, d e f i n i t i o n , 94,95t,96 
A g r i c u l t u r a l formulations 
requirements, 87 
structure of the expert 
system, 89,91-97 
386 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ix002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

INDEX 
387 
A g r i c u l t u r a l 
formulations—Continued 
structure of the problem, 89,90f 
types, 87 
A g r i c u l t u r a l formulations a p p l i c a t i o n s , 
advantages of expert system, 88-89 
Analogy and i n t e l l i g e n c e i n model 
building 
components, 138-139 
example of evaluation, 140,142f 
goals, 137,138f 
hardware configuration, 
I 4 0 , l 4 l f 
input screen, 140,141f 
ORTEP p l o t , 143,144f 
procedure, 139-144 
scoring, I40,l42f,l43 
speed of building model, I43t 
superposition of model and 
refinement, 
I43,l44f 
A n a l y t i c a l systems, advances, 365-366 
Applications of expert systems 
appropriate s e l e c t i o n , 7-8 
b i o l o g i c a l reactors, 9,10f 
chemical science and 
engineering, 9-15 
communication s a t e l l i t e s , 9,11,12f 
computing environment, 18-19 
diagnosis of plant conditions, 
real time, 69-70 
execution e f f i c i e n c y , r e a l time, 69 
space stations, 11,13-15 
A r t i f i c i a l 
i n t e l l i g e n c e 
annual growth rates for companies 
marketing products based on, 2 
change i n number of jobs 
a v a i l a b l e , 16 
expert systems, 1-16 
A r t i f i c i a l i n t e l l i g e n c e diagnostic 
system, goals, 56-57 
A r t i f i c i a l i n t e l l i g e n c e i n organic 
chemistry 
advantages, 210 
background, 210 
categories of reactions, 210 
generalizations about reactions 
and structures, 210 
A r t i f i c i a l i n t e l l i g e n c e systems 
development 
DENDRAL, 6 
INTERLISP, 6 
LISP, 6 
MACSYMA, 6 
A r t i f i c i a l i n t e l l i g e n c e techniques 
for nuclear magnetic 
resonance analysis 
decision trees, 340 
improvements, 347-348 
logic programming, 340 
model matching s i m i l a r i t y 
nets, 340,341f,342 
Assignment statement, 
d e f i n i t i o n , 
111-112 
Axiom, d e f i n i t i o n , 194 
Axiomatic theories 
d e f i n i t i o n , 194 
steps, 194 
Axiomatic theory approach, 
synethesis, 188 
Β 
Backward chaining, d e f i n i t i o n , 306 
Bimodal logic 
d e f i n i t i o n , 196 
implication r u l e , 196t,197 
C 
Calculus, d e f i n i t i o n , 190 
ChemData, d e s c r i p t i o n , 152 
Chemical education, applications of 
computers, 125 
Chemistry, unique c h a r a c t e r i s t i c s , 258 
Complete reaction concept, 
d e f i n i t i o n , 214 
Complex equilibrium calculations 
enzyme k i n e t i c s , 79-82 
magnesium ions, 78-79 
pharmacokinetics and drug dosage 
regimen design, 82,83 
Computer algebra system—See MACSYMA 
Computer-assisted i n s t r u c t i o n , 
d e s c r i p t i o n , 126 
Computer-oriented notation concerning 
IR spectral evaluation 
(CONCISE), d e s c r i p t i o n , 313 
Computer software, expert systems, 1-2 
Computers i n chemical education 
advantages, 125 
GEORGE, 126-133 
l i m i t a t i o n s , 126 
software categories, 126 
CONCISE—See Computer-oriented notation 
concerning IR spectral evaluation 
Corona determination, decision 
tree, 21-22f 
Corona determination rule expressed in 
automatically generated r a d i a l 
code, 21-22f 
Corona r u l e , example s e t , 20-22f 
D 
Data bases for MS-MS 
spectrum data base, 324-325 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ix002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

388 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Data bases for MS-MS—Continued 
structure data base, 325 
Data center displays 
recommendation screen, 65,67f 
recommendation summary screen, 65,66f 
Data base organization for organic 
structures 
comparison to Cambridge 
crystallographic data base, 227 
comparison to the screen 
approach, 227-228 
linear notation for reactions and 
structures, 228-229 
p a r t i a l ordering, 224,225f 
r e t r i e v a l algorithm, 224,226-227 
DCG—See Definite clause grammar 
Decision tree, corona 
determination, 
21-22f 
Declarative languages 
c h a r a c t e r i s t i c s , 112 
d e s c r i p t i o n , 112 
Definite clause grammar (DCG), 232-233 
Definite integration, application of 
MACSYMA, 107 
D i - n - o c t y l phthalate 
_ 
daughter spectrum of 
C-containing 
M +, 333,334f,335 
mass spectrum, 328,329f 
match of 105 + daughter spectra v s . 
di-n-octv_l phthalate, 
328t,330f 
match of 149 
daughter spectra v s . 
d i - n - o c t y l phthalate, 
331t,332f 
parent spectrum of 
mass 149, 331,333,334f 
spectrum-substructure 
c o r r e l a t i o n s , 331 
structures, 
328,329f 
Diagnosis 
d e f i n i t i o n , 56 
expert system, 57 
Diels-Alder reactions 
algorithm for regiochemical 
s e l e c t i o n , 238 
basic f r o n t i e r molecular o r b i t a l 
theory, 234 
basic highest occupied molecular 
orbital-lowest unoccupied molecu­
l a r o r b i t a l c a l c u l a t i o n s , 235-236 
determination of permutated lowest 
unoccupied molecular o r b i t a l 
c o e f f i c i e n t s , 237-238 
determination of 
substituent 
e f f e c t s , 236-237t 
disconnection approach, 231 
general from d e r i v a t i o n , 239,240t 
grammar, 233-234 
naive approach d e r i v a t i o n , 238,239t 
notation rearrangement, 241-242 
s t r u c t u r a l constraints on 
reactants, 235 
use of general form in rule 
formation, 
240-241 
D i f f e r e n t i a l c a l c u l u s , application of 
MACSYMA, 104-105 
D i f f e r e n t i a l equations, application of 
MACSYMA, 109 
Disconnection approach, 
d e s c r i p t i o n , 231-232 
Ε 
Easy distance geometry editor 
control points, 151 
d e s c r i p t i o n , 151 
s e l e c t i o n , 
151,155f 
surface generation, 151 
ECAT—See Expert chromatographic 
assistance team 
Elaboration of reactions for organic 
synthesis (EROS), reaction 
schemes, 259,26lf 
Emulsifiable concentrate, 
d e s c r i p t i o n , 88 
EROS—See Elaboration of reactions 
for organic synthesis 
Example set, corona r u l e , 20-22f 
Examples of expert-system applications 
b i o l o g i c a l reactors, 9,10f 
communication s a t e l l i t e s , 
9,11,12f 
space stations, 11,13-15 
Execution efficiency 
r a d i a l , 24-25 
real-time application of expert 
systems, 69 
EXMAT—See Linked network of expert 
systems for materials analysis 
EXMATH—See Expert system for pattern 
recognition 
Expert 
experimental design with 
PENNZYME, 81-82 
f i t t i n g of models to data, 80 
selection of a computational 
model, 80 
selection of a conceptual model, 80 
Expert chromatographic assistance team 
(ECAT) 
automatic t e s t i n g , 288 
development equipment, 283,285,287f 
development of knowledge 
bases, 285-286 
elements involved in development 
and a p p l i c a t i o n , 280,281f 
examples of facts and r u l e s , 283,284f 
expert system programming, 279-280 
f i r s t r u l e s , 286 
IF-THEN r u l e s , 286,287f,288 
knowledge representation, 294-295 
l i m i t a t i o n s of conventional 
programming, 279 
module development, 292-294 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ix002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

INDEX 
389 
ECAT—Continued 
p r o j e c t m o t i v a t i o n , 279 
system s t r a t e g y , 280,283 
task modules, 280,282f 
user i n t e r f a c e s , 295 
Expert system 
d e f i n i t i o n , 56,279-280 
examples o f a p p l i c a t i o n s , 29 
formulation o f a g r i c u l t u r a l 
chemicals, 87-97 
major components, 3 
p a r t s , 56 
TOGA, 20-21 
Expert system f o r a g r i c u l t u r a l 
formulations 
accessing e x t e r n a l software, 93 
f u t u r e developments, 96-97 
response checking f u n c t i o n s , 92t 
s t a t u s o f development, 92 
s t r u c t u r e , 89,91f 
s t r u c t u r e of c o n c l u s i o n s , 93f 
s t r u c t u r e o f FACTS, 92f,93 
s t r u c t u r e o f r u l e s , 93,94t,95-96 
Expert system f o r p a t t e r n r e c o g n i t i o n 
(EXMATH) 
d r i v e r s , 376 
h e u r i s t i c design, 376,377f 
process, 375 
subroutine, 376,378f 
Expert system f o r process c o n t r o l , 
r e a l time, 69-74 
Expert system f o r transformer f a u l t 
d i a g n o s i s , TOGA, 25-29 
Expert system r u l e base 
a c t i v a t i o n by inference engine, 58,60 
b a s i c step, 57-58,59f 
b u i l d i n g the r u l e base, 60 
malfunction, 60 
modes, 57 
r u l e s , 57-58 
Expert systems 
a n a l y s i s of multicomponent 
m a t e r i a l s , 366-381 
and t r a d i t i o n a l software engineering, 
d i f f e r e n c e s , 7 
a p p l i c a t i o n s to supervise 
c a l c u l a t i o n s and design 
experiments, 78-85 
a p p l i c a t i o n s r e l a t e d to chemical 
science and engineering, 9-15 
a p p l i e d to chemistry, 1-16 
a r t i f i c i a l i n t e l l i g e n c e , 1-16 
b u i l d i n g , 76,77 
c a l c u l a t i o n s u p e r v i s i o n , 76 
c h a r a c t e r i s t i c s and 
values, 2-4 
computer algebra system, 100 
computer software, 1-2 
c o n s u l t a t i o n problems, 75 
d e f i n i t i o n , 18 
d e s c r i p t i o n , 3 
Expert systems—Continued 
diagnosis of p l a n t c o n d i t i o n s , 
r e a l - t i m e a p p l i c a t i o n o f , 69-70 
D i e l s - A l d e r r e a c t i o n s , 231-242 
execution e f f i c i e n c y , r e a l - t i m e 
a p p l i c a t i o n o f , 69 
hardware technology r e v o l u t i o n , 13 
high-performance l i q u i d 
chromatographic methods 
developments, 278-295 
knowledge e x t r a c t i o n , 27-28 
MS-MS data, 321-335 
NMR spectroscopy, 337-348 
organic chemistry, 258-274 
organic s t r u c t u r e 
determination, 350-363 
organic syntheses, 244-257 
programs f o r chemistry, 280 
Rulemaster, 18-29 
s c i e n t i f i c and engineering 
a p p l i c a t i o n s , 8 
s e l e c t i n g an appropriate 
a p p l i c a t i o n , 7-8 
types, 75 
u l t r a c e n t r i f u g a t i o n , 297-311 
uses and values, 4-5 
Expert systems a p p l i c a t i o n s , computing 
environment, 18-19 
Expert systems b u i l d e r program, 
advantages, 76 
Expert systems b u i l d i n g , example f o r 
m u l t i p l e e q u i l i b r i u m 
c a l c u l a t i o n , 76-77 
Expert systems developing, model, 7-9 
F 
F a c t o r i z a t i o n , a p p l i c a t i o n o f 
MACSYMA, 105-106 
Four major steps, model f o r developing 
an expert system, 7-9 
G 
Generation of molecular s t r u c t u r e s 
(GENOA) 
advantage, 333 
d e s c r i p t i o n , 324,333 
e m p i r i c a l formula o f the unknown 
compound, 333 
example o f d i - n - o c t y l 
phthalate, 333,334f,335 
Generator d i a g n o s t i c system, a c t u a l 
experience, 65,68 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ix002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

390 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Generic rules 
description, 153 
hydrophobicity 
examples, 153-154,155-156f 
GENOA—See Generation of molecular 
structures 
GEORGE, 126-127,128f 
comparison to other programs, 126 
diagram for determination of a n i l i n e 
molarity, 121,129,132f 
diagram for determination of ethanol 
density, 129,132f 
display of unit conversion, 129,130f 
domain, 126 
example of a r e l a t i o n page, 131,132f 
extension of the domain of 
a p p l i c a t i o n , 133 
levels of use, 127-132 
l o g i c , 127 
primary menu, 127,128f 
program, 127-132 
screen explaining molecular mass 
c a l c u l a t i o n , 127,129,130f 
Group theory 
application of symbolic 
programming, 176-185 
software a v a i l a b l e , 185 
H 
Hardware technology revolution, expert 
systems, 13 
H e u r i s t i c s , d e f i n i t i o n , 3-4,189 
KARMA—Continued 
interactions for enzyme-ligand 
binding, 152 
knowledge, 152 
molecule editor, 
I48,150f 
pop-up menus, I48,150f 
rule formulation, 153 
s p e c i f i c rules, 156-157 
system core, 151-157 
system design, I48,l49f 
system implementation, 
148,151 
KarmaData, description, 152 
KEE-assisted receptor mapping analysis 
description 147-148 
difference from t r a d i t i o n a l approach 
to drug design, 147-148 
Knowledge, manipulation for use i n 
computer programs, 2 
Knowledge base 
content, 4 
expert systems, 3-5 
Knowledge base for expert systems in 
organic chemistry 
charge d i s t r i b u t i o n , inductive, and 
resonance e f f e c t s , 263,265 
concepts involved i n organic reaction 
causes, 260,264f 
heats of reaction and bond 
d i s s o c i a t i o n energies, 260,262t 
hyperconjugation, 265 
multilinear regression 
a n a l y s i s , 265-266,267-268f 
p o l a r i z a b i l i t y e f f e c t s , 262-263,264f 
r e a c t i v i t y space approach, 266-274 
Knowledge engineering, description, 3-4 
Knowledge extraction 
expert systems, 27-28 
Rulemaster, 27-28 
TOGA, 27-28 
IF-THEN r u l e s , rule-based expert 
systems, 3 
Incremental multivalued logic 
d e s c r i p t i o n , 199-200 
implication, 201 
incremental a c q u i s i t i o n of 
evidence, 200-201 
Indefinite integration, application of 
MACSYMA, 107 
I n t u i t i v e theory, d e f i n i t i o n , 194 
Κ 
KARMA 
generic r u l e s , 153-156 
graphic interface, 157 
L 
Languages, programming, v s . programming 
environments, 6 
Linked network of expert systems for 
materials analysis (EXMAT) 
a n a l y t i c a l goals, 375 
chemometric-search algorithms, 375 
data generation, 367 
documentation and evaluation of 
r e s u l t s , 375 
expert system network, 368,370f 
i n d i v i d u a l systems, 367 
instrumental configuration and 
conditions, 368 
interpretation, 375 
o u t l i n e , 376,379-38lf 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ix002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

INDEX 
391 
Linked Network of EXMAT—-Continued 
o v e r a l l decision structure, 368,371f 
p a r t i a l decision 
structure, 368,372f,374f 
problem d e f i n i t i o n and a n a l y t i c a l 
strategy, 368 
r u l e s , 368,373 
LISP for symbolic programming 
advantages, 177-178 
implementation, 178-185 
LMA—See Logic machine architecture 
Logic 
bimodal, 194-197 
incremental multivalued, 
199-201 
Lukasiewicz-Tarski 
multivalued, 197-199 
Logic machine architecture (LMA), 
d e f i n i t i o n , 244 
Logical inferences per second—See LISP 
L o g i s t i c regression analysis 
d e s c r i p t i o n , 273 
example of problem reaction 
prediction, 274,275f 
network of bond breaking and making 
patterns, 274,275f 
Lukasiewicz-Tarski multivalued logic 
allowed values, 198t 
cumulative evidence, 198-199 
description, 197 
M 
Macrooperators, 189 
MACSYMA 
advantages, 101-102 
c a p a b i l i t i e s , 102-103 
d e s c r i p t i o n , 100-101 
equipment, 100 
examples, 103-110 
uses, 103 
Magnetic resonance imaging 
development, 339 
MRI_L0G_ESP, 342-347 
system flow chart, 339-340,341f 
Malfunction 
d e f i n i t i o n , 56,60 
examples of a once-through b o i l e r 
system, 60,6lt 
Manual construction of molecular 
models, description, 136 
Mass spectrometry-mass spectrometry 
data bases, 324-325 
development of data bases, 322,324 
molecular structure 
generator, 324,333-335 
o v e r a l l system for determination 
for 
structure, 322,323f 
spectra matching program, 325-327 
MS-MS—Continued 
spectrum-substructure 
relationship, 326-333 
structure a n a l y s i s , 322 
substructure-property 
r e l a t i o n s h i p s , 322 
Mass spectrometry-mass spectrometry 
spectra matching program 
description, 325 
match factors, 326,327f 
range of standard conditions, 326 
Minimum reaction concept, 
d e f i n i t i o n , 214 
Model, d e f i n i t i o n , 259 
Model computer software 
for 
spectroscopic analysis (NMR1) 
d e s c r i p t i o n , 338 
d i f f i c u l t i e s , 338,339 
Model for developing an expert system, 
four major steps, 7-9 
Modules of ECAT 
column and mobile phase 
design, 288-292 
column diagnosis, 292t 
determination of chemical and 
structural information on the 
sample, 292 
Molecular model building 
application of analogy and 
i n t e l l i g e n c e , 136-144 
automatic, 137 
manual construction, 136 
PRXBLD, 137 
SCRIPT, 137 
WIZARD, 137 
Molecular spectral 
i n t e r p r e t a t i o n , 
steps, 350-351 
Molecular structure programs 
accepting the sketch, 160-161 
distance geometry changes distances 
to Cartesian coordinates, 164,166 
extensions of the functional fragment 
data structure, 166-167 
fragments, 164,165f 
interacting-fragraents 
modeling 
schemes, 167 
LISP structural recognizer, 163-164 
obstacles to wide use, 160 
preliminary processing of the 
sketch, 161 
problem, 160 
representation of the molecule in 
LISP, 163 
routine to assign Lewis 
structures, I6l,l63,l65f 
s p e c i f i c a t i o n of v e r t i c e s , I 6 l , l 6 2 f 
Molecular structure representation in 
clause form 
atom function, 246-247 
bond function, 246-247 
clauses, 245 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ix002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

392 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
Molecular structure representation in 
clause form—Continued 
fragments, 246-247 
Monitoring, definition, 56 
Monitoring system of a power plant 
diagnosis activation l i m i t , 57 
schematic, 54f,57 
sensors, 57,58t 
MRI_LOG_ESP 
branches, 342,346 
commands, 347 
output f i l e s , 347 
sample session, 342,343-345 
s t a t i s t i c a l procedures, 346-347 
MYCIN, description, 138 
Ν 
Necessity, definition, 58 
Nuclear magnetic resonance spectro­
scopic analysis, systems, 337 
0 
Once-through boiler system malfunction 
cation conductivity sensor 
malfunction, 62t,64f,65 
description, 60,6lt 
diagnoses, 60-61 
number diagnosed for each 
sensor, 60,6lt 
sensor validation, 61-62,63f 
Organic structure determination 
accessibility to knowledge base and 
reasoning process, 352 
chemical data base, 355,356f 
example for 
4-phenyl-2-butanone, 356-358 
flow chart, 350,353f 
interpretation of spectra, 352,353f 
IR expert module, 355 
messages, 355-356 
program description, 354-355 
r e c a l l , 360 
r e l i a b i l i t y , 360 
testing of known 
structures, 357-362 
Ρ 
PAIRS—See Program for the analysis 
of infrared spectra 
Pattern recognition programs, 
development, 366 
Pattern-matching system for spectra 
c l a s s i f i c a t i o n , 351 
PENNZYME 
enzyme and transport kinetic 
program, 79-80 
f i t t i n g of models to data, 81 
interface with Expert, 80-82 
Pharmacokinetics and drug dosage 
regimen design 
description of problem, 82 
modeling considerations, 83-85 
physiological pharmacokinetics, 83-85 
use of expert systems, 84-85 
4-Phenyl-2-butanone 
explanations of conclusions of 
organic structure 
determination, 357,359f 
interpretation of 
spectra, 356-357,358f 
Physicochemical parameters, 
examples, 151-152 
PICON—See Process intelligent control 
Planning, 189 
P o l a r i z a b i l i t y , definition, 263 
Polynomial equations, applications, 
application of MACSYMA, 103-104 
Postulates, definition, 194-195 
Power plant 
definition, 53 
schematic, 53,54f 
types of boilers, 
53 
Power plant chemistry 
dependence on boiler, 53,55 
problems, 55 
Predicate, definition, 
193 
Predicate calculus 
formal symbols used QED, 
192t 
logic, 190-192 
translation of chemical statements 
into predicate logic, 192 
working definition, 192 
Predicates, definition, 93-94,95t 
Problem solving and inference engine, 
expert systems, 3 
Procedural languages 
characteristics, 111-112 
definition, 111 
steps in algebraic 
equation solving, 
113 
Process control, real-time expert 
system for, 69-74 
Process intelligent control (PICON) 
backward-chaining inference, 70-71 
design requirements, 70 
example of inference, 
73 
focus f a c i l i t y , 
71,73 
forward-chaining inference, 70-71 
overall structure of package, 74f 
system for process 
control, 71,72f 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ix002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

INDEX 
393 
Program for the analysis of infrared 
spectra (PAIRS) 
automated rule generation 
program, 313-314 
information flow, 312-313,316f 
strengths, 313 
tracing interpretation r u l e s , 314-319 
Programming languages, v s . programming 
environments, 6 
Proof ordering, v s . time-ordered 
presentation of fired r u l e s , 23 
Prototype (building) expert system, 
refinement, 28 
PRXBLD, description, 137 
Q 
QED program 
agenda l i s t , 204-205 
analysis example, 205,206f,207 
block diagram, 201,202f 
BNF grammar for language, 203f 
compilation process for r u l e s , 202f 
data base, 204 
d e s c r i p t i o n , 201-202 
internal form of ALPHA-TO-SC, 204t 
parse tree, 203f 
rule passing, 202 
r u l e s , 205 
R 
Radial 
discussion, 20-21,23 
error detection at building 
time, 24-25 
execution e f f i c i e n c y , 24-25 
interfacing software, 23 
language features, 21 
s i m i l a r i t i e s to Pascal and ADA, 21 
Reaction rule data base 
connection tables 
organization, 250-251 
Gelernter reaction r u l e , 247,249f 
multistep r u l e s , 250-251 
single-step r u l e s , 250-251 
Reaction rule translation into clauses 
clause representation of goal and 
subgoal, 251 
variable substructure molecule v s . 
known molecule, 251-252 
Reactivity space approach 
c l u s t e r a n a l y s i s , 270,272f,273 
Reactivity space approach cluster 
analysis—Continued 
compounds used i n deriving a 
r e a c t i v i t y 
function, 
270,271t 
discussion, 266 
h e t e r o l y s i s , 270,271f 
l o g i s t i c regression, 273-274 
supervised-learning pattern 
recognition methods, 273 
three-dimensional 
r e a c t i v i t y 
space, 266,269f,270 
unsupervised-learning pattern 
recognition methods, 270 
Real-time application of expert systems 
diagnosis of plant conditions, 69-70 
execution e f f i c i e n c y , 69 
Real-time expert system for process 
c o n t r o l , 69-74 
Reasoning 
symbolic application appropriate 
to expert systems, 8 
use i n problem s o l v i n g , 3 
Rule-based system for spectra 
c l a s s i f i c a t i o n , 351 
Rule-based systems, d e f i n i t i o n , 306 
RuleMaker 
inductive learning, 20-21 
knowledge acquisition system, 20 
RuleMaster 
C-code generation, 24 
expert systems, 18-29 
explanation of the l i n e of 
reasoning, 23 
external processes, 23-24 
h i s t o r y , 19 
knowledge extraction, 27-28 
p o r t a b i l i t y , 25 
programming s k i l l s required, 28-29 
two p r i n c i p a l components, 20,21,23 
S 
S c i e n t i f i c and engineering 
applications, expert systems, 5-6 
SECS—See Simulation and evaluation of 
chemical synthesis program 
Self-organized knowledge base for 
organic chemistry 
c a l c u l a t i o n of generalization 
v a l i d i t i e s , 217-218 
interactive sessions, 219,220-223f 
reaction generalizations 
based on s p e c i f i c 
observations, 212,214,215-216f 
reaction representation, 211-212,213f 
Sentential c a l c u l u s , d e s c r i p t i o n , 195 
S i m i l a r i t y of molecules 
a l i p h a t i c alcohols, 169,170,171f 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ix002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

394 
ARTIFICIAL INTELLIGENCE APPLICATIONS IN CHEMISTRY 
S i m i l a r i t y of molecules—Continued 
applications, 174 
calculation of s i m i l a r i t y index, 170 
complexity measurements, 173,174t 
distance measurements, 170,173t 
perception, 169 
q u a n t i f i c a t i o n , 170 
s i m i l a r i t y matrix, 170,171f 
subgraph enumeration, 170,172t,174 
S i m p l i f i c a t i o n , application of 
MACSYMA, 106-107 
Simulation and evaluation of chemical 
synthesis program (SECS), plan 
representation, 189-190 
Simulation of complex k i n e t i c s 
a d a p t a b i l i t y , 123 
a p p l i c a t i o n s , 119-120 
approaches to mathematical 
problems, 120-121 
data structures, 122 
equipment, 121 
input language, 121-122 
mathematical problem, 120 
program output, 122-123 
syntax a n a l y s i s , 122 
Software engineering, t r a d i t i o n a l , 
differences, expert systems, 7 
Software for s c i e n t i f i c computation, 
review, 111-112 
S p e c i f i c rules 
description, 154 
examples, 154,156f,157 
Spectrum-substructure relationships 
example for d i - n - o c t y l 
phthalate, 328-333 
procedure, 326,328 
SpinPro ultracentrifugation expert 
system 
backward-chaining inference 
engine, 306-307,308f 
calculation function, 309 
consultation function, 299 
d e s c r i p t i o n , 298 
design inputs report, 301-302 
development, 309-310 
information function, 307,308f 
lab plan report, 306 
lab rotors, 300-301 
major functions, 298-299 
methods, 204 
operation, 299-300 
optimal plan report, 301,303f,304 
optimization c r i t e r i a , 300 
plan comparison report, 301,303f,306 
protein sample separation, 304-305 
user interface, 299 
vs. expert, 310-311 
Steam power plant, downtime, 52 
Sufficiency, d e f i n i t i o n , 57-58 
Symbolic programs for group theory 
advantages, 176-177 
Symbolic programs for group 
theory—Continued 
basic functions, 178-180 
display decomposition of 
products, I83,l84t 
future plans, 185 
language, 177-178 
property l i s t s for c y c l i c 
group, 179t,l80 
record structure, l83t 
terminal display of character 
correlation tables, I 8 l , l 8 2 t 
terminal display of character 
table, 181t 
terminal display of classes, 
180,1811 
terminal display of the decomposition 
of product, I82t 
Symbolic reasoning 
application appropriate to expert 
systems, 8 
use i n problem s o l v i n g , 3 
Synthesis planning programs 
approaches to large search 
spaces, 189-190 
complexity of synethesis 
tree, 189,191f 
f i r s t - o r d e r predicate 
calculus, 190,192 
problems, 189 
procedure, 188-189 
strategic b a s i s , 189 
symmetry-based strategy for 
8-carotene, 
190,191f 
Synthesis with LMA (SYNLMA) 
advantage, 244-245 
d e f i n i t i o n , 244 
improvements, 256-257 
process, 245 
reaction rule database, 247-251 
synthetic design process, 253-256 
translation of reaction rules into 
clauses, 251,252f 
Synthetic design process using SYNLMA 
problem-solving tree for synthesis of 
darvon, 253,254-255f 
two-tree system, 253,256 
Τ 
Taylor-Laurent s e r i e s , application of 
MACSYMA, 108-109 
The i n t e l l i g e n t machine model (TIMM) 
decision and control 
structure, 368,369f 
sections, 367 
Time-ordered presentation of f i r e d 
r u l e s , proof ordering, 23 
TIMM—See The i n t e l l i g e n t machine model 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ix002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

INDEX 
TK Solver 
acid rain example, 115-116f, 117 
c a p a b i l i t i e s , 
113 
chemical applications, 
117-118 
computational approach, 112-113 
d e f i n i t i o n , 
112 
van der Waals gas 
example, 113,11^,115 
Tools, used in constructing 
expert 
systems d e s c r i p t i o n , 6 
Transformer fault diagnosis, expert 
system for, TOGA, 25-29 
Transformer o i l gas analysis (TOGA) 
expert system, 20-21 
expert system for 
transformer 
fault diagnosis, 25-29 
diagnostic approach, 25 
knowledge extraction, 
27-28 
knowledge refinement, 28 
operational use, 27 
reasons for building the system, 26 
v a l i d a t i o n , 26-27 
U 
Ultracentrifugation, 
problems, 297 
V 
V a l i d i t y , aid in precursor 
generation, 218 
Variance-covariance matrix of 
parameters, calculation by 
PENNZYME, 82 
W 
Wettable powders, d e s c r i p t i o n , 88 
Wiswesser line notation (WLN), 
background, 232 
 Publication Date: April 30, 1986 | doi: 10.1021/bk-1986-0306.ix002
In Artificial Intelligence Applications in Chemistry; Pierce, T., el al.; 
ACS Symposium Series; American Chemical Society: Washington, DC, 1986. 

