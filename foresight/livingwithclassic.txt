See discussions, stats, and author profiles for this publication at: https://www.researchgate.net/publication/2433292
Living with CLASSIC: When and How to Use a KL-ONE-Like Language
Article Â· November 2000
Source: CiteSeer
CITATIONS
278
READS
200
5 authors, including:
Some of the authors of this publication are also working on these related projects:
ReDrugS View project
TWC Linked Open Government Data View project
Deborah L Mcguinness
Rensselaer Polytechnic Institute
448 PUBLICATIONSÂ Â Â 31,250 CITATIONSÂ Â Â 
SEE PROFILE
All content following this page was uploaded by Deborah L Mcguinness on 17 December 2012.
The user has requested enhancement of the downloaded file.

Living
with
CLASSIC:
When
and
Ho
w
to
Use
a
KL-ONE-Lik
e
Language
Ronald
J.
Brac
hman
Deb
orah
L.
McGuinness
P
eter
F.
P
atel-Sc
hneider
Lori
Alp
erin
Resnic
k
A
T&T
Bell
Lab
oratories
Murra
y
Hill,
NJ
Alexander
Borgida
Rutgers
Univ
ersit
y
New
Brunswic
k,
NJ
App
ears
in
Principles
of
Semantic
Networks:
Explor
ations
in
the
R
epr
esentation
of
Know
le
dge,
edited
b
y
John
F.
So
w
a:
Morgan
Kaufmann
Publishers,
San
Mateo,
CA,
		,
pp.
0{.
Abstract
classic
is
a
recen
tly-dev
elop
ed
kno
wledge
represen
tation
system
that
follo
ws
the
paradigm
originally
set
out
in
the
kl-one
system:
it
concen
trates
on
the
denition
of
structured
concepts,
their
organization
in
to
taxonomies,
the
creation
and
manipu-
lation
of
individual
instances
of
suc
h
concepts,
and
the
k
ey
inferences
of
subsumption
and
classication.
Rather
than
simply
presen
ting
a
description
of
classic,
w
e
com-
plemen
t
a
brief
system
o
v
erview
with
a
discussion
of
ho
w
to
liv
e
within
the
connes
of
a
limited
ob
ject-orien
ted
deductiv
e
system.
By
analyzing
the
represen
tational
strengths
and
w
eaknesses
of
classic,
w
e
consider
the
circumstances
under
whic
h
it
is
most
appropriate
to
use
(or
not
use)
it.
W
e
elab
orate
a
kno
wledge-engineering
metho
dology
for
building
kl-one-st
yle
kno
wledge
bases,
with
emphasis
on
the
mo
d-
eling
c
hoices
that
arise
in
the
pro
cess
of
describing
a
domain.
W
e
also
address
some
of
the
k
ey
dicult
issues
encoun
tered
b
y
new
users,
including
primitiv
e
vs.
dened
concepts,
and
dierences
b
et
w
een
roles
and
concepts,
as
w
ell
as
represen
tational
\tric
ks-of-the-trade,"
whic
h
w
e
b
eliev
e
to
b
e
generally
useful.
Muc
h
of
the
discussion
should
b
e
relev
an
t
to
man
y
of
the
curren
t
systems
based
on
kl-one.

Con
ten
ts

In
tro
duction


The
CLASSIC
Kno
wledge
Represen
tation
System

.
Kno
wledge
Base
Comp
onen
ts
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

..
Named
Concepts
and
Conjunction
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

..
Role
Restrictions
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

..
Other
Restrictions
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

..
Rules
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Kno
wledge
Base
Inferences
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
	
.
Kno
wledge
Base
Op
erations
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.


When
is
CLASSIC
Appropriate?

.
When
to
Use
CLASSIC
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
When
Not
to
Use
CLASSIC
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.


Dicult
Ideas

.
Primitiv
e
and
Dened
Concepts
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Denitional
and
Inciden
tal
Prop
erties
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
0
.
Concepts
and
Individuals
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Rule
Application
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Unkno
wn
Individuals
in
CLASSIC
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Up
dates
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
No
Closed
W
orld
Assumption
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.


Building
CLASSIC
Kno
wledge
Bases

.
Basic
On
tological
Decisions|Individuals
and
Roles
.
.
.
.
.
.
.
.
.
.
.
.
.

..
Individuals
v
ersus
Concepts
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

..
Concepts
v
ersus
Roles
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
A
Simple
Kno
wledge
Enginering
Metho
dology
for
CLASSIC
.
.
.
.
.
.
.
.
	
.
A
Sample
Kno
wledge
Base
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.


T
ric
ks
of
the
T
rade

.
Negation
and
Complemen
ts
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Disjunction
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Defaults
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
More
P
o
w
erful
Rules
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
In
tegrit
y
Chec
king
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Restrictions
on
Roles
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
Dumm
y
Individuals
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
	

Conclusion

i


In
tro
duction
W
ork
on
the
kl-one
Kno
wledge
Represen
tation
System
[
Brac
hman
and
Sc
hmolze,
	
]
in
the
late
	0's
inspired
the
dev
elopmen
t
of
a
n
um
b
er
of
frame-based
represen
tation
systems.
These
systems
ha
v
e
all
em
braced
the
ideas
of
frames
as
structured
descriptions,
dieren
tiation
b
et
w
een
terminological
and
assertional
asp
ects
of
kno
wledge
represen
tation,
and
the
cen
tral
nature
of
subsumption
and
classication
inferences.
A
t
this
p
oin
t
there
are
at
least
a
dozen
systems
with
this
shared
philosoph
y
and
heritage,
with
widespread
in
ternational
distribution
and
m
uc
h
ongoing
dev
elopmen
t.
All
told,
there
is
a
large
and
gro
wing
p
opulation
of
users
of
\kl-one-lik
e
systems."
While
the
kl-one
family
has
garnered
its
share
of
tec
hnical
publications,
virtually
all
of
its
literature
has
describ
ed
tec
hnical
details
of
language
design,
inference
complexit
y
,
and
seman
tics.
One
k
ey
issue,
of
concern
to
the
gro
wing
comm
unit
y
of
users,
has
remained
relativ
ely
ignored:

ho
w
do
es
one
go
ab
out
dev
eloping
a
kno
wledge
base
with
one
of
these
languages?
It
is
one
thing
to
understand
the
syn
tax
and
seman
tics
of
a
formal
kno
wledge
represen
tation
language,
but
quite
another
to
comprehend
ho
w
to
tak
e
a
complex
domain
and
represen
t
it
appropriately
with
the
constructs
aorded
b
y
the
language.
In
this
c
hapter,
w
e
attempt
to
capture
some
of
the
lore
of
building
kno
wledge
bases
in
kl-one-lik
e
systems.
W
e
do
this
in
the
con
text
of
classic,
a
new
frame-based
descrip-
tion
system
inspired
b
y
kl-one
and
most
immediately
descended
from
kandor
[
P
atel-
Sc
hneider,
	
]
(and,
as
it
turns
out,
closely
related
to
ba
ck
[
P
eltason
et
al.,
	
]
).
classic
adopts
the
p
oin
t
of
view
that
a
kno
wledge
base
can
b
e
treated
as
a
deductiv
e
database,
in
this
case
one
with
an
ob
ject-cen
tered
a
v
or.
Because
of
its
in
tended
role
as
a
database-st
yle
rep
ository
,
classic
in
ten
tionally
limits
what
the
user
can
sa
y
.
As
a
b
enet,
all
inferences
can
b
e
done
in
a
timely
manner.
All
kl-one-lik
e
languages
are
limited
in
some
w
a
y
,
and
learning
to
liv
e
with
suc
h
limitations
is
one
of
the
k
eys
to
making
go
o
d
use
of
these
systems
in
kno
wledge-based
applications.
classic
has
a
n
um
b
er
of
no
v
el
features
that
distinguish
it
from
other
kl-one-lik
e
systems,
but
here
w
e
concen
trate
less
on
in
teresting
new
dev
elopmen
ts
in
the
language
and
fo
cus
instead
on
ho
w
to
mak
e
go
o
d
use
of
it.

T
o
that
end,
w
e
rst
giv
e
a
brief
in
tro
duction
to
the
formalities
of
classic.
W
e
then
address
the
k
ey
issue
of
when
a
system
lik
e
classic
is
appropriate
for
an
application
and
when
it
is
not.
While
w
e
can
not
giv
e
a
comprehensiv
e
form
ula
for
when
to
use
the
system,
w
e
ha
v
e
tried
to
giv
e
some
insigh
t
in
to
its
strengths
and
w
eaknesses,
and
th
us
whic
h
applications
ma
y
b
e
b
est
suited
to
its
abilities.
Since
classic
and
some
other
kl-one-lik
e
systems
emphasize
certain
issues
relating
to
terminology
and
classication
that
are
not
common
in
other
KR
systems,
there
tend
to
b
e
a
n
um
b
er
of
subtle
ideas
that
a
user
m
ust
grasp
b
efore
he
or
she
can
mak
e
b
est
use
of
suc
h
systems.
Therefore,
w
e
address
ourselv
es
to
sev
eral
imp
ortan
t
ideas
that
ma
y
b
e
dicult
for
the
no
vice
user
of
classic.
These
in
v
olv
e,
among
other
things,
the
dierences
b
et
w
een
primitiv
e
and
dened
concepts
and
some
dierences
in
w
orking
with
concepts
and
individuals.
W
e
also
address
the
p
erennial
issue
of
when
to
mak
e
something
a
concept
or
a
role.
Subsequen
tly
,
w
e
presen
t
some
guidelines
for
dev
eloping
classic
kno
wledge
bases,

An
exception
is
a
recen
t
pap
er
on
ho
w
to
build
medical
kno
wledge
bases
in
the
nikl
language
[
Sen
yk
et
al.,
		
]
.
Discussion
regarding
\on
tological
engineering"
in
cyc
[
Lenat
and
Guha,
		0
]
is
also
somewhat
relev
an
t
here.

The
in
terested
reader
is
referred
to
[
Borgida
et
al.,
		
]
for
details
on
classic
and
its
no
v
el
con
tri-
butions.


including
a
sk
etc
h
of
a
kno
wledge
engineering
metho
dology
that
has
w
ork
ed
for
us
in
recen
t
applications.
Finally
,
w
e
oer
some
\tric
ks
of
the
trade"
for
classic
users|some
tips
on
w
a
ys
to
represen
t
certain
information
that
are
not
ob
vious
from
the
syn
tax
of
the
language.
F
or
example,
judicious
use
of
\test"
concepts
and
classic
rules
can
pro
vide
a
facilit
y
for
in
tegrit
y
c
hec
king.
All
in
all,
w
e
try
to
giv
e
the
p
oten
tial
user
an
idea
not
so
m
uc
h
of
what
classic
is,
but
rather
ho
w
b
est
to
liv
e
with
it
and
mak
e
it
w
ork
w
ell
in
an
application.



The
CLASSIC
Kno
wledge
Represen
tation
System
classic

is
a
frame-based
kno
wledge
represen
tation
system,
i.e.,
its
primary
means
of
represen
tation
is
in
describing
ob
jects
as
opp
osed
to
asserting
arbitrary
logical
sen
tences.
It
allo
ws
the
user
to
mak
e
assertions
ab
out
ob
jects
(e.g.,
\Kalin-Cellars-Semill
on
is
a
wine,"
and
\Mary
drinks
Marietta-Old-Vines-Red")
and
to
describ
e
classes
of
ob
jects
(e.g.,
\a
wine
made
from
Cab
ernet-Sauvignon
and
Merlot
grap
es").
The
frames
in
classic|whic
h
w
e
call
\concepts"|are
in
terpreted
as
descriptions
rather
than
assertions.
Th
us,
if
w
e
dene
a
wine
as
a
drink
with
a
n
um
b
er
of
other
prop
erties,
then
b
eing
a
drink
is
a
necessary
part
of
b
eing
a
wine,
and
no
wine
can
violate
this
requiremen
t.
There
are
three
kinds
of
formal
ob
jects
in
classic:

c
onc
epts,
whic
h
are
descriptions
with
p
oten
tially
complex
structure,
formed
b
y
com-
p
osing
a
limited
set
of
description-forming
op
erators
(e.g.,
WHITE-FULL-BODIED-WINE

migh
t
represen
t
the
concept
of
a
WINE
whose
color
prop
ert
y
is
restricted
to
b
eing
White
and
whose
body
is
Full);
concepts
corresp
ond
to
one-place
predicates,
and
th
us
are
applied
to
one
individual
at
a
time;

r
oles,
whic
h
are
simple
formal
terms
for
prop
erties
(e.g.,
grape
migh
t
represen
t
the
grap
e(s)
a
wine
is
made
from);
roles
corresp
ond
to
t
w
o-place
predicates,
and
are
used
to
relate
t
w
o
individuals
at
a
time.
Roles
that
m
ust
b
e
lled
b
y
exactly
one
individual
are
called
attributes
(e.g.,
color
migh
t
b
e
an
attribute
represen
ting
the
color
of
a
wine);

individuals,
whic
h
are
simple
formal
constructs
in
tended
to
directly
represen
t
ob
jects
in
the
domain
of
in
terest;
individuals
are
giv
en
prop
erties
b
y
asserting
that
they
satisfy
concepts
(e.g.,
\Chardonnay
is
a
GRAPE")
and
that
their
roles
are
lled
b
y
other
individuals
(e.g.,
\Kalin-Cellars-Semillon's
color
is
White").
Concepts
and
individuals
in
classic
are
divided
in
to
t
w
o
realms:
CLASSIC
and
HOST.
CLASSIC
concepts
are
used
to
represen
t
classes
of
real-w
orld
individuals
of
a
domain,
while
HOST
concepts
are
used
to
describ
e
individuals
in
the
implemen
tation
language
(curren
tly
Common
LISP),
suc
h
as
n
um
b
ers
and
strings.
W
e
treat
HOST
concepts
and
individuals
dieren
tly
from
their
CLASSIC
coun
terparts
b
y
not
allo
wing
them
to
ha
v
e
roles
(e.g.,
w
e
cannot
attac
h
an
y
prop
erties
to
the
in
teger
).
Concepts
and
individuals
are
put
in
to
a
taxonom
y
,
or
hierarc
h
y
.
A
more
general
con-
cept
will
b
e
ab
o
v
e
a
more
sp
ecic
concept
in
the
taxonom
y
.
F
or
example,
if
there
w
ere
a
concept
for
\a
wine
made
from
Cab
ernet-Sauvignon
and
Merlot
grap
es,"
then
this
w
ould

classic
stands
for
\CLASSication
of
Individuals
and
Concepts."
It
has
a
complete
implemen
tation
in
Common
LISP.

Throughout
this
c
hapter,
w
e
use
the
follo
wing
orthographic
con
v
en
tions:
CONCEPT-NAME:
t
yp
ewriter
fon
t,
upp
er
case;
Individual-Name:
t
yp
ewriter
fon
t,
capitalized;
role-name:
t
yp
ewriter
fon
t,
lo
w
er
case;
REALM:
slan
ted,
upp
er
case;
function-name:
b
oldface
roman,
lo
w
er
case;
CLASSIC-OPERA
TOR:
b
oldface
roman,
small
capitals.


b
e
a
more
sp
ecic
concept
than
\a
wine
made
from
at
least
one
grap
e,"
b
ecause
the
rst
concept
describ
es
wines
made
from
at
least
t
w
o
grap
es.
In
the
taxonom
y
,
individu-
als
are
found
underneath
all
the
concepts
that
they
satisfy
.
F
or
example,
the
individual
Kalin-Cellars-Semillon,
whic
h
happ
ens
to
b
e
a
wine
whose
color
is
white,
w
ould
b
e
under
the
concept
WHITE-WINE
in
the
taxonom
y
.
T
o
main
tain
this
taxonom
y
classic
also
determines
the
deriv
able
prop
erties
of
all
individuals
and
concepts|inheriting
prop
erties
from
more-general
descriptions
as
w
ell
as
com
bining
prop
erties
as
appropriate.
There
are
n
umerous
deductiv
e
inferences
that
classic
pro
vides:

c
ompletion:
logical
consequences
of
assertions
ab
out
individuals
and
descriptions
of
concepts
are
computed;
there
are
a
n
um
b
er
of
\completion"
inferences
classic
can
mak
e:
{
inheritanc
e:
restrictions
that
apply
to
instances
of
a
concept
m
ust
also
apply
to
instances
of
sp
ecializations
of
that
concept;
in
a
sense,
then,
prop
erties
are
\inherited"
b
y
more
sp
ecic
concepts
from
those
that
they
sp
ecialize;
{
c
ombination:
restrictions
on
concepts
and
individuals
can
b
e
logically
com
bined
together
to
mak
e
narro
w
er
restrictions;
{
pr
op
agation:
when
an
assertion
is
made
ab
out
an
individual,
it
ma
y
hold
logical
consequences
for
some
other,
related
individuals;
classic
\propagates"
this
information
forw
ard
when
an
assertion
is
made;
{
c
ontr
adiction
dete
ction:
it
is
p
ossible
to
acciden
tally
assert
t
w
o
facts
ab
out
an
individual
that
are
logically
imp
ossible
to
conjoin
together;
classic
detects
this
kind
of
con
tradiction;
{
inc
oher
ent
c
onc
ept
dete
ction:
it
is
p
ossible
to
acciden
tally
giv
e
a
concept
some
restrictions
that
com
bine
to
mak
e
a
logical
imp
ossibilit
y
,
thereb
y
not
allo
wing
an
y
instances
of
the
concept
to
b
e
p
ossible;
classic
detects
this
kind
of
incon-
sisten
t
description;

classic
ation
and
subsumption:
{
c
onc
ept
classic
ation:
all
concepts
more
general
than
a
concept
and
all
concepts
more
sp
ecic
than
a
concept
are
found

;
{
individual
classic
ation:
all
concepts
that
an
individual
satises
are
determined;
{
subsumption:
questions
ab
out
whether
or
not
one
concept
is
more
general
than
another
concept
are
answ
ered
(this
is
imp
ortan
t
during
concept
classication);

rule
applic
ation:
simple
forw
ard-c
haining
rules
ha
v
e
concepts
as
an
teceden
ts
and
consequen
ts;
when
an
individual
is
determined
to
satisfy
the
an
teceden
t
of
a
rule,
it
is
asserted
to
satisfy
the
consequen
t
as
w
ell.
classic
has
a
uniform,
comp
ositional
language,
with
term-forming
op
erators
for
creat-
ing
descriptions
of
concepts
and
individuals.
The
grammar
for
this
language
can
b
e
found
in
Figure

(w
e
discuss
the
op
erators
b
elo
w).
Note
that
individuals
can
b
e
describ
ed
with
the
same
expressiv
eness
as
concepts.
Information
can
b
e
added
to
existing
individuals,
and
information
can
also
b
e
retracted
from
them,
with
the
appropriate
consequences.

Note
that
ob
ject-orien
ted
programming
languages
usually
ha
v
e
inheritance,
but
not
classication.


<concept-expr>
::=
THING
|
CLASSIC-THING
|
HOST-THING
|
<concept-name>
|
(AND
<concept-expr>
+
)
|
(ALL
<role-expr><concept-expr>)
|
(A
T-LEAST
<p
ositiv
e-in
teger><role-expr>)
|
(A
T-MOST
<non-negativ
e-in
teger><role-expr>)
|
(FILLS
<role-expr>
<individual-name>
+
)
|
(SAME-AS
<attribute-path><attribute-path>)
|
(TEST-C
<fn><arg>

)
|
(TEST-H
<fn><arg>

)
|
(ONE-OF
<individual-name>
+
)
|
(PRIMITIVE
<concept-expr>
<index>)
|
(DISJOINT-PRIMITIVE
<concept-expr>
<group-index>
<index>)
<individual-expr>
::=
<concept-expr>
<concept-name>
::=
<sym
b
ol>
<individual-name>
::=
<sym
b
ol>
|
<cl-host-expr>
<role-expr>
::=
<mrole-expr>
|
<attribute-expr>
<mrole-expr>
::=
<sym
b
ol>
<attribute-path>
::=
(<attribute-expr>
+
)
<attribute-expr>
::=
<sym
b
ol>
<cl-host-expr>
::=
<string>
|
<n
um
b
er>
|
'<CommonLISP-expr>
|
(quote
<CommonLISP-expr>)
<fn>
::=
a
function
in
the
host
language
(Common
LISP)
with
three-v
alued
logical
return
t
yp
e
<arg>
::=
an
expression
passed
to
a
test
function
<index>
::=
<n
um
b
er>
|
<sym
b
ol>
<group-index>
::=
<n
um
b
er>
|
<sym
b
ol>
Figure
:
The
classic
Grammar.


W
e
should
add
that
w
e
ha
v
e
tak
en
the
approac
h
in
classic
that
a
kno
wledge
repre-
sen
tation
system
should
b
e
small
and
simple
(i.e.,
limited
in
expressiv
e
p
o
w
er),
so
that
its
resp
onse
time
is
quic
k,
and
thorough
inference
can
b
e
p
eformed.
Th
us,
a
user
cannot
exp
ect
to
program
arbitrary
computations
in
classic.
One
should
en
vision
classic
as
b
e-
ing
one
comp
onen
t
within
a
larger
application
system,
where
it
w
ould
b
e
used
to
represen
t
the
domain
kno
wledge
of
the
system
and
calculate
a
limited
set
of
domain-indep
enden
t
inferences
from
that
kno
wledge.
Other
mo
dules
in
the
system
w
ould
b
e
resp
onsible
for
the
more
complicated
inferences
relating
to
the
particular
domain
and
task.
.
Kno
wledge
Base
Comp
onen
ts
The
classic
op
erators
are
used
to
form
conjunctions,
role
restrictions,
test
restrictions,
en
umerated
concepts,
and
primitiv
e
and
disjoin
t
primitiv
e
concepts.
The
t
ypical
w
a
y
of
describing
a
new
concept
or
individual
in
classic
is
to
giv
e
a
list
of
more
general
concepts
(or
in
the
case
of
an
individual,
a
list
of
concepts
that
are
satised
b
y
the
individual),
and
then
a
list
of
restrictions
that
sp
ecify
the
w
a
ys
in
whic
h
this
new
concept
or
individual
diers
from
these
more
general
concepts.
A
t
the
end
of
this
subsection,
w
e
also
discuss
the
rule
comp
onen
t
of
classic.
..
Named
Concepts
and
Conjunction
The
simplest
t
yp
e
of
concept
expression
is
a
single
sym
b
ol
designating
a
concept.
classic
starts
o
with
a
n
um
b
er
of
built-in
named
concepts,
including
THING,
CLASSIC-THING,
HOST-THING,
and
concepts
for
eac
h
of
the
Common
LISP
t
yp
es.

These
names
can
b
e
used
in
other
concept
expressions
to
build
up
complex
denitions.
While
the
user
can
create
a
new
name
and
mak
e
it
directly
synon
ymous
with
an
existing
one,
the
simplest
useful
means
of
building
a
comp
ound
concept
expression
is
the
AND
op
erator,
whic
h
creates
a
new
concept
that
is
the
conjunction
of
the
concepts
giv
en
as
argumen
ts.
F
or
example,
if
WHITE-WINE
and
FULL-BODIED-WINE
are
t
w
o
concepts
that
ha
v
e
b
een
previously
dened,
w
e
can
dene
their
conjunction
as
(AND
WHITE-WINE
FULL-BODIED-WINE)
and
call
it
WHITE-FULL-BODIED-WINE.
This
name
can
then
b
e
used
in
later
concept
deni-
tions.
Note
that
the
AND
op
erator
can
b
e
applied
to
any
concept
expressions
(as
long
as
an
y
names
are
dened
b
efore
they
are
used),
not
just
simple
named
ones
(see
Section
..
for
examples).
..
Role
Restrictions
The
v
e
op
erators
ALL,
A
T-LEAST,
A
T-MOST,
FILLS,
and
SAME-AS
form
expres-
sions
kno
wn
as
r
ole
r
estrictions,
and
can
b
e
used
only
in
CLASSIC
concepts
and
individuals,
not
in
their
HOST
coun
terparts.
As
sp
ecied
in
the
grammar,
a
role
restriction
is
itself
a
w
ell-formed
concept.

T
ec
hnically
,
THING,
CLASSIC-THING,
and
HOST-THING
are
primitiv
e
concepts,
with
the
latter
t
w
o
b
eing
disjoin
t
(see
Section
..).
The
concepts
for
the
Common
LISP
t
yp
es
are
formed
using
the
TEST-H
construct
(see
also
Section
..),
so
that
all
instances
of
them
can
b
e
recognized
automatically
.


A
univ
ersal
v
alue
restriction,
or
ALL
restriction,
sp
ecies
that
all
the
llers
of
a
partic-
ular
role
m
ust
b
e
individuals
describ
ed
b
y
a
particular
concept
expression.
F
or
example,
a
CALIFORNIA-WINE
migh
t
b
e
dened
as
a
wine
whose
region
is
a
California
region,
where
the
California
regions
are
Napa
V
alley
,
Sonoma
V
alley
,
etc.
The
region
role
restriction
w
ould
b
e
written
(ALL
region
CALIFORNIA-REGION).
A
T-LEAST
and
A
T-MOST
restrictions
restrict
the
minim
um
and
maxim
um
n
um
b
er
of
llers
allo
w
ed
for
a
giv
en
role
on
a
concept
or
individual.
F
or
example,
part
of
the
denition
of
a
wine
migh
t
b
e
that
it
is
made
from
at
least
one
kind
of
grap
e,
whic
h
w
ould
b
e
written
(A
T-LEAST

grape),
where
grape
is
a
role.
The
FILLS
op
erator
sp
ecies
that
a
role
is
lled
b
y
some
sp
ecied
individuals
(al-
though
the
role
ma
y
ha
v
e
additional
llers).
F
or
example,
w
e
migh
t
dene
the
concept
CHARDONNAY-WINE
as
a
wine
whose
grap
es
include
c
hardonna
y;
the
restriction
w
ould
b
e
written
as
(FILLS
grape
Chardonnay).
A
SAME-AS
restriction
requires
that
the
individual
found
b
y
follo
wing
one
attribute-
path
is
the
same
individual
as
that
found
b
y
follo
wing
a
second
attribute-path.
F
or
example,
supp
ose
that
there
is
a
fo
o
d
and
a
drink
asso
ciated
with
eac
h
course
at
a
meal.
Then
the
concept
REGIONAL-COURSE
migh
t
b
e
dened
as
a
course
where
the
fo
o
d's
region
is
the
same
as
the
drink's
region.
This
w
ould
b
e
written
as
(AND
MEAL-COURSE
(SAME-AS
(food
region)
(drink
region))).
..
Other
Restrictions
T
ests:
There
are
t
w
o
op
erators
that
allo
w
pro
cedures
to
b
e
used
in
sp
ecifying
concepts:
one
is
used
in
CLASSIC
concepts
(TEST-C),
and
one
is
used
in
HOST
concepts
(TEST-H).

A
test
restriction
requires
that
an
individual
m
ust
pass
the
test
to
satisfy
the
restriction.
F
or
example,
the
concept
EVEN-INTEGER
migh
t
b
e
dened
as
the
conjunction
of
the
built-in
concept
INTEGER
and
a
test
to
see
if
the
in
teger
is
an
ev
en
n
um
b
er:
(AND
INTEGER
(TEST-H
ev
enp))
(assuming
ev
enp
is
a
function
in
the
host
language).
The
individual
curren
tly
b
eing
tested
is
assumed
to
b
e
the
rst
argumen
t
to
the
function,
and
other
argumen
ts
can
b
e
sp
ecied
as
w
ell.
Since
CLASSIC
individuals
ma
y
c
hange,
the
test
functions
return
one
of
three
v
alues
when
applied
to
a
CLASSIC
individual:

NIL:
the
individual
is
inconsisten
t
with
this
restriction;

There
are
t
w
o
dieren
t
op
erators
for
tests
in
order
to
allo
w
classic
to
recognize
the
realm
of
an
y
concept
directly
from
its
expression.
While
it
can
do
this
with
all
other
constructs,
since
tests
are
opaque,
classic
can
not
tell
just
b
y
lo
oking
whether
an
unmark
ed
test
concept
is
a
CLASSIC
concept
or
a
HOST
concept.
Th
us
w
e
ha
v
e
t
w
o
op
erators,
whic
h
directly
indicate
the
realm.



?:
unkno
wn,
i.e.,
the
individual
is
curren
tly
consisten
t
with
the
restriction,
but
if
information
is
added
to
the
individual,
the
individual
ma
y
b
ecome
either
inconsisten
t
with
or
pro
v
ably
describ
ed
b
y
the
restriction.
In
other
w
ords,
the
individual
neither
pro
v
ably
satises
the
restriction
nor
pro
v
ably
falsies
it;

T:
the
individual
denitely
passes
the
test,
i.e.,
it
pro
v
ably
satises
it.
T
est
functions
m
ust
b
e
monotonic;
that
is,
it
should
not
b
e
p
ossible
for
the
same
test
function
to
return
T
(or
NIL)
for
an
individual
at
one
time
and
NIL
(T)
at
a
later
time,
unless
an
explicit
retraction
(see
Section
.)
has
b
een
done
in
b
et
w
een.
En
umerated
concepts:
A
ONE-OF
concept
(or
en
umerated
concept)
en
umerates
a
set
of
individuals,
whic
h
are
the
only
instances
of
the
concept.
F
or
example,
a
wine
whose
b
o
dy
could
b
e
either
full
or
medium
w
ould
ha
v
e
the
restriction
(ALL
body
(ONE-OF
Full
Medium)).
Primitiv
e
concepts:
Normally
,
when
one
giv
es
a
classic
denition
for
a
concept,
it
is
b
oth
necessary
and
sucien
t.
F
or
example,
if
w
e
dene
a
FULL-BODIED-WHITE-WINE
as
a
FULL-BODIED-WINE
and
a
WHITE-WINE,
w
e
exp
ect
the
relationship
to
b
e
an
\if
and
only
if
"
relationship.
The
PRIMITIVE
and
DISJOINT-PRIMITIVE
op
erators
allo
w
a
user
to
form
concepts
that
cannot
b
e
fully
sp
ecied
b
y
necessary
and
sucien
t
conditions.
These
op
erators
can
only
dene
concepts
in
the
CLASSIC
realm.
If
w
e
w
an
t
to
dene
a
wine
as
a
drink
with
sp
ecial
prop
erties
w
e
do
not
w
an
t
to
or
cannot
fully
sp
ecify
,
w
e
w
ould
dene
the
concept
WINE
as
(PRIMITIVE
POTABLE-LIQUID
*wine*),
with
*wine*
b
eing
an
arbitrary
sym
b
ol
(the
index)
used
simply
to
distinguish
this
concept
from
others.

WINE
is
then
kno
wn
to
b
e
dieren
t
from
an
y
other
PRIMITIVE
concepts
dened
under
POTABLE-LIQUID
(i.e.,
those
with
dieren
t
indices|see
the
discussion
on
indices
in
Sec-
tion
.).
A
DISJOINT-PRIMITIVE
concept
is
just
lik
e
a
PRIMITIVE
concept,
except
that
an
y
concepts
within
the
same
\disjoin
t
grouping"
are
kno
wn
to
b
e
disjoin
t
from
eac
h
other,
and
th
us,
no
individual
can
b
e
describ
ed
b
y
t
w
o
DISJOINT-PRIMITIVEs
in
the
same
disjoin
t
grouping.
F
or
example,
if
w
e
kno
w
that
sh
and
shellsh
are
b
oth
t
yp
es
of
seafo
o
d,
and
nothing
can
b
e
b
oth
a
sh
and
a
shellsh,
then
w
e
could
dene
sh
and
shellsh
as
disjoin
t
primitiv
es
under
seafo
o
d
within
the
same
disjoin
t
grouping.
That
is,
w
e
w
ould
dene
the
concept
FISH
as
(DISJOINT-PRIMITIVE
SEAFOOD
*type*
*fish*),
and
w
e
w
ould
dene
the
concept
SHELLFISH
as
(DISJOINT-PRIMITIVE
SEAFOOD
*type*
*shellfish*),
where
*type*
is
an
arbitrary
sym
b
ol
designating
the
grouping.
..
Rules
Aside
from
the
language
constructs
used
in
forming
concept
and
individual
expressions,
classic
allo
ws
for
forw
ard-c
haining
rules.
A
classic
rule
consists
of
an
an
teceden
t
and
a
consequen
t,
b
oth
of
whic
h
are
concepts,
where
the
an
teceden
t
m
ust
b
e
named.
As
so
on
as
an
individual
is
kno
wn
to
satisfy
the
an
teceden
t
concept,
the
rule
is
\triggered,"
and
the
individual
is
also
kno
wn
to
satisfy
the
consequen
t
concept.
F
or
example,
if
there
is
a
rule
that
sa
ys
that
the
b
est
wine
for
a
dessert
course
is
a
full-b
o
died,
sw
eet
wine,
then
if
Mary
is
eating
a
dessert
course,
the
rule
is
red
and
classic
will
deduce
that
her
course

An
y
sym
b
ol
at
all
can
b
e
used
as
an
index.
W
e
use
sym
b
ols
that
mirror
the
names
of
the
concepts
just
to
mak
e
it
easier
to
k
eep
them
straigh
t.
There
is
absolutely
nothing
sp
ecial
ab
out
the
sym
b
ol
\*wine*."


is
one
whose
wine
is
full-b
o
died
and
sw
eet.
Consequen
ts
of
rules
are
treated
as
deriv
ed
information|if
the
an
teceden
t
of
a
rule
is
retracted
from
an
individual,
then
the
consequen
t
is
also
retracted
(see
Section
.).
(This
diers
from
the
treatmen
t
of
rules
in
t
ypical
rule-
based
systems,
suc
h
as
OPS,
where
the
consequen
ts
of
retracted
an
teceden
ts
remain
in
the
kno
wledge
base.)
.
Kno
wledge
Base
Inferences
classic
pro
vides
a
n
um
b
er
of
dieren
t
deductiv
e
inferences.
The
three
main
t
yp
es
are
completion,
classication/subsumption,
and
rule
application.
Completion
in
v
olv
es
com-
puting
the
implicit
logical
consequences
of
assertions
ab
out
individuals
and
descriptions
of
concepts.
F
or
example,
when
a
new
concept
is
dened
in
terms
of
existing
concepts,
inheritanc
e
is
used
to
determine
all
of
the
prop
erties
of
the
new
concept|the
new
concept
\inherits"
all
of
the
prop
erties
from
the
existing
concepts.
Th
us,
if
WINE
is
dened
to
ha
v
e
exactly
one
b
o
dy
,
a
v
or,
and
color,
and
WHITE-WINE
is
dened
as
a
WINE
whose
color
is
white,
then
WHITE-WINE
will
inherit
the
prop
erties
that
it
has
exactly
one
b
o
dy
,
a
v
or,
and
color,
in
addition
to
ha
ving
the
color
white.
When
a
new
individual
is
describ
ed
in
terms
of
existing
concepts,
it
inherits
the
prop
erties
of
those
concepts.
F
or
example,
if
Chateau-d-Yquem-Sauterne
is
an
individual
whic
h
is,
among
other
things,
a
WHITE-WINE,
then
it
inherits
from
WHITE-WINE
the
prop
ert
y
that
its
color
is
white.
It
also
inherits
from
WINE
the
prop
erties
that
it
has
exactly
one
b
o
dy
,
a
v
or,
and
color.
When
a
new
concept
or
individual
is
created,
all
of
its
prop
erties
are
c
ombine
d,
whic
h
can
lead
to
a
n
um
b
er
of
conclusions.
Supp
ose
that
the
concept
FULL-OR-MEDIUM-BODIED-WINE
is
dened
as
a
wine
whose
b
o
dy
is
either
full
or
medium:
(AND
WINE
(ALL
body
(ONE-OF
Full
Medium))),
and
the
concept
MEDIUM-OR-LIGHT-BODIED-WIN
E
is
dened
as
a
wine
whose
b
o
dy
is
either
medium
or
ligh
t:
(AND
WINE
(ALL
body
(ONE-OF
Medium
Light))).
Supp
ose
that
w
e
dene
the
concept
SPECIAL-BODIED-WINE
as
b
oth
a
FULL-OR-MEDIUM-
BODIED-WINE
and
a
MEDIUM-OR-LIGHT-BODIED-W
INE:
(AND
FULL-OR-MEDIUM-BODIED-WI
NE
MEDIUM-OR-LIGHT-BODIED-W
INE
).
classic
com
bines
the
prop
erties
inherited
on
the
body
role
b
y
in
tersecting
the
t
w
o
ONE-
OF
restrictions,
and
disco
v
ers
that
the
body
for
SPECIAL-BODIED-WINE
m
ust
b
e
Medium.
As
another
example,
supp
ose
that
Mary
w
an
ts
to
serv
e
a
regional
course
(the
fo
o
d
and
drink
are
from
the
same
region).
She
is
not
v
ery
kno
wledgeable
ab
out
regions
of
wines,
but
she
w
ould
lik
e
to
serv
e
a
Chian
ti
wine.
She
kno
ws
it
is
from
either
F
rance
or
Italy
,
so
she
decides
to
serv
e
either
b
eef
b
ourgogne
or
lasagna|whic
hev
er
one
is
consisten
t.
She
attempts
to
create
an
individual
course
with
the
follo
wing
denition
(note:
CHIANTI
is
considered
a
general
class
here,
Beef-Bourgogne
an
individual
fo
o
d):
(AND
REGIONAL-COURSE
(ALL
drink
CHIANTI)
(FILLS
food
Beef-Bourgogne)).
	

classic
will
not
accept
this
course
description,
b
ecause
the
fo
o
d
and
drink
are
from
dif-
feren
t
regions.
If
Mary
w
ere
instead
to
create
the
course
description
with
the
food
b
eing
Lasagna,
the
assertion
w
ould
b
e
successful.
When
com
bining
prop
erties
of
an
individual,
classic
ma
y
disco
v
er
that
a
role
is
close
d,
i.e.,
it
can
ha
v
e
no
more
llers.
F
or
example,
supp
ose
a
wine
is
dened
to
ha
v
e
exactly
one
mak
er,
whic
h
is
a
winery
.
If
the
individual
Kalin-Cellars-Semillon
is
kno
wn
to
b
e
a
wine
with
mak
er
Kalin-Cellars,
p
erhaps
represen
ted
as
(AND
WINE
(FILLS
maker
Kalin-Cellars)),
then
the
maker
role
is
implicitly
closed
b
y
classic
on
Kalin-Cellars-Semillon,
since
it
can
ha
v
e
no
more
llers.
Th
us,
if
the
user
tries
to
add
a
ller
to
the
maker
role,
this
will
cause
an
error.
The
user
ma
y
also
explicitly
close
a
role
(see
Section
.).
When
a
new
individual
is
created,
inheritance
and
com
bination
of
prop
erties
ma
y
also
cause
certain
information
to
b
e
pr
op
agate
d
to
another
individual.
F
or
example,
supp
ose
w
e
kno
w
that
Sue
drinks
Chateau
d'Yquem
Sauterne,
and
w
e
tell
classic
that
Sue
drinks
only
dry
wines.
The
information
is
then
propagated
that
the
individual
Chateau-d-Yquem-
Sauterne
m
ust
b
e
a
dry
wine.
Contr
adiction
dete
ction
will
tak
e
place
during
propagation
of
prop
erties.
In
this
example,
if
Chateau
d'Yquem
Sauterne
w
ere
already
kno
wn
to
b
e
a
sw
eet
wine,
a
con
tradiction
w
ould
b
e
detected.
When
a
con
tradiction
is
found
on
an
individual,
the
assertion
that
caused
the
con
tradiction
is
retracted
(i.e.,
that
Sue
drinks
only
dry
wines),
and
all
the
inferences
done
up
to
the
p
oin
t
of
disco
v
ering
the
con
tradiction
are
undone
(Chateau-d-Yquem-Sauterne
is
rev
erted
bac
k
to
b
eing
a
sw
eet
wine).
When
a
new
concept
is
dened,
and
all
of
its
prop
erties
are
inherited
and
com
bined,
classic
determines
whether
the
concept
is
inc
oher
ent
(i.e.,
if
the
concept
can
ha
v
e
no
instances
b
ecause
it
con
tains
inconsisten
t
information).
F
or
example,
if
the
concept
FULL-
BODIED-WINE
is
a
wine
whose
b
o
dy
m
ust
b
e
full,
MEDIUM-BODIED-WINE
is
a
wine
whose
b
o
dy
m
ust
b
e
medium,
and
a
wine
m
ust
ha
v
e
exactly
one
b
o
dy
,
then
(AND
FULL-BODIED-WINE
MEDIUM-BODIED-WINE)
will
b
e
detected
to
b
e
an
incoheren
t
concept,
since
a
wine
cannot
ha
v
e
a
b
o
dy
of
b
oth
full
and
medium
at
the
same
time|it
cannot
ha
v
e
more
than
one
b
o
dy
.
When
a
new
concept
is
dened,
classic
ation
is
used
to
nd
all
concepts
more
gen-
eral
than
the
new
concept
and
all
concepts
more
sp
ecic
than
it.
F
or
example,
sup-
p
ose
that
the
concept
FULL-BODIED-WHITE-WINE
is
dened
as
a
WINE
whose
body
is
Full
and
whose
color
is
White.
When
it
is
classied,
the
concepts
FULL-BODIED-WINE
and
WHITE-WINE
w
ould
b
e
found
as
paren
t
(more
general)
concepts
(assuming
these
concepts
ha
v
e
b
een
previously
dened),
while
the
concept
FULL-BODIED-STRONG-WHITE-
WIN
E
w
ould
b
e
found
as
a
c
hild
(more
sp
ecic)
concept
(assuming
it
has
b
een
previously
dened).
Dur-
ing
classication,
subsumption
is
used
to
determine
whether
one
concept
is
more
general
than
another
concept.
In
this
example,
FULL-BODIED-WINE
w
ould
b
e
found
to
subsume
FULL-BODIED-WHITE-WINE,
since
it
is
imp
ossible
to
ha
v
e
an
instance
of
the
latter
that
is
not
an
instance
of
the
former.
Rules
are
ignored
when
determining
whether
one
concept
subsumes
another.
When
a
new
individual
is
created,
classication
is
also
in
v
ok
ed,
to
nd
all
concepts
that
are
satised
b
y
the
individual.
F
or
example,
supp
ose
that
the
individual
Forman-
Chardonnay
is
kno
wn
to
b
e
a
WINE
whose
body
is
Full,
whose
color
is
White,
and
whose
0

flavor
is
Moderate.
When
it
is
classied,
it
w
ould
satisfy
the
concept
FULL-BODIED-
WHITE-WINE,
but
not
the
concept
FULL-BODIED-STRONG-WHITE
-WIN
E.
When
a
new
concept
with
a
test
restriction
is
dened,
and
a
subsumption
test
is
done
b
et
w
een
that
concept
and
another
existing
concept,
also
con
taining
a
test
restriction,
the
Common
LISP
functions
are
not
analyzed
to
see
if
one
is
more
general
than
another.
Ho
w
ev
er,
when
a
new
individual
is
created,
and
a
c
hec
k
is
done
to
see
if
that
individual
satises
an
existing
concept
con-
taining
a
test
restriction,
the
test
function
is
run
on
the
individual
to
see
if
the
individual
satises
the
restriction.
As
discussed
in
Section
..,
a
classic
rule
consists
of
an
an
teceden
t
and
a
consequen
t,
b
oth
of
whic
h
are
concepts.
When
an
individual
is
kno
wn
to
satisfy
the
an
teceden
t
concept
of
a
rule,
the
rule
is
applie
d,
or
\triggered,"
and
the
individual
is
also
kno
wn
to
satisfy
the
consequen
t
concept.
In
the
example
from
Section
..,
when
Mary
is
kno
wn
to
b
e
eating
a
dessert
course,
the
rule
is
red
that
asserts
that
the
wine
she
drinks
with
the
course
is
a
full-b
o
died,
sw
eet
wine.
If
she
is
kno
wn
to
b
e
drinking
a
dry
wine,
then
a
con
tradiction
is
signaled,
b
ecause
the
information
implied
ab
out
the
wine
she
is
drinking
is
inconsisten
t.
.
Kno
wledge
Base
Op
erations
There
are
a
n
um
b
er
of
op
erations
a
user
can
p
erform
on
a
kno
wledge
base
in
classic.
The
user
can
query
the
kno
wledge
base
for
information,
b
y
asking
the
follo
wing
t
yp
es
of
questions:

\What
are
all
the
instances
of
this
concept?"
(\Whic
h
individuals
satisfy
this
de-
scription?")

\Whic
h
concepts
do
es
this
individual
satisfy?"

\Whic
h
individuals
ll
role
r
on
individual
I?"

\Ho
w
is
role
r
restricted
on
concept
C
(or
on
individual
I)?"
A
user
can
dene
a
new
concept,
role,
or
individual.
This
ma
y
cause
an
y
of
a
n
um
b
er
of
inferences
to
b
e
p
erformed
(see
Section
.).
A
user
can
also
add
information
to
a
kno
wn
individual.
F
or
example,
if
the
user
originally
asserts
that
Mary
has
exactly
one
child,
she
migh
t
later
assert
that
Mary's
c
hild
is
Sue.
Concept
denitions
cannot
b
e
mo
died,
although
a
user
can
add
new
rules
with
an
y
concept
as
an
an
teceden
t
at
an
y
time.
A
user
can
assert
ab
out
an
individual
that
a
sp
ecic
role
is
close
d,
i.e.,
its
curren
t
llers
are
the
only
llers
(unless
a
role
is
closed,
explicitly
with
a
function
call,
or
implicitly
when
the
n
um
b
er
of
llers
reac
hes
the
A
T-MOST
restriction,
it
ma
y
ha
v
e
more
llers,
since
there
is
no
closed-w
orld
assumption
in
classic|see
Section
.).
There
is
no
CLOSE
op
erator
in
the
expression
language.
Instead,
there
is
a
separate
function
used
to
close
a
role
on
an
individual.
	
Information
that
has
previously
b
een
asserted
ab
out
an
individual
can
b
e
r
etr
acte
d
in
classic.
F
or
example,
supp
ose
Mary
w
as
originally
dened
to
b
e
a
PERSON,
and
then
she
is
asserted
to
b
e
a
NON-WINE-DRINKER
(a
p
erson
who
drinks
no
wines).
If
some-
one
then
sees
Mary
drinking
wine,
he
or
she
could
retract
the
information
that
Mary
is
a
	
This
is
b
ecause
a
CLOSE
op
erator
w
ould
pro
vide
a
dieren
t
kind
of
kno
wledge
(auto
epistemic)
from
all
other
op
erators.


NON-WINE-DRINKER.
In
that
case,
Mary
w
ould
rev
ert
bac
k
to
b
eing
simply
a
PERSON,
and
an
y
inferences
that
ma
y
ha
v
e
b
een
made
due
to
her
b
eing
a
NON-WINE-DRINKER
are
un-
done.
The
user
can
also
retract
rules
that
ha
v
e
b
een
added
to
the
kno
wledge
base.
No
other
information
ab
out
concepts
can
b
e
c
hanged.



When
is
CLASSIC
Appropriate?
As
w
e
ha
v
e
seen,
classic
includes
b
oth
a
language
for
represen
ting
certain
kinds
of
kno
wl-
edge,
and
a
system
that
supp
orts
the
manipulation
of
descriptions
in
this
language.
As
suc
h,
it
is
part
of
a
large
family
of
computer
systems
v
ariously
kno
wn
as
data
or
kno
wledge
base
managemen
t
systems.
As
with
all
suc
h
systems,
classic
has
certain
c
haracteristics
that
mak
e
it
appropriate
for
some
applications
and
inappropriate
for
others.
These
k
ey
c
haracteristics
include
the
follo
wing:

obje
ct-c
enter
e
d:
all
individuals
ha
v
e
a
unique,
in
trinsic
and
imm
utable
iden
tit
y
ob-
tained
at
time
of
creation;
the
user
cannot
form
arbitrary
logical
sen
tences;

terminolo
gic
al:
the
system
supp
orts
the
denition
of
complex
\noun
phrases"
in
the
form
of
concepts
(and
the
disco
v
ery
of
their
in
ter-relationships);
these
concepts
can
then
b
e
used
to
mak
e
assertions
ab
out
ob
jects.
classic
is
therefore
go
o
d
at
describing
complex
ob
jects,
but
not
particularly
suitable
for
making
complex
assertions,
suc
h
as
ones
in
v
olving
m
ultiple
quan
tiers
or
disjunction;

de
ductive:
classic
is
not
just
a
passiv
e
rep
ository
for
unconnected
assertions,
lik
e
a
relational
database;
the
system
activ
ely
searc
hes
to
nd
an
en
tire
class
of
prop
ositions
en
tailed
b
y
the
facts
it
has
b
een
explicitly
told;

incr
emental:
partial,
incomplete
descriptions
of
individuals
are
acceptable;

supp
orts
know
le
dge
r
etr
action:
the
system
trac
ks
dep
endencies
b
et
w
een
facts
and
allo
ws
certain
facts
to
b
e
retracted;

supp
orts
simple
rules:
these
are
applied
in
a
simple
forw
ard
c
haining
manner,
when-
ev
er
appropriate
individuals
are
found;

supp
orts
pr
o
c
e
dur
al
tests:
complex
concepts,
not
otherwise
expressible
in
classic,
can
b
e
describ
ed
pro
cedurally
in
the
host
language,
so
that
individuals
satisfying
them
can
b
e
recognized;

wel
l-inte
gr
ate
d
with
the
host
language:
classic
allo
ws
v
alues
from
the
host
program-
ming
language
to
b
e
managed
as
instances
of
their
o
wn
classes
without
requiring
them
to
b
e
\enco
ded"
as
classic
individuals.
These
c
haracteristics
allo
w
classic
to
pro
vide
a
great
deal
of
p
o
w
er
for
certain
t
yp
es
of
applications,
but
also
limit
its
utilit
y
in
some
situations.
.
When
to
Use
CLASSIC
The
most
notable
feature
of
classic's
family
of
languages
is
the
\self-organization"
of
the
concepts
dened:
b
ecause
concepts
ha
v
e
clear
denitions,
it
is
p
ossible
to
ha
v
e
the
system
organize
them
in
to
the
subsumption
hierarc
h
y
,
rather
than
ha
v
e
the
user
sp
ecify
their
exact
place.
This
is
imp
ortan
t
b
ecause
standard
logic
and
pro
duction
systems,
for
example,
do
not
address
the
kno
wledge
engineering
issue
of
organizing
large
collections
of
kno
wledge.
Th
us,
classic,
and
more
generally
,
its
\sibling"
languages
can
b
e
exploited
in
an
y
domain
where
it
is
useful
to
organize
a
large
set
of
ob
jects
that
can
naturally
b
e
represen
ted
in


terms
of
\features"
or
\roles."
F
or
example,
it
has
b
een
argued
that
this
kind
of
automatic
classication
is
a
useful
w
a
y
of
organizing
a
large
set
of
rules
in
an
exp
ert
system
[
Y
en
et
al.,
		
]
:
b
y
classifying
the
left-hand
sides,
the
system
automatically
calculates
a
w
ell-founded
sp
ecicit
y
ordering
o
v
er
the
rules
(the
generalization
hierarc
h
y);
this
can
b
e
used
directly
in
conict
resolution.
Another
example
of
suc
h
a
family
of
applications
w
ould
b
e
information
retriev
al,
where
ev
ery
ob
ject
0
has
a
complex
description,
and
a
query
ma
y
b
e
phrased
as
a
description
of
ob
jects
ha
ving
a
certain
structure
(e.g.,
\nd
all
meals
with
at
least
t
w
o
courses,
eac
h
of
whic
h
has
a
sw
eet
wine
as
its
drink").
In
suc
h
cases,
the
descriptions
can
b
e
classied
with
resp
ect
to
eac
h
other
so
that
similar
ob
jects
are
group
ed
together.
This
can
pro
vide
a
m
uc
h
more
sophisticated
indexing
sc
heme
than
simple
k
eyw
ord
sc
hemes,
without
increasing
retriev
al
time
signican
tly
since
ev
erything
is
preclassied.
(The
cost
for
this
t
yp
e
of
system
is
at
concept
classication
time,
but
presumably
that
w
ould
not
b
e
a
problem
in
a
library
scenario.)
The
lassie
system
[
Dev
an
bu
et
al.,
		0;
		
]
is
one
example
of
suc
h
an
application:
it
main
tains
information
ab
out
a
large
soft
w
are
system
and
its
comp
onen
ts,
view
ed
from
m
ultiple
p
ersp
ectiv
es,
and
it
can
b
e
queried
as
part
of
the
eort
of
understanding
the
soft
w
are
system.
lassie
accepts
queries
in
the
form
of
structured
ob
ject
descriptions
(e.g.,
\an
action
that
drops
a
user
from
a
call
and
is
caused
b
y
a
button-push
b
y
an
attendan
t"),
and
uses
classication
to
nd
all
matc
hing
instances
of
the
query
.
lassie
w
as
rst
implemen
ted
in
the
kandor
language,
and
has
no
w
b
een
con
v
erted
to
classic.
Because
the
hierarc
h
y
of
concepts
can
c
hange
dynamically
,
classic
and
its
close
rela-
tiv
es
are
also
more
appropriate
for
database-lik
e
applications
that
ha
v
e
an
evolving
schema|
the
normal
state
of
aairs
in
design
and
sp
ecication
eorts,
for
example.
In
con
trast,
standard
database
managemen
t
systems
are
relativ
ely
p
o
or
at
supp
orting
sc
hema
c
hanges,
in
comparison
to
straigh
t
up
dates
to
data.
Another
imp
ortan
t
class
of
applications
consists
of
those
in
v
olving
incremen
tally
ev
olv-
ing
descriptions.
In
con
trast
to
standard
rep
ositories
of
data,
suc
h
as
traditional
databases,
a
classic
kno
wledge
base
allo
ws
the
user
to
main
tain
a
partial,
incomplete
view
of
the
domain
of
discourse,
a
view
in
whic
h
information
is
incremen
tally
acquired.
The
follo
wing
are
some
of
the
features
of
classic
that
supp
ort
this:

role
llers
of
individuals
can
b
e
describ
ed
in
w
a
ys
other
than
b
y
simple
en
umeration;
for
example,
it
is
p
ossible
to
{
assert
ho
w
man
y
ob
jects
an
individual
is
related
to
via
some
role,
without
kno
w-
ing
the
actual
ob
jects
(e.g.,
\ev
ery
wine
has
at
least
one
ob
ject
related
to
it
via
the
grape
role");
{
describ
e
the
llers
of
a
role,
without
kno
wing
them;
for
example,
\all
the
llers
of
the
drink
role
for
this
course
are
from
F
rance";

incomplete
information
ma
y
b
e
gradually
rened
as
new
kno
wledge
is
acquired;
th
us
{
a
particular
meal
can
b
e
said
to
ha
v
e
at
least
three
courses,
and
then
later
disco
v
ered
to
ha
v
e
at
least
four;
0
An
ob
ject
migh
t
b
e
a
text
do
cumen
t,
some
soft
w
are
comp
onen
t,
a
c
hemical
comp
ound,
a
meal,
etc.


{
a
particular
individual
ma
y
rst
b
e
kno
wn
to
b
e
an
instance
of
FRUIT
(some
primitiv
e
class),
and
then
later
b
e
disco
v
ered
to
b
e
an
instance
of
GRAPE
(a
more
sp
ecialized
primitiv
e
class),
without
kno
wing
the
exact
v
ariet
y
of
grap
e
(eac
h
of
whic
h
is
a
primitiv
e
sub
class
of
GRAPE);

the
\closed
w
orld
assumption,"
normally
in
v
ok
ed
in
data
and
kno
wledge
bases,
views
the
state
of
kno
wledge
to
b
e
complete
at
an
y
time;
therefore
when
additional
infor-
mation
(not
con
tradicting
past
data)
is
added,
one
is
often
faced
with
the
problem
of
ha
ving
to
retract
certain
conclusions
that
w
ere
reac
hed
\to
o
hastily
."
The
absence
of
the
closed
w
orld
assumption
in
classic
a
v
oids
these
problems
b
y
not
dra
wing
conclusions
un
til
all
information
is
kno
wn,
and
hence
classic
supp
orts
incremen
tal
lling-in
of
a
partially-kno
wn
situation.
This
abilit
y
to
handle
partial
kno
wledge
can
b
e
usefully
exploited
in
suc
h
tasks
as
the
design
or
conguration
of
artifacts
(where
something
is
b
eing
created,
without
ha
ving
an
exact
idea
of
all
its
parts
un
til
it
is
completed),
or
the
\detectiv
e"
pro
cess
in
v
olv
ed
in
recognizing
ob
jects
from
clues
disco
v
ered
o
v
er
time
(e.g.,
iden
tifying
criminals).
Languages
in
the
kl-
one
family
ha
v
e
b
een
used
for
suc
h
purp
oses
in
conguration
tasks
[
Owsnic
ki-Klew
e,
	
]
,
among
others.
classic
is
also
suitable
for
applications
that
w
an
t
to
enforce
constrain
ts
on
collections
of
facts
b
ecause
inheritance
is
strict
and
\trigger"-lik
e
rules
are
a
v
ailable.
W
e
ha
v
e
one
application
(a
congurator)
that
uses
classic
mostly
as
an
in
tegrit
y
c
hec
k
er.
This
appli-
cation
mak
es
use
of
inheritance
b
y
putting
constrain
ts
on
high
lev
el
concepts
and
then
lets
classic
enforce
the
constrain
ts
on
all
sub
concepts,
a
v
oiding
the
redundancy
that
w
ould
b
e
necessary
in
man
y
database
implemen
tations
of
the
same
facts.
classic,
unlik
e
other
languages
of
its
kind,
has
b
een
designed
to
allo
w
the
relativ
ely
easy
in
tegration
of
individuals
from
the
host
programming
language
in
a
manner
consisten
t
with
CLASSIC
individuals.
This
mak
es
classic
easier
to
use
in
situations
where
v
alues
suc
h
as
in
tegers,
etc.,
need
to
b
e
stored
in
the
kno
wledge
base,
and
in
the
case
of
languages
lik
e
Common
LISP,
it
allo
ws
arbitrary
data
structures
and
programs
to
b
e
k
ept
in
a
classic
kno
wledge
base|an
imp
ortan
t
feature
for
AI
applications
to
Soft
w
are
Engineering,
for
example.
Because
of
the
ob
ject-cen
tered
nature
of
classic,
individuals
can
b
e
created
without
kno
wing
some
or
all
of
their
nal
descriptors.
This
allo
ws
a
user
to
tak
e
the
follo
wing
set
of
steps:
)
create
some
new
\dumm
y"
individual;
)
relate
it
to
some
existing
individual
(e.g.,
as
a
role
ller);
and
)
insp
ect
the
KB
to
see
what
additional
descriptors
ha
v
e
b
een
attac
hed
to
the
dumm
y
individual
as
a
result
of
rule
rings
and
other
deductions.
The
result
is
a
tec
hnique
for
obtaining
so-called
\in
tensional"
answ
ers
to
queries|descriptions
of
conditions
that
m
ust
hold
of
any
individual,
curren
tly
existing
or
not,
whic
h
satises
certain
relationships
(see
[
Borgida
et
al.,
		
]
and
Section
.
for
more
details).
Suc
h
querying
is
not
supp
orted
b
y
traditional
databases.
.
When
Not
to
Use
CLASSIC
Previous
sections
ha
v
e
men
tioned
the
goals
and
philosoph
y
b
ehind
the
design
of
classic.
In
k
eeping
with
our
principles
of
pro
viding
eectiv
e
reasoning
services,
certain
expressiv
e
features
ha
v
e
b
een
delib
erately
left
out
of
the
language.
These
features
ob
viously
inuence
the
situations
where
classic
is
appropriate
as
a
represen
tation
to
ol.


Because
of
its
ob
ject-cen
tered
nature,
classic
is
lik
ely
to
b
e
cum
b
ersome
to
use
in
cases
where
mathematical
en
tities
suc
h
as
tuples,
sequences,
geometric
en
tities,
etc.,
are
the
cen
ter
of
atten
tion.
This
is
b
ecause
suc
h
en
tities
usually
ha
v
e
a
notion
of
\equalit
y"
based
on
(recursiv
e)
comp
onen
t
iden
tit
y
.
F
or
example,
calendar
dates
are
structured
ob
jects,
and
it
seems
natural
to
mo
del
them
as
classic
individuals
with
three
attributes:
day,
month,
and
year.
Ho
w
ev
er,
ob
ject
iden
tit
y
ma
y
pro
vide
surprising
results:
if
w
e
are
trac
king
the
date
on
whic
h
wines
are
b
ottled
through
an
attribute
bottled-on,
and
w
e
are
in
terested
in
nding
out
whether
t
w
o
b
ottles
Wine-bottle-
and
Wine-bottle-
w
ere
b
ottled
the
same
da
y
,
then
simply
c
hec
king
that
Wine-bottle-'s
bottled-on
is
the
same
as
Wine-bottle-'s
bottled-on
ma
y
result
in
the
answ
er
\false"
ev
en
if
the
t
w
o
dates
ha
v
e
the
same
day,
month,
and
year.
In
order
to
a
v
oid
suc
h
problems,
the
user
w
ould
ha
v
e
to
searc
h
the
kno
wledge
base
b
efore
en
tering
an
y
date,
to
mak
e
sure
that
a
date
with
the
same
attribute
v
alues
did
not
already
exist.

With
classic,
an
application
requiring
simple
retriev
al
of
told
facts,
with
no
in
terest
in
deriv
ed
consequences
or
a
complex
query
language,
will
pa
y
an
unnecessary
p
erformance
p
enalt
y
(b
oth
in
time
and
in
space)
during
the
pro
cessing
of
input
data,
and
esp
ecially
in
the
revision
of
told
facts,
since
up
dates
w
ould
normally
b
e
quite
simple
in
that
case.
F
urthermore,
at
least
at
the
momen
t,
classic
do
es
not
ha
v
e
ecien
t
data
access
facilities
built-in
in
order
to
handle
v
ery
large
n
um
b
ers
of
individuals,
suc
h
as
desired
in
data-
pro
cessing
applications.
Since
classic
do
es
strict
inheritance,
defaults
and
exceptions
are
not
easily
enco
ded
in
the
language.
If
an
application
is
inheren
tly
orien
ted
to
w
ard
defaults,
classic
should
not
b
e
the
language
of
c
hoice.
If,
ho
w
ev
er,
there
are
only
a
small
n
um
b
er
of
certain
kinds
of
defaults,
classic
ma
y
b
e
adequate
(see
Section
.).
classic
pro
vides
only
a
limited
form
of
rules,
where
b
oth
the
an
teceden
t
and
the
consequen
t
refer
to
the
mem
b
ership
of
a
single
individual
in
some
concept
(whic
h
of
course
migh
t
b
e
structured).
Applications
requiring
complex
conditions
in
the
an
teceden
t
are
m
uc
h
more
dicult
to
handle
prop
erly
.
First,
classic
supp
orts
neither
full
negation
nor
full
disjunction,
so
these
constructs
are
not
usually
a
v
ailable
for
expressing
complex
trigger
conditions
(but
see
Sections
.
and
.).
Nor
is
it
p
ossible
to
write
rules
that
are
triggered
b
y
the
existence
of
t
w
o
or
more
individuals
that
are
not
directly
related
b
y
some
c
hain
of
roles
(e.g.,
\if
there
exist
wines
x
and
y
suc
h
that
one
is
t
wice
as
old
as
the
other,
then.
.
.
").
One
could
consider
using
something
lik
e
ops
as
a
fron
t-end
rule-pro
cessing
system
and
use
classic
as
a
bac
k-end
structured
w
orking
memory
.
An
alternativ
e
explored
in
[
Y
en
et
al.,
		
]
has
b
een
to
expand
the
role
of
the
kno
wledge
base
to
manage
b
oth
the
space
of
rules
and
the
p
olicy
of
rule
ring.
classic
do
es
not
ha
v
e
full
negation.
If
an
application
will
constan
tly
need
to
refer
to
a
concept
that
includes
ev
erything
that
is
not
an
instance
of
some
other
concept,
then
the
application
is
not
w
ell-suited
for
classic.
Limited
uses
of
negation
are
discussed
in
Section
..
Classication
systems
suc
h
as
classic
are
usually
implemen
ted
as
forw
ard-c
haining

In
classic,
this
problem
could
sometimes
b
e
resolv
ed
through
the
use
of
complex
ob
jects
in
the
host-
language
domain,
as
long
as
the
host
language
p
erforms
equalit
y
c
hec
king
in
a
comp
onen
t-wise
fashion
on
certain
data
structures,
suc
h
as
is
the
case
with
Common
LISP's
equal
predicate.
Ho
w
ev
er,
in
that
case,
the
in
ternal
structure
of
the
ob
jects
of
in
terest
(e.g.,
dates)
w
ould
not
b
e
accessible
to
classic
for
reasoning.


inference
systems.
(By
w
a
y
of
con
trast,
queries
in
pr
olog
and
databases
augmen
ted
with
recursiv
e
rules
are
usually
pro
cessed
b
y
w
orking
bac
kw
ard
from
the
query
to
the
database
of
explicitly
asserted
facts.)
This
means
that
the
addition
of
new
concepts
or
individuals
is
time-consuming,
though
retriev
al
is
more
ecien
t.
Therefore
if
up
dates
are
frequen
t
and
time-critical,
curren
t
implemen
tations
w
ould
mak
e
suc
h
systems
less
than
ideal
when
the
n
um
b
er
of
ob
jects
b
ecomes
large.
Because
classic
distinguishes
individuals
from
(generic)
concepts,
and
do
es
not
sup-
p
ort
\meta-concepts,"
classic
itself
is
not
suitable
in
situations
where
some
individual
ma
y
in
certain
cases
b
e
view
ed
as
a
class
with
instances.
F
or
example,
there
is
no
direct
w
a
y
to
asso
ciate
with
the
concept
WINE
a
sp
ecic
v
alue
through
a
role
suc
h
as
average-age
or
maximum-sugar-content|roles
that
do
not
mak
e
sense
when
applied
to
individual
b
ot-
tles
of
wine.
Note
ho
w
ev
er
that
this
is
not
an
in
trinsic
lac
k
of
kl-one-st
yle
languages|it
could
easily
b
e
remedied
in
future
generations.
Similar
problems
arise
in
situations
where
the
\on
tology"
of
the
domain
is
not
self-
eviden
t:
in
a
kno
wledge
base
ab
out
wines,
do
es
an
instance
Kalin-Cellars-Chardonnay
of
the
concept
CHARDONNAY-WINE
corresp
ond
to
a
sp
ecic
kind
of
wine,
to
a
particular
vin
tage
(\the
	
one"),
or,
ev
en
more
sp
ecically
,
to
a
particular
b
ottle?
In
the
case
of
the
vin
tage,
is
it
after
b
ottling,
or
later
on,
or
b
oth?
Suc
h
shifts
of
p
ersp
ectiv
e
are
not
easily
supp
orted
b
y
kno
wledge
represen
tation
languages
that
main
tain
a
strict
distinction
b
et
w
een
individuals
and
concepts
(see
Section
..).
Finally
,
classic
and
its
relativ
es
ha
v
e
general
(w
eak)
reasoning
pro
cedures,
and
do
not
supp
ort
the
direct
and
ecien
t
addition
of
sp
ecialized
kinds
of
inferences.
This
means
that
applications
needing
to
mak
e
in
tensiv
e
use
of
temp
oral
reasoning
or
spatial
reasoning,
for
example,
w
ould
nd
it
dicult
to
ha
v
e
classic
deduce
the
desired
relationships
(but
see
[
Litman
and
Dev
an
bu,
		0
]
for
an
extension
to
classic
that
mak
es
it
more
useful
in
planning
applications).
While
some
of
the
ab
o
v
e
limitations
are
inheren
t
to
the
ob
ject-cen
tered
view
of
classic,
extensions
to
the
system
ma
y
ev
en
tually
relax
some
of
the
other
restrictions.
Under
activ
e
consideration
no
w
are
the
addition
of
defaults,
a
more
elab
orate
rule
framew
ork,
and
large-
scale
data
storage
facilities
with
a
p
o
w
erful
query
language.



Dicult
Ideas
Once
y
ou
ha
v
e
decided
to
use
classic
to
build
a
kno
wledge
base
it
is
imp
ortan
t
to
under-
stand
sev
eral
subtle
issues.
W
e
will
address
these
in
relation
to
classic;
ho
w
ev
er,
man
y
are
equally
applicable
to
the
other
languages
in
the
kl-one
family
.
The
issues
concern
the
philosoph
y
of
the
language
and
kno
wledge-base
design,
and
can
aect
decisions
concerning
the
gross
structure
of
the
KB.
The
issues
include
the
amoun
t
and
kind
of
information
that
should
go
in
to
a
concept
denition,
individuals
v
ersus
concepts,
classic's
detection
of
incoherencies
in
role
llers,
when
rule
application
o
ccurs,
ho
w
classic
handles
unkno
wn
individuals,
ho
w
up
dates
are
done,
and
the
impact
of
esc
hewing
a
closed
w
orld
assump-
tion.
Tw
o
other
k
ey
(and
somewhat
dicult)
on
tological
considerations
are
co
v
ered
in
Section
..
.
Primitiv
e
and
Dened
Concepts
It
has
b
een
traditional
in
the
kl-one
family
of
languages
to
pro
vide
for
t
w
o
kinds
of
concepts|dened
and
primitiv
e.
A
dened
concept
is
lik
e
a
necessary
\if
and
only
if
"
statemen
t
in
logic.
F
or
example,
if
a
white
wine
is
dened
to
b
e
exactly
a
wine
whose
color
is
white,
then
deductions
can
b
e
done
in
t
w
o
directions:

if
w
e
kno
w
something
is
a
white
wine,
then
w
e
kno
w
that
it
is
a
wine
and
it
is
white;

if
w
e
kno
w
something
is
a
wine
and
has
color
white,
then
w
e
kno
w
it
is
a
white
wine.
In
other
w
ords,
this
kind
of
denition
includes
necessary
and
sucien
t
conditions
for
mem-
b
ership
in
the
class.
So,
if
WHITE-WINE
is
dened
in
the
ob
vious
w
a
y
,
an
y
ob
ject
that
is
asserted
to
b
e
one
will
b
e
b
oth
a
wine
and
something
whose
color
is
white;
also,
an
ything
that
is
kno
wn
to
b
e
a
wine
and
ha
v
e
white
color
will
b
e
classied
as
a
WHITE-WINE.
A
primitiv
e
concept
includes
only
necessary
(but
not
sucien
t)
conditions
for
mem
b
er-
ship.
In
con
trast
to
dened
concepts,
primitiv
e
concepts
supp
ort
deductions
in
only
one
direction
(lik
e
an
\if
"
statemen
t
instead
of
an
\if
and
only
if
"
statemen
t).
F
or
example,
it
is
hard
to
dene
\wine"
completely
.
So
one
migh
t
sa
y
that,
among
other
things,
a
wine
is
something
that
has
a
color
that
is
either
Red,
White,
or
Rose.
In
this
case,
when
classic
is
told
that
something
is
a
wine,
it
will
infer
that
it
has
a
v
alue
restriction
on
the
color
role,
but
just
b
ecause
something
has
a
color
role
lled
with
v
alue
Red,
classic
do
es
not
infer
it
to
b
e
a
wine.
Determining
whether
a
concept
should
b
e
primitiv
e
or
dened
is
a
k
ey
asp
ect
of
building
a
classic
KB.
The
basic
idea
is
that
a
primitiv
e
concept
is
appropriate
when
no
complete
denition
exists
or
when
only
part
of
a
completely
kno
wn
denition
is
relev
an
t.
In
the
former
case,
w
e
ha
v
e
no
c
hoice
but
to
use
a
primitiv
e
concept|if
w
e
use
a
dened
concept,
acciden
tal
and
inappropriate
\only
if
"
deductions
will
b
e
sanctioned.
In
the
latter
case,
there
ma
y
b
e
no
need
to
b
other
with
a
complete
denition
if
the
application
nev
er
demands
that
the
system
automatically
recognize
an
instance
of
the
concept.
If
the
user
can
b
e
guaran
teed
to
assert
class
mem
b
ership
directly
,
then
a
full
denition
of
a
concept
lik
e
WINE
is
not
necessary
,
ev
en
if
one
is
p
ossible.
Dened
concepts
are
appropriate
when
the
complete
denition
is
kno
wn
and
relev
an
t,
or
when
one
w
an
ts
the
system
to
determine
mem
b
ership
in
a
class.
Primitiv
e
concepts
are
usually
found
near
the
top
of
a
generalization
hierarc
h
y


and
dened
concepts
t
ypically
app
ear
as
w
e
mo
v
e
further
do
wn
b
y
sp
ecializing
general
concepts
with
v
arious
restrictions.
In
classic,
primitiv
e
concepts
are
distinguished
b
y
indices.
Th
us
concepts
FOOD
and
WINE
could
b
e
dened
as
classic
terms
(PRIMITIVE
CLASSIC-THING
*food*)
and
(PRIMITIVE
CLASSIC-THING
*wine*)
resp
ectiv
ely;
the
indices
*food*
and
*wine*
al-
lo
w
these
t
w
o
concepts
to
b
e
dieren
t,
and
at
the
same
time
p
ermit
synon
yms
to
b
e
dened:
FAVORITE-BEVERAGE
migh
t
also
b
e
dened
as
(PRIMITIVE
CLASSIC-THING
*wine*).
The
use
of
indices
reinforces
that
the
meaning
of
a
primitiv
e
concept
denition
is
con-
tained
in
its
expression|as
is
the
case
with
all
other
classic
descriptor
t
yp
es|while
the
name
is
simply
a
lab
el
that
helps
the
user.
Dened
concepts
do
not
need
an
index
as
they
are
distinguished
from
other
concepts
b
y
their
v
ery
denitions.
Synon
yms
can
also
b
e
created
b
y
dening
t
w
o
concepts
with
equiv
alen
t
descriptions.
Both
the
concept
names
ma
y
b
e
used
later,
but
in
the
concept
hierarc
h
y
they
refer
to
the
same
en
tit
y
.
In
general,
there
are
three
reasons
to
consider
creating
a
dened
concept
in
systems
lik
e
classic:
.
The
most
imp
ortan
t
reason
is
simply
that
the
meaning
of
an
imp
ortan
t
domain
term
can
b
e
fully
dened
within
the
language.
In
man
y
cases,
there
will
b
e
a
natural
name
in
the
domain
for
the
concept
and
an
ob
vious
set
of
necessary
and
sucien
t
conditions.
F
or
example,
OENOLOGIST
migh
t
b
e
dened
as
a
PERSON
who
studies
wines.
There
will
b
e
man
y
of
these
concepts
in
an
articial
domain,
and
few
if
the
domain
co
v
ers
mainly
naturally
o
ccurring
ob
jects.
.
In
some
on
tologies,
it
can
b
e
useful
to
organize
the
an
teceden
ts
of
rules
in
to
a
taxon-
om
y
.
Rules
can
b
e
organized
so
that
eac
h
consequen
t
is
asso
ciated
with
an
an
teceden
t
at
the
righ
t
lev
el
of
generalit
y
,
and
rules
that
apply
to
more
general
situations
can
b
e
inherited
and
applied
in
sp
ecic
situations.
This
allo
ws
classication|and
not
just
direct
assertion|to
determine
when
a
rule
is
in
v
ok
ed.
F
or
example,
as
in
our
sample
kno
wledge
base
(see
Section
.),
w
e
migh
t
ha
v
e
partial
kno
wledge
ab
out
an
appropriate
wine
asso
ciated
with
the
general
prop
ert
y
that
a
course's
fo
o
d
is
seafo
o
d
(i.e.,
the
wine's
color
m
ust
b
e
white),
and
another
fact
asso
ciated
with
a
more
sp
ecic
prop
ert
y
,
for
example,
that
the
course's
fo
o
d
is
shellsh
(i.e.,
the
wine
m
ust
b
e
full-b
o
died).
Organization
of
the
an
teceden
ts
in
to
a
hierarc
h
y
mak
es
the
on
tology
clearer
and
mak
es
kno
wledge
base
main
tenance
substan
tially
easier.
Here
a
dened
concept
is
simply
used
to
express
the
an
teceden
t
of
a
rule,
and
need
not
corresp
ond
to
an
y
natural
class
in
the
domain;
suc
h
concepts
will
most
lik
ely
not
ha
v
e
an
y
naturally-o
ccurring
names
in
the
domain.
In
our
sample
KB,
w
e
ha
v
e
used
con-
structed
names
lik
e
\SHELLFISH-COURSE"
for
these
concepts,
although
suc
h
names
hold
no
signicance
other
than
as
placeholders
(the
an
teceden
ts
of
rules
in
classic
m
ust
b
e
named).
.
F
or
some
primitiv
e
concepts,
there
ma
y
b
e
a
n
um
b
er
of
w
a
ys
that
class
mem
b
ers
can
b
e
recognized,
ev
en
if
there
is
not
a
single
necessary
and
sucien
t
denition.
A
nal
use
for
dened
concepts
is
to
express
suciency
conditions
for
recognition
of
mem
b
ers
of
an
otherwise
primitiv
e
class.
F
or
example,
while
PERSON
w
ould
most
lik
ely
b
e
primitiv
e
in
most
on
tologies,
conditions
lik
e
\featherless
bip
ed"
and
\c
hild
of
a
p
erson"
migh
t
b
e
considered
sucien
t
conditions
for
determining
p
ersonho
o
d.
In
classic,
one
can
use
a
dened
concept
to
represen
t
eac
h
set
of
sucien
t
conditions
	

(e.g.,
FEATHERLESS-BIPED
w
ould
b
e
a
dened
concept).
Eac
h
suc
h
concept
w
ould
b
e
the
an
teceden
t
of
a
rule
whose
consequen
t
w
as
the
primitiv
e
concept
whose
mem
b
ers
w
ere
to
b
e
recognized
(PERSON,
in
this
case).
.
Denitional
and
Inciden
tal
Prop
erties
It
is
imp
ortan
t
in
classic
to
distinguish
b
et
w
een
a
concept's
true
denition
and
an
y
inciden
tal
prop
erties
that
its
instances
all
share.
F
or
example,
consider
red
Bordeaux
wines,
whic
h
are
alw
a
ys
dry
.
The
color
and
the
region
w
ould
clearly
b
e
part
of
the
denition
of
the
concept
RED-BORDEAUX-WINE,
since
this
constitutes
part
of
the
v
ery
meaning
of
the
term.
But
the
prop
ert
y
of
b
eing
dry
is
certainly
not
part
of
the
meaning
of
\red
Bordeaux
wine,"
ev
en
if
it
is
a
(con
tingen
t)
univ
ersal
prop
ert
y
of
red
Bordeaux.
Th
us,
in
a
classic-
st
yle
represen
tation
the
rst
t
w
o
prop
erties,
(FILLS
color
Red)
and
(FILLS
region
Bordeaux),
w
ould
b
e
part
of
the
concept
RED-BORDEAUX-WINE,
whereas
the
third
w
ould
b
e
expressed
as
a
rule,
whose
consequen
t
w
ould
b
e
(FILLS
sugar
Dry)
and
whose
an
teceden
t
w
ould
b
e
RED-BORDEAUX-WINE.
The
distinction
b
et
w
een
denitions
and
inciden
tal
prop
erties
is
not
imp
ortan
t
in
KR
systems
that
do
not
p
erform
classication,
as
it
has
no
eect
on
ho
w
these
systems
w
ork.
Ho
w
ev
er,
in
classic,
since
they
represen
t
only
necessary
,
and
not
sucien
t
conditions,
rules
do
not
participate
in
either
recognition
or
classication.
So,
for
example,
putting
the
\dryness"
prop
ert
y
in
to
the
denition
of
RED-BORDEAUX-WINE
w
ould
mean
that
a
wine
w
ould
ha
v
e
to
b
e
dry
to
b
e
recognized
as
a
RED-BORDEAUX-WINE
(as
opp
osed
to
ha
v-
ing
\dryness"
automatically
asserted
ab
out
wines
that
ha
v
e
already
b
een
recognized
as
RED-BORDEAUX-WINEs);
it
w
ould
also
mean
that
RED-BORDEAUX-WINE
w
ould
b
e
inappropri-
ately
classied
under
the
concept
DRY-WINE.
(See
also
Section
.,
esp
ecially
fo
otnote
	.)
This
t
yp
e
of
inappropriate
classication
also
aects
primitiv
e
concepts.
Consider
the
earlier
primitiv
e
denition
of
WINE
as
something
that
has,
among
other
things,
a
color
that
is
either
Red,
White,
or
Rose:
(PRIMITIVE
(AND
(ALL
color
(ONE-OF
Red
White
Rose))
(A
T-LEAST

color))
*wine*).
Another
w
a
y
to
view
this
migh
t
b
e
to
mak
e
WINE
an
atomic
primitiv
e
concept
(i.e.,
directly
b
elo
w
CLASSIC-THING),
and
use
a
rule
to
express
the
color
restriction.
In
b
oth
cases,
since
WINE
is
primitiv
e,
the
color
restriction
w
ould
not
b
e
used
to
answ
er
subsumption
questions.
Also,
if
an
individual
w
ere
stated
to
b
e
a
wine,
in
b
oth
cases,
the
individual's
color
role
w
ould
b
e
c
hec
k
ed
for
consistency
with
the
restriction.
Ho
w
ev
er,
there
is
an
imp
ortan
t
dierence.
If
w
e
added
a
dened
concept,
COLORED-THING
(something
that
has
at
least
one
color),
then
if
WINE
w
ere
only
a
primitiv
e
thing
that
had
a
color
restriction
in
a
rule,
it
w
ould
not
b
e
classied
under
COLORED-THING.
The
WINE
concept
that
included
the
restriction
as
part
of
its
meaning
w
ould,
on
the
other
hand,
get
classied
under
COLORED-THING.
The
distinction
b
et
w
een
denitional
and
inciden
tal
prop
erties
m
ust
b
e
carefully
made
for
al
l
concepts
in
classic,
not
just
dened
concepts.
In
general,
the
user
m
ust
decide
on
on
tological
grounds
whether
a
restriction
should
b
e
tak
en
as
part
of
the
me
aning
of
a
concept
(and
th
us
participate
in
classication
and
recognition)
or
simply
as
a
deriv
ed
prop
ert
y
to
b
e
inferred
once
class
mem
b
ership
is
ascertained.
The
dierence
b
et
w
een
0

primitiv
e
and
dened
concepts
is
that
in
the
former
case
class
mem
b
ership
m
ust
b
e
asserted
directly
(b
y
the
user
or
a
rule),
and
in
the
latter
the
system
can
determine
it.
.
Concepts
and
Individuals
Although
in
some
w
a
ys
concepts
lo
ok
v
ery
similar
to
individuals
(e.g.,
classic's
syn
tax
allo
ws
the
same
t
yp
es
of
expression
for
eac
h),
there
are
some
subtle
(and
some
not
so
sub-
tle)
dierences
b
et
w
een
them.
It
is
useful
to
understand
some
of
the
imp
ortan
t
distinctions
when
trying
to
understand
classic's
classication
and
deductiv
e
pro
cesses.
First,
individ-
uals
ha
v
e
unique
iden
tities
and
are
coun
table.
An
individual
can
b
e
describ
ed
b
y
concept
expressions
that
apply
to
it,
but
there
is
a
uniqueness
assumption
that
guaran
tees
that
t
w
o
individuals
with
dieren
t
names|ev
en
with
the
same
description|will
b
e
dieren
t
individ-
uals.
Concepts
are
descriptions
and
b
ecause
of
the
comp
ositional
nature
of
descriptions,
the
concept
space
is
innite.
The
concept
hierarc
h
y
could
include
things
lik
e
full-b
o
died-wines,
full-b
o
died-white-wines,
full-b
o
died-white-medium-a
v
ored-wines,
etc.
When
considering
the
kno
wledge
base,
it
mak
es
sense
to
coun
t
the
individual
wines
but
it
is
not
clear
ho
w
or
wh
y
one
w
ould
w
an
t
to
coun
t
all
the
descriptions
of
those
wines.
Next,
facts
in
the
w
orld
can
c
hange,
and
th
us
individuals
can
c
hange,
to
o.
One
migh
t
w
an
t
to
add
information
to
a
particular
individual
or
p
erhaps
c
hange
something
ab
out
it,
for
example,
the
price
of
a
wine.
In
con
trast,
concept
denitions
and
their
relationships
to
eac
h
other
do
not
c
hange.
Once
someone
denes
a
white
wine,
sa
y
as
a
wine
whose
color
is
white,
classic
will
con
tin
ue
to
classify
all
individuals
and
concepts
with
resp
ect
to
this
denition
un
til
someone
reloads
the
en
tire
kno
wledge
base.
A
more
subtle
issue
is
that
retraction
and
addition
of
facts
ab
out
individuals
do
not
c
hange
the
concept
classication
hierarc
h
y
.
Individuals,
and
their
classication,
can
c
hange
through
assertion
and
retraction
of
facts;
but
the
seman
tics
of
classic
w
as
designed
to
mak
e
the
concept
hierarc
h
y
b
e
imm
une
to
c
hanges
in
individuals.
(The
concept
hierarc
h
y
w
ould
c
hange
monotonically
if
a
new
concept
denition
w
ere
added.)
F
or
example,
giv
en
a
concept
PICNIC-BASKET
dened
as
(AND
BASKET
(A
T-LEAST

drink)
(A
T-MOST

drink)
(ALL
drink
WINE)
(A
T-LEAST

food)
(ALL
food
EDIBLE-THING)),
a
CALIFORNIA-PICNIC-BASKET
dened
as
(AND
PICNIC-BASKET
(ALL
drink
CALIFORNIA-MADE)),
and
a
KALIN-CELLARS-BASKET
dened
as
(AND
PICNIC-BASKET
(FILLS
drink
Kalin-Cellars-Chardonnay
Kalin-Cellars-Cabernet)),
then
ev
en
though
b
oth
the
wines
in
the
denition
of
KALIN-CELLARS-BASKET
happ
en
to
b
e
made
in
California,
KALIN-CELLARS-BASKET
will
b
e
classied
under
PICNIC-BASKET
but
not
under
CALIFORNIA-BASKET.
The
motiv
ation
is
that
the
concept
hierarc
h
y
should
not
ha
v
e
to
c
hange
if
the
inciden
tal
facts
ab
out
one
individual
c
hanged.
If
Kalin
Cellars
mo
v
ed
its
win-
ery
to
Oregon,
w
e
w
ould
not
w
an
t
to
ha
v
e
to
reclassify
the
concept
KALIN-CELLARS-BASKET.
Note,
ho
w
ev
er,
that
if
there
w
ere
an
individual
Kalin-Cellars-Basket-
that
w
as
a


KALIN-CELLARS-BASKET,
this
w
ould
in
fact
b
e
classied
under
CALIFORNIA-BASKET.
The
dierence
is
that
this
is
an
individual,
and
as
suc
h
it
is
classied
based
on
the
kno
wn
prop
erties
of
all
individuals,
including
its
role
llers.
Concepts
are
not
classied
based
on
prop
erties
of
individuals;
they
are
only
classied
based
on
information
that
is
ne
c
essarily
true.
The
individual
Kalin-Cellars-Basket-
could
later
b
e
reclassied
if
the
prop
er-
ties
of
either
Kalin-Cellars-Chardonnay
or
Kalin-Cellars-Cabernet
w
ere
c
hanged
or
mo
died.
As
men
tioned
previously
,
in
classic,
rules
function
dieren
tly
with
resp
ect
to
concepts
and
individuals.
Rules
are
asso
ciated
with
concepts
but
they
are
not
\red"
un
til
an
individual
is
found
to
b
e
an
instance
of
the
concept.
Th
us,
although
there
ma
y
b
e
a
rule
that
sa
ys
that
wines
for
seafo
o
d
courses
m
ust
b
e
white,
this
rule
w
ould
not
b
e
enforced
un
til
there
w
as
a
kno
wn
individual
seafo
o
d
course.
.
Rule
Application
A
rule
(see
also
Sections
..
and
.)
is
not
actually
\red"
un
til
an
individual
is
found
to
b
e
an
instance
of
the
an
teceden
t
concept.
Th
us,
if
one
creates
a
rule
that
sa
ys
that
white
wines
m
ust
b
e
drunk
with
seafo
o
d
courses,
this
information
do
es
not
get
propagated
un
til
a
seafo
o
d
course
exists.
One
ramication
of
this
is
that
in
order
to
test
all
the
rules
in
a
kno
wledge
base,
e.g.,
for
global
consistency
,
one
needs
to
create
individual
instances
of
all
the
concepts
that
are
the
an
teceden
ts
of
rules.
F
or
example,
consider
the
SEAFOOD-COURSE
concept
ab
o
v
e
and
a
concept
SHELLFISH-COURSE
that
is
a
kind
of
SEAFOOD-COURSE
with
a
rule
stating
that
the
wine
drunk
with
a
SHELLFISH-COURSE
m
ust
b
e
a
full-
or
medium-
b
o
died
wine.
In
order
to
c
hec
k
consistency
of
the
rules
and
to
observ
e
restrictions
app
earing
on
the
wines
of
courses,
individual
seafo
o
d
and
shellsh
courses
w
ould
need
to
b
e
created.
Once
w
e
created
a
shellsh
course
with
an
asso
ciated
wine,
w
e
w
ould
nd
that
the
wine
w
ould
b
e
restricted
to
b
eing
a
white,
full-
or
medium-b
o
died
wine.
Because
the
righ
t
hand
sides
of
rules
are
concepts
and
not
commands,
it
is
not
p
ossible
for
a
retraction
to
result
from
the
application
of
a
rule.
Th
us,
the
only
thing
that
a
rule
ma
y
do
is
state
that
if
an
individual
is
found
to
b
e
an
instance
of
the
an
teceden
t
concept,
then
it
is
an
instance
of
the
consequen
t
concept.
If
this
is
not
consisten
t
with
the
other
facts
in
the
kno
wledge
base,
then
the
statemen
t
ab
out
the
individual
that
triggered
the
ring
of
the
rule
w
ould
not
b
e
allo
w
ed
as
input
to
the
kno
wledge
base.
It
should
b
e
noted
that
rules
w
ork
in
one
(and
only
one)
direction.
In
the
previous
example,
b
ecause
a
course
is
a
seafo
o
d
course,
then
w
e
kno
w
that
the
wine
for
the
course
m
ust
b
e
a
white
wine.
The
system
w
ould
not
mak
e
the
bac
kw
ard
inference
that
b
ecause
a
wine
for
a
course
is
not
a
white
wine,
then
the
course
m
ust
not
b
e
a
seafo
o
d
course.
.
Unkno
wn
Individuals
in
CLASSIC
One
of
the
adv
an
tages
of
classic,
as
p
oin
ted
out
earlier,
is
that
it
allo
ws
the
description
of
partially
kno
wn
ob
jects.
F
or
example,
one
w
a
y
to
giv
e
information
ab
out
\n
ull
v
alues"|
v
alues
that
exist
but
are
not
curren
tly
kno
wn
to
the
KB|is
through
iden
tities
b
et
w
een
attribute
paths.
W
e
can
sa
y
,
for
example,
that
the
Thanksgiving
da
y
men
u
will
ha
v
e
the
same
drink
for
lunc
h
as
for
dinner
(b
y
adding
(SAME-AS
(lunch
drink)
(dinner
drink))
to
the
description
of
Thanksgiving-Day-Menu),
without
kno
wing
the
iden
tit
y
of


the
lunc
h,
dinner
or
drink
ob
jects.
More
usually
,
it
is
p
ossible
to
giv
e
ller
information
ab
out
roles
of
unkno
wn
ob
jects;
for
example,
one
can
tak
e
an
individual
course,
Course-,
and
add
to
its
description
the
restriction
(ALL
drink
(FILLS
grape
Riesling))
to
state
that
the
wine
serv
ed
with
it
is
made
from
Riesling
grap
es,
without
kno
wing
the
actual
wine
to
b
e
serv
ed.
These
examples
migh
t
mak
e
one
b
eliev
e
that
the
system
actually
creates
and
main
tains
classic
individuals
for
all
en
tities
in
the
domain
implied
b
y
the
curren
t
kno
wledge
base
(these
are
sometimes
called
\Sk
olem
individuals").
This,
ho
w
ev
er,
is
not
the
case.
W
e
cannot
sa
y
that
some
restauran
t's
wine
list
includes
the
drink
of
Course-,
and
then,
later
on,
when
w
e
nd
out
what
is
the
sp
ecic
drink
of
Course-,
exp
ect
it
to
sho
w
up
on
the
wine
list.
In
the
curren
t
implemen
tation
of
classic
the
pro
cessing
of
individuals
is
complete
only
in
the
case
when
the
llers
of
roles
are
all
kno
wn.
The
follo
wing
t
w
o
examples
illustrate
incompleteness
that
o
ccurs
when
some
role
llers
are
not
kno
wn.
First,
in
order
to
determine
that
some
individual
Ind
is
an
instance
of
a
concept
of
the
form
(ALL
p
(ALL
q
C))
,
it
is
sucien
t
to
kno
w
the
complete
set
of
the
q's
of
the
p's
of
Ind
without
necessarily
kno
wing
the
p's
of
Ind.
Course-
ab
o
v
e
illustrates
this
p
ossibilit
y:
w
e
kno
w
that
the
grapes
of
the
drinks
of
Course-
include
Riesling,
but
w
e
don't
kno
w
the
drinks;
if
Riesling
w
ere
kno
wn
to
b
e
a
fruit
and
the
grape
role
could
ha
v
e
at
most
one
ller,
a
more
complete
reasoner
w
ould
recognize
Course-
as
an
instance
of
the
concept
(ALL
drink
(ALL
grape
FRUIT)).
F
or
the
curren
t
implemen
tation,
w
e
b
eliev
e
that
situations
in
whic
h
suc
h
conclusions
can
b
e
reac
hed
are
sucien
tly
rare
that
w
e
ha
v
e
c
hosen
to
a
v
oid
the
ev
er-presen
t
o
v
erhead
of
lo
oking
for
them.
Second,
the
implemen
tation
do
es
not
p
erform
case
analysis
o
v
er
the
set
of
p
ossible
llers
for
some
role
or
role-path.
This
means
that
ev
en
if
Course-
has
one
drink,
whic
h
is
either
Mouton-Cadet
or
Chateau-Lafite,
and
b
oth
are
made
in
F
rance,
the
system
will
fail
to
recognize
that
no
matter
whic
h
ob
ject
is
the
actual
ller
of
drink,
Course-
should
b
e
an
instance
of
the
concept
(ALL
drink
(FILLS
made-in
France)).
W
e
emphasize
that
the
ab
o
v
e
incompleteness
arises
only
in
the
presence
of
the
construc-
tions
(ALL
p
(FILLS
q
...))
and
(ALL
p
(ONE-OF
...))
,
used
b
ecause
the
actual
llers
of
the
p
role
are
not
y
et
kno
wn.
In
the
curren
t
implemen
tation,
when
information
ab
out
individuals
is
incomplete
in
this
w
a
y
,
the
subsumption
mec
hanism
normally
used
for
concepts
is
used
(since
that
deals
with
descriptions
in
tended
to
b
e
incomplete).
Ho
w
ev
er,
with
that
mec
hanism,
the
prop
erties
of
individuals
are
not
considered
(e.g.,
the
regions
of
the
wines
in
the
ab
o
v
e
example;
for
the
reasons
for
this,
see
Section
.),
ev
en
though
they
ough
t
to
b
e
when
pro
cessing
individuals.


.
Up
dates
As
men
tioned
in
Section
.,
classic
allo
ws
information
that
has
b
een
explicitly
asserted
b
y
the
user
ab
out
individuals
to
b
e
retracted.
Ho
w
ev
er,
classic
do
es
not
allo
w
retraction
of
information
that
has
b
een
derive
d
from
other
information.
This
is
b
est
explained
with
an
example.
Let
us
b
egin
with
an
individual
that
has
a
restriction
on
all
of
the
llers
of
a
role
and
a
kno
wn
ller
for
that
role,
and
then
try
to
retract
the
restriction
on
the
ller.
If
classic
w
ere
told
that
Lori
drinks
only
k
osher
wines
and
that
one
of
the
wines
that
she
drinks
is
Shalom-Cream-White-Concor
d,
then
Shalom-Cream-White-Conco
rd
w
ould
b
e
inferred
to
b
e
k
osher
(b
y
a
propagation
inference).
If
at
some
p
oin
t,
w
e
actually
w
ere
to
disco
v
er
that
Shalom-Cream-White-Concor
d
w
as
not
k
osher,
w
e
migh
t
w
an
t
to
retract
that
fact
from
our
kno
wledge
base.
classic
w
ould
not
allo
w
this
retraction
since
its
kno
wledge
ab
out
this
fact
is
considered
to
b
e
derive
d
information.
classic
w
ould
force
the
retraction
of
some
piece
of
user-state
d
information
that
led
to
the
conclusion
that
Shalom-Cream-White-Concord
w
as
k
osher.
F
or
example,
the
user
could
retract
either
the
fact
that
Lori
drinks
Shalom-Cream-White-Concord
or
the
fact
that
Lori
drinks
only
k
osher
wines.
The
reason
for
disallo
wing
retraction
of
deriv
ed
information
is
to
main
tain
consistency
of
the
kno
wledge
base.
If
classic
allo
w
ed
direct
retraction
of
the
fact
that
Shalom-Cream-
White-Concord
w
as
k
osher,
then
if
someone
ask
ed
if
it
w
as,
it
w
ould
b
e
unclear
ho
w
to
answ
er:
if
the
ALL
restriction
on
Lori's
drinks
role
w
ere
enforced,
the
answ
er
w
ould
b
e
\y
es";
if
the
directly
stated
facts
on
Shalom-Cream-White-Concord
w
ere
examined,
the
answ
er
w
ould
b
e
\no."
Also,
if
classic
allo
w
ed
retraction
of
deriv
ed
information,
some
up
dates
w
ould
app
ear
nev
er
to
ha
v
e
o
ccurred.
classic's
approac
h
to
up
dates
is
to
retract
the
stated
information
and
automatically
retract
all
deriv
ed
information
that
w
as
based
on
that
information.
Then
the
system
rederiv
es
all
facts
that
hold
in
the
new
situation.
If
classic
allo
w
ed
the
retraction
of
the
fact
that
Shalom-Cream-White-Concor
d
w
as
k
osher,
then
follo
wing
this
algorithm,
it
w
ould
ha
v
e
to
reclassify
Shalom-Cream-White-Concor
d.
It
w
ould
once
again
nd
that
Shalom-Cream-White-Conco
rd
w
as
a
wine
that
Lori
drank
and
then
it
w
ould
propagate
the
restriction
that
the
wine
m
ust
b
e
k
osher.
Th
us
the
kno
wledge
base
w
ould
simply
rev
ert
bac
k
to
the
previous
state
wherein
Shalom-Cream-White-Concord
w
as
k
osher;
the
up
date
w
ould
app
ear
nev
er
to
ha
v
e
o
ccurred.
The
only
other
w
a
y
to
main
tain
consistency
w
ould
b
e
for
classic
to
retract
a
piece
of
information
that
led
to
the
deriv
ed
information.
In
this
case,
it
is
not
clear
whic
h
piece
of
information
that
should
b
e,
th
us
it
seems
appropriate
to
force
the
user
to
mak
e
the
c
hoice.
.
No
Closed
W
orld
Assumption
classic
do
es
not
w
ork
under
the
closed
w
orld
assumption
(CW
A)
for
individuals,
that
is,
it
do
es
not
assume
that
an
ything
that
it
do
es
not
kno
w
is
false.
Th
us,
if
some
bask
et
w
ere
kno
wn
to
ha
v
e
t
w
o
sp
ecic
wines
in
it,
classic
w
ould
not
assume
that
it
had
only
t
w
o
wines
in
it|it
w
ould
deduce
only
that
the
bask
et
had
at
le
ast
t
w
o
wines
in
it.
So
if
this
same
bask
et
had
three
things
to
eat
in
it
and
w
e
knew
that
PICNIC-BASKETs
b
y
denition
had
at
least
three
things
to
eat
and
at
most
t
w
o
wines
in
them,
this
bask
et
could
not
b
e
classied
as
a
PICNIC-BASKET.
It
w
ould
only
b
e
classied
as
suc
h
when
the
drink
role
b
ecame
\closed"|i.e.,
when
classic
w
as
told
or
it
deriv
ed
that
there
could
b
e
no


other
llers
for
the
drink
role.
This
example
sho
ws
that
in
general
an
individual
cannot
b
e
classied
under
a
concept
with
an
A
T-MOST
restriction
un
til
the
corresp
onding
role
is
closed.
The
same
is
true
for
concepts
with
ALL
restrictions.

A
role
can
b
e
closed
in
t
w
o
w
a
ys.
The
user
ma
y
explicitly
tell
classic
that
a
particular
role
on
an
individual
will
ha
v
e
no
more
llers.
Alternately
,
the
system
ma
y
deriv
e
that
a
role
m
ust
b
e
closed.
If
the
system
is
told
that
an
individual
is
an
instance
of
a
PICNIC-BASKET,
and
it
also
kno
ws
that
PICNIC-BASKET
con
tains
the
wines
Kalin-Cellars-Chardonnay
and
Marietta-Zinfandel,
then
classic
can
deduce
that
the
role
is
closed
since
the
denition
of
PICNIC-BASKET
states
that
there
ma
y
b
e
at
most
t
w
o
wines.

There
is
one
w
a
y
to
classify
an
individual
with
resp
ect
to
concepts
with
A
T-MOST
or
ALL
restrictions.
If
the
individual
in
question
has
a
restriction
(either
directly
or
b
y
inheritance),
then
classic
can
mak
e
deductions
based
on
this
restriction,
including
determining
that
it
implies
the
target
A
T-MOST
or
ALL
restriction.
If,
for
example,
classic
is
trying
to
classify
something
as
a
CALIFORNIA-BASK
ET
and
its
drink
role
is
not
closed,
but
it
do
es
ha
v
e
a
restriction
that
all
its
drinks
are
made
in
the
Napa
V
alley
,
and
w
e
kno
w
that
ev
erything
that
is
made
in
Napa
V
alley
is
made
in
California,
then
ev
en
without
kno
wing
all
the
llers
of
the
drink
role,
classic
can
mak
e
the
deduction
that
it
satises
the
ALL
restriction
on
drink
of
CALIFORNIA-BASKET
.



Building
CLASSIC
Kno
wledge
Bases
Once
it
has
b
een
determined
that
classic
is
an
appropriate
language
to
use
in
describing
a
domain,
and
some
of
the
more
subtle
language
issues
are
w
ell
in
hand,
there
is
still
the
signican
t
problem
of
designing
the
kno
wledge
base
giv
en
the
domain
structure.
While
not
iden
tical
to
the
traditional
exp
ert
systems
pro
cess,
the
pro
cess
of
dev
eloping
a
classic
KB
is
a
form
of
kno
wledge
engineering,
where
the
k
ey
is
nding
the
righ
t
w
a
y
to
break
the
domain
in
to
ob
jects
and
their
relationships.
While
there
is
no
single
metho
d
for
pro
ducing
suc
h
an
on
tology
,
w
e
discuss
some
general
issues
to
consider
and
oer
one
p
ossible
pro
cess
for
creating
a
kno
wledge
base.
W
e
also
presen
t
parts
of
a
classic
kno
wledge
base,
to
illustrate
the
st
yle
of
description
of
a
t
ypical
domain
represen
tation.
.
Basic
On
tological
Decisions|Individuals
and
Roles
Since
frame
systems
lik
e
classic
are
ob
ject-cen
tered,
the
k
ey
idea
is
to
determine
what
the
\ob
jects"
in
the
domain
are.
This
in
v
olv
es
the
sp
ecication
of
the
individual
items
ab
out
whic
h
information
can
b
e
gathered
and
asserted
(the
individuals
of
the
domain),
as
w
ell
as
the
sp
ecication
of
classes
of
those
items
that
share
common
prop
erties
(the
c
onc
epts).
The
prop
erties
of
the
individuals
and
the
relationships
b
et
w
een
them
are
then
represen
ted
as
r
oles.
This
is
all
complicated
b
y
t
w
o
k
ey
facts:
what
constitutes
an
\individual"
is
not
alw
a
ys
clear
(dieren
t
lev
els
of
abstraction
are
p
ossible),
and
some
terms
seem
equally
w
ell
expressible
as
concepts
and
as
roles.
In
all
of
these
cases,
the
kno
wledge
engineer
needs
to
mak
e
a
determination
fairly
early
in
the
KB
design
pro
cess.
Let
us
consider
these
t
w
o
issues
in
turn,
and
then
w
e
will
discuss
a
general
pro
cedure
for
getting
a
domain
c
haracterized
in
classic.
..
Individuals
v
ersus
Concepts
Imagine
that
w
e
are
dev
eloping
a
kno
wledge
base
of
fo
o
ds
and
wines.
In
tuitiv
ely
,
it
w
ould
seem
clear
that
items
lik
e
WINE
and
WHITE-WINE
(a
wine
whose
color
is
white)
should
b
e
concepts.
It
is
lik
ewise
reasonably
clear
that
CHARDONNAY-WINE
(a
wine
made
from
the
c
hardonna
y
grap
e)
should
also
b
e
a
concept.
Ho
w
ev
er,
things
are
not
so
simple
when
w
e
attempt
to
represen
t
a
single
\wine."
In
some
kno
wledge
bases,
for
example
in
an
application
that
will
recommend
a
wine
to
a
patron
for
a
general
class
of
dinners
(e.g.,
shellsh),
an
individual
winery's
v
arietal
(e.g.,
F
orman
Chardonna
y)
will
b
e
an
appropriate
individual.
In
our
sample
kno
wledge
base
(Section
.),
w
e
use
this
as
the
lev
el
of
our
individuals.
Ho
w
ev
er,
for
some
problems,
this
lev
el
migh
t
not
b
e
ne-grained
enough.
F
or
the
discriminating
wine-drink
er,
the
vin
tage
of
a
particular
wine
ma
y
b
e
critical,
and
th
us
FORMAN-CHARDONNAY
w
ould
ha
v
e
to
b
e
a
concept,
in
order
that
	-Forman-Chardonnay
could
b
e
an
individual.
Or,
it
migh
t
b
e
necessary
in
some
applications
to
mak
e
individual
b
ottles
of
wine
b
e
individuals
in
classic.
While
dieren
t
kinds
of
ob
jects
can
b
e
considered
individuals
from
dieren
t
p
oin
ts
of
view,
in
a
system
lik
e
classic
w
e
are
forced
to
mak
e
a
commitmen
t
at
the
outset.
In
that
case,
the
k
ey
question
to
ask
is,
whic
h
ob
jects
w
ould
b
e
appropriate
to
c
ount
in
an
application?
Or,
alternativ
ely
,
in
a
retriev
al
application,
whic
h
ob
jects
w
ould
b
e
b
est
to
retriev
e
giv
en
a
query?
F
or
a
wine-advisory
application,
the
answ
er
giv
en
b
y
a
wine
stew
ard
to
the
question,
\Ho
w
man
y
wines
do
y
ou
sto
c
k?"
w
ould
indicate
whic
h
items
to
coun
t
as


individuals
(e.g.,
Forman-Chardonnay).
Alternativ
ely
,
one
could
coun
t
as
individuals
the
items
app
earing
on
a
men
u
(e.g.,
winery
,
v
arietal,
and
vin
tage).
Whatev
er
lev
el
w
e
x
for
our
individuals,
an
y
other
descriptions
in
the
domain
that
could
b
e
considered
individuals
from
some
other
p
oin
t
of
view
can
b
e
handled
in
one
of
t
w
o
less-than-ideal
w
a
ys.
First,
they
could
simply
b
e
represen
ted
as
concepts.
Th
us,
if
	-Forman-Chardonnay
w
as
an
individual,
FORMAN-CHARDONNAY
w
ould
b
e
a
concept,
and
the
former
w
ould
probably
b
e
describ
ed
b
y
the
latter.
An
alternativ
e
w
ould
b
e
to
allo
w
b
oth
ob
jects
to
b
e
individuals.
But
since
classic
do
es
not
curren
tly
supp
ort
a
\meta-description"
facilit
y
,
this
represen
tation
w
ould
b
e
incomplete
in
an
imp
ortan
t
w
a
y
,
in
that
classic
w
ould
main
tain
no
relationship
at
all
b
et
w
een
the
t
w
o
individuals.
One
could
go
so
far
as
to
place
a
generic-varietal
role
on
	-Forman-Chardonnay
and
ll
that
role
with
Forman-Chardonnay,
but
classic
w
ould
treat
that
role
just
as
an
y
other,
and
no
prop
erties
of
the
more
generic
v
arietal
individual
w
ould
b
e
inherited
b
y
the
more
sp
ecic
vin
tage
one.
..
Concepts
v
ersus
Roles
As
men
tioned,
another
k
ey
distinction
that
the
user
of
a
language
lik
e
classic
is
forced
to
mak
e
is
that
b
et
w
een
concepts
and
roles.
A
n
um
b
er
of
p
eople
w
orking
with
kl-one-lik
e
languages
ha
v
e
rep
orted
ha
ving
dicult
y
deciding
whether
something
should
b
e
a
concept
or
a
role.
T
erms
lik
e
\father,"
\landlord,"
etc.,
can
b
e
used
equally
w
ell
in
either
sense.
F
or
example,
\Ron
is
a
new
father"
uses
father
as
a
concept.
\Ron
is
the
father
of
Reb
ecca"
uses
it
as
a
role.
Ev
en
a
more
straigh
tforw
ard
term
lik
e
\grap
e"|an
ob
vious
candidate
for
conceptho
o
d|can
presen
t
a
problem.
W
e
can
easily
imagine
the
prop
erties
of
grap
es
(color,
where-grown,
age-of-vines,
etc.),
and
can
visualize
GRAPE's
place
in
a
taxonom
y
of
t
yp
es
of
fo
o
ds.
Ho
w
ev
er,
it
is
equally
plausible
to
imagine
a
grape
role
for
the
concept
of
WINE,
indicating
the
kind
of
grap
e
a
wine
is
made
from.
Should
gr
ap
e
b
e
a
concept,
a
role,
or
b
oth?
While
the
treatmen
t
of
an
y
particular
domain
term
will
really
dep
end
on
the
application,
there
are
some
general
guidelines
to
use
when
trying
to
design
concepts
and
roles.
Since
part
of
the
problem
is
the
use
of
nouns
in
natural
languages
to
corresp
ond
to
b
oth
concepts
and
roles,
w
e
need
to
lo
ok
b
ey
ond
the
surface
prop
erties
of
w
ords.
In
languages
lik
e
English,
certain
nouns
seem
to
reect
items
that
ha
v
e
existence
indep
enden
t
of
an
y
others
(e.g.,
\p
erson,"
\apartmen
t,"
\wine,"
\grap
e"),
and
others
reect
items
that
dep
end
on
others
for
their
existence
(e.g.,
\father,"
\landlord,"
\vin
tage,"
\skin").
The
former
most
ob
viously
corresp
ond
to
one-place
predicates
in
rst-order
logic.
W
e
w
ould
ha
v
e
no
trouble
describing
an
individual
b
y
one
of
these
terms
without
reference
to
an
y
other
individuals
on
whose
existence
they
dep
end.
Th
us,
w
e
could
indep
enden
tly
c
haracterize
an
ob
ject
as
a
grap
e
without
needing
to
mak
e
reference
to
an
y
wines
made
of
out
of
suc
h
grap
es,
nor
w
ould
there
ev
er
ha
v
e
to
b
e
an
y
.
The
description
of
an
item
as
a
grap
e
w
ould
stand
on
its
o
wn,
without
implying
the
existence
of
an
y
unmen
tioned
individuals.

On
the
other
hand,
while
w
e
migh
t
naturally
use
some
terms
from
the
latter
set
as
if
they
w
ere
also
one-place
predicates
(e.g.,
\Deb
is
a
landlord"),
they
in
actuality
imply

This
discussion
is
in
tended
to
b
e
in
tuitiv
e,
and
relies
only
on
a
naiv
e
understanding
of
the
on
tology
of
the
w
orld.
It
is
not
in
tended
to
in
v
ok
e
deep
discussion
ab
out
existence,
ob
jectho
o
d,
or
an
y
other
metaph
ysical
issues.


the
existenc
e
of
a
se
c
ond
ar
gument
(e.g.,
whom
Deb
is
the
landlord
of
).
In
this
case,
the
primary
represen
tation
in
classic
should
b
e
as
a
role.
An
y
in
terpretation
of
the
term
as
a
concept
w
ould
b
e
derivative
from
its
in
terpretation
as
a
role,
since
there
is
alw
a
ys
an
implie
d
second
argumen
t.
The
clear
guideline
for
discrimination
b
et
w
een
concepts
and
roles
is
th
us
the
determi-
nation
as
to
whether
a
description
can
stand
on
its
o
wn
without
implying
an
unmen
tioned
ob
ject
related
to
the
ob
ject
in
question.
In
an
in
tuitiv
e
on
tology
,
SHELLFISH
w
ould
clearly
b
e
a
concept,
and
vintage
w
ould
clearly
b
e
a
role.
There
are
some
cases|including
those
just
men
tioned|where
it
will
b
e
quite
easy
to
determine
whic
h
is
whic
h.
In
the
case
of
an
unquestionable
concept
lik
e
SHELLFISH,
it
is
almost
imp
ossible
to
imagine
using
the
term
in
a
phrase
lik
e,
\the
shellsh
of
hsomething
elsei."
That
is,
it
w
ould
b
e
v
ery
hard
to
imagine
a
prop
ert
y
of
something
called
its
\shellsh."
In
the
case
of
an
unquestionable
role
lik
e
vintage,
it
is
almost
imp
ossible
to
consider
using
the
term
without
the
\of
"
phrase.
F
or
example,
it
is
un
usual
to
use
\vin
tage"
in
an
y
other
w
a
y
than
as
the
vin
tage
of
a
particular
wine.
Unfortunately
,
most
terms
will
not
b
e
so
pure
in
their
natural
use.
Ho
w
ev
er,
the
basic
guideline
still
applies.
Ev
en
though
w
e
can
refer
to
a
\wine's
grap
e"
(i.e.,
its
comp
osition),
the
concept
of
a
grap
e
stands
on
its
o
wn
and
do
es
not
need
to
lean
on
the
existence
of
an
y
wines.
Ev
en
though
someone
is
referred
to
as
a
\father,"
that
description
is
not
truly
meaningful
without
taking
in
to
accoun
t
the
implied
c
hild.
One
in
teresting
dierence
b
et
w
een
these
t
w
o
cases
(in
whic
h
a
term
can
b
e
used
either
as
a
concept
or
as
a
role)
is
that
in
the
latter
case,
the
v
alue
restriction
used
for
the
father
role
w
ould
ha
v
e
a
dieren
t
name
(MAN)
than
the
role,
whereas
it
seems
most
natural
in
the
former
case
to
name
the
role
with
the
same
name
as
the
v
alue
restriction
(the
grape
role
of
a
WINE
w
ould
b
e
lled
b
y
a
GRAPE).
It
w
ould
seem
somewhat
silly
and
uninformativ
e
to
ha
v
e
the
v
alue
restriction
of
the
father
role
b
e
FATHER.
This
is
b
ecause
the
only
dierence
b
et
w
een
the
concept
MAN
and
an
y
prop
osed
concept
lik
e
FATHER
is
the
man's
playing
the
r
ole
of
father.
One
could
nd
all
of
the
fathers
in
a
kno
wledge
base
simply
b
y
nding
the
set
of
men
and
then
discarding
those
not
kno
wn
to
ll
the
father
role
for
some
individual.
The
concept
of
a
father
clearly
has
its
meaning
comp
ositionally
dep
enden
t
on
the
meaning
of
the
father
role.
In
the
history
of
kl-one-st
yle
languages,
prop
osals
ha
v
e
b
een
made
for
a
t
yp
e
of
ob-
ject
called
a
\qua-concept"
[
F
reeman,
	
]
,
whic
h
w
ould
b
e
a
concept
whose
meaning
is
dep
enden
t
on
some
role.
FATHER
as
a
qua-concept
w
ould
ha
v
e
a
sligh
tly
dieren
t
structure
than,
sa
y
,
MAN,
reecting
the
dep
endence
of
someone's
b
eing
a
father
on
the
existence
of
another
individual
(some
in
teresting
prop
ert
y
inheritance
can
b
e
done
in
this
case
as
w
ell).
classic,
ho
w
ev
er,
has
no
facilit
y
for
this,
so
the
b
est
one
can
do
is
adhere
to
some
reason-
able
con
v
en
tions.
If
a
separate
concept
for
the
role
father
is
truly
necessary
(e.g.,
to
act
as
a
v
alue
restriction
for
some
other
role),
consider
naming
it
MAN-qua-father,
to
indicate
the
functional
dep
endence.
This
concept
w
ould
b
e
a
sub
concept
of
MAN,
and
it
could
b
e
made
to
w
ork
as
if
it
w
ere
a
qua-concept
through
the
use
of
a
pro
cedural
test,
so
that
at
least
classication
of
all
fathers
could
b
e
ac
hiev
ed
automatically
.

In
the
case
of
a
WINE's
grape,
one
could
use
the
same
name
for
the
role
and
the
concept
without
resorting
to
an
y
other
mec
hanism.
classic
will
not
get
confused;
ho
w
ev
er,
users

What
will
b
e
missing
in
this
case
is
the
automatic
recognition
that
an
OLD-FATHER
is
a
FATHER,
since
no
subsumption
is
computed
on
test
functions
(assuming
FATHER
and
OLD-FATHER
eac
h
had
a
single
test
function
to
compute
their
mem
b
ership).


migh
t.
Th
us,
for
clarit
y
,
it
migh
t
b
e
safer
either
to
preface
the
role
name
with
\has"
to
clearly
distinguish
the
t
w
o
senses
(i.e.,
has-grape
w
ould
b
e
a
role
of
WINE),
or
to
create
a
comp
ound
concept
name
so
that
the
role
name
will
b
e
simple.
In
our
sample
kno
wledge
base
in
Section
.,
w
e
do
the
latter,
creating
the
category
of
a
WINE-GRAPE,
and
using
grape
as
a
role
for
WINE.
In
man
y
cases,
there
is
a
natural
role
name
to
use
so
that
this
problem
will
not
ev
en
arise.
Suc
h
is
the
case
with
a
term
lik
e
\vin
tage,"
where
the
v
alue
restriction
of
the
vintage
role
for
WINE
w
ould
b
e
YEAR.
It
is
also
not
required
in
an
y
w
a
y
that
the
names
of
roles
should
b
e
nouns.
made-from
w
ould
b
e
a
p
erfectly
reasonable
name
for
the
role
w
e
ha
v
e
b
een
calling
grape.
Finally
,
one
should
in
general
consider
using
roles
to
represen
t
p
arts
of
ob
jects,
intrinsic
pr
op
erties
(e.g.,
the
color
of
a
wine),
and
extrinsic
pr
op
erties
(e.g.,
the
price
of
a
wine,
whic
h
is
not
an
in
trinsic
feature,
but
rather
set
in
some
external
w
a
y),
as
w
ell
as
for
functionally-
dened
terms
lik
e
\vin
tage."
.
A
Simple
Kno
wledge
Enginering
Metho
dology
for
CLASSIC
When
attempting
to
analyze
a
domain
and
build
a
classic-st
yle
represen
tation,
it
is
often
dicult
to
kno
w
ho
w
to
b
egin.
Ov
er
the
y
ears,
w
e
ha
v
e
dev
elop
ed
some
guidelines
for
building
kno
wledge
bases
that
break
the
pro
cess
do
wn
in
to
a
series
of
steps,
starting
with
a
rough
cut
at
the
domain
on
tology
and
then
rening
the
represen
tation
in
sev
eral
passes.
While
this
metho
d
ma
y
o
v
ersimplify
the
kno
wledge
represen
tation
pro
cess,
it
ma
y
b
e
useful
in
man
y
application
areas,
esp
ecially
for
those
who
are
just
getting
started
in
using
classic
or
other
languages
lik
e
it.
W
e
con
tin
ue
using
our
wine
and
meal
examples.
W
e
ha
v
e
included
b
elo
w
sk
etc
hes
of
p
ortions
of
the
ev
olving
KB
to
exemplify
most
of
the
steps.
.
En
umerate
Ob
ject
T
yp
es.
First,
without
making
an
y
ne-grained
distinctions,
it
is
useful
to
try
to
write
do
wn
a
list
of
all
t
yp
es
of
ob
jects
y
ou
w
ould
ev
er
care
to
mak
e
statemen
ts
ab
out
or
explain
to
a
user.
F
or
example,
imp
ortan
t
wine-related
ob
ject-t
yp
es
will
include
wine;
gr
ap
e;
winery;
lo
c
ation;
a
wine's
c
olor,
b
o
dy,
avor,
and
sugar-c
ontent;
dieren
t
t
yp
es
of
fo
o
d,
lik
e
shel
lsh
and
r
e
d-me
at;
subt
yp
es
of
wine
suc
h
as
white
wine;
etc.
The
k
ey
thing
initially
is
to
get
a
comprehensiv
e
list
of
names
without
w
orrying
ab
out
o
v
erlap
b
et
w
een
concepts
or
an
y
prop
erties
that
the
items
migh
t
ha
v
e.
.
Distinguish
Concepts
from
Roles.
Lo
oking
at
the
list,
mak
e
a
ma
jor
cut
b
y
distinguishing
b
et
w
een
ob
jects
that
ha
v
e
indep
enden
t
existence
and
those
that
dep
end
on
other
ob
jects
for
their
existence
(see
Section
..).
The
former
will
b
e
concepts,
the
latter
m
ust
b
e
roles.
F
or
example,
wines
will
exist
as
indep
enden
t
ob
jects,
as
	

will
wineries,
but
the
b
o
dy
of
a
wine
and
its
sugar
con
ten
t
are
more
appropriately
though
t
of
as
roles.
In
dev
eloping
a
classic
KB,
it
is
also
necessary
to
distinguish
whic
h
roles
are
attributes,
i.e.,
whic
h
ones
ha
v
e
exactly
one
ller.
Th
us,
color
migh
t
b
e
an
attribute,
since
a
giv
en
wine
can
ha
v
e
only
one
color,
and
grape
w
ould
b
e
a
regular,
m
ultiply-llable
role,
since
a
wine
can
b
e
made
from
more
than
one
t
yp
e
of
grap
e.
.
Dev
elop
Concept
T
axonom
y
.
Group
the
concept
ob
jects
in
to
a
hierarc
hical
tax-
onom
y
b
y
asking
if
b
y
b
eing
an
instance
of
a
t
yp
e,
an
ob
ject
will
necessarily
(i.e.,
b
y
denition)
b
e
an
instance
of
some
other
t
yp
e.
The
latter
will
then
b
e
ab
o
v
e
the
former
in
the
hierarc
h
y
.
F
or
example,
if
something
is
a
WHITE-WINE,
it
will
neces-
sarily
b
e
a
WINE.
Th
us
WHITE-WINE
will
b
e
a
descendan
t
of
WINE
in
the
taxonom
y
.
Remem
b
er
that
it
is
p
ossible
for
a
t
yp
e
to
b
e
an
immediate
descendan
t
of
more
than
one
other
t
yp
e.
F
or
example,
a
DRY-WHITE-WINE
m
ust
b
e
b
oth
a
DRY-WINE
and
a
WHITE-WINE.


Note
that
once
the
nal
represen
tation
of
a
concept
lik
e
DRY-WHITE-WINE
is
completed,
classic
will
b
e
able
to
determine
automatically
that
it
is
a
sub
concept
of
the
other
t
w
o
concepts.
Ho
w
ev
er,
when
dev
eloping
the
domain
on
tology
,
it
is
not
a
bad
idea
to
sk
etc
h
out
these
relationships
b
y
hand;
once
the
formal
represen
tation
is
constructed
and
ev
erything
is
classied,
the
user
can
c
hec
k
the
resulting
taxonom
y
against
his/her
original
conception
of
the
domain,
to
see
if
the
formal
represen
tation
is
correct.
0

.
Individuals.
Isolate
the
set
of
k
ey
individuals
that
will
b
e
imp
ortan
t
in
all
uses
of
the
application.
F
or
example,
wine
colors
lik
e
red,
white,
and
rose,
and
wine
sugar-
lev
els
lik
e
dry
and
sw
eet
will
b
e
critical
in
the
denition
of
concepts
lik
e
WHITE-WINE
and
DRY-WINE.
F
or
eac
h
individual,
try
to
determine
all
of
the
concepts
that
aptly
describ
e
it.
.
Determine
Prop
erties
and
P
arts.
Once
the
basic
on
tology
is
laid
out,
with
the
taxonomic
relationships
b
et
w
een
concepts
b
eing
fairly
clear,
it
is
time
to
turn
atten
tion
to
the
in
ternal
structure
of
the
concepts.
F
or
eac
h
concept
en
umerated
so
far,
write
do
wn
a
list
of
its
prop
erties.
These
should
include

\intrinsic"
pr
op
erties
lik
e
the
color
and
b
o
dy
of
a
wine;

\extrinsic"
pr
op
erties
lik
e
a
wine's
name
and
its
price;

p
arts,
if
the
t
yp
e
of
ob
ject
is
structured;
these
can
b
e
b
oth
ph
ysical
and
abstract
\parts"
(e.g.,
the
courses
of
a
meal,
the
grap
e
of
a
wine,
the
casks
of
a
winery).
(In
the
case
of
wines,
w
e
ha
v
e
no
in
tuitiv
ely
ob
vious
parts.)
Record
also
an
y
k
ey
relationships
b
et
w
een
individual
mem
b
ers
of
the
class
and
other
items
(e.g.,
relationships
lik
e
emplo
y
ee
that
migh
t
not
b
e
considered
prop
erties
or
parts
of
a
winery).
Eac
h
of
the
ab
o
v
e
relationships
should
b
e
assigned
to
a
role
(while
it
is
useful
to
distinguish
b
et
w
een
parts
and
other
prop
erties,
classic
and
related
languages
do
not
ha
v
e
an
y
formal
mec
hanism
for
distinguishing
amongst
dieren
t
t
yp
es
of
roles).
It
is
reasonable
to
exp
ect
that
man
y
of
the
roles
will
b
e
used
in
man
y
concepts.
Eac
h
of
the
items
determined
to
b
e
a
role
in
Step

should
b
e
accoun
ted
for.
N.B.
Some
of
the
roles
determined
to
b
e
relev
an
t
to
a
concept
in
this
step
will
ultimately
end
up
pla
ying
a
part
in
the
denition
of
the
concept,
and
some
will
b
e
used
to
express
derive
d
prop
erties.
In
other
w
ords,
some
of
the
role
restrictions
generated
in
Steps
{	
m
ust
b
e
satised
for
an
individual
to
b
e
considered
to
satisfy
a
concept;
the
other
restrictions
will
b
e
appropriate
to
infer
ab
out
the
individual
once
it
is
determined
to
satisfy
the
concept
denition.
F
or
example,
a
v
alue
restriction
lik
e
(FILLS
color
White),
deriv
ed
in
Step
,
will
b
e
part
of
the
meaning
of
WHITE-WINE;
this
means
that
an
individual
will
need
to
ha
v
e
its
color
b
e
pro
v
ably
white
b
efore
it
will
b
e
placed
in
that
category
.
The
same
restriction
could,
ho
w
ev
er,
b
e
a
deriv
ed


prop
ert
y
of
CHARDONNAY-WINE,
since
it
is
not
necessary
to
determine
that
a
wine
is
white
b
efore
deciding
that
it
is
a
Chardonna
y
(it
need
only
b
e
kno
wn
that
it
is
made
with
a
Chardonna
y
grap
e).
Keep
this
in
mind
for
Step
0.
Also,
see
Section
.
for
more
on
this
distinction.
.
Determine
Num
b
er
Restrictions.
F
or
eac
h
concept
and
eac
h
role
that
is
relev
an
t
to
its
meaning,
determine
the
cardinalit
y
of
the
set
of
role
llers
(e.g.,
that
a
wine
can
ha
v
e
only
one
region
but
sev
eral
grap
es).
These
will
b
e
expressed
in
classic
as
A
T-LEAST
and
A
T-MOST
restrictions.
.
Determine
V
alue
Restrictions.
F
or
eac
h
concept
and
eac
h
of
its
relev
an
t
roles,
determine
the
class
of
v
alues
that
can
appropriately
ll
the
role.
These
\v
alue
restric-
tions"
(e.g.,
that
the
region
of
a
WINE
m
ust
b
e
a
geographic
region)
will
b
e
expressed
in
ALL
restrictions.
In
the
ev
en
t
that
a
role
m
ust
b
e
lled
b
y
a
single
individual
(e.g.,
a
CHARDONNAY-WINE
m
ust
ha
v
e
its
grape
role
lled
b
y
exactly
Chardonnay),
or
a
xed
set
of
individuals,
use
the
FILLS
construct
in
conjunction
with
an
A
T-MOST
restric-
tion.
If
there
is
more
than
one
p
oten
tial
ller
(not
all
of
whic
h
m
ust
necessarily
ll
the
role),
but
the
set
of
candidates
is
a
xed
set
of
individuals,
use
the
ONE-OF
con-
struct
(e.g.,
a
NON-SWEET-WINE
has
as
the
llers
of
its
sugar
role
the
set
(ONE-OF
Dry
Off-Dry)).


.
Detail
Unrepresen
ted
V
alue
Restrictions.
F
or
eac
h
v
alue
restriction
th
us
needed,
mak
e
sure
that
the
appropriate
concept
exists
in
the
previously-generated
general
taxonom
y
.
If
it
had
previously
b
een
prop
osed,
add
it
to
the
general
taxonom
y
(for
example,
it
is
probable
that
w
e
had
not
though
t
to
create
the
concept
of
a
geographic
region
prior
to
thinking
ab
out
the
structure
of
WINE).
If
the
concept
will
b
e
imp
or-
tan
t
in
the
domain
mo
del,
go
through
all
of
the
ab
o
v
e
steps
for
that
new
concept
and
an
y
related
ones
y
ou
neglected
to
create
b
efore.
F
or
example,
if
y
ou
determine
that
the
grape
of
a
WINE
m
ust
b
e
a
WINE-GRAPE,
and
the
concept
of
suc
h
a
grap
e
is
imp
ortan
t,
consider
creating
sp
ecialized
sub
concepts
that
migh
t
b
e
useful
(e.g.,
CHARDONNAY).
F
or
eac
h
of
the
new
concepts,
consider
their
prop
erties
and
relations
to
other
concepts
and
individuals.
	.
Determine
In
ter-role
Relationships.
F
or
eac
h
concept,
en
umerate
an
y
relation-
ships
among
its
roles
that
migh
t
b
e
imp
ortan
t
to
y
our
domain
kno
wledge
(for
example,
it
migh
t
b
e
imp
ortan
t
to
restrict
the
suggested-retail-price
of
a
WINE
suc
h
that
it
is
the
WINE's
maker's
marketing-rep
that
sets
it).
classic
and
languages
lik
e
it
ha
v
e
only
limited
means
of
expressing
these
in
ter-role
restrictions,
but
they
are
useful
to
en
umerate.
F
or
a
classic
represen
tation,
an
y
constrain
t
that
can
b
e
expressed
as
an
equalit
y
b
et
w
een
t
w
o
c
hains
of
attributes
on
the
same
ob
ject
can
b
e
expressed
with
the
SAME-AS
construct.
An
y
other
constrain
ts
m
ust
b
e
expressed
in
opaque
form
with
the
TEST-C
or
TEST-H
construct.


0.
Distinguish
Essen
tial
and
Inciden
tal
Prop
erties.
A
t
this
p
oin
t,
for
eac
h
con-
cept,
w
e
will
ha
v
e
determined
a
set
of
paren
t
concepts
(expressed
in
the
taxonom
y)
and
a
set
of
restrictions,
namely
n
um
b
er,
v
alue,
in
ter-role
equalit
y
(SAME-AS),
and
opaque
test
restrictions.
F
or
eac
h
concept,
lo
ok
o
v
er
this
set,
think
ab
out
what
it
w
ould
mean
to
b
e
a
mem
b
er
of
the
class
sp
ecied
b
y
the
concept,
and
isolate
the
set
of
concepts
and
restrictions
that
w
ould
appropriately
constitute
a
set
of
essen
tial
prop
erties.
These
prop
erties
w
ould
b
e
sucien
t
for
determining
mem
b
ership
in
the
concept
in
question.
F
or
example,
with
a
RED-BORDEAUX-WINE,
the
fact
that
it
is
a
WINE
whose
color
is
Red
and
whose
region
is
Bordeaux
w
ould
b
e
essen
tial
to
its
denition.
It
sugar
con
ten
t
w
ould
b
e
an
inciden
tal
prop
ert
y
and
w
ould
not
b
e
neces-
sary
to
kno
w
b
efore
determining
that
something
w
as
a
red
Bordeaux.
The
essen
tial
prop
erties
w
ould
constitute
the
denition
of
the
concept
while
the
other
prop
erties
w
ould
then
b
e
expressed
as
the
consequen
ts
of
rules
asso
ciated
with
the
concept
(e.g.,
RED-BORDEAUX-WINE
w
ould
ha
v
e
a
rule
asserting
that
the
wine
is
a
DRY-WINE;
th
us
the
sugar
con
ten
t
need
not
b
e
kno
wn
in
order
to
determine
that
something
is
a
red
Bordeaux,
but
it
w
ould
b
e
univ
ersally
true
of
all
red
Bordeaux
wines).
.
Distinguish
Primitiv
e
and
Dened
Concepts.
Determine
if
eac
h
prop
osed
con-
cept
denition
is
complete.
That
is,
do
the
conditions
determined
b
y
the
ab
o
v
e
steps
constitute
a
complete
set
of
necessary
and
sucien
t
conditions
for
the
concept?
In
the
case
of
a
RED-BORDEAUX-WINE,
the
conditions
that
it
is
a
WINE,
that
its
color
m
ust
b
e
exactly
Red,
and
that
its
region
m
ust
b
e
Bordeaux
w
ould
indeed
b
e
b
oth
necessary
and
sucien
t.
F
or
those
items
whose
denitional
complemen
t
is
not
fully
sucien
t,
mak
e
the
concepts
primitiv
e.
F
or
example,
w
e
ma
y
not
consider
WINE
to
b
e
fully
dened
as
a
POTABLE-LIQUID
with
at
least
one
grape;
w
e
w
ould
not
w
an
t
ev
ery
liquid
made
from
grap
es
to
b
e
considered
a
wine.
Th
us
WINE
w
ould
ha
v
e
to
b
e


primitiv
e.
.
Determine
DISJOINT-PRIMITIVE
Concepts.
F
or
those
concepts
determined
to
b
e
primitiv
e,
determine
if
an
y
are
m
utually
exclusiv
e.
Group
those
so
determined
in
to
clusters
under
a
common
sup
erconcept.

T
ypically
,
the
highest
concepts
in
the
hierarc
h
y
will
b
e
primitiv
e
and
disjoin
t.
F
or
example,
SHELLFISH
and
FISH
w
ould
b
e
go
o
d
candidates
for
disjoin
t
primitiv
e
concepts
with
a
m
utual
paren
t
of
SEAFOOD.
They
are
disjoin
t
b
ecause
no
individual
can
b
e
describ
ed
b
y
more
than
one
of
them
at
a
time,
and
they
are
primitiv
e
b
ecause
in
this
domain
w
e
are
not
in
terested
in
an
y
in
ternal
structure
or
further
description
of
individuals
that
satisfy
these
descriptions
(w
e
will
t
ypically
declare
b
y
at
that
Crab
is
a
SHELLFISH,
without
exp
ecting
classic
to
b
e
able
to
determine
it
b
y
itself
).
Use
the
DISJOINT-PRIMITIVE
construct
to
sp
ecify
these
concepts.
The
result
of
translating
the
informal
represen
tation
created
ab
o
v
e
in
to
classic
will
b
e
a
kno
wledge
base
of
concepts,
roles,
individuals,
and
rules
(note
that
an
item
m
ust
b
e
dened
prior
to
its
rst
use,
since
there
are
no
circular
denitions
allo
w
ed;
ho
w
ev
er,
a
concept
can
b
e
used
in
the
consequen
t
of
a
rule
that
is
asso
ciated
with
it).
The
concepts
will
ha
v
e
a
set
of
necessary
,
and
sometimes,
necessary
and
sucien
t
conditions
expressed
as
sets
of
more
general
concepts
and
restrictions
(those
concepts
with
no
sucien
t
conditions
w
ould
b
e
constructed
using
the
PRIMITIVE
or
DISJOINT-PRIMITIVE
op
erators).
The
paren
ts
and
restrictions
on
a
concept
w
ould
b
e
conjoined
with
the
AND
op
erator,
and
eac
h
restriction
w
ould
b
e
expressed
with
an
ALL,
A
T-LEAST,
A
T-MOST,
FILLS,
or
SAME-AS
op
erator
(or
a
TEST,
if
appropriate).
Named
concepts
w
ould
also
b
e
the
an
teceden
ts
of
rules
expressing
necessary
conditions|descriptions
that
w
ould
follo
w
once
something
w
ere
determined
to
b
e
a
mem
b
er
of
the
class.
Here
w
e
sho
w
b
oth
the
sc
hematic
form
and
the
classic
form
of
the
t
w
o
examples
w
e
ha
v
e
b
een
follo
wing:

In
classic,
there
can
b
e
sev
eral
disjoin
t
groupings
under
the
same
concept,
with
the
assumption
that
there
is
a
common
dimension
along
whic
h
all
the
items
in
a
grouping
dier
(imagine,
for
example,
grouping
sub
concepts
of
PERSON
b
y
gender
or
b
y
age).
Th
us
the
DISJOINT-PRIMITIVE
construct
requires
the
user
not
only
to
sp
ecify
the
paren
t
concept,
but
to
name
a
grouping
in
to
whic
h
to
put
the
primitiv
e
b
eing
sp
ecied.


.
A
Sample
Kno
wledge
Base
In
order
to
illustrate
the
general
w
a
ys
a
user
will
use
classic
to
build
a
kno
wledge
base,
w
e
will
no
w
consider
some
sample
denitions
from
the
w
orld
of
wines
and
meals.
The
basic
goal
here
is
to
allo
w
a
user
to
describ
e
the
fo
o
d
eaten
at
a
particular
course
of
a
meal
(in
a
v
ery
simple
w
a
y),
and
ha
v
e
the
KB
recommend
an
appropriate
set
of
wines.
The
kno
wledge
is
organized
so
that
a
new
wine
can
b
e
describ
ed
in
a
n
um
b
er
of
dieren
t
w
a
ys
(e.g.,
it


migh
t
b
e
asserted
to
b
e
a
late-harv
est
Semillon,
or
a
white
wine
from
the
Loire
region);
it
is
then
classied
with
resp
ect
to
a
general
set
of
useful
wine-t
yp
es
(e.g.,
CHARDONNAY-WINE).
Once
the
wine
is
classied,
prop
erties
not
directly
asserted
b
y
the
user
are
deriv
ed
using
rules
whose
an
teceden
ts
are
the
general
wine-t
yp
es
(e.g.,
if
all
Chardonna
ys
are
either
full-
or
medium-b
o
died,
this
information
will
b
e
represen
ted
as
a
rule
whose
an
teceden
t
is
the
concept
of
a
Chardonna
y
wine).
Th
us
wines
can
b
e
en
tered
in
a
v
ariet
y
of
w
a
ys|b
y
region,
b
y
v
arietal,
b
y
color,
etc.|and
ultimately
as
m
uc
h
as
p
ossible
ab
out
their
color,
b
o
dy
,
sw
eetness,
etc.,
will
b
e
ascertained
automatically
.
In
parallel
to
the
hierarc
h
y
of
useful
wine-t
yp
es,
w
e
ha
v
e
a
simple
hierarc
h
y
of
fo
o
d-
t
yp
es.
The
fo
o
d-t
yp
es
are
used
to
describ
e
a
course
the
user
is
considering
ha
ving
(e.g.,
\a
MEAL-COURSE

whose
food
is
a
SHELLFISH").
The
connection
b
et
w
een
wines
and
fo
o
d
is
to
b
e
made
via
a
hierarc
h
y
of
course-t
yp
es
(e.g.,
SHELLFISH-COURSE).
Eac
h
useful
course-t
yp
e
(not
ev
ery
p
ossible
course-t
yp
e
forces
a
c
hoice
of
wines)
has
an
asso
ciated
rule
that
states
what
c
haracteristics
are
required
of
its
wine
(e.g.,
seafo
o
d-courses
demand
white
wines,
o
yster-courses
need
sw
eet
wines).
The
system
mak
es
a
\recommendation"
in
a
simple
forw
ard-c
haining
w
a
y:
the
user's
course-t
yp
e
is
classied,
rules
applying
to
it
are
inherited
from
all
descriptions
that
apply
to
the
course,
the
rules
are
red,
and
the
consequen
ts
assert
v
arious
constrain
ts
on
the
drink
of
the
course.
The
user
can
then
examine
the
drink
role
of
the
course
to
see
what
c
haracteristics
are
necessary
for
the
wine,
as
w
ell
as
whic
h
wines
are
compatible
with
those
c
haracteristics.
This
is
an
example
of
a
simple
forw
ard-c
haining
constrain
t
propagation
application.
The
v
alue
of
organizing
the
kno
wledge
in
this
fashion
is
that
the
wine
descriptions
are
decoupled
from
the
requiremen
ts
for
eac
h
course
t
yp
e.
A
new
wine
can
b
e
added,
a
giv
en
wine
can
easily
ha
v
e
its
c
haracteristics
c
hanged,
or
a
giv
en
fo
o
d
can
b
e
asso
ciated
with
dieren
t
wine
c
haracteristics,
all
b
y
making
only
lo
cal
c
hanges.
Figure

sho
ws
the
top
few
lev
els
of
the
concept
hierarc
h
y
for
our
wine
and
fo
o
d
KB.
In
the
subsequen
t
gures
illustrating
our
concepts,
w
e
do
not
presen
t
the
information
in
the
exact
form
in
whic
h
w
e
w
ould
t
yp
e
it
to
classic|that
w
ould
in
v
olv
e
for
eac
h
item
a
call
to
a
Common
LISP
function.
Instead,
w
e
ha
v
e
used
the
notation
in
Figure

to
signify
the
t
yp
e
of
description
b
eing
dened
or
applied.
Th
us,
for
example,
WINE-COLOR
,
(AND
WINE-PROPERTY
(ONE-OF
White
Rose
Red))
w
ould
mean
that
WINE-COLOR
is
fully
dened
as
a
WINE-PROPERTY
whose
only
p
ossible
instances
are
White,
Rose,
and
Red.
Similarly
,
SEAFOOD-COURSE

(ALL
drink
WHITE-WINE)
w
ould
mean
that
if
an
ob
ject
w
ere
determined
to
b
e
a
SEAFOOD-COURSE,
it
automatically
follo
ws
that
all
of
its
drinks
are
WHITE-WINEs.
The
t
w
o
denitions,
MEAL-COURSE

+

)
CONSUMABLE-THING,
(AND
(A
T-LEAST

food)
(ALL
food
EDIBLE-THING)
(A
T-LEAST

drink)
(ALL
drink
POTABLE-LIQUID))

In
the
sample
KB,
w
e
use
course
for
the
role
of
a
course
at
a
meal,
and
MEAL-COURSE
for
the
concept
of
a
course.


Figure
:
Hierarc
h
y
of
the
Sample
Kno
wledge
Base


expr
ession
me
aning
c
,
e
c
is
fully
dened
b
y
the
expression
e
c
)
e
c
is
a
primitiv
e
sub
concept
of
the
concept
represen
ted
b
y
e
c

i
)
e
c
is
a
disjoin
t
primitiv
e
sub
concept
of
the
concept
represen
ted
b
y
e,
in
the
disjoin
t
grouping
lab
eled
\i"
c
is
the
com
bination
of
the
expression
E
and
c

+
i
)
e,
E
a
(unnamed)
disjoin
t
primitiv
e
sub
concept
of
the
concept
represen
ted
b
y
e
(whic
h
is
in
the
disjoin
t
grouping
lab
eled
\i")
c

e
c
is
the
an
teceden
t
of
a
rule
whose
consequen
t
is
e
i
!
e
i
is
an
individual
and
is
asserted
to
ha
v
e
the
prop
erties
describ
ed
b
y
e
r
!
r
is
a
role
r
!
!
r
is
an
attribute
Figure
:
Sym
b
ols
Used
to
Describ
e
the
Sample
Kno
wledge
Base
and
MEAL

+

)
CONSUMABLE-THING,
(AND
(A
T-LEAST

course)
(ALL
course
MEAL-COURSE))
w
ould
mean
that
MEAL-COURSE
and
MEAL
w
ere
b
oth
sp
ecializations
of
CONSUMABLE-THING,
they
w
ere
m
utually
disjoin
t,
and
they
eac
h
had
the
additional
prop
erties
sp
ecied.
Figure

illustrates
the
b
eginning
of
our
wine
and
fo
o
d
KB.
Since
roles
are
used
in
concept
denitions,
and,
in
the
curren
t
v
ersion
of
classic,
do
not
themselv
es
dep
end
on
an
y
other
constructs,
the
roles
to
b
e
used
in
the
KB
w
ould
b
e
dened
rst.
In
this
case,
w
e
assume
the
follo
wing
roles
are
dened
at
the
b
eginning
of
the
KB:
color,
body,
flavor,
sugar,
region,
grape,
maker,
drink,
food,
and
course
(note
that
all
but
grape
and
course
are
attributes).
After
the
roles
are
dened,
it
is
usually
a
go
o
d
idea
to
dene
the
classes
of
ob
jects
that
are
used
only
in
v
alue
restrictions
of
other
concepts.
In
the
gure,
w
e
dene
a
simple
primitiv
e,
WINE-PROPERTY,
whic
h
will
serv
e
as
the
paren
t
for
all
wine-
prop
erties
later
used
in
the
KB.

Since
w
e
w
an
t
wines
to
ha
v
e
colors,
and
w
e
can
sp
ecify
in
adv
ance
all
of
the
individuals
that
can
b
e
wine
colors,
w
e
create
a
dened
sub
concept
of
WINE-PROPERTY
called
WINE-COLOR,
sp
ecifying
all
of
its
p
ossible
instances
with
a
ONE-
OF
description.
Similarly
,
w
e
create
the
wine-prop
erties
of
WINE-BODY,
WINE-FLAVOR,
and
WINE-SUGAR.
Next
w
e
create
the
top
part
of
the
main
hierarc
h
y
.
Because
concepts
and
roles
m
ust
b
e
dened
b
efore
they
are
used,
a
classic
KB
le
will
generally
pro
ceed
from
most
general
concepts
to
most
sp
ecic
ones.
In
Figure
,
w
e
dene
a
few
high-lev
el
primitiv
e
concepts.
The
simple
w
orld
w
e
are
describing
is
brok
en
in
to
four
disjoin
t
parts:
WINE-PROPERTYs,
WINERYs,
WINE-REGIONs,
and
CONSUMABLE-THINGs
(this
will
b
e
used
for
fo
o
ds
and
wines,

As
illustrated,
WINE-PROPERTY
is
a
mem
b
er
of
disjoin
t
grouping
n
um
b
er

of
CLASSIC-THING.
In
Fig-
ure
,
w
e
illustrate
the
other
concepts
that
are
disjoin
t
from
this
one.
	

Wine
and
Meal
Kno
wledge
Base.
After
dening
the
roles,
dene
v
alue
restriction
concepts
and
individuals
to
b
e
used
in
further
denitions.
color
!
!
body
!
!
flavor
!
!
sugar
!
!
region
!
!
grape
!
maker
!
!
drink
!
!
food
!
!
course
!
WINE-PROPERTY


)
CLASSIC-THING
WINE-COLOR
,
(AND
WINE-PROPERTY
(ONE-OF
White
Rose
Red))
WINE-BODY
,
(AND
WINE-PROPERTY
(ONE-OF
Light
Medium
Full))
WINE-FLAVOR
,
(AND
WINE-PROPERTY
(ONE-OF
Delicate
Moderate
Strong))
WINE-SUGAR
,
(AND
WINE-PROPERTY
(ONE-OF
Sweet
Off-Dry
Dry))
Figure
:
Sample
Kno
wledge
Base
|
Roles
and
Some
Basic
V
alue
Restrictions
0

Dene
the
other
topmost
concepts.
WINERY


)
CLASSIC-THING
WINE-REGION


)
CLASSIC-THING
CONSUMABLE-THING


)
CLASSIC-THING
EDIBLE-THING


)
CONSUMABLE-THING
POTABLE-LIQUID


)
CONSUMABLE-THING
SEAFOOD


)
EDIBLE-THING
FRUIT


)
EDIBLE-THING
SHELLFISH


)
SEAFOOD
FISH


)
SEAFOOD
Dene
some
instances
of
WINERY
and
WINE-REGION.
Forman
!
WINERY
Kalin-Cellars
!
WINERY
Napa-Valley
!
WINE-REGION
Dene
WINE-GRAPE
and
some
instances
of
it.
SWEET-FRUIT


)
FRUIT
GRAPE


)
SWEET-FRUIT
EATING-GRAPE
)
GRAPE
WINE-GRAPE
)
GRAPE
Chardonnay
!
WINE-GRAPE
Semillon
!
WINE-GRAPE
Figure
:
Sample
Kno
wledge
Base
|
More
General
Concepts
as
w
ell
as
meals
and
courses|sp
ecial
categories
needed
to
trigger
the
inferences
ab
out
wine-t
yp
es
for
dieren
t
fo
o
ds|see
Figure
	).
In
this
gure
w
e
also
dene
sev
eral
t
yp
es
of
CONSUMABLE-THING,
and
then
some
represen
tativ
e
instances
of
WINERY
and
WINE-REGION.
W
e
then
include
some
information
ab
out
grap
es
that
will
b
e
needed
later.
Note
that
there
ma
y
b
e
some
grap
es
used
for
eating
that
are
also
used
for
making
wine,
so
EATING-GRAPE
and
WINE-GRAPE
ha
v
e
b
een
dened
as
primitiv
e
but
not
disjoin
t
concepts
under
GRAPE.
So
far,
w
e
ha
v
e
created
only
simple
primitiv
e
concepts.
classic
allo
ws
the
construction
of
m
uc
h
more
complex,
but
still
primitiv
e
concepts.
F
or
example,
w
e
migh
t
w
an
t
to
giv
e
WINE
some
complex
necessary
conditions
as
part
of
its
meaning,
but
tell
classic
that
the
conditions
w
e
giv
e
it
are
not
sucien
t
for
recognizing
wines.
W
e
w
ould
accomplish
this
b
y
dening
WINE
as
a
primitiv
e
with
a
complex
expression,
as
illustrated
in
Figure
.
W
e
can
read
this
denition
of
WINE
as
something
lik
e,
\a
wine
is,
among
other
things,
a
p
otable
liquid
with
exactly
one
color
[b
ecause
color
is
an
attribute],
whic
h
m
ust
b
e
a
wine-color,
exactly
one
b
o
dy
,
.
.
.
"
Once
w
e
ha
v
e
the
k
ey
basic
concept
of
a
WINE
dened,
w
e
can
describ
e
the
more
sp
ecial-
ized
t
yp
es
of
wines
w
e
w
ould
lik
e
to
b
e
able
to
recognize
automatically
.
Figure

illustrates
three
fully-dened
wine
sub
concepts.
F
or
example,
a
WHITE-WINE
is
fully
dened
as
a
wine
whose
color
is
white.
The
condition
that
the
color
of
a
WHITE-WINE
m
ust
b
e
exactly


Dene
the
concept
of
a
wine.
WINE
)
(AND
POTABLE-LIQUID
(A
T-LEAST

color)
(ALL
color
WINE-COLOR)
(A
T-LEAST

body)
(ALL
body
WINE-BODY)
(A
T-LEAST

flavor)
(ALL
flavor
WINE-FLAVOR)
(A
T-LEAST

sugar)
(ALL
sugar
WINE-SUGAR)
(A
T-LEAST

region)
(ALL
region
WINE-REGION)
(A
T-LEAST

grape)
(ALL
grape
WINE-GRAPE)
(A
T-LEAST

maker)
(ALL
maker
WINERY))
Figure
:
Sample
Kno
wledge
Base
|
WINE
White
is
sucien
tly
stated
as
(FILLS
color
White),
since
color
has
b
een
dened
as
an
attribute,
and
an
attribute
has
exactly
one
ller.
In
the
case
of
CHARDONNAY-WINE,
whose
grape
role
m
ust
b
e
lled
b
y
exactly
the
individual
Chardonnay,
the
denition
of
WINE
sa
ys
that
a
CHARDONNAY-WINE
(or
an
y
wine)
m
ust
ha
v
e
at
least

grap
e,
and
the
restriction
on
CHARDONNAY-WINE,
(ALL
grape
(ONE-OF
Chardonnay)),
sp
ecies
what
that
grap
e
is,
and
that
there
can
b
e
no
additional
llers
for
the
grape
role.
Returning
to
WHITE-WINE,
note
that
White
is
consonan
t
with
the
general
v
alue
restriction
previously
stated
for
the
color
role
of
WINE
(i.e.,
White
is
a
WINE-COLOR).
In
an
y
case,
classic
will
recognize
an
y
wine
whose
color
is
determined
to
b
e
white
by
any
me
ans
(user
assertion,
rule
ring,
propagation
from
some
other
assertion,
etc.)
as
an
instance
of
WHITE-WINE.
Figure

also
illustrates
some
rules
based
on
CHARDONNAY-WINE.
Since
w
e
ha
v
e
stated
nothing
sp
ecic
ab
out
the
Chardonnay
grap
e
(i.e.,
it
is
nev
er
stated
that
wines
made
from
this
grap
e
are
white),
w
e
ha
v
e
a
rule
stating
that
Chardonna
ys
ha
v
e
color
white.
Th
us,
an
y
wine
whose
grap
e
is
recognized
to
b
e
exactly
Chardonnay
will
end
up
b
eing
a
WHITE-WINE
as
w
ell,
since
the
rule
will
assert
that
its
color
is
white,
and
classication
will
use
the
fact
that
it
is
a
wine
and
also
white
to
determine
that
it
is
a
WHITE-WINE.
	
W
e
also
include
rules
ab
out
the
b
o
dy
and
a
v
or
of
Chardonna
ys.
Once
w
e
ha
v
e
the
wine
hierarc
h
y
dened,
it
is
reasonable
to
create
and
describ
e
indi-
viduals
for
v
arious
particular
wines.
Figure

illustrates
t
w
o
t
ypical
descriptions
of
suc
h
individuals.
Note
that
b
y
inheritance
Forman-Chardonnay
will
end
up
with
all
kno
wn
prop
erties
of
CHARDONNAY-WINEs
(as
w
ell
as
of
WINEs
in
general),
as
w
ell
as
the
individual
prop
erties
stated
in
the
gure.
As
w
e
men
tioned
ab
o
v
e,
once
this
individual
is
created,
it
will
b
e
classied
under
all
appropriate
dened
concepts,
suc
h
as
FULL-BODIED-WINE.
In
addition,
in
this
case,
the
rule
that
sa
ys
that
Chardonna
ys
are
alw
a
ys
white
will
re,
and
	
Note
that
if
w
e
had
included
the
white
color
restriction
as
part
of
the
denition
of
CHARDONNAY-WINE,
it
w
ould
ha
v
e
made
that
restriction
one
of
the
conditions
necessary
for
a
wine
to
ha
v
e
b
efore
it
could
b
e
determined
to
b
e
a
Chardonna
y
wine.
Since
the
essen
tial
prop
ert
y
of
b
eing
a
Chardonna
y
wine
is
ha
ving
the
righ
t
grap
e,
then
the
white
color
is
a
deriv
ativ
e
prop
ert
y
that
should
not
b
e
included
in
the
basic
concept
denition.
Th
us
w
e
use
a
rule
to
assert
that
Chardonna
ys
are
white.


Dene
some
sub
categories
of
wines.
A
white
wine
is
a
wine
whose
color
is
white.
WHITE-WINE
,
(AND
WINE
(FILLS
color
White))
A
full-b
o
died
wine
is
a
wine
whose
b
o
dy
is
full.
FULL-BODIED-WINE
,
(AND
WINE
(FILLS
body
Full))
A
CHARDONNAY-WINE
is
a
wine
with
exactly
one
grap
e,
whic
h
is
Chardonnay.
CHARDONNAY-WINE
,
(AND
WINE
(ALL
grape
(ONE-OF
Chardonnay)))
No
w
assert
some
rules
ab
out
Chardonna
y
wines.
Chardonna
ys
are
alw
a
ys
white.
CHARDONNAY-WINE

(FILLS
color
White)
Chardonna
ys
are
alw
a
ys
either
full-
or
medium-b
o
died
wines.
CHARDONNAY-WINE

(ALL
body
(ONE-OF
Full
Medium))
Chardonna
ys
are
not
delicate.
CHARDONNAY-WINE

(ALL
flavor
(ONE-OF
Strong
Moderate))
Figure
:
Sample
Kno
wledge
Base
|
Dened
Wine
Sub
concepts
Forman-Chardonnay
will
end
up
b
eing
classied
as
a
WHITE-WINE
as
w
ell.
Also
note
that
Kalin-Cellars-Semillon
is
only
partially
describ
ed,
in
that
w
e
ha
v
e
stated
that
one
of
its
grapes
is
Semillon,
but
ha
v
e
not
closed
the
grape
role.
In
Figure
	
w
e
illustrate
some
simple
primitiv
e
concepts
that
will
app
ear
b
elo
w
SHELLFISH
in
the
hierarc
h
y
.
W
e
then
represen
t
the
concepts
MEAL-COURSE
and
MEAL
as
disjoin
t
prim-
itiv
e
concepts
under
CONSUMABLE-THING
(disjoin
t
also
from
POTABLE-LIQUID
and
EDIBLE-
THING|see
Figure
),
but
ha
ving
complex
structure.
A
MEAL-COURSE
is
dened
as
ha
ving
exactly
one
fo
o
d
and
exactly
one
drink
(recall
that
food
and
drink
are
attributes),
while
a
MEAL
is
dened
as
ha
ving
at
least
one
course.
In
this
simple
application,
the
t
yp
e
of
fo
o
d
serv
ed
at
a
course
will
b
e
stated
directly;
the
categorization
of
the
course
on
the
basis
of
this
fo
o
d
will
then
b
e
used
to
trigger
rules
constraining
the
prop
erties
of
an
y
wine
serv
ed.
Th
us,
the
fo
o
d
concepts
and
individuals
need
no
in
ternal
structure.
A
course
individual
will
b
e
classied
under
a
sp
ecic
t
yp
e
of
course
(e.g.,
SEAFOOD-COURSE
in
Figure
0)
as
so
on
as
its
fo
o
d
is
kno
wn,
and
the
drink
role
will
b
e
used
to
accum
ulate
prop
erties
of
the
wine
for
the
giv
en
course.
Finally
,
to
allo
w
our
kno
wledge
base
to
p
erform
the
appropriate
inferences
when
w
e
describ
e
an
individual
course,
w
e
will
need
a
set
of
rules
that
constrain
the
t
yp
e
of
wine
to
b
e
drunk
with
eac
h
appropriate
fo
o
d-t
yp
e.
In
some
cases,
w
e
can
ha
v
e
v
ery
general
rules,
suc
h
as
seafo
o
d
requiring
white
wines,
and
in
others
w
e
can
ha
v
e
v
ery
narro
wly
applicable
ones,
suc
h
as
o
ysters
requiring
sw
eet
wines.
Eac
h
rule
is
asso
ciated
with
the
appropriate
concept
in
the
KB,
as
illustrated
in
Figure
0.
When
a
giv
en
course
is
describ
ed
(suc
h
as
Course-
in
the
gure),
all
rules
that
apply
will
b
e
inherited
and
triggered.
In
the
case
of
Course-,
since
the
fo
o
d
of
the
course
is
o
ysters,
the
course
will
b
e
classied
as
an
OYSTER-SHELLFISH-COURSE:
b
ecause
food
is
an
attribute,
the
food
role
of
Course-
is
closed
as
so
on
as
it
is
asserted
that
it
is
lled
with
Oysters;
with
Oysters
as
the
only


Create
and
describ
e
some
individual
wines.
Forman-Chardonnay
!
(AND
CHARDONNAY-WINE
(FILLS
body
Full)
(FILLS
flavor
Moderate)
(FILLS
sugar
Dry)
(FILLS
maker
Forman))
Kalin-Cellars-Sem
ill
on
!
(AND
WINE
(FILLS
grape
Semillon)
(FILLS
body
Full)
(FILLS
flavor
Strong)
(FILLS
sugar
Dry)
(FILLS
maker
Kalin-Cellars))
Figure
:
Sample
Kno
wledge
Base
|
Individual
Wines
Dene
some
primitiv
e
fo
o
d-t
yp
es.
OYSTER-SHELLFISH


)
SHELLFISH
NON-OYSTER-SHELLF
ISH


)
SHELLFISH
Create
some
instances
of
fo
o
ds.
Oysters
!
OYSTER-SHELLFISH
Crab
!
NON-OYSTER-SHEL
LFI
SH
Dene
the
concepts
for
a
course
and
a
meal
MEAL-COURSE

+

)
CONSUMABLE-THING,
(AND
(A
T-LEAST

food)
(ALL
food
EDIBLE-THING)
(A
T-LEAST

drink)
(ALL
drink
POTABLE-LIQUID))
MEAL

+

)
CONSUMABLE-THING,
(AND
(A
T-LEAST

course)
(ALL
course
MEAL-COURSE))
Figure
	:
Sample
Kno
wledge
Base|F
o
o
ds,
Meals,
and
Courses


Dene
some
concepts
that
allo
w
recognition
of
course-t
yp
es,
whic
h
will
b
e
an
teceden
ts
of
rules
constraining
wines.
SEAFOOD-COURSE
,
(AND
MEAL-COURSE
(ALL
food
SEAFOOD))
Note
that
SHELLFISH-COURSE
will
b
e
classied
under
SEAFOOD-COURSE
and
OYSTER-SHELLFISH-
COU
RS
E
will
b
e
classied
under
SHELLFISH-COURSE
:
SHELLFISH-COURSE
,
(AND
MEAL-COURSE
(ALL
food
SHELLFISH))
OYSTER-SHELLFISH-
COU
RS
E
,
(AND
MEAL-COURSE
(ALL
food
OYSTER-SHELLFISH
))
No
w
assert
rules
p
ertaining
to
course-t
yp
es:
SEAFOOD-COURSE

(ALL
drink
WHITE-WINE)
SHELLFISH-COURSE

(ALL
drink
(AND
(FILLS
body
Full)
(ALL
flavor
(ONE-OF
Moderate
Strong))))
OYSTER-SHELLFISH-
COU
RS
E

(ALL
drink
(FILLS
sugar
Sweet))
Create
a
sp
ecic
course
with
o
ysters
as
fo
o
d.
Course-
!
(AND
MEAL-COURSE
(FILLS
food
Oysters))
Figure
0:
Sample
Kno
wledge
Base
|
Course-t
yp
es
with
Rules
ller
of
that
role,
the
ALL
restriction
on
OYSTER-SHELLFISH-COURSE
is
satised.
The
classication
of
Course-
as
an
OYSTER-SHELLFISH-COURSE
mak
es
applicable
all
rules
from
OYSTER-SHELLFISH-COURSE,
SHELLFISH-COURSE,
and
SEAFOOD-COURSE.
The
drink
of
Course-
will
th
us
b
e
constrained
to
b
e
a
sw
eet
(from
OYSTER-SHELLFISH-COURSE),
full-
b
o
died
(from
SHELLFISH-COURSE)
white
wine
(from
SEAFOOD-COURSE),
of
either
mo
derate
or
strong
a
v
or
(from
SHELLFISH-COURSE).



T
ric
ks
of
the
T
rade
The
expressiv
e
limitations
of
classic
mean
that
there
are
man
y
things
that
it
cannot
directly
represen
t.
After
building
a
n
um
b
er
of
kno
wledge
bases
using
the
system,
w
e
ha
v
e
found
some
w
a
ys
of
getting
around
some
of
these
expressiv
e
limitations.
The
reason
these
tec
hniques
are
presen
ted
in
a
separate
section
is
that
the
meanings
that
classic
places
on
the
resultan
t
concepts
are
dieren
t
than
their
in
tuitiv
e
meanings.
Under
some
circumstances
classic
will
act
in
a
w
a
y
inconsisten
t
with
the
in
tuitiv
e
meanings.
Often
this
div
ergence
only
sho
ws
up
when
certain
t
yp
es
of
extra
information
are
added
to
the
kno
wledge
base|if
this
extra
information
is
nev
er
added,
then
classic
will
adhere
to
the
in
tuitiv
e
b
eha
vior.
(F
or
example,
see
the
rst
w
a
y
of
represen
ting
a
limited
form
of
negation
in
Section
..)
Therefore,
the
kno
wledge
base
designer
m
ust
b
e
extremely
careful
when
using
these
tec
hniques.
These
tec
hniques
are
most
useful
when
used
sparingly
.
If
a
designer
nds
it
necessary
to
use
a
large
n
um
b
er
of
these
\tric
ks,"
then
p
erhaps
classic
should
not
b
e
used
for
his/her
application.
.
Negation
and
Complemen
ts
As
noted
b
efore,
there
is
no
full
negation
in
classic,
but
there
are
a
few
w
a
ys
to
represen
t
limited
forms
of
negation
or
complemen
ts.
One
metho
d
can
b
e
used
to
dene
the
concept
of
non-sw
eet
wines.
Giv
en
that
wines
ha
v
e
exactly
one
ller
for
their
sugar
role,
and
that
the
only
p
ossible
llers
for
the
sugar
role
of
wines
are
Dry,
Off-Dry,
and
Sweet,
a
non-sw
eet
wine
can
b
e
dened
as
(AND
WINE
(ALL
sugar
(ONE-OF
Dry
Off-Dry))).
Since
WINE-SUGAR
has
exactly
three
instances,
this
concept
is
the
complemen
t
of
sw
eet
wines
(WINEs
with
ller
Sweet
for
their
sugar
role)
in
the
univ
erse
of
wines.
Ho
w
ev
er,
this
tric
k
do
es
not
w
ork
as
w
ell
when
a
restriction
is
based
on
a
primitiv
e
concept
(i.e.,
WINE-GRAPE)
and
not
on
a
ONE-OF
concept
(i.e.,
WINE-SUGAR).
A
non-
Chardonna
y
wine
can
b
e
dened
as
(AND
WINE
(ALL
grape
(ONE-OF
Semillon))),
since
Chardonnay
and
Semillon
are
the
only
grap
es
in
the
KB.
Ho
w
ev
er,
if
a
new
grap
e
is
added
to
the
KB
(i.e.,
Riesling),
then
this
denition
w
ould
no
longer
represen
t
the
wines
made
from
all
grap
es
except
Chardonna
y
.
Another
form
of
negation
can
b
e
represen
ted
with
disjoin
t
primitiv
es.
If
the
concepts
FISH
and
SHELLFISH
are
disjoin
t
primitiv
es
under
the
concept
SEAFOOD,
then
there
can
b
e
no
individuals
b
elonging
to
b
oth
FISH
and
SHELLFISH.
Ho
w
ev
er,
in
this
situation,
it
is
p
ossible
for
something
to
b
e
a
seafo
o
d
and
neither
a
sh
nor
a
shellsh,
and
th
us
FISH
is
not
exactly
the
relativ
e
complemen
t
of
SHELLFISH
with
resp
ect
to
SEAFOOD.
Finally
,
test
concepts
can
also
b
e
used
to
capture
part
of
the
meaning
of
complemen
ts.
A
test
function
that
returns
false
if
an
individual
satises
some
concept,
true
if
the
individual
cannot
p
ossibly
satisfy
it,
and
unkno
wn
otherwise,
can
b
e
used
to
create
a
complemen
t
concept.
Ho
w
ev
er,
there
is
a
small
problem
with
this
metho
d
of
complemen
tation.
The
complemen
t
concept
will
not
b
e
recognized
as
disjoin
t
from
the
other
concept,
so,
for


instance,
the
conjunction
of
the
t
w
o
concepts
will
not
b
e
considered
incoheren
t,
although
it
cannot,
in
realit
y
,
ha
v
e
an
y
instances.
.
Disjunction
Although
there
is
no
\OR"
op
erator
in
the
classic
language,
disjunction
can
b
e
captured
in
some
sp
ecial
cases.
The
rst
of
these
is
simply
a
ONE-OF
concept,
whic
h
pro
vides
an
extremely
simple
and
unin
teresting
case
of
disjunction
(of
the
individuals
in
the
set).
The
second
case
builds
on
the
rst
b
y
using
the
ONE-OF
concept
in
a
v
alue
restriction.
F
or
example,
the
concept
(AND
WINE
(ALL
grape
(ONE-OF
Semillon
Sauvignon)))
represen
ts
the
disjunction
of
wines
made
from
semillon
grap
es
and
wines
made
from
sauvi-
gnon
grap
es.
Once
a
disjunctiv
e
concept
lik
e
this
is
formed
with
a
ONE-OF
em
b
edded
in
an
ALL,
suc
h
a
concept
can
in
turn
b
e
used
in
another
ALL
restriction,
th
us
allo
wing
arbitrarily
deep
nesting.
The
ab
o
v
e
t
yp
es
of
disjunction
are
not
really
tric
ks
at
all.
They
represen
t
true
dis-
junction|ho
w
ev
er,
only
certain,
v
ery
limited,
t
yp
es
of
disjunction
can
b
e
represen
ted
this
w
a
y
.
General
disjunction
can
b
e
crudely
appro
ximated,
ho
w
ev
er,
b
y
using
a
simple
tric
k.
When
one
concept
subsumes
others,
then
it
subsumes
their
disjunction,
and
can,
under
some
circumstances,
act
lik
e
their
disjunction.
F
or
example,
in
Figure
,
SEAFOOD
subsumes
the
disjunction
of
SHELLFISH
and
FISH.
If
no
individuals
b
ecome
instances
of
SEAFOOD
without
b
ecoming
instances
of
either
SHELLFISH
or
FISH
then
SEAFOOD
can
b
e
considered
to
b
e
the
disjunction
of
SHELLFISH
and
FISH.
Because
there
ma
y
b
e
instances
of
SEAFOOD
that
are
neither
SHELLFISH
nor
FISH,
this
is
not
true
disjunction.
(Learning
that
an
individual
is
not
an
instance
of
FISH
do
es
not
mak
e
it
an
instance
of
SHELLFISH.)
.
Defaults
classic
enforces
a
strict
inheritance
hierarc
h
y
and
do
es
not
pro
vide
a
default
op
erator.
Ho
w
ev
er,
a
limited
form
of
defaults
can
b
e
represen
ted
with
the
aid
of
rules
and
test
functions.
F
or
example,
to
mak
e
wines
ha
v
e
default
color
red,
use
a
test
function
(p
erhaps
called
no-kno
wn-color)
that
returns
true
if
the
n
um
b
er
of
curren
tly
kno
wn
llers
of
the
color
role
is
zero,
and
false
otherwise
0
and
use
it
in
the
concept
WINE-CAUSE-DEFAULT-RED,
dened
as
WINE-CAUSE-DEFAULT-RED
,
(AND
WINE
(TEST-C
no-kno
wn-color))
WINE-CAUSE-DEFAULT-RED

(FILLS
color
Red).
This
will
cause
wines
that
are
not
giv
en
a
color
to
b
ecome
red
wines
b
ecause
they
will
pass
the
test
function,
b
ecome
instances
of
WINE-CAUSE-DEFAULT-RED,
and
b
e
giv
en
color
Red
as
a
result
of
the
ring
of
the
rule
ab
o
v
e.
0
This
is
dieren
t
from
kno
wing
that
there
are
no
p
ossible
llers
for
the
color
role,
as
classic
can
represen
t
individuals,
suc
h
as
instances
of
WINE,
for
whic
h
there
m
ust
b
e
a
ller
for
a
role
without
kno
wing
the
actual
ller.


W
ARNING:
Small
c
hanges
to
the
implemen
tation
of
classic
could
cause
this
tric
k
to
fail
as
it
uses
a
test
function
that
violates
the
conditions
placed
on
test
functions.
(T
est
functions
in
classic
should
b
e
monotonic,
i.e.,
adding
information
cannot
cause
the
result
of
a
test
function
to
c
hange
from
true
to
false,
or
vice
v
ersa.)
Use
this
trick
with
extr
eme
c
aution.
.
More
P
o
w
erful
Rules
Rules
are
an
imp
ortan
t
part
of
classic,
but
are
limited
in
that
the
an
teceden
t
of
a
rule
can
only
b
e
a
named
classic
concept.
Ho
w
ev
er,
using
test
restrictions
in
the
an
teceden
t
of
rules
allo
ws
arbitrary
pattern-matc
hing
to
determine
rule
applicabilit
y
.
F
or
example,
w
e
migh
t
w
an
t
to
extend
the
wine
example
to
consider
vin
tages
and
then
conclude
that
if
some
wine
is
from
a
go
o
d
vin
tage
y
ear
then
it
is
exp
ensiv
e.
The
denition
of
\go
o
d
vin
tage"
migh
t
b
e
quite
complicated,
and
not
expressible
in
classic
without
using
a
test
restriction.
This
metho
d
do
es
not
cause
an
y
particular
problems,
aside
from
the
general
problem
inheren
t
in
the
use
of
(opaque)
test
functions,
as
long
as
the
test
conforms
to
the
conditions
placed
on
test
functions.
Ho
w
ev
er,
excessiv
e
use
of
test
functions
can
cause
p
erformance
degradation
if
the
test
concepts
end
up
near
the
top
of
the
concept
hierarc
h
y
,
where
their
tests
will
b
e
run
frequen
tly
.
.
In
tegrit
y
Chec
king
Rules
can
also
b
e
used
to
pro
vide
a
sort
of
in
tegrit
y
c
hec
king,
b
y
using
test
concepts
as
their
conclusions.
In
this
case,
once
an
individual
is
found
to
satisfy
the
an
teceden
t
of
the
rule,
it
is
made
an
instance
of
the
test
concept.
P
art
of
this
pro
cess
is
to
run
the
test
function
on
the
individual;
if
the
individual
is
inconsisten
t
with
the
test
function
then
the
individual
is
also
remo
v
ed
from
the
an
teceden
t
concept.
In
this
w
a
y
complicated
in
tegrit
y
constrain
ts
can
b
e
created
for
otherwise
test-free
concepts.
F
or
example,
w
e
migh
t
w
an
t
to
c
hec
k
that
late-harv
est
grap
es
ha
v
e
a
sugar
con
ten
t
of
at
least
0.
This
can
b
e
done
b
y
creating
a
rule
LATE-HARVEST-GRAPE

(TEST-C
sugar-at-least-0)
where
sugar-at-least-0
returns
unkno
wn
if
there
is
no
curren
tly
kno
wn
ller
of
the
sugar-
content
role
of
a
grap
e,
true
if
the
ller
is
kno
wn
and
is
at
least
0,
and
false
otherwise.
This
is
dieren
t
from
including
the
test
condition
as
part
of
LATE-HARVEST-GRAPE
in
t
w
o
w
a
ys.
First,
the
test
do
es
not
b
ecome
part
of
the
denition
of
the
concept
so
it
will
not
b
e
subsumed
b
y
another
concept
that
happ
ens
to
incorp
orate
the
same
test.
Second,
if
LATE-HARVEST-GRAPE
is
a
dened
concept
then
individuals
can
b
e
recognized
as
its
instances
without
passing
the
test;
they
are
forced
to
b
e
(and
remain)
consisten
t
with
the
test.
.
Restrictions
on
Roles
The
classic
language
supp
orts
restrictions
of
the
form
\all
of
the
drinks
in
a
picnic
bask
et
are
wines,"
and
\a
picnic
bask
et
has
at
least
one
drink,"
but
there
is
no
op
erator
for
sa
ying


precisely
\at
least
t
w
o
of
the
drinks
in
a
picnic
bask
et
are
white
wines."

When
this
sort
of
restriction
is
needed,
a
test
can
b
e
used.
F
or
example,
a
test
function
to
determine
if
at
least
t
w
o
of
the
drinks
in
a
picnic
bask
et
are
white
wines
can
b
e
written
as
follo
ws:

if
there
are
t
w
o
kno
wn
llers
of
the
drink
role
of
the
picnic
bask
et
that
are
instances
of
WHITE-WINE
then
return
true;

otherwise,
if
there
can
b
e
at
most
one
ller
of
the
drink
role
of
the
picnic
bask
et,
then
return
false;

otherwise,
if
all
the
llers
of
the
drink
role
of
the
picnic
bask
et
m
ust
b
e
white
wines
b
ecause
the
t
yp
e
of
its
drinks
is
subsumed
b
y
WHITE-WINE,
and
there
m
ust
b
e
at
least
t
w
o
drinks
for
the
picnic
bask
et,
then
return
true;

otherwise,
if
all
the
picnic
bask
et's
drinks
are
kno
wn,
then
if
there
is
at
most
one
of
them
that
is
an
instance
of
WHITE-WINE
then
return
false;

otherwise
return
unkno
wn.
As
with
all
tests,
classic
treats
the
function
as
a
blac
k
b
o
x,
and
will
not
disco
v
er
an
y
subsumption
relationships
b
et
w
een
dieren
t
test
functions.
This
can
p
ose
a
problem
here
b
ecause
there
are
a
large
n
um
b
er
of
p
ossible
subsumption
relationships
b
et
w
een
these
sorts
of
restrictions.
F
or
example,
\at
least
t
w
o
of
the
drinks
in
a
picnic
bask
et
are
white
wines"
subsumes
\at
least
three
of
the
drinks
in
a
picnic
bask
et
are
full-b
o
died
white
wines,"
but
classic
cannot
disco
v
er
these
relationships,
whic
h
dep
end
on
the
b
eha
vior
of
test
functions.
F
urther,
this
test
function
con
tains
a
p
oten
tially
dangerous
\closed-w
orld
assumption"
in
that
it
assumes
that
a
drink
that
is
not
kno
wn
to
b
e
an
instance
of
WHITE-WINE
will
nev
er
b
e
an
instance
of
WHITE-WINE.
Since
classic
allo
ws
the
acquisition
of
extra
information
ab
out
individuals,
it
is
p
ossible
that
a
drink
could
later
b
ecome
an
instance
of
WHITE-WINE,
th
us
in
v
alidating
the
conclusion
dra
wn
b
y
this
test
function.
.
Dumm
y
Individuals
As
men
tioned
in
Section
.,
classic
can
answ
er
queries
ab
out
mandated
prop
erties
of
llers
of
roles
without
kno
wing
the
iden
tit
y
of
the
llers.
Some
of
these
queries
can
b
e
answ
ered
b
y
getting
the
v
alue
restriction
for
the
role.
F
or
example,
Course-
from
Figure
0
m
ust
ha
v
e
the
body
of
all
its
drinks
b
e
Full,
since
it
has
the
prop
ert
y
(ALL
drink
(FILLS
body
Full)),
b
y
virtue
of
its
b
eing
a
SHELLFISH-COURSE.
This
can
b
e
determined
b
y
classic
without
kno
wing
the
actual
drink
of
the
course.
Ho
w
ev
er,
this
metho
d
do
es
not
pic
k
up
the
rules
that
migh
t
b
e
applied
to
the
role
ller.
F
or
example,
under
the
denitions,

This
is
a
delib
erate
omission,
as
the
inclusion
of
suc
h
op
erators
mak
es
determining
subsumption
com-
putationally
in
tractable
[
Neb
el,
	
]
.
	

KOSHER-WEDDING
,
(AND
WEDDING
(ALL
meal
KOSHER-MEAL))
KOSHER-MEAL

(ALL
course
(ALL
drink
KOSHER-WINE))
Lori's-Wedding
!
KOSHER-WEDDING,
the
v
alue
restriction
for
the
drink
of
an
y
course
of
the
meal
at
Lori's-Wedding
w
ould
not
b
e
kno
wn
to
b
e
a
KOSHER-WINE,
ev
en
though
the
meal
at
Lori's-Wedding
m
ust
b
e
a
KOSHER-MEAL
and
there
is
a
rule
on
KOSHER-MEAL
asserting
that
all
the
drinks
of
eac
h
course
m
ust
b
e
KOSHER-WINEs.
T
o
pic
k
up
this
restriction
it
is
necessary
to
create
a
\dumm
y"
meal
for
Lori's-Wedding.
Then
the
rule
will
re,
and
assert
the
restriction
that
the
drink
for
eac
h
course
of
this
dumm
y
meal
m
ust
b
e
a
KOSHER-WINE.
The
creation
of
dumm
y
individuals
m
ust
b
e
p
erformed
with
care,
as
classic
assumes
that
they
are
distinct
from
all
other
individuals.
Th
us
when
the
real
meal
is
found,
it
cannot
just
b
e
added,
but,
instead,
either
the
dumm
y
individual
m
ust
b
e
remo
v
ed
as
a
ller,
or
the
t
w
o
individuals
m
ust
b
e
merged
in
an
application-dep
enden
t
manner.
It
is
b
est
to
use
a
dumm
y
individual
to
answ
er
the
query
,
and
then
immediately
remo
v
e
it.
0


Conclusion
By
no
w
it
is
clear
that
learning
a
programming
language
in
v
olv
es
more
than
just
learning
its
syn
tax
and
seman
tics:
there
are
usually
an
asso
ciated
metho
dology
or
paradigm
of
use
that
needs
to
b
e
absorb
ed,
a
collection
of
tec
hniques
for
handling
v
arious
sp
ecial
situations,
w
arnings
ab
out
frequen
t
pitfalls,
and
the
recognition
that
some
other
language
migh
t
b
e
more
appropriate
for
a
sp
ecic
programming
task.
F
or
example,
in
order
to
use
pr
olog
ex-
p
ertly
one
should,
among
other
things,
understand
the
paradigm
of
logic
programming,
the
tric
k
of
building
data
structures
with
un
b
ound
v
ariables
(whic
h
are
assigned
a
v
alue
later
in
the
computation),
the
problems
of
negation
b
y
failure,
and
the
cost
of
non-deterministic
searc
h/bac
ktrac
king.
Kno
wledge
represen
tation
languages
are
no
dieren
t
in
this
resp
ect.
F
or
this
reason,
w
e
ha
v
e
c
hosen
to
pro
vide
in
this
c
hapter
more
than
just
the
description
of
an
existing,
imple-
men
ted
classication-based
frame
language.
W
e
ha
v
e
attempted
to
presen
t
the
paradigm
of
using
suc
h
languages
b
y
w
orking
through
examples
and
b
y
listing
situations
in
whic
h
classic
is
lik
ely
to
b
e
useful.
Additionally
,
w
e
ha
v
e
indicated
under
what
circumstances
languages
lik
e
classic
ma
y
pro
v
e
to
b
e
less
than
ideal.
W
e
ha
v
e
also
assem
bled
from
our
exp
eriences
of
using
the
language
and
teac
hing
it
to
others
a
collection
of
p
oten
tially
con-
fusing
distinctions,
together
with
\tric
ks
of
the
trade"
for
represen
ting
sp
ecial
situations.
Most
imp
ortan
tly
,
w
e
ha
v
e
presen
ted
a
metho
dology
for
w
orking
through
a
domain
and
pro
ducing
a
kno
wledge
base
that
reects
the
domain
structure
in
classic
terms.


References
[
Borgida
et
al.,
		
]
Alex
Borgida,
Ronald
J.
Brac
hman,
Deb
orah
L.
McGuinness,
and
Lori
Alp
erin
Resnic
k.
CLASSIC:
A
structural
data
mo
del
for
ob
jects.
In
Pr
o
c
e
e
dings
of
the
		
A
CM
SIGMOD
International
Confer
enc
e
on
Mangement
of
Data,
pages
	{.
Asso
ciation
for
Computing
Mac
hinery
,
June
		.
[
Brac
hman
and
Sc
hmolze,
	
]
Ronald
J.
Brac
hman
and
James
G.
Sc
hmolze.
An
o
v
erview
of
the
KL-ONE
kno
wledge
represen
tation
system.
Co
gnitive
Scienc
e,
	():{
,
April{June
	.
[
Dev
an
bu
et
al.,
		
]
Premkumar
Dev
an
bu,
P
eter
G.
Selfridge,
Bruce
W.
Ballard,
and
Ronald
J.
Brac
hman.
A
kno
wledge-based
soft
w
are
information
system.
In
Pr
o
c
e
e
dings
of
the
Eleventh
International
Joint
Confer
enc
e
on
A
rticial
Intel
ligenc
e,
pages
0{,
Detroit,
Mic
higan,
August
		.
In
ternational
Join
t
Committee
on
Articial
In
telligence.
[
Dev
an
bu
et
al.,
		0
]
Premkumar
Dev
an
bu,
Ronald
J.
Brac
hman,
and
P
eter
G.
Selfridge.
LaSSIE|a
classication-based
soft
w
are
information
system.
In
Pr
o
c
e
e
dings
of
the
In-
ternational
Confer
enc
e
on
Softwar
e
Engine
ering,
Nice,
F
rance,
		0.
IEEE
Computer
So
ciet
y
.
[
F
reeman,
	
]
Mic
hael
W.
F
reeman.
The
qua
link.
In
James
G.
Sc
hmolze
and
Ronald
J.
Brac
hman,
editors,
Pr
o
c
e
e
dings
of
the
	
KL-One
Workshop,
pages
{,
Jac
kson,
New
Hampshire,
June
	.
Bolt
Beranek
and
Newman
Inc.
[
Lenat
and
Guha,
		0
]
Douglas
B.
Lenat
and
R.
V.
Guha.
Building
L
ar
ge
Know
le
dge-
Base
d
Systems.
Addison-W
esley
,
Reading,
Massac
h
usetts,
		0.
[
Litman
and
Dev
an
bu,
		0
]
Diane
Litman
and
Premkumar
Dev
an
bu.
Clasp:
A
plan
and
scenario
classication
system.
AI
Principles
Researc
h
Departmen
t,
A
T&T
Bell
Lab
ora-
tories,
		0.
[
Neb
el,
	
]
Bernhard
Neb
el.
Computational
complexit
y
of
terminological
reasoning
in
BA
CK.
A
rticial
Intel
ligenc
e,
():{,
April
	.
[
Owsnic
ki-Klew
e,
	
]
Bernd
Owsnic
ki-Klew
e.
Conguration
as
a
consistency
main
te-
nance
task.
In
W.
Ho
eppner,
editor,
Pr
o
c
e
e
dings
of
GW
AI-|the
th
German
Work-
shop
on
A
rticial
Intel
ligenc
e,
pages
{.
Springer
V
erlag,
Septem
b
er
	.
[
P
atel-Sc
hneider,
	
]
P
eter
F.
P
atel-Sc
hneider.
Small
can
b
e
b
eautiful
in
kno
wledge
represen
tation.
In
Pr
o
c
e
e
dings
of
the
IEEE
Workshop
on
Principles
of
Know
le
dge-Base
d
Systems,
pages
{,
Den
v
er,
Colorado,
Decem
b
er
	.
IEEE
Computer
So
ciet
y
.
[
P
eltason
et
al.,
	
]
Christof
P
eltason,
Kai
v
on
Luc
k,
Bernhard
Neb
el,
and
Albrec
h
t
Sc
hmiedel.
The
user's
guide
to
the
BA
CK
system.
KIT-Rep
ort
,
F
ac
h
b
ereic
h
In-
formatik,
T
ec
hnisc
he
Univ
ersit
at
Berlin,
Jan
uary
	.
[
Sen
yk
et
al.,
		
]
Oksana
Sen
yk,
Ramesh
S.
P
atil,
and
F
rank
A.
Sonnen
b
erg.
Systematic
kno
wledge
base
design
for
medical
diagnosis.
Applie
d
A
rticial
Intel
ligenc
e,
({):	{
,
		.


[
Y
en
et
al.,
		
]
John
Y
en,
Rob
ert
Nec
hes,
and
Rob
ert
MacGregor.
Using
terminological
mo
dels
to
enhance
the
rule-based
paradigm.
In
Pr
o
c
e
e
dings
of
the
Se
c
ond
International
Symp
osium
on
A
rticial
Intel
ligenc
e,
Mon
terrey
,
Mexico,
Octob
er
		.

View publication stats
View publication stats

