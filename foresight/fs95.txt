Syntax, Semantics, and Pragmatics of Contexts
John F. Sowa
philosophy and Computers and Cognitive Science
State University of New York at Binghamton
Abstract. The notion of context is indispensable in discussions of meaning, but the word context has
often been used in conflicting senses. In logic, the first representation of context as a formal object was
by the philosopher C. S. Peirce; but for nearly eighty years, his treatment was unknown outside a small
group of Peirce aficionados. In the early 1980s, three new theories included related notions of context:
Kamp’s discourse representation theory; Barwise and Perry’s situation semantics; and Sowa’s conceptual
graphs, which explicitly introduced Peirce’s approach to the AI community. More recently, John
McCarthy and his students have begun to use a closely related notion of context as a basis for organizing
and partitioning knowledge bases. Each of the theories has distinctive, but complementary ideas that
can enrich the others, but the relationships between them are far from clear. This paper analyzes the
semantic foundations of these theories and shows how McCarthy’s ist(c,p) predicate can be interpreted
in terms of the semantic notions underlying the others.
1. Theories of Contexts
In the AI literature, 
the term context has been
applied to a profusion of ideas that have not been
clearly distingafished. Some of them concern the
syntactic representation of contexts; others refer
to the semantic relationship of a linguistic context
to a physical situation; and still others introduce
pragmatic notions concerning the purpose or use
of a context in various applications. 
Each of
these major areas can be subdivided further.
Syntactically, there are three distinct aspects of
context:
1.
A mechanism for grouping, associating, or
packaging information that can be named
and referenced as a single unit.
2.
The contents of that package, which have
been called anything from quoted formula to
microtheory.
3.
The permissible operations on the informa-
tion in the package and the constraints on
importing and exporting information into
and out of a package.
All three of these notions represent syntactic
mechani.mls for representing and manipulating
logical formulas without any consideration of
their relationship to the real world, a possible
world, or some model of the world. Much of the
controversy about contexts results from the lack
of a formal semantics that relates these operations
to a Tarski-style model. Even an informal se-
mantics that displays the intuitive meaning of
contexts in terms of real-world objects and situ-
ations would be helpful as a guide to further
analysis and formaliTation.
Some of the confusion 
about contexts results
from an ambiguity in the English word. Die-
tionaries 
list two major senses of the word
context:.
¯
The basic meaning is a section of the linguis-
tic text or discourse that surrounds some
word or phrase of interest.
¯
The derived meaz~g is a nonlingnistic situ-
ation, environment, domain, setting, back-
ground, or milieu that includes some entity,
subject, or topic of interest.
These two informal senses suggest intuitive crite-
ria for distinguishing the various functions of
contexts:
¯
Syntax. The syntactic 
function of context is
to group, delimit, or package "a section of
linguistic text." Formally, a context behaves
like the QUOTE 
operator in Lisp together
with the parentheses that delimit the portion
of text that is quoted.
¯
Semantics. The quoted text of a context re-
fers to something, which may be a physical
entity or situation, 
a mathematical con-
struction, or some other expression in a na-
tural or artificial language.
¯
Pragmatics. The word interest, which occurs
in both senses of the English definition, sug-
gests some reason or purpose for distinguish-
ing "a section of linguistic 
text" or "a
nonlinguistie situation." That purpose con-
stitutes the pragmaties or the reason why the
text is being quoted. In Lisp, the QUOTE
operator blocks the execution of the standard
Lisp interpreter to allow nonstandard oper-
85
From: AAAI Technical Report FS-95-02. Compilation copyright © 1995, AAAI (www.aaai.org). All rights reserved. 

ations to be performed for some other pur-
pose. In logic, a quote blocks the standard
rules of inference and allows the definition of
new rules for some special purpose.
As this analysis indicates, the notion of context
is intimately connected with a complex of related
ideas. Much of the confusion results from which
of them happens to be called a context:, some
people apply the word to the package; and others
to the information contained in the package, to
the thing that the information is about, or to the
possible uses of either the information or the
thing. The ideas themselves may be compatible,
but they must be carefully distinguished and
sorted out.
These intuitive criteria provide a basis for
analyzing John McCarthy’s (1993) "Notes 
Formalizing Context" and relating the ideas to
the other theories. McCarthy’s basic notation is
the predicate ist(c,p), 
which may be read "the
proposition p is true in context c." In his disser-
tation written under McCarthy’s direction, R. V.
Guha (1991) applied McCarthy’s approach to the
problem of partitioning 
a large, monolithic
knowledge base into a collection of smaller, more
modular microtheories. Guha implemented the
microtheories in the Cyc system (I.gnat & Guha
1990), in which they have become a fundamental
mechanism for organizing 
and stnmturing a
knowledge base. McCarthy and Buva~ (1994)
have also applied contexts and the /st predicate
to the analysis and representation of natural lan-
guage discourse.
Although McCarthy, Guha, and Buva~ have
shown that the /st predicate can be a powerful
tool for building knowledge bases and analyzing
discourse, they have not clearly distinguished the
syntax of contexts and propositions from their
semantic relationship 
to some domain of dis-
course. In fact, the ist predicate itself mixes the
syntactic notion of containment (~s-in) with the
semantic notion of truth (/s-true-of). To clarify
these relationships, it may be helpful to analyze
the ist predicate as a conjunction of three more
primitive
predicates, ~s-in, refers-to,
and
describes:
ist(c,p) 
-- (~3x:Entity)(is-in(c,p) 
refers-to(c,x) 
^ describes(x,p)).
According to this analysis, the proposition p is
true in context e ff and only if there exists some
entity x such that p is in c, c refers to x, and p
describes x. The formula distinguishes the ab-
stract context c from some nonlingulstic entity x,
which represents the "situation, 
environment,
domain, setting, background, or milieu" assoei-
ated with c. The predicate ~s-in represents the
syntactic relationship of c to p; and the predicates
refers-to and describes represent the semantic re-
lationships of c and p to the external entity x.
McCarthy, Guha, and Buva~ have primarily
considered the syntactic operations associated
with the ~s-in component of the ist predicate. To
justify those operations, the semantics of the
refers-to and describes components must also be
addressed.
Much of the controversy about contexts re-
suits from the abundance of notation and termi-
nology in different theories, their application to
diverse phenomena, and the lack of commlmi-
cation between the different schools of thought.
The purpose of this paper is to emphasize the
underlying similarities 
and to promote cross-
fertilization of ideas. The following five theories
will be considered:
1.
Charles Sanders Peirce (1885) invented the
modern algebraic notation for predicate cal-
culus; but a dozen years later, he developed
an alternate 
notation, 
which he called
existential graphs (Roberts 1973). Although
Peirce’s algebra and graphs had equivalent
expressive power, the graphic structure served
as a heuristic aid that led him to explore op-
erations and applications that were over-
looked by logicians 
who used only the
algebraic notation. In particular, Peirce’s
graphic notation for contexts was isomorphic
to the discourse representation structures
(DRSs) invented by Hans Kamp eighty years
later. His rules of inference were based on
operations of iterating and deiterating infor-
mation to and from contexts in a way that
resembles John McCarthy’s lifting rules.
2.
Hans Kamp (1981) developed discourse rep-
resentation theory (DRT) to express the log-
ical constraints on anaphofic references in
natural language. Because of the difficulty
of expressing those constraints in the alge-
braic notation for logic, Kamp introduced the
graphic DRS notation, which allowed a tim-
pler formulation of his rules. Si~iBcantly,
the nested contexts in Kamp’s DRSs are
isomorphic to the nest 
of contexts in Peirce’s
EGs, even though Kamp had no previous
knowledge of them. Kamp deserves credit for
discovering the constraints on anaphora in
DRT, but DRSs and EGs are equally suit-
able for expressing those constraints.
3.
Jon Barwise and John Perry (1983) devel-
oped situation 
semantics as a theory of
meaning in natural langq_~age. 
Unlike
86

.
Montague’s approach (1975), which related
the semantics of language to potentially infi-
nite models of the real world or possible
worlds, Barwise and Perry adopted finite sit-
uations as their basis. Each situation is a
bounded region of space-time containing
physical objects and processes, as well as
other situations. A great deal of research has
been done within the paradigm of situation
semantics (Barwise et al. 1991), including ef-
forts to merge it or at least reconcile it with
DRT (Cooper & Kamp 1991). An impor-
tant question is how and whether it can be
merged or reconciled with McCarthy’s con-
texts as well.
John Sowa (1984) developed conceptual
graphs as a system of logic and reaching
based on the semantic networks of AI and
the existential graphs of C. S. Peirce. The
nodes called concepts correspond to typed,
quantified variables in a sorted predicate cal-
caius. A context is a defined as a concept of
type Proposition, whose referent field con-
tains one or more conceptual graphs that
state the proposition. Later papers (Sowa 
Way 1986; Sowa 1991) used the CG contexts
to represent Kamp’s DRSs and Barwise and
Perry’s situations. In a paper on "Crystalliz-
ing Theories out of Knowledge Soup," Sowa
(1990) proposed the use of contexts for par-
titioning a knowledge base into a collection
of smaller "chunks" that could be assembled
into theories appropriate to any particular
application. In his dissertation, Guha (1991)
cited the knowledge soup paper, which he
said was "in the same spirit as the work de-
scribed in this document."
5.
John McCarthy is one of the founding fathers
of AI, whose collected 
work (McCarthy
1990) has frequently inspired and sometimes
revolutionized the application of logic to
knowledge representation. 
His work on
context, although published later than the
previous four approaches, has grown out of
ideas based on his earlier work. McCarthy’s
/st predicate is the key to relating that work
to the ongoing research 
in the other
paradisnns. If the/st predicate can be defined
in terms of the other theories, then any results
obtained in one approach can be translated
to any of the others. Besides defining con-
texts, McCarthy has been emphasizing his
lifting rules for importing and exporting in-
formation into and out of the quoted text or
package. Such rules, which resemble Peirce’s
rules of iteration and deiteration, are essential
for allowing quoted information to be un-
quoted and used.
Besides these five theories, there is a long history
of related ideas in logic, philosophy, linguistics,
and AI. The most important ones for a theory
of context include indexicals, possible worlds,
metalanguage, belief revision, and ontology re-
vision. Yet the various ideas and theories were
developed by people with different intuitions,
which they applied to different 
problems of
knowledge representation. 
Trying to unify and
clarify those intuitions by defining the terms of
one theory in those of another runs the risk of
distorting the insights of both. This paper will
explore the implications of these definitions to
determine whether the benefits of unification and
clarification outweigh any possible distortions of
the original in~ghts.
2. Peirce’s Contexts
First-order predicate calculus was independently
invented by Gottlob Frege (1879) and Charles
Sanders Peirce (1885). Frege used a tree notation,
which no one else ever adopted. But Peirce de-
veloped an algebraic notation, which through the
textbook by Ernst Schr6der (1890) and with 
change of symbols by C-iuseppe Peano became
the modem system of predicate calculus. Long
before Bertrand Russell learned logic from Frege
and Peano, it had become a flourishing subject
based on the Peirce-Schr6der foundations.
The early history of modem logic is a fasci-
nating tale that has been recounted by Roberts
(1973) and Houser et al. (1995). The main point
for this paper is that the man who invented the
common 
algebraic notation for logic later aban-
doned it for a graph representation, 
which he
called his "chef d’oeuvre" and "the luckiest find
of my career." With the existentialgraphs that he
invented in 1897, Peiree developed an aspect of
logic that was largely ignored by the mathematical
logicians of the twentieth century. In relating
Peirce’s later logic and philosophy to situation
semantics, Burke (1991) said "Peiree anticipated
in his own way some of the concerns of situation
theory (or rather, he happened to be working be-
fore it went out of fashion to wrestle with such
concerns)." A century later, those concerns are
back in fashion, and Peirce is once again in the
avant garde of modem logic.
87

The three primitives of existential graphs
(EGs) include the ova/enclosure, which delimits
a context, the line of identity, which corresponds
to an existentially 
quantified variable, and
juxtaposition, which represents conjunction. The
default interpretation of an oval with no other
qualifiers is negation of the graphs nested inside.
Existence, conjunction, and negation provide a
complete representation for all of first-order logic.
As an example, the middle diagram in Figure 1
is an existential graph for the sentence If a farmer
owns a donkey, then he beats it.
Dbcounm 
Representc~n Structure
Pmflffoned Semcm~ 
Network
Figure 1. Three representations 
for "If a farmer owns a donkey, then he beats it."
The EG in Figure 1 has two ovals, which
represent negations. It also has two lines of
identity, represented as linked bars: one line,
which connects farmer to the left side of owns and
beats, represents an existentially quantified vari-
able (3x); the other line, which connects donkey
to the right side of owns and beats represents an-
other variable (3y). When Figure 1 is translated
to the algebraic notation, farmer and donkey map
to monadic predicates; owns and beats map to
dyadic predicates. The implicit conjunctions can
be represented with Peano’s symbol ^:
~(~) (qy) (farmer(x) 
donkey(y) ^
owns(x,y) ^ ~beats(x,y)).
Peirce called a nest of two ovals, as in Figure 1,
a scroll, which he used to represent material im-
plication, since "(p^~q) is equivalent to p=q.
Using the ~ symbol, the above formula may be
rewritten as
(Vx)(Vy)((farmer(x) donkey(y) ^
owns(x,y)) ~ beats(x,y)).
The algebraic formula with the = symbol il-
lustrates a peculiar feature of logic in comparison
with natural languages: in order to preserve
scope, the implicit existential quantifiers in the
phrases a farmer and a donkey must be moved to
the front of the formula and be tsanslated to uni-
versal quant~ers. This puzzling feature of logic
has posed a problem for linguists. 
In his dis-
course representation 
structures, 
Hans Kamp
(1981) resolved it by introducing a new symbol
for implication with different scoping rules. The
diagram on the left of Figure 1 shows a DRS for
The variables x and y in the antecedent box have
implicit existential quantifiers; Kamp defined the
scoping rules for the DRS to include consequent
box within the scope of the antecedent. As in
existential graphs, conjunction is implicitly shown
by juxtaposition. 
Altogether, the DRS may be
read If there exists a farmer x and a donkey y and
x owns y, then x beats y.
Although the DRS and EG notations 
look
quite different, they are exactly isomorphic: they
have the same three primitives and exactly the
same scoping rules for variables or lines of iden-
tity. What makes this coincidence remarkable is
that in the dozens of notations for semantic net-
works in the 1960s and 1970s, no one else redis-
covered Peirce’s conventions. The notation that
comes closest is the partitioned semantic network
by Gary Hendrix (1975), which is illustrated 
the rightmost diagram of Figure 1. l.ike Peirce
and Kamp, Hendrix took the existential
quantifier as the default, represented conjunction
by juxtaposition, and used a graphic enclosure for
partitioning 
contexts. But unlike Peirce and
Kamp, Hendrix allowed overlapping contexts:
the two overlapping boxes in Figure 1 represent
the antecedent and the consequent of the impli-
cation.
With Overlapping contexts, Hendrix had no
need for scoping rules. Although the farmer and
donkey nodes each occurred only once, the over-
lap allowed them to occur ~multaneously in both
contexts. Yet the overlapping contexts proved to
be unwieldy: with more than three contexts, it
became impossible to draw partitioned nets on a
the donkey 
sentence. The two boxes 
connected
by an arrow 
represent 
the English 
pair if-then~ 
plane. 
Furthermore, 
the nesting 
of clauses 
in
88

natural languages has a more direct mapping to
the Peirce-Kamp nested contexts 
than to
Hendrix’s overlapping contexts. Kamp’s rules for
resolving 
anaphom in DRSs could be stated
equally well in terms of EGs, but not in terms of
overlapping contexts.
Besides notation, Peirce defined rules of in-
ference for EGs, which in many respects are the
simplest and most elegant inference rules ever
devised for any version of logic. A typical theo-
rem that requires 43 steps to prove with Russell
and Whitehead’s rules of 1910 takes only 8 steps
with Peirce’s rules of 1897. Peirce’s roles are a
generalization 
of natural deduction, which
Gerhard Gentzen discovered 40 years later, l.ike
Gentzen, Peirce took the empty set as his only
axiom, but Peirce’s proofs are simpler than
Gentzen’s because the nesting of contexts elimi-
nates the bookkeeping needed for making and
discharging assumptions -- the most error-prone
aspect of Gentzen’s system. For further dis-
cussion of these points, see Roberts (1973), Sow^
(1984, 1993), and Houser et al. (1995).
In discussing modality, Peiree imagined the
graphs drawn on "a book of separate sheets,
tacked together at points." The upper sheet re-
presents "a universe of existing individuals," while
the other sheets "represent altogether different
universes with which our discourse has to do."
Graphs on those sheets may represent "conceived
propositions which are not realized." Peirce said
that a necessarily true proposition could be con-
sidered as replicated on aU the sheets in the book,
while a possible proposition might occur on only
one. In the algebraic notation, Peirce used the
symbol co as an index for "a state of things," to
which he applied a universal quantifier for neces-
sity and an existential quantifier for possibility.
With his interpretation of necessity as truth "un-
der all circumstances," Peirce was following
Leibniz and anticipating Kripke.
Figure 2. EG for "You can lead a horse to water~ but you can’t make him drink."
In 1906, Peirce introduced colors or tinctures
to represent modalities. Figure 2 shows one of
Peirce’s examples, but with shading instead of the
original red for possibility. The graph contains
four ovals: the outer two are associated to form
a scroll for if-then; the inner two represent possi-
bility (shading) and impossibility (shading inside
a negation). The outer oval may be read If there
exists a person, a horse, and water;, the next oval
may be read then it is possible for the person to
lead the horse to the water and not possible for the
person to make the horse drink the water.
The notation leads to represents the triadic
predicate leads-to(’x~v,z), and _makes_drink_ re-
presents makes-drink(x~v,z). In the algebraic no-
tation with 0 for possibility, Figure 2 maps to
the following formula:
~(3x)(3y)(3z)(person(x) 
horse~) ^
water(z) ~(Oleads-to(x,y,z) ^
~Omakes-drink(x,y,z) ) 
With the symbol = for implication, this formula
becomes
(Vx)(¥y)(Vz) ((person(x) ^ 
water(z)) 
(Oleads-to(x,y,z) ^
~ ~makes-dri 
nk(x,y,z) ).
This version may be read For all x, y, and z, if x
is a person, y is a horse, and z is water, then it is
possible for x to lead y to z, and not possible for
x to make y drink z.
As a systematic way of representing the kinds
of contexts, Peirce adopted the traditional
heraldic tinctures, which were classified as metal,
color, or fur. He applied that three-way dis-
tinct.ion to actual, modal, and intentional con-
texts:
89

1.
Metal: argent, or, fer, and plomb. Peirce
used argent (white background) for "the ac-
tual or true in a general or ordinary sense,"
and the other metallic tinctures for "the ac-
tual or true in some special sense." A state-
ment about the physical world, for example,
would be actual in an ordinary sense. Peirce
also considered mathematical idealizations,
such as Cantor’s hierarchy of infinite sets, to
be "actual," but not in the same sense as or-
dinary physical entities.
2.
Color: azure, gules, vert, and purpure. Peirce
distinguished four basic modalities: azure for
logical possibility (dark blue) and subjective
possibility (light blue); gules for objective
possibility; 
vert for "what is in the
interrogative mood"; and purpure for "free-
dom or ability." 
Each of these modalities
could be combined with negation: he defined
necessary in the usual way as not-possibly-not
and obligatory as not-freedom-not (an antic-
ipation of deontic logic).
3.
Fur: sable, ermine, vair, and potent. The four
furs correspond to propositional attitudes:
sab/e for "the metaphysically, or rationally,
or secondarily necessitated"; erm/ne for pur-
pose or intention; 
vair 
for 
"the
commarlded"; 
and potent 
for 
"the
compelled."
Peirce’s three-way classification is highly sugges-
tive, but incomplete. He wrote that the complete
classification of "all the conceptions of logic" was
"a labor for generations of analysts, not for
one." But throughout his analyses, he clearly
distinguished the logical operators represented by
the graphs, from the tinctures, which, he said, do
not represent
differences 
of the predicates, 
or
significations of the graphs, but of the
predetermined objects 
to which the
graphs are intended to refer. Conse-
quently, the Iconic idea of the System
requires that they should be represented,
not by differentiatiom 
of the Graphs
themselves but by appropriate visible
characters of the surfaces upon which the
Graphs are marked.
It seems that Pcirce did not consider the tinctures
to be part of logic itself, but of the metalangua~
for describing how the logic applies to the uni-
verse of discourse:
The nature of the universe or universes
of discourse (for several may be referred
to in a single assertion) in the rather un-
usual cases in which such precision is re-
quired, 
is denoted either 
by using
modifications of the heraldic tinctures,
marked in something like the usual man-
ner in pale ink upon 
the surface, or by
scribing the graphs in colored inks.
By 1906, mathematical 
logic based on
Peirce’s algebraic notation had become a flour-
ishing field of research, and his graphs were ig-
nored. There were several reasons for the neglect:
the notation and terminology were unfamiliur;
most logicians, who had a strong background in
mathematics, had already found 
the algebraic
notation congenial to their tastes; and si~if-
icantly, Peirce’s novel applications of his graph
logic 
to modality, 
intentionality, 
and
metalangn,~ were outside the main interests of
the logicians 
of his time. Today, however,
Peirce’s contributions are central to research on
contexts:
1.
Representation of contexts by nests of enclo-
sures, which separate or partition groups of
propositions of different modal status.
2.
First-order logic based on three operators:
existence (line of identity), 
conjunction
(juxtaposition), and negation (oval enclosure
on a white background).
3.
Sound and complete rules of inference for
first-order logic based on operations of draw-
ing or erasing graphs and importing or ex-
porting graphs into and out of contexts.
4.
Tinctures for distingmishing the purpose or
"nature" of a context from its logical opera-
tors (for which he used only the basic three
-- existence, conjunction, and negation).
5.
A three-way classification of the use of con-
texts for representing actuality (metal),
modality (color), or intentionality (fur).
6.
The use of graphs as a metalanguage for
talking about graphs.
7.
Complete statement of the rules of inference
for existential graphs in existential graphs
themselves.
Peirce’s later writings, although fragmentary, in-
complete, and mostly unpublished, are no more
fragmentary and incomplete than many modem
publications about contexts. Although (or per-
haps because) he did not use the word context,
Peiree was more consistent in distinguishing the
syntax (oval enclosures), the semantics ("the uni-
verse or universes of discourse"), and the prag-
matics (the tinctures that "denote" the "nature"
of those universes).
9O

3. Contexts in Conceptual Graphs
Conceptual 
graphs 
are extensions 
of existential
graphs with new features 
based on the semantic
networks of AI and the linguistic 
research on
thematic roles and generalized quantifiers. 
The
primary difference is in the treatment of lines of
identity. In existential graphs, the lines serve two
different 
purposes: they represent 
existential
quantifiers, 
and they show how the arguments are
connected to the relations. 
In conceptual graphs,
those two functions are split: 
boxes called con-
cepts contain the quantifiers, 
and arcs marked
with arrows show the connections of arguments
to circles called conceptual relations. This sepa-
ration of functions has several important conse-
quences:
¯
Concepts 
have 
a place 
to represent 
a type 
la-
bel for each quantifier. 
Conceptual 
graphs
therefore 
correspond 
to a typed or sorted
logic, 
unlike 
the untyped 
existential 
graphs.
¯
Concepts 
may also contain 
a name or other
specification of the referent of the concept,
as in [Cat: Yojo], where the type is Cat and
the particular 
individual is named Yojo. The
area on the left of the colon is called the type
field, 
and the area on the right is called the
referent field.
¯
When an existential 
graph or an tmtyped
formula in predicate calculus is mapped to a
conceptual graph, the type label r may be
used to mark the universal type, which is a
supertype of all others. The type T imposes
no restrictions 
on the quantifier or referent.
The concept [T: Yojo], for example, would
represent 
an entity 
named Yojo whose type
was unknown or unspecified.
¯
The arrows or numbers on the arcs of con-
ceptual relations 
distinguish 
the arguments
more clearly than Peirce’s unlabeled lines.
For dyadic relations, 
the arrow pointing to-
wards the circle is the first argument, and the
arrow pointing away is the second argument.
For relations 
with more than two arguments,
the arcs are numbered l, 2 ..... 
n; the arrow
on the n-th arc points away from the circle,
and the other arcs point towards the circle.
¯
In an existential 
graph, any point on a line
of identity could be considered as a separate
quantified variable. 
Conceptual graphs con-
centrate the point of quantification 
in the
concepts 
rather 
than the lines. 
A blank
referent field represents the quantifier 3, but
the universal quantifier V or other generalized
quantifiers may also occur in the referent field
of a concept.
¯
Peirce’s lines of identity could cross context
boundaries, but a concept may only occur in
a single context. When two concepts in dif-
ferent contexts refer to the same individual,
they must be associated by coreference labels
or by a dotted line called a coreference link.
To illu~t~ette 
these features, Figure 3 shows two
equivalent conceptual graphs for the donkey sen-
tence. The CG on the left uses the basic notation
with the -’ symbol to mark negation and with
dotted lines for coreference links. The CG on the
right uses an extended notation with the types If
and Then defined as negated propositions 
and
with coreference 
shown by the labels 
x and y.
The concepts marked *x and *y are the defining
nodes with implicit existential quanfifiers, and the
concepts 
marked ?x and ?y are bound nodes
within the scope of *x and *y.
Figure 3. Two conceptual graphs for "If a farmer owns a donkey, then he beats it."
The scoping rules for the CG-s in Figure 3 are
Figure 1. The CGs may be read If a farmer x
the same as the rules 
for the DRS and EG in
owns a donkey y, then x beats y. The circles rep-
91

resent dyadic conceptual relations, where the ar-
row pointing towards the circle marks the first
argument and the arrow pointing away marks the
second argument. The two CGs in Figure 3
would correspond to the foUowing formula in al-
gebraic notation:
~(3X: 
Farmer) 
(~y:Oonkey) 
(3z:Own) 
(expr(z,x)
^ thme(z,y) 
A ~(3w:Beat) 
(agnt(w,x)
^ ptnt(w,y)) 
This representation 
follows C. S. Peirce and
Donald Davidson in reifying verbs with the event
variables z and w. The dyadic relations represent
the thematic roles or case relations used in lin-
guistics: 
experiencer (EXPR); theme (THME);
agent (AGNT); and patient (PTNT). For 
venience, there is also a linear notation that
makes CGs easier to type:
7[ [Farmer: *x]÷(EXPR)÷[Own]÷(THME)÷[Donkey: 
7[ [?x]÷(AGNT)÷[Beat]÷(PTNT)÷[?y] 
[If: [Farmer: *x]÷(EXPR)÷[Own]÷(THME)÷[Donkey: 
[Then: [?x]÷(AGNT)÷[Beat]÷(PTNT)-~[?y] 
In the graphic form of Figure 3, coreference may
be shown by dotted lines, but coreference labels
must be used in the linear notation.
]Tln~. 
19:29:32 
GMr]--~~ +
InteNal: 
@13 
.~ 
~11me:
19.’29:45 GMT 
]
Figure 4.
CG for "A cat chased a mouse for an interval 
of 13 seconds from 19:29".32 GMT to 19:29:45
GMT."
In CGs, a context is defined as a concept
whose referent field contains nested conceptual
graphs. Since every context is also a concept, it
can have a type label, coreference links, and at-
tached conceptual relations. 
In Figure 4, the
graph for a cat chasing a mouse is nested inside
a concept of type Situation. 
The conceptual
graph in the inner context describes the situation.
Attached to that context is the relation DUR for
duration, which is linked to a concept for an in-
terval of 13 seconds. The relations FROM 
and
TO show that the interval lasted from 19:29:32
GMT to 19:29:45 GMT.
When a conceptual graph occurs in a context
of type Graph, it is used as a literal; in a context
of type Proposition, it states a proposition; in a
context of type Situation, 
it describes 
a situation.
The following concept, by itself, may be read A
situation of a cat chasing a mouse.
[Situation: 
[Cat] 
÷(AGNT) 
÷[Chase]÷ 
(THME) 
÷ [Mouse]
This 
graph may be considered an abbreviation for
the following graph, which says 
that there exists
a situation 
whose description 
(DSCR) 
is the
proposition that a cat is chasing a mouse:
[Si 
tuati 
on]÷ 
(DSCR) 
÷ [Propo 
si 
ti 
on:
[Cat] 
÷(AGNT) 
÷[Chase] 
÷ (THME)÷ 
[Mouse] 
J.
In most 
applications, the abbreviated form shown
in Figure 4 is used. 
When 
necessary, the type la-
bel of the context determines how the nested
graph is interpreted. This use of the type label
corresponds to type coercion in programming
lang~_m~s.
To relate Figure 4 to McCarthy’s ist predi-
cate, first expand the abbreviations; then translate
the expanded graph to predicate calculus:
(Bs: 
S i tuati 
on) 
(Bi: 
Interval 
(duration(s,/] 
a measure(i,13sec) 
from(i, 
lg:2g:32GMT) 
^ to(i, 
lg:2g:45GMT)
^ dscr(s,
(Rz:Cat) 
(By:Mouse) 
(Bz:Chase)
(agnt(z,x) 
A thme(z,y)) 
Now it is possible to relate parts of this formula
to the earlier definition of the/st predicate:
ist(e,p) 
_--- 
(~Ix:Entity)(is-in(c,p) 
refers-to(c,x) 
^ describes(x,p)).
The 
entity 
x can be identified 
with 
the situation
s, and the proposition p with the proposition that
a cat is chasing a mouse. But there is no entity
in this translation that can be identified with
McCarthy’s context c. In McCarthy’s sense, c is
supposed to be larger than the single proposition.
In fact, the context may be so rich that no finite
set of formulas could exhaust its full content.
92

This discussion raises a question about the dis-
tinction between a total description of everything
that is knowable about a situation and a partial
description in a single formula. That issue has
been central to situation semantics, which may
help to clarify the semantics of both CG contexts
and McCarthy’s contexts.
4. Situations and Propositions
Barwise and Perry (1983) developed situation se-
mantics as a reaction again~ the potentially infi-
nite models of Kripke’s and Montague’s modal
and intensional logics. Each situation is a finite
configuration of some aspect of the world in a
limited region of space and time. It may be a
static configuration that remains unchanged for a
period of time, or it may include processes and
events that are causing changes. It may include
people and things with their actions and thoughts;
it may be real or imaginary; and its time may be
present, past, or future. A situation may be as
large as the solar system or as small as an atom,
and it may contain nested situations for smaller
or more detailed aspects of the world.
As an illustration of the way situations are
related to partial descriptions, Figure 5 shows a
concept of type Situation, which is linked to two
images and a description. 
The image relation
(IMAG) links the situation to two different kinds
of images of that situation: a picture and the as-
soeiated sound. The description relation (DSCR)
links it to a proposition that desc~bes some as-
pect of the situation, 
which is linked by the
statement relation (STMT) to three different
statements of the proposition in three different
languages: an E~gllsh sentence, a conceptual
graph, and a formula in the Knowledge Repre-
sentation 
Lang~ (KIF) by Genesereth and
Fikes (1992).
Sour~l:
$1tuat~n~ Picture:
CLANKET¥
scrape
---7
"e,-
,p
"A plumber 
Is c~nflng 
a pipe."
(exists 
((’?x Idmber) 
(?y =my) 
(?z 
"
(==1 (=a=t ~ ?d (tl~ ~ .’M) 
Graph:
Figure 5. A situation of a plumber 
carrying a pipe
A proposition may be defined as an equiv-
alence class of statements in one or more lan-
guages. No concrete statement in any specific
language /s the proposition. Instead, a concept
of type Proposition, such as the one in Figure 5,
represents a class of intertranslatable statements
in one or more concrete languages. Each state-
ment in that class is said to express the same
proposition. To avoid complexities, the equiv-
alence mapping will be defined first for formal
languages like KIF and CGs. Letfbe a mapping
from language M1 to language ~2 that defines the
equivalence; let s be any statement in "~1; and let
t =fl-l(](s)) be the result of mapping s 2 and
back again. Thenfmust obey the following three
constraints:
93

1.
Truth preserving: The statements s and t
must be provably equivalent according to the
rules of inference of language ~1-
2.
Vocabulary preserving: 
Exactly the same
nonlogical symbols must appear in both s
and t.
3.
Negation preserving: 
When s and t axe
mapped to Peirce Normal Form (with ne-
gation, conjunction, and the existential
quantifier as the only logical operators), they
contain exactly the same number of negation
operators.
These three conditions ensure that the statements
s and t axe highly similar, if not identical. Al-
though Fermat’s Last Theorem and 2 + 2 = 4 are
both true, the proof is far from trivial, and the
two statements require different vocabularies.
Condition #2 allows variables to be renamed and
permits pvq to be replaced by ~(~p^"q); but 
ensures 
that 
a 
statement 
like
(Vx)(dog(x)=dog(x)) 
does not get mapped to
(Vx)(cat(x)~cat(x)). Condition #3 allows pap to
be mapped to p, but it prevents ~~p from being
mapped to p. Generalizing this definition to na-
tural languages should be possible, but that
would raise further issues beyond the scope of
this paper.
As Figure 5 illustrates, the proposition stated
by any of the three statements represents a tiny
fraction of the total information available. Both
the sound image and the picture image capture
information that is not in the sentence, but even
they are only partial representations. A picture
may be worth a thousand words, but a situation
can be worth a thousand pictures. To relate a
situation to the information it contains, Keith
Devlin (1991) introduced the term infon for an
abstract information object that is closely related
to the previous definition of proposition.
Devlin’s basic formula is s ~ o, where s is a
situation and o is an infon that is semantically
entailed by s. Devlin’s construction 
that comes
closest to what McCarthy calls a context is the
set of all infons entailed by a situation: {o [
s N o}. If the DSCR relation is interpreted as
entailment of a partial description, McCarthy’s
context c may be considered a complete de-
scription of a situation:
completeDscr(s,c) = c= {a [ s N ~r}.
For Figure 5, the context c would include pro-
positions or infons saying that the plumber is
carrying a toolbox, he works for Acme Plumbing
Co., he is dragging the pipe with a clankety noise,
etc. The predicate is-in(c,p) could then be inter-
preted as provability.
With this analysis, the following formula re-
presents an interpretation of the /st predicate in
terms of situations and infons (or propositions):
i st(c,p) 
- (3s:Situation)(provable(c,p) 
completeDscr(s,¢) 
^ dscr(s,p)).
The syntactic predicate is-in(c,p) is interpreted as
provable(c,p). The two semantic predicates are
defined in terms of entailment: refers-to(c,s) 
completeDscr(s,c); and dser(s,p) is s ~p. In 
pure first-order 
framework, s ~p would be re-
dundant, since it would be implied by c [--p and
the definition of c. Including it, however, could
accommodate nonstandard 
logics 
in which
provability is not equivalent to entailment.
The previous definition was presented at the
IJCAI’95 workshop on context. 
In the dis-
eussions, McCarthy made the point that identi-
fying a context c with the set of all entailments
of a situation s does not completely capture his
intuitions about context. As aa example, sup-
pose that John believes everything that Mary be-
lieves. Then either of their belief systems would
entail 
exactly the same propositions. 
But
McCarthy would like to say that the context of
John’s beliefs is not the same as the context of
Mary’s beliefs. That distinction implies that no
purely extensional definition can capture the full
import of McCarthy’s notion of context.
5. Extensions, Intensions, and Intentions
The difficulty of giving a precise definition of
McCarthy’s contexts is closely related to the dif-
ficulty of giving a precise definition of situations.
In their 1983 book, Barwise and Perry identified
a situation with a bounded region of space-time,
and they tried to use that definition to support a
theory of propositional attitude verbs, such as
believe, think, hope, fear, wish, want, and plan.
Yet further research on situation semantics has
94
shown that a purely extensional definition of sit-
uation is inadequate, for many of the same rea-
sons that McCarthy objected to an extensional
definition of context. The following examples il-
lustrate the problems:
¯
A college lecture might be considered a situ-
ation bounded by a 50-minute time period 
in
a spatial region enclosed by the walls of a
classroom. But if the time were moved for-

ward by 30 minutes, the region would include
the last half of one lecture and the first half
of another. That time shift would create a
very unnatural "situation."
¯
An even more unnatural transformation
would be to shift the spatial region to the left
by half the width of a classroom. Then it
would include part of one class listening to
one teacher, part of another class listening to
a different teacher speaking on a different
topic, and a wall that separated the two dis-
cussions.
¯
Another possible tranfformation is to fix the
coordinate system relative to the sun instead
of the earth. Then the space-time region that
included the class at the beonning of the lec-
ture would quickly shift into deep space as
the earth moved; by the end of the hour, it
would contain nothing but an occasional hy-
drogen atom.
These examples illustrate a fundamental difficulty
for any purely extensional definition. An arbi-
trarily chosen space-time region is useless for de-
fining a "situation" or "context." Instead, a
useful or "meaningful" choice of region depends
critically on some agent’s purpose or intention.
But if purpose or intention is critical to the deft-
nition of situation or context, then the explication
of propositional attitudes in terms of situations
becomes circu,!~: the intentionality 
that is ex-
plained 
by the theory 
depends 
on the
intentionality that went into the choice of situ-
ation.
Peirce considered intentionality 
as funda-
mental to his theory of signs or semiotics. Al-
though he did not use the word context, he would
have defined a context as a kind of sign, to which
he would apply his basic definition:
A sign, or representamen, is something
which stands to somebody for something
in some respect or capacity. It addresses
somebody, that is, creates in the mind of
that person an equivalent sign, or per-
haps a more developed sign. That sign
which it creates I call the interpretant of
the first sign. The sign stands for some-
thing, its object. It stands for that object,
not in all respects, but in reference to a
sort of idea, which I have sometimes
called the ground of the representamen.
(CP 2.228)
Peirce’s notion of sign was broad enough to in-
clude situations, contexts, propositions or infons,
and their expression in any language, including
English and logic. His notion ofgroundis crucial:
it acknowledges that some agent’s purpose, in-
tention, or "conception" is essential for deter-
mining the scope of a situation or context.
Unlike the two-way distinction of extensions
and intensions, 
Peirce drew a three-way dis-
tinction in his basic categories of Firstness,
Secondness, and Thirdness:
First is the conception of being or exist-
hag independent of anything else. Second
is the conception of being relative to, the
conception of reaction with, something
else. Third is the conception of medi-
ation, whereby a first and a second are
brought into relation.
His three kinds of tinctured contexts, which were
discussed in Section 2, are applications of these
categories:
1.
Metal represents the "Actual" or what can
be described in classical first-order logic
without modalities or intentionality.
2.
Color represents the varieties of possibilities,
objective, subjective, and deontic. This topic
has been thoroughly explored in the modem
modal and intensional logics, whose seman-
tics have been defined in terms of infinite
families of possible worlds.
3.
Fur represents the intentionality (with a 
instead of an S) whereby an agent selects
some context for the representation of some
object for some purpose. Intentionality, 
in
Peirce’s terms, is the mediating Thirdness
that determines the context for directing at-
tention to some object for some purpose.
Peirce’s third category has never been ad~uately
studied or represented in any of the modern
modal and intensional logics. It is central to the
issues that McCarthy, Baxwise and Perry, and
others have been trying to capture in their theo-
des. But those theories cannot be completed
without representing intentionality 
with a T.
Peirce 
never 
completed 
his theory 
of
intentionality, but at least he made a good begin-
ning. As he said, the complete classification of
all the conceptions is "a labor for generations of
analysts, not for one."
95

References
Barwise, 
Jon, Jean Mark Gawron, Gordon
Plotkin, & Syun Tutiya, eds. (1991) Situation
Theory and its Applications, CSLI, Stanford, CA.
Barwise, Jon, & John Perry (1983) Situations and
Attitudes, MIT Press, Cambridge, MA.
Burke, Tom (1991) "Peirce 
on truth 
and
partiality," in Barwise et al. (1991) pp. 115-146.
Cooper, Robin, & Hans Kamp (1991) "Negation
in situation semantics and discourse represen-
tation theory," in Barwise et al. (1991) pp.
311-333.
Devlin, Keith (1991) "Situations as mathematical
abstractions," in Barwise et al. (1991) pp. 25-39.
Frege, Gottlob (1879) Begriffsschrift, translated
in Jean van Heijenoort, ed. (1967) From Frege to
GOdel, Harvard University Press, Cambridge,
MA, pp. 1-82.
Genesereth, Michael R., & Richard E. Fikes
(1992) Knowledge Interchange Format, Reference
Manual, Version 3.0, Report Logic-92-1, Com-
puter Science Department, Stanford University.
Guha, R. V. (1991) Contexts: A Formalization
and Some Applications, 
technical
report
ACT-CYC-423-91, MCC, Austin, TX.
Houser, N., D. D. Roberts, & J. Van Evra, eds.
(1995) Studies in the Logic of Charles Sanders
Peirce, Indiana University Press, Bloomington.
Kamp, Hans (1981) "Events, discourse represen-
tations, and temporal references," Langages 64,
39-64.
Lenat, Dougla~ B., & R. V. Guha (1990) Building
Large Knowledge-Based Systems, 
Addison-
Wesley, Reading, iVIA.
McCarthy, John (1990) Formalizing Common
Sense, Ablex, Norwood, NJ.
McCarthy, John (1993) "Notes on formalizing
context," Proc. IJCAI-93, Chamb6ry, France, pp.
555-560.
McCarthy, John, & Sa~ Buva~ (1994) Formaliz-
ing 
Context, 
Technical 
Note
STAN-CS-TN-94-13, Stanford 
University.
Available from http://sail.stanford.edu.
Peirce, Charles Sanders (1885) "On the algebra
of logic," American Journal of Mathematics, vol.
7, pp. 180-202. Reprinted in Peirce (W) vol. 
Peirce, Charles Sanders (CP) Collected Papers of
C. S. Peirce, ed. by C. Hartahome, P. Weiss, &
A. Burks, 8 vols., Harvard University Press,
Cambridge, MA, 1931-1958.
Peirce, Charles Sanders (W) Writings of Charles
S. Peirce, vols. 1-5, Indiana University Press,
Bloomington, 1982-1993.
Roberts, Don D. (1973) The Existential Graphs
of Charles S. Peirce, Mouton, The Hague.
Schr6der, Ernst (1890-1895) Vorleswagen i~er die
Algebra der Logik, 3 vols., Teubner, Leipzig.
Reprinted by Chelsea Publishing Co., Bronx,
NY, 1966.
Sowa, John F. (1984) Conceptual Structures:
Information Processing in Mind and Machine,
Addison-Wesley, Reading, MA.
Sowa, John F. (1990) "Crystallizing theories out
of knowledge soup," 
in Z. W. Ras & M.
Zemankova, eds., Intelligent 
Systems: State of
the Art and Future Directions, Ellis Horwood,
New York, p. 456-487.
Sowa, John F. (1991) "Towards the expressive
power of natural language," in J. F. Sowa, ed.
(1991) Principles of Semantic Networks: Explo-
rations in the Representation of Knowledge,
Morgan Kanfmana Publishers, 
San Mateo, CA,
pp. 157-189.
Sowa, John F. (1993) "Logical foundations for
representing object-oriented systems," Journal of
Experimental and Theoretical AI, vol. 5, nos.
2&3, pp. 237-261.
Sowa, John F., & Eileen C. Way (1986) "Imple-
menting a semantic interpreter 
for conceptual
graphs," IBM Journal of Research and Develop.
merit 30:.1, pp. 57-69.
96

