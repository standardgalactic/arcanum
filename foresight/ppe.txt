  
Peirce, Polya, and Euclid
Integrating Logic, Heuristics, and Geometry
John F. Sowa
4 April 2015
Presented at the April 2015 conference of the American Philosophical 
Association, Session on Peirce.   Revised and extended, 15 December 2020.

 
 
2
Peirce, Polya, and Euclid
  
1. Diagrammatic Reasoning
2. Existential Graphs
3. Natural Logic
4. Theoretical Issues
5. Conclusion
An article based on this talk was published in the Journal of Applied Logics, vol. 5:5, 2018, 
pp. 987-1059, http://www.collegepublications.co.uk/downloads/ifcolog00025.pdf. 

 
3
1. Diagrammatic Reasoning
Paul Halmos, mathematician: 
“Mathematics — this may surprise or shock some — is never deductive in its 
creation.  The mathematician at work makes vague guesses, visualizes broad 
generalizations, and jumps to unwarranted conclusions.  He arranges and 
rearranges his ideas, and becomes convinced of their truth long before he 
can write down a logical proof...  the deductive stage, writing the results 
down, and writing its rigorous proof are relatively trivial once the real insight 
arrives;  it is more the draftsman’s work not the architect’s.”  *
Albert Einstein, physicist: 
“The words or the language, as they are written or spoken, do not seem to 
play any role in my mechanism of thought.  The psychical entities which 
seem to serve as elements in thought are certain signs and more or less clear 
images which can be voluntarily reproduced and combined...  The above-
mentioned elements are, in my case, of visual and some of muscular type. 
Conventional words or other signs have to be sought for laboriously only in  
a secondary stage, when the mentioned associative play is sufficiently 
established and can be reproduced at will.”  **
* Halmos (1968).    ** Quoted by Hadamard (1945). 

 
 
4
Archimedes’ Eureka Moment
 
Insight:  A submerged body displaces an equal volume of water.
● It’s a mathematical principle, a property of Euclidean space.
● Scientists and engineers have used it ever since.
● They don’t prove it.  They use it to define incompressible fluid.
 

 
 
5
Determining the Value of 
 
Archimedes had two visual insights:
● The circumference of the circle is greater than that of the inner        
  polygon and less than that of the outer polygon.
● As the number of sides increases, the inner polygon expands,         
  and the outer polygon shrinks.  They converge to the circle.
Given these insights, a good mathematician could compute    
to any desired precision.  Archimedes used 96-agons.
 

 
 
6
Euclid’s Proposition 1
 
 

 
 
7
Theorems and Corollaries
Peirce’s observation about Euclid’s Elements:
● Every theorem has a new diagram.
● Every corollary uses the same diagram as the main theorem.
The creative insight is the visualization of a new diagram:
● The statement of Proposition 1 mentioned only a line and a triangle.
● It did not mention circles, their relationships to each other, or               
  their relationships to the line and the triangle.
New insights, good or bad, can come from anywhere:
● Taking a bath, walking in the park, or wild images in a dream.
● Drawing a diagram is a guess — an abduction that introduces               
  novel ideas.  They may be brilliant, irrelevant, or wrong.
● Deduction is systematic perception — a careful examination                  
  of the diagram to make implicit relationships explicit.
Deduction cannot generate anything new.  Its primary use is     
to develop and test the results of abduction and induction.
 

 
 
8
Induction and Analogy
Quotations by George Polya (1954):
● Demonstrative reasoning is safe, beyond controversy, and final.
● Plausible reasoning is hazardous, controversial, and provisional.
● Demonstrative reasoning [however] is incapable of yielding new                      
  knowledge about the world.
Some mathematicians quoted by Polya:
● Euler:  The properties of the numbers known today have been mostly              
  discovered by observations... long before their truth has been confirmed          
  by rigid demonstrations.
● Laplace:  Even in the mathematical sciences, our principal instruments          
  to discover the truth are induction and analogy. 
Polya's books had a strong influence on the methods of 
heuristics in artificial intelligence.
They are consistent with Peirce’s many observations about 
induction, abduction, deduction, and analogy.
 

 
 
9
Icons and Diagrams
Three kinds of signs:  Icons, indexes, and symbols.
● An icon has a structural resemblance to its referent.
● An index points to its referent by some kind of connection.
● A symbol indicates its referent by some habit or convention. 
Algebraic notations combine symbols and indexes with        
linear icons for the operators and transformation rules.
Diagrams use more complex icons to represent relations:
● A road map is an icon of a road system with symbolic labels.
● A topographic map is a labeled icon of some land surface.
● A map of roads plus topography can combine both.
Peirce’s existential graphs (EGs) are logic diagrams.
● Icons represent existence, identity, conjunction, negation, and scope.
● But generalized EGs can also use icons to represent relations.
● Perception can make the implicit information explicit.
 

 
 
10
Implicit Information in an Icon
To answer a question by looking at the map:
● Which country is closer to Africa:  Canada or USA?
● Observe the two congruent lines, which are determined by 4 data points.
● The possible observations grow as Dn — where D is the number of data    
   points in the icon, and n is the number used in the observation.
The information implicit in an icon can be far greater than the 
information explicitly encoded in symbols and indexes.
 

 
11
2. Existential Graphs
Charles Sanders Peirce (1880, 1885) invented the algebraic 
notation for first-order and higher-order predicate calculus. *
In 1897, he invented existential graphs (EGs) as a “more iconic” 
representation for “the atoms and molecules of logic.”
Even more important than the notation, EGs support simple, 
elegant, and general rules of inference.
CLIP is a dialect of Common Logic that has a simple mapping to 
and from EGs, predicate calculus (PC), and many other logics.
When the relations in EGs are represented only by symbols,  
they have the same expressive power as Common Logic (CL).
But Generalized EGs (GEGs) may also include arbitrary icons.
They can include Euclid’s diagrams (in two or more dimensions) 
in axioms, theorems, and proofs.
* Hilary Putnam (1982) Peirce the logician, http://www.jfsowa.com/peirce/putnam.htm

 
 
12
The RDF Subset of EGs
Peirce’s English version:  “There is a Stagirite who teaches a 
Macedonian conqueror of the world and who is at once a disciple and 
an opponent of a philosopher admired by Fathers of the Church.”
A translation to CLIP (CL Interface to PC):
    ( x y z)  ("is a Stagirite" x)  (teaches x y)  ("is a Macedonian" y)
         ("conquers the world" y)  ("is a disciple of" x z)  ("is an opponent of" x z)
             (“is a philosopher admired by church fathers” z).
The RDF subset of logic can represent the content of a relational 
database or the graph databases of the Semantic Web.

 
 
13
First-Order Existential Graphs
Summary of the notation:

 
 
14
Syntax of Existential Graphs
Example:   
● Two lines mean There exist something x and something y.
● Cat and Mat are monadic relations.  On is a dyadic relation.
Five syntactic features:
● Relation:  A name with zero or more pegs for attaching lines.
● Existence:  A line of identity that says Something exists.
● Conjunction:  Two or more graphs in the same area.
● Metalanguage:  An oval that covers some area.
● Negation:  A shaded oval that represents the operator not.  
Four combinations:
● Proposition:  A graph of lines attached to the pegs of relations.
● Identity:  Two or more connected lines (called a ligature).
● Denial:  A shaded oval that denies the EG it covers.
● Metalanguage:  A line that connects an oval to a relation.

 
 
15
Metalanguage
A relation linked to an oval makes a metalevel comment about 
the proposition expressed by the nested graph. *
Peirce allowed names of relations to contain blanks.
The relation named "You are a good girl" has zero pegs.  By itself, 
it is an EG that expresses a proposition.
The relation named "is much to be wished" has one peg, which is 
attached to a line that says Something exists, which in this case is 
the proposition stated by the EG nested inside the oval.
* From Charles Sanders Peirce, Reasoning and the Logic of Things, The Cambridge 
Conferences Lectures of 1898, Harvard University Press, p. 151.
 

 
 
16
Lambda Abstraction
The top EG says Aristotle is a Stagirite who teaches Alexander 
who conquers the world.
In the EG below it, the names Aristotle and Alexander are 
erased, and their places are marked with the Greek letter l.
That EG represents a dyadic relation:  ___ is a Stagirite who   
teaches ___ who conquers the world.
Peirce used an underscore to mark those empty places, but 
Alonzo Church marked them with the Greek letter l.

 
 
17
Scope of Quantifiers
The outermost point of any line represents the quantifier. 
The bottom graph may be read in three equivalent ways.

 
 
18
Boolean Combinations
Relations with zero pegs express propositions.

 
 
19
Translating the Word is to Logic
Three different translations in predicate calculus:
● Existence:  There is x.  ↔  ∃x.
● Predication:  x is a cat.  ↔  Cat(x)
● Identity:  x is y.  ↔  x=y 
Do these three translations imply that English is ambiguous?
Or is the algebraic notation too complex?
In EGs, all three uses of the word is map to a line of identity:
● Existence:  There is x.  ↔  ▬
● Predication:  x is a cat.  ↔  ▬Cat
● Identity:  x is y.  ↔  ▬▬   (a ligature of two lines)
As Peirce said, EGs are more iconic than the algebraic notation: 
they relate language to logic more clearly and directly.
Frege and Russell were misled by their notations.
 

 
 
20
Translating EGs to and from English
Most existential graphs can be read in several equivalent ways.
Left graph:
A red ball is on a blue table.
Some ball that is red is on some table that is blue.
Right graph:
Something red that is not a ball is on a table that is not blue.
A red non-ball is on a non-blue table.
On some non-blue table, there is something red that is not a ball.

 
 
21
Scope of Quantifiers and Negations
Ovals define the scope for both quantifiers and negations.
Left graph:
If there is a red ball, then it is on a blue table.
Every red ball is on some blue table.
Right graph:
If a red ball is on something x, then x is a blue table.

 
 
22
EGs With Multiple Nested Negations
The many ways of reading an EG are logically equivalent:
If  something red that is not a ball is on something y,                           
     then y is a table that is not blue.
If a red thing x is on something y,                                                          
     then either x is a ball, or y is a table that is not blue.
If a red thing x is on something that is not a non-blue table,               
     then x is ball.
EGs represent the common meaning as Peirce Normal Form 
(PNF).  See http://www.jfsowa.com/logic/proposit.pdf

 
 
23
Linearizing Existential Graphs in CLIP
CLIP can serve as a linear representation for EGs. 

 
 
24
Mapping EG to CLIP
English:  If something red that is not a ball is on something y,             
           then y is a table that is not blue.
CLIP:   ~[ ( x y)  (Red x)  ~[(Ball x)]  (On x y)  ~[(Table y)  ~[(Blue y)]]].
Mapping EG features to CLIP features:
● Two ligatures of connected lines represent the existence of x and y.
● Four ovals map to four negations, represented  as  ~[  ].
● Five EG relation names map to five CLIP relation names.
● Every peg of an EG relation is attached to an occurrence of x or y. 

 
 
25
Some “Syntactic Sugar”
CLIP:
~[ ( x y)  (Red x)  ~[ (Ball x) ]  (On x y)  ~[ (Table y)  ~[ (Blue y) ] ] ].
CLIP with the optional keywords 'If' and 'Then':
[If  ( x y)  (Red x)  ~[ ( Ball x) ]  (On x y)  [Then  (Table y)  ~[ (Blue y) ] ] ].
Logically, 'If' and 'Then' are synonyms for negations, but they 
improve readability by showing the mapping to English.

 
 
26
Different “Syntactic Sugar”
CLIP:
~[ ( x y)   (Red x)   ~[ (Ball x) ]   (On x y)   ~[ (Table y)    ~[ (Blue y) ] ] ].
CLIP with the optional keywords 'If', 'Then', and 'Or':
[If  ( x y) (Red x) (On x y)  [Then  [Or  [(Ball x)]   [(Table y)  ~[(Blue y) ] ] ].
English:  If some red thing x is on something y,                                   
      then either x is a ball or y is a table that is not blue.
The term “syntactic sugar” is misleading.  It should be called a 
different view of the same information.

 
 
27
Coreference Nodes in CLIP
Coreference nodes show how lines of identity are connected  
and how they may be extended into a nested area:
● Quantifier node:  ( x) represents the outermost point of a line.
● Identity:  (= x y) shows that lines x and y are connected to form       
  a ligature.  It represents an equality x=y in predicate calculus.
● Teridentity:  (= x y z) shows a connection of lines x, y, and z.            
  It represents a pair of equalities, x=y and y=z.
● Coreference nodes may connect any number of lines.  With one      
  line, (= x) represents an extension of a line x into a nested area.
If a coreference node contains two or more labels that happen to 
be identical, the redundant labels may be deleted.  For example, 
(= x y x z y x) may be simplified to (= x y z).
Two or more quantifier nodes may be merged in a single node:
( x y z)  is equivalent to  ( x) ( y) ( z). 
 

 
 
28
Connecting Lines to Form Ligatures
Two ligatures, each with three branching lines (teridentity).
Representing each branch with its own label in CLIP:
 [If ( x y z u) ~[ (Ball x) ]  (Red y)  (= z x y)  (On z u)
       [Then  (  v w)  (Table v)  ~[ (Blue w) ]  (= u v w) ] ].
After deleting redundant labels, this CLIP statement becomes
 [If  (  x u)  ~[ (Ball x) ]  (Red x)  (On x u)  [Then  (Table u)  ~[ (Blue u) ] ] ].

 
 
29
Mapping CLIP to Predicate Calculus
CLIP:
~[ ( x y)  (Red x)  ~[ (Ball x) ]  (On x y)  ~[ (Table y)  ~[ (Blue y) ] ] ].
Predicate calculus:
~( x,y)  (Red(x)   ~Ball(x)   On(x,y)   ~(Table(y)   ~Blue(y))).
Differences between CLIP and predicate calculus:
● CLIP has fewer  explicit operators because conjunction is implicit.
● Since EG areas have no linear order, CLIP areas are also unordered.       
  All permutations of the nodes in any area are equivalent.

 
 
30
Ontology of Space
If the line segment AB is bisected at the midpoint C, what happens to 
the point C?  Which “half” should contain C?  Either, both, or neither?
With Cantor’s ontology,
● A line consists of a set of points.
● Therefore, C must go to one side or the other.
● The two sides cannot be identical (congruent).
With Aristotle’s ontology, which Euclid and Peirce adopted, *
● The proper parts of a line are smaller lines.
● A point may designate a locus on a line, but it is not part of the line.
● Similarly, a line may bisect an area, and a plane may bisect a solid.             
  But they are not parts of the area or the solid.
In translating Euclid to any notation for logic, use Aristotle’s ontology.
* See Ketner & Putnam (1992) Introduction to Peirce’s Reasoning and the logic of things.
 

 
 
31
Euclid’s Drawings in a Proof
Euclid stated his proofs in procedural form:
● His proofs mix imperative statements about what to draw with              
  declarative statements about the result. 
To simplify the logic, use only declarative sentences:
● Euclid’s Proposition 1, as translated by Thomas Heath:                          
  On a given finite straight line, to draw an equilateral triangle.
● Restate that proposition as a conditional:                                                 
  If there is a finite straight line AB, then there is an equilateral               
 triangle with AB as one of its sides.
● Treat every imperative sentence beginning with let as a directive          
  for the next step in carrying out the proof. 
When a drawing appears in an EG, represent lines of identity     
in a color that is not used in the diagrams.
Euclid’s naming conventions may be used in EG and CLIP.
 

 
 
32
Proposition 1 as a Generalized EG
 
English:  If there is a line segment AB, then there is an equilateral              
     triangle with AB as one of its sides.
The symbol ' ' names a relation that says the three sides of the 
≅
triangle are congruent.
The lines of identity are in red.  But those lines may be erased,      
since the names A and B make them redundant.
 

 
 
33
Proposition 1 in CLIP
 
CLIP:  [If  ( A B AB) (Point A)  (Point B)  (Line AB)
                   [Then ( ABC AC BC) (Triangle ABC)  (Line AC)  (Line BC)     
                       
(HasSides ABC AB AC BC)  ("≅" AB AC BC) ] ].
CLIP is not as readable as the EG because it requires more symbols  
to represent all the icons in the diagram.
 

 
 
34
Restricting the Quantifier
In English, quantifying words, such as some and every, may be 
combined with a word that restricts the domain of quantification.
In CLIP, a relation node such as (Point x) may be used to restrict a 
quantifier node ( x) in a combined node  ( x:Point).  For example,
     [If  ( A B AB)  (Point A)  (Point B)  (Line AB)
           [Then  ( ABC AC BC)   (Triangle ABC)  (Line AC)  (Line BC)          
                       (HasSides ABC AB AC BC)  ("≅" AB AC BC) ] ].
becomes
     [If  (  A:Point  B:Point  AB:Line)
           [Then  (  ABC:Triangle   AC:Line   BC:Line)                            
    
                       (HasSides ABC AB AC BC)  ("≅" AB AC BC) ] ].
In English, this may be read If there exist a point A, a point B, and a line 
AB, then there exist a triangle ABC, a line AC, and a line BC, where ABC 
has sides AB, AC, BC, and the lines AB, AC, BC are congruent.
 

 
 
35
Peirce’s Rules of Inference
Peirce’s rules support the simplest, most general reasoning 
method ever invented for any logic.
Three pairs of rules, which insert or erase a graph or subgraph:
1. Insert/Erase:  (i) insert anything in a negative area (shaded);           
    (e) erase anything in a positive area (unshaded).
2. Iterate/Deiterate:  (i) iterate (copy) anything into the same area       
    or any nested area;  (e) deiterate (erase) any such copy.
3. Double negation:  (i) insert or (e) erase a double negation               
    (a shaded area with nothing in it) around any graph in any area.
There is only one axiom:  the blank graph, which is always true.
Peirce stated these rules in terms of EGs.
But they can be adapted to many notations, including predicate 
calculus, natural languages, and Euclid’s diagrams.
For details, see http://www.jfsowa.com/pubs/egtut.pdf

 
 
36
Derived Rules of Inference
Rule of modus ponens:  From p and (if p then q), conclude q:
By 2e, deiterate nested p.  By 1e, erase p.  By 3e, erase double negation.
Therefore, modus ponens may be used as a derived rule of 
inference in any proof by Peirce’s rules.
In general,
● All rules and proof procedures of classical first-order logic may be      
  derived by a proof that uses Peirce’s rules.
● Therefore, any or all of those rules may be used as derived rules in      
  any proof that uses EGs.
● With appropriate constraints, Peirce’s rules may also be adapted to     
  higher-order logics, nonmonotonic logics, intuitionistic logics, etc.

 
 
37
Observation and Imagination
Generalized EGs (GEGs) may contain arbitrary icons:
●An icon in a GEG asserts a pattern of relations among its parts.
●Any icon that has N points designated as pegs may be used as   
an N-adic relation in a GEG.
●Peirce’s rules of inference for EGs may insert or erase icons in 
GEGs under the same conditions as ordinary EG relations.
Two new rules of inference for relating icons to GEGs:
●Observation:  Any GEG that is implied by an icon may be inserted  
in the same area as that icon.
●Imagination:  Any icon that is implied by a GEG may be inserted   
in the same area as that GEG.
These rules are sound because they preserve truth.  They make 
implicit information explicit, but they do not introduce anything 
that might be false.

 
 
38
Proving Proposition 1
 
The first steps in proving most theorems in EG form:
● The only axiom is the empty graph — a blank sheet of paper.
● By rule 3i, insert a double negation around the blank.
● By rule 1i, insert the original hypothesis into the shaded area.
● By rule 2i, iterate (copy) the hypothesis into the unshaded area.
● The result is true:  If there is a line AB, then there is a line AB.
● In CLIP,  [If  (  AB:Line)  [Then (  AB:Line) ] ].
Continuation of the proof:
● By repeated use of rule 2i, copy axioms and definitions into the
      
  unshaded area and apply other rules to graphs in that area.
● Finally, the condition of Proposition 1 remains in the shaded area       
  and the conclusion appears in the unshaded area.
 

 
 
39
Euclid’s Postulate 3
 
Euclid:  To describe a circle with any center and distance.
English for the GEG:  If there are two points, then there exists a circle 
with one point at its center and a radius from the center to the other point.
CLIP:   [If (  x:Point  y:Point)  [Then ( z:Circle) (Center z x) (Radius z x y) ]].
Next steps in proving Proposition 1:
● By 2i, insert Postulate 3 into the inner area of the GEG in slide 38.
● Then derive two circles by using modus ponens twice.
 

40
Generalized EG for Slide 39
By modus ponens, insert a circle with center A and radius AB.
By modus ponens, insert a circle with center B and radius BA.
Then by rule 1e, erase Postulate 3 from the unshaded area.
 

Euclid’s Postulate 1
 
Euclid:  To draw a straight line from any point to any point.
English for the GEG:  If there are two points, then there exists a straight 
line from one to the other.
CLIP:   [If  (  x:Point  y:Point)  [Then  (  z:Line)  (Line z x y) ]].
Continuation of the proof:
● By rule 2i, insert Postulate 1 into the unshaded area of the EG in slide 40.
● By modus ponens, use Postulate 1 to insert a line from C to A.
● By modus ponens, insert another line from C to B.
● By rule 1e, erase Postulate 1 in the unshaded area.
● By the definition of triangle, lines AB, CA, and CB form a triangle ABC. 
 

 
 
42
Euclid’s Common Notion 1
 
Euclid:  Things which are equal to the same thing are also equal to one 
another.
CLIP:  [If  ( x y z)  (" " x y)  (" " y z)  [Then  (" " x z) ]]. 
≅
≅
≅
Concluding steps:
● By rule 2i, iterate this EG into the unshaded area of the EG in slide 39.
● By the definition of radius, AC and AB in the circle CDB are congruent.
● By the same definition, BC and AB in the circle CAE are also congruent
● By common notion 1, the lines AC, AB, and BC are congruent.
● By rule 1e, erase Common Notion 1 from the unshaded area.
 

 
 
43
Quod Erat Demonstrandum
This GEG is the result of carrying out every step in Euclid’s proof.
Then by rule 1e, erase the circles to derive the GEG in slide 33.
 

 
 
44
Polyadic Relations
Peirce used the word polyad for relations that have more than 
one peg or logical subject:  dyads, triads, tetrads, pentads...
But the definition of polyad may be extended to relations that 
may have a different number of pegs in different instances. 
Polyads can simplify the mapping from language to logic:
●  (Line x) for x is a line;  (Line x a b) for x is a line from a to b.
●  (Triangle x) for x is a triangle; (Triangle x a b c) for x is a triangle with 
sides a, b, and c.
●  (Circle x) for x is a circle; (Circle x r) for x is a circle with a radius r; 
(Circle x r a) for x is a circle with a radius r and center a; and       
(Circle x r a b) for x is a circle with a radius r from center a to point b.
●  With this version of the Circle relation, Postulate 3 may be written      
[If  ( x:Point y:Point)  [Then ( z r)  (Circle z r x y) ]].
 

 
 
45
First Five Steps of the CLIP Proof
Replace icons with relation names, such as  Point, Line, Circle. 
For lines of identity, use Euclid’s names, such as A, AB, ABC.
0. Start with a blank sheet of paper.
1. By rule 3i,  insert a double negation around a blank,  [If  [Then    ] ].
2. By 1i, Insert the hypothesis of Proposition 1 into the If-area of step 1.
    
[If  (  A:Point  B:Point  AB:Line)  [Then     ] ].
3. By 2i, copy the hypothesis from the If-area into the Then-area.
    
[If  (  A:Point  B:Point  AB:Line)  [Then  (  A:Point  B:Point  AB:Line) ] ].
4. By 2i, insert Postulate 3 at the end of the Then-area.
    
[If  (  A:Point  B:Point  AB:Line)  [Then (  A:Point  B:Point  AB:Line)
       
      [If  ( x:Point y:Point)  [Then  ( z r)  Circle z r x y) ]] ]].   
5. Relate A, B, AB to x y r.   Then apply modus ponens inside the Then-area    
[If (  A:Point  B:Point  AB:Line)  (Then  (  A:Point  B:Point  AB:Line)             
    [If ( x:Point y:Point) [Then ( z r)  Circle z r x y) ]]
       
         ( z)  (Circle z AB A B) ]].
 

 
 
46
Comments About the Proof
Slide 45 showed the CLIP for the steps summarized in Slide 38.
Differences between Generalized EGs and CLIP:
● Instead of shading, CLIP uses square brackets to mark negations.
●The notation  ~[ ~[     ] ]  or  [If [Then    ] ] represents a nest of two ovals      
  around a blank.  It is the usual first step in proving a theorem.
● Icons in GEGs are replaced in CLIP by names of the relations defined        
by those icons.
The EG rules of inference:
● In step 5, the rule of modus ponens was applied inside a nested area.
● For most proof procedures with predicate calculus, the rules are rarely,     
  if ever, applied to areas nested inside some statement.
● With Peirce’s rules, any inference that Is permitted at the outer level may  
   be applied to an EG or CLIP nested inside any unshaded (positive) area.
● For certain proofs with deeply nested statements, this option may make    
  a major reduction in the number of steps (Dau 2006).  
 

 
 
47
Continuation of the Proof
Step 7 is the only one that uses the rule of observation.
6. Relate A, B, AB to y x r.   Apply modus ponens.  Then erase Postulate 3.     
[If (  A:Point  B:Point  AB:Line)  (Then
       
    ( z w)  (Circle z AB A B)  (Circle w AB B A) ]].
7. By observation of the diagram in slide 40, note that there exists a point C 
on both circles, z and w.  Also note that (= z ACE) and (= w BCD).
    
[If  ( A:Point B:Point AB:Line)  (Then  (  C:Point  ACE:Circle  BCD:Circle)   
      (On C BCD) (On C ACE) (Circle ACE AB A B)  (Circle BCD AB B A) ]].
8. By 2i, insert Postulate 1 at the end of step 7.
                  
[If ( A:Point B:Point AB:Line)  (Then  (  C:Point  ACE:Circle  BCD:Circle)    
     (On C BCD) (On C ACE) (Circle ACE AB A B)  (Circle BCD AB B A)
       
      [If  (  x:Point y:Point)  [Then (  z:Line) (Line z x y) ]] ]].
9. By two applications of modus ponens, derive the lines AC and BC.           
[If ( A:Point B:Point AB:Line)  (Then  (  C:Point  ACE:Circle  BCD:Circle)    
     (On C BCD) (On C ACE) (Circle ACE AB A B)  (Circle BCD AB B A)
       
      [If  (  x:Point y:Point)  [Then (  z:Line) (Line z x y) ]]
              
      ( AC:Line  BC:Line) ]]. 
 

 
 
48
Continuation
10. By 1e, erase Postulate 1.  By definition, AB, AC, BC form a triangle ABC.     
  [If ( A:Point B:Point AB:Line)  [Then  (  C:Point  ACE:Circle  BCD:Circle)  
      (On C BCD)  (On C ACE)  (Circle ACE AB A B)  (Circle BCD AB B A)
       
      (  AC:Line  BC:Line  ABC:Triangle)  (Triangle ABC AB AC BC) ]].
11. By the definition of radius, add the last line below.
              
  If ( A:Point B:Point AB:Line)  (Then  (  C:Point  ACE:Circle  BCD:Circle)   
     (On C BCD) (On C ACE) (Circle ACE AB A B)  (Circle BCD AB B A)
       
     (  AC:Line  BC:Line  ABC:Triangle)  (Triangle ABC AB AC BC)
              
     (Radius ACE AB) (Radius ACE AC) (Radius BCD AB) (Radius BCD BC) ]].
12. By Definition 15, all radii of the same circle are congruent.
       
  If ( A:Point B:Point AB:Line)  (Then  (  C:Point  ACE:Circle  BCD:Circle)   
     (On C BCD) (On C ACE) (Circle ACE AB A B)  (Circle BCD AB B A)
       
     (  AC:Line  BC:Line  ABC:Triangle)  (Triangle ABC AB AC BC)
              
     (Radius ACE AB)  (Radius ACE AC)  (Radius BCD AB)  (Radius BCD BC)  
     (" " AC AB)  (" " AB BC) ]].
≅
≅
 

 
 
49
Conclusion
13. By 2i, insert Common Notion 1, and apply it by modus ponens.
       
  If ( A:Point B:Point AB:Line)  (Then  (  C:Point  ACE:Circle  BCD:Circle)   
     (On C BCD)  (On C ACE)  (Circle ACE AB A B)  (Circle BCD AB B A)
       
     (  AC:Line  BC:Line  ABC:Triangle)  (Triangle ABC AB AC BC)
              
     (Radius ACE AB)  (Radius ACE AC)  (Radius BCD AB)  (Radius BCD BC)  
     [If  ( x y z)  (" " x y)  (" " y z)  [Then  (" " x z) ]]
≅
≅
≅
              
     (" " AC AB)  (" " AB BC)  (" " AC BC)  ]].
≅
≅
≅
14. By 1e, erase Common Notion 1.  Replace three dyads for  with one triad.  
≅
  If ( A:Point B:Point AB:Line)  (Then  (  C:Point  ACE:Circle  BCD:Circle)   
     (On C BCD) (On C ACE) (Circle ACE AB A B)  (Circle BCD AB B A)
       
     (  AC:Line  BC:Line  ABC:Triangle)  (Triangle ABC AB AC BC)
              
     (Radius ACE AB)  (Radius ACE AC)  (Radius BCD AB)  (Radius BCD BC)  
     (" " AC AB BC) ]].  
≅
15. By 1e,erase every node not mentioned in Proposition 1.
       
  [If ( A:Point B:Point AB:Line)   [Then (  AC:Line  BC:Line  ABC:Triangle)  
      (Triangle ABC AB AC BC)  (" " AC AB BC) ].
≅
QED.  But compare this proof to the simplicity of the GEG proof.
 

 
 
50
The Role of Icons in Logic
As these examples show, icons can make logic more readable.
But icons can play a more fundamental role:
● Visual images can show parts, features, relations, and interactions more  
    directly than a purely symbolic notation.
● That information can support heuristics for selecting appropriate axioms  
   or background knowledge in any method of reasoning.
Icons can represent relations as well or better than symbols:
●The gestures and intonation that accompany speech show that symbols    
  alone are insufficient to convey the full meaning of an utterance
●The implicit information in an icon can be orders of magnitude greater       
   than the explicit information in the symbols of any linear notation.
●That open-ended amount of information can make a logic with icons           
  more expressive than a logic without icons.
But symbols are necessary for communication, precision, 
naming, and remembering critical perspectives and features.
 

 
51
3. Natural Logic
Symbolic logic isn’t as “natural” as Aristotle’s or Euclid’s logic.
Cognitive scientists have been searching for a natural logic:
● Linguists such as Lakoff (1970) and Fodor (1975) used language as a         
  basis for a natural logic or a language of thought.
● Logicians such as Gentzen (1935), Montague (1970), and van Benthem      
  (2008) used algebraic notations for all versions, natural or otherwise.
● The formal linguists Kamp and Reyle (1993) developed Discourse               
  Representation Theory (DRT) for mapping language to logic.
● Some philosophers, psychologists, and neuroscientists claim that             
  mental maps or models are the basis for language and reasoning.
Generalized EGs combine the best features of all the above:
● EG notation is as general and expressive as any algebraic notation.
● The FOL subset of EGs is isomorphic to the Kamp-Reyle DRS notation.
● EG rules of inference are a generalization of Gentzen's natural deduction.
● With appropriate icons, Generalized EGs can support a direct mapping     
   to and from many versions of mental maps or models.  

 
52
Semantics is Based on Icons
Richard Montague (1970): 
“I reject the contention that an important theoretical difference exists 
between formal and natural languages.” 
Hans Kamp (2001): 
“The basic concepts of linguistics — and especially those of semantics 
— have to be thought through anew...  Many more distinctions have to 
be drawn than are dreamt of in current semantic theory.” 
Barbara Partee (2005): 
“The present formalizations of model-theoretic semantics are 
undoubtedly still rather primitive compared to what is needed to   
capture many important semantic properties of natural languages...”
Those “many more distinctions” are derived from icons.
Icons map the world to perception and action.  They connect 
the world to the symbols and indexes of any language or logic.

 
 
53
Issues of Mapping Language to Logic
Hans Kamp observed that the features of predicate calculus do 
not have a direct mapping to and from natural languages. *
Pronouns can cross sentence boundaries, but variables cannot.
● Example:  Pedro is a farmer.  He owns a donkey.
● (x)(Pedro(x) ∧ farmer(x)).   (y, z)(owns(y,z) ∧ donkey(z)).
● There is no operator that can relate x and y in different formulas.
The rules for scope of quantifiers are different.
● Example:  If a farmer owns a donkey, then he beats it.
● In English, quantifiers in the if-clause govern the then-clause.
● But in predicate calculus, the quantifiers must  be moved to the front.
● Formula:  (∀x, y)((farmer(x) ∧ donkey(y) ∧ owns(x,y)) ⊃ beats(x,y)).
Note:  Proper names are rarely unique identifiers.  Both Kamp 
and Peirce represented names by monadic relations. 
* Hans Kamp & Uwe Reyle (1993) From Discourse to Logic, Dordrecht: Kluwer.
 

 
 
54
Quantifiers in EG and DRS
Peirce and Kamp independently chose isomorphic structures.
● Peirce chose nested ovals for EGs with lines to show coreference.
● Kamp chose boxes for DRS with variables to show coreference.
● But the boxes and ovals are isomorphic:  they have the same constraints 
   on the scope of quantifiers, and they support equivalent operations.
Example:  If a farmer owns a donkey, then he beats it.
For these examples, the same CLIP represents the EG and the DRS:
       [If  (  x:farmer  y:donkey)  (owns x y)  [Then  (beats x y) ]].
 

 
 
Linking Two EGs or DRSs
To relate existential quantifiers in different statements,            
EGs (left) and DRSs (right) support equivalent operations:
After connecting EG lines or merging DRS boxes,
CLIP:  ( x y z)  (Pedro x)  (farmer x)  (= x y)  (owns y z) (donkey z).

 
 
Disjunctions in EG and DRS
Example by Kamp and Reyle (1993):
Either Jones owns a book on semantics, or Smith owns a book on logic, 
or Cooper owns a book on unicorns.
(  x:Jones  y:Smith  z:Cooper)   [Or  [ ( u:”book on semantics”)  (owns x u) ]
[ ( v:”book on logic”)  (owns y v) ]   [ ( w:”book on unicorns”)  (owns z w) ] ].
 

 
 
57
A Proof by Peirce’s Rules
Conclusion:  Pedro is a farmer who owns and beats a donkey.
 

 
 
58
Applying Peirce’s Rules to Other Notations 
Start with a sentence that can be mapped to any version of FOL:
● Draw ovals around negated areas.
● Draw the ovals through words like not, if, then, every, either, or.
● Shade negative areas, and leave positive areas unshaded.
A generalization of Peirce’s first pair of rules:
● Insert:  In a negative context (shaded), any propositional                  
  expression may be replaced by a more specialized expression.
● Erase:  In a positive context (unshaded), any propositional               
  expression may be replaced by a more general expression.

 
 
59
Peirce’s Rules Applied to English
Use shading to mark 
the positive and 
negative parts of each 
sentence.
Rule 1i specializes 'cat' 
to 'cat in the house'.
Rule 1e generalizes 
'carnivore' to 'animal'.
This system of inference is sound and complete for sentences 
that can be translated to and from a logic such as EG or DRS.

 
 
60
A Proof in English
Use shading to mark positive and 
negative parts of each sentence.
Rule 1i specializes 'a cat' to 'Yojo', 
and Rule 2i iterates 'Yojo' to replace 
the pronoun 'it'.
Rule 2e deiterates the nested copy 
of the sentence 'Yojo is on a mat'.
As a result, there is nothing left 
between the inner and outer 
negation of the if-then nest.
Finally, Rule 3e erases the double 
negation to derive the conclusion.
 

 
 
61
 4. Theoretical Issues
Peirce’s rules have some remarkable properties:
● Simplicity:  Each rule inserts or erases a graph or subgraph.
● Symmetry:  Each rule has an exact inverse.
● Depth independence:  Rules depend on the positive or negative areas,    
  not on the depth of nesting.
They allow short proofs of remarkable theorems:
● Reversibility Theorem.  Any proof from p to q can be converted to a         
  proof of ~p from ~q by negating each step and reversing the order.
● Cut-and-Paste Theorem.  If q can be proved from p on a blank sheet,       
   then in any positive area where p occurs, q may be substituted for p.
● Resolution and natural deduction:  Any proof by resolution can be           
  converted to a proof by Peirce’s version of natural deduction by               
  negating each step and reversing the order.
For proofs of these theorems and further discussion of the 
issues, see Section 6 of  http://www.jfsowa.com/pubs/egtut.pdf 
 

 
 
62
 Natural Deduction
Gerhard Gentzen developed a proof procedure that he called 
natural deduction.
But Peirce’s method is a version of natural deduction that is 
simpler and more general than Gentzen’s:
For details, see pp. 24 to 26 of  http://www.jfsowa.com/pubs/egtut.pdf
 

 
 
63
 Gentzen’s Natural Deduction
Like Peirce, Gentzen assumed only one axiom:  a blank sheet of paper.
But Gentzen had more operators and more complex, nonsymmetric 
pairs of rules for inserting or erasing operators.
 

 
 
64
 Role of the Empty Sheet
Both Peirce and Gentzen start a proof from an empty sheet.
In Gentzen’s syntax, a blank sheet is not a well-formed formula.
● Therefore, no rule of inference can be applied to a blank.
● A method of making and discharging an assumption is the only way        
  to begin a proof  of a theorem.
But in EG syntax, an empty graph is a well-formed formula.
● Therefore, a double negation may be drawn around a blank.
● Then any assumption may be inserted in the negative area.
Applying Peirce’s rules to predicate calculus:
● Define a blank as a well-formed formula that is true by definition.
● Define the positive and negative areas for each Boolean operator.
● Show that each of Gentzen’s rules is a derived rule of inference in            
  terms of Peirce’s rules.
Then any proof by Gentzen’s rules is a proof by Peirce’s rules. 
 

 
 
65
 A Problem in Automated Reasoning
Larry Wos (1988), a pioneer in automated reasoning methods, 
stated 33 unsolved problems.  His problem 24:
Is there a mapping between clause representation and natural-
deduction representation (and corresponding inference rules and 
strategies) that causes reasoning programs based respectively on      
the two approaches or paradigms to attack a given assignment in      
an essentially identical fashion?
The answer in terms of Peirce’s rules is yes:
●The inference rules for Gentzen’s clause form and natural deduction       
are derived rules of inference in terms of the EG rules.
●Any proof in clause form (by resolution) can be converted, step by       
step, to a proof by EG rules.
●Any such proof can be converted to a proof by Peirce’s version of        
natural deduction by negating each step and reversing the order.
●Convert the proof by Peirce’s rules to a proof by Gentzen’s rules.
 

 
 
66
Computability
Can icons enable proofs with Generalized EGs to go beyond  
what can be computed with a Turing machine?
With the kinds of icons Euclid used, no:
● Every diagram has a finite number of figures, each determined by   
  a finite number of points in a finite number of possible patterns.
● As slides 45 to 49 showed, those proofs may be mapped to CLIP     
and then to predicate calculus.
● They may be more readable, but in theory, no more powerful.
But with continuous icons, maybe:
● A continuous image can have an infinity of points, shapes,               
  relationships, and possible transformations.
● Repeated observations may extract an unlimited amount of              
  information from it.
● But there must be no limit on the variety of perspectives that may   
  be required at different distances, angles, and magnifications.
 
 

 
 
67
Turing Oracle Machines
How could Generalized EGs go beyond a Turing machine?
Turing a-machines can represent any algorithm: 
● They can perform any computation by any digital computer.
● But they do not allow any external input during a computation.
 But Turing (1939) also discussed oracles for o-machines:
● An o-machine is an a-machine that can interrogate an oracle.
● Emil Post expanded Turing’s one-page summary to show how an          
  o-machine can extend the computational power of an a-machine.
● Robert Soare (2009) presented a detailed history and analysis of            
  the Post-Turing hypothesis. *
● Soare claims that a digital computer connected to I/O devices                
  can have the power of an o-machine.
● Generalized EGs with the option of extracting information from             
   continuous images could also have the power of an o-machine.
* See Robert Soare, http://www.people.cs.uchicago.edu/~soare/History/turing.pdf 
 
 

 
 
68
Psychology
Endorsement by the psychologist Philip Johnson-Laird (2002):
Peirce’s existential graphs... anticipate the theory of mental models in 
many respects, including their iconic and symbolic components, their 
eschewal of variables, and their fundamental operations of insertion 
and deletion.
Much is known about the psychology of reasoning... But we still         
lack a comprehensive account of how individuals represent                
multiply-quantified assertions, and so the graphs may provide                
a guide to the future development of psychological theory. *
Johnson-Laird published a book on mental models.
His comments on that topic are significant, and the option          
of using icons in generalized EGs strengthens the claim.
* See http://mentalmodels.princeton.edu/papers/2002peirce.pdf
 

 
 
69
Mental Maps, Images, and Models 
The neuroscientist Antonio Damasio (2010):
The distinctive feature of brains such as the one we own is their 
uncanny ability to create maps...  But when brains make maps, they   
are also creating images, the main currency of our minds.  Ultimately 
consciousness allows us to experience maps as images, to manipulate 
those images, and to apply reasoning to them.
The maps and images form mental models of the real world or  
of the imaginary worlds in our hopes, fears, plans, and desires.
Words and phrases of language can be generated from them.
They provide a “model theoretic” semantics for language that 
uses perception and action for testing models against reality.
With Generalized EGs, the model theory can be based on direct 
mappings between icons in the logic and icons in the model.

 
 
70
Reasoning with Mental Models
From Damasio and other neuroscientists:
● Mental models are patterns in the sensory projection areas that       
  resemble patterns generated during perception.
● But the stimuli that generate mental models come from the frontal   
  lobes, not  from sensory input.
● The content of the mental models is generated by assembling          
  fragments of earlier perceptions in novel combinations.
 From suggestions by Johnson-Laird:
● The nodes of an existential graph could represent images or            
   fragments of images from long-term memory.
● The connecting lines of an EG would show how those fragments     
  are assembled to form a mental model.
● The logical features of EGs could be used to represent rules and     
  constraints for reasoning about those models.
 
 

 
71
5. Conclusion
Peirce called existential graphs “the logic of the future.” 
Computer graphics and virtual reality can implement them:
● The icons in two-dimensional maps can be generalized to three                  
   dimensions and even 3+1 dimensions for motion and change.
● Conjunctions and lines of identity can be represented in any dimension.
● For negation, the ovals can be generalized to closed shapes in any            
  number of dimensions.  Rvachev functions can implement them.
● Viewers with VR goggles could wander through 4-dimensional EGs,          
   watch the movies, and manipulate icons according to Peirce’s rules.
Peirce’s claim is consistent with neuroscience:
● As Damasio said, images are “the main currency of our minds.”
● As Johnson-Laird observed, Peirce’s rules of inference insert and erase    
  graphs and subgraphs — operations that neural processes can perform.
● Generalized EGs can include arbitrary images in the graphs.
● When Peirce claimed that EGs represent “a moving picture of the action   
  of the mind in thought,” he may have imagined something similar.

 
 
72
Related Readings
Sowa, John F. (2011) Peirce’s tutorial on existential graphs, Semiotica 186:1-4, 345-394.  
      http://www.jfsowa.com/pubs/egtut.pdf 
Pólya, George (1954) Mathematics and Plausible Reasoning, Volume I: Induction and Analogy in        
      Mathematics, Volume II: Patterns of Plausible Inference, Princeton: University Press. 
Johnson-Laird, Philip N. (2002) Peirce, logic diagrams, and the elementary operations of reasoning,
      Thinking and Reasoning 8:2, 69-95.  http://mentalmodels.princeton.edu/papers/2002peirce.pdf 
Pietarinen, Ahti-Veikko (2003) Peirce’s magic lantern of logic:  Moving pictures of thought,
      http://www.helsinki.fi/science/commens/papers/magiclantern.pdf 
Pietarinen, Ahti-Veikko (2011) Moving pictures of thought II, Semiotica 186:1-4, 315–331,
      http://www.helsinki.fi/~pietarin/publications/Semiotica-Diagrams-Pietarinen.pdf 
Stjernfelt, Frederik (2007) Diagrammatology: An Investigation on the Borderlines of
 
      Phenomenology, Ontology, and Semiotics, Berlin: Springer.
Sowa, John F. (2010) Role of logic and ontology in language and reasoning,
      http://www.jfsowa.com/pubs/rolelog.pdf 
Sowa,  John F. (2006) Peirce’s contributions to the 21st Century,
      http://www.jfsowa.com/pubs/csp21st.pdf 
ISO/IEC standard 24707 for Common Logic,
      http://standards.iso.org/ittf/PubliclyAvailableStandards/c039175_ISO_IEC_24707_2007(E).zip 
For other references, see the general bibliography,
      http://www.jfsowa.com/bib.htm 

