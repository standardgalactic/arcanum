  
Semantics for Interoperability
John F. Sowa
Ontology Summit, 18 February 2016
Revised 15 March 2016

 
2
Outline
1. History of interoperable systems
2. Relating multiple logics and ontologies
3. Supporting heterogeneoous systems
A subset of these slides was presented at a session of the Ontology Summit   
on 18 February 2016:
This revised version is a response to discussions at that session and the 
following session on 25 Feb 2016.
For a review of the issues and developments from 1980 to the present,              
with over 100 references, see http://www.jfsowa.com/ikl

 
3
1. History of Interoperable Systems
1900 to 1959:  Data representation and formatting.
● From punched cards to COBOL records and RPG reports.
● Fortran, LISP, COBOL, Algol, formal grammars. 
1960s:  Multiple concurrent programs that use the same data.
● Data structures, databases, data models, locking, virtual memory. 
● PL/I, APL, SNOBOL, Simula 67, Algol 68, Pascal.
● Theorem provers, formal semantics, specification languages.
1970s:  DB wars, conceptual schema, expert systems. 
1980s:  Knowledge bases, object-oriented systems. *
1990s:  Shared reusable KBs, Need for ontologies, RDF.
2000s:  Semantic Web, large ontologies, but slow adoption.
2010s:  Some success stories, but no universal ontology.
* For more detail from 1980 to the present, see http://www.jfsowa.com/ikl

 
 
4
Supporting Interoperability
For over a century, digital systems have been successfully 
sharing data without using any formal semantics.
Every branch of science and engineering uses multiple, often 
inconsistent approximations for different kinds of problems.
No unified, consistent ontology can support the detailed 
requirements of multiple inconsistent systems.
Questions:
● How can heterogeneous systems share data?
● What methods can detect, avoid, or work around inconsistencies?
● Would precise definitions with a formal logic and ontology help?
● Or would they create more problems than they could solve?
● How do people resolve disputes when they collaborate?

 
5
The Conceptual Schema
Shared ontology to resolve the database wars of the 1970s.
● Early debates led to an ANSI technical report in 1979.
● Further discussions led to an ISO technical report in 1987.
● Standards projects ended in an ISO technical report in 1999.
● The Semantic Web became the next great hope.

 
6
DARPA Agent Markup Language
The diagram summarizes the requirements for the DAML project.
● From a presentation by Jim Hendler, the DARPA project manager. *
● The PI of the winning proposal was Tim Berners-Lee.
* See http://www.jfsowa.com/ikl/Hendler00.pdf 

 
7
Layer Cakes of the Semantic Web
The diagrams show the evolution of the DAML project.
● The winning proposal in 2000 added detail to Hendler’s version. 
● The diagram of 2001 moved logic to the side.
● In the final report, the “unifying logic” looks like an afterthought.
 Hendler wrote that DAML must support heterogeneous systems.
● Tim B-L emphasized heterogeneous systems in his  proposal.
● But the final report did not mention the word 'heterogeneous'.  

 
8
Approaches to Interoperability
A map of the heterogeneous methods that must be related. *
● Methods at the top address semantic issues.
● Methods in the middle address the external interfaces.
● Methods at the bottom address the low-level APIs.
* From the SCOPE report of 2008, http://www.jfsowa.com/ikl/scope08.pdf

 
9
2. Relating Logics and Ontologies
As history shows, notations continue to proliferate.
● Every attempt to relate the old logics creates yet another logic.
● XML makes it easier than ever to specify new versions. 
Strategies for relating multiple logics:
● Common Logic:  Treat all logics as dialects of a common base.
● DOL:  Define a systematic framework for mapping logics.
● IKL:  Use CL as a metalanguage for representing logics.
● These are complementary methods, which may be combined.
Relating an open-ended variety of ontologies:
● Design each ontology as a hierarchy of microtheories.
● Relate multiple hierarchies as subsets of an infinite lattice. 
Problem:  NL comments may contain “hidden” semantics.
● Two identical statements may be used in incompatible ways.

 
10

 
IKRIS Project
DoD-sponsored project:  Design an Interoperable Knowledge 
Language (IKL) as an extension to Common Logic.
Goals:
● Enable interoperability among advanced reasoning systems.
● Test that capability on highly expressive notations for logic.
Show that semantics is preserved  in round-trip mapping tests:
● Cycorp:   Cyc Language  →  IKL  →  CycL
● RPI / Booz-Allen:   Multi-Sorted Logic  →  IKL  →  MSL
● Stanford / IBM / Battelle:   KIF  →  IKL  →  KIF
● KIF  →  IKL  →  CycL  →  IKL  →  MSL  →  IKL  →  KIF
Conclusion:  “IKRIS protocols and translation technologies 
function as planned for the sample problems addressed.”
Interoperable Knowledge Representation for Intelligence Support (IKRIS), Evaluation Working Group Report, 
prepared by David A. Thurman, Alan R. Chappell, and Chris Welty, Mitre Public Release Case #07-1111, 2007. 
http://www.jfsowa.com/ikl/IKLmitre.doc 

 
12
The IKL Extension to Common Logic
Common Logic is a superset of most logics used in semantic 
systems, but some require even more expressive logics.
Only one new operator is needed:  a metalanguage  enclosure, 
which uses the keyword 'that' to mark the enclosed statement.
● The enclosed statement denotes a proposition.
● That proposition may be a conjunction of many statements.
● It may be given a name, and other propositions may refer to it.
● In effect, IKL can be used as a metalanguage for talking about and  
  relating packages of IKL statements nested to any depth.
CL with the IKL extensions can represent a wide range of logics 
for modality, defaults, probability, uncertainty, and fuzziness.
For the IKL logic, see http://www.jfsowa.com/ikl/index.htm#ikris

 
13
Extending Common Logic to IKL
IKL expressed in CLIF (Common Logic Interchange Format):
        (Believes Tom (that (Knows Mary (that (= (+ 2 2) 4)))))
IKL in CGIF (Conceptual Graph Interchange Format):
        (Believes Tom [Proposition (Knows Mary [Proposition (+ 2 2 | 4) ]) ])
IKL in CLCE (Common Logic Controlled English):
      Tom believes that Mary knows that (2 + 2 = 4).
The operator 'that' is a powerful metalevel extension.
It enables IKL to specify languages, define their semantics,    
and specify transformations from one language to another.
Writing complex statements in CLCE requires training in logic, 
but anybody who can read English can read CLCE notation.

 
Distributed OMS Language (DOL)
Mapping ontologies: *
● OMS:  Ontology, Model, and                                                                                  
  Specification. 
● Goal:  Map an OMS expressed                                                                              
  in one logic to equivalent                                                                                       
  versions in other logics.
● The diagram at right shows                                                                                   
  possible mappings.
● The target logic must have the                                                                              
  same or greater expressivity.
● Common Logic (CL) is the most                                                                           
  expressive logic shown.                                                                             
Two related strategies:
● Dialects:  Adopt a highly expressive logic such as CL or IKL as the base,     
  and define all other logics as dialects of the base logic.
● Mappings:  Use DOL to specify mappings (morphisms) among logics, but   
  no logic is treated as a dialect of any other.
* Distributed Ontology, Model, and Specification Language (DOL), http://www.omg.org/spec/DOL/

 
15
Semantic Knowledge Source Integration
Goal:  A logic, ontology, and system that can relate everything.
● Problem:  Heterogeneous DBs and KBs may use different ontologies.
● But punched-card systems have been sharing data since 1900.
● And DBpedia relates indepedently developed web pages.
● An underspecified ontology may ignore some irrelevant details.
● Questions:  What details can be ignored?  When?  How?  Why?
What reasoning methods can determine what is relevant?

 
Cyc System
A knowledge base with a very large formal ontology. *
● Over 600 reasoning modules, optimized for a variety of problems.
● SKSI for structured data and NLP for unstructured documents.
* See https://www.academia.edu/16911744/Common_Sense_Reasoning_From_Cyc_to_Intelligent_Assistant

 
17
Cyc Ontology
General-purpose upper level and a large hierarchy of microtheories.
See http://www.cyc.com and http://opencyc.org 

 
 
18
Relating  Hierarchies
For any logic L, the set of all possible theories expressible in L 
forms an infinite lattice.
For every ontology represented in L, the hierarchy of micro-
theories is a subset of that lattice. 
Lattice operators can relate and combine ontologies:
● Find common generalizations and specializations.
● Find mappings between ontologies with different terminology.
● Combine ontologies to form a larger ontology.
● Revise ontologies by “walking” through the lattice.
Preserving consistency when combining theories:
● If a theory has a finite model, test every axiom on that model.
● For theories with infinite models (e.g., numbers), combine tested 
  theories with previoulsy verified mathematical theories.

 
 
19
Lattice Operators
For any logic L, the set of theories expressible in L forms a lattice.
● Every hierarchy of microtheories in L is a subset of that lattice.
● Top:  The universal theory, which has no axioms, is always true.
● Bottom:  The absurd theory, which has all axioms, is always false.
● Contraction:  Delete axioms to form a more general theory.
● Expansion:  Add axioms to form a more specialized theory.
● Revision:  Contraction followed by expansion.
● Relabeling:  Rename one or more predicates in a theory.

 
 
20
A Hierarchy of Mathematical Theories
See the Heterogeneous Tool Set, http://theo.cs.uni-magdeburg.de/Research/Hets.html 

 
21
3. Supporting Heterogeneous Systems
Peirce wrote a succinct, but accurate summary of the issues: * 
“It is easy to speak with precision upon a general theme.  Only, 
one must commonly surrender all ambition to be certain.  It is 
equally easy to be certain.  One has only to be sufficiently vague.  
It is not so difficult to be pretty precise and fairly certain at once 
about a very narrow subject.”  (CP 4.237)  
Implications: 
● A precise ontology may be stated in logic, but it’s almost certainly  
  false for many important applications.
● A looser classification, such as WordNet or Roget’s Thesaurus,       
  can be more flexible for representing patterns of words.
● A specification in logic can be “pretty precise and fairly certain”      
  only for a very narrow subject
* What is the source of fuzziness?  http://www.jfsowa.com/pubs/fuzzy.pdf
Natural logic,  http://www.jfsowa.com/talks/natlog.pdf
Natural language understanding,  http://www.jfsowa.com/talks/nlu.pdf

 
 
22
Reality Check
A single, universal ontology is                                                                       
more a hope than a reality.
No large hardware or software
system can have a uniform
ontology for every component.
Vagueness and ambiguity in
natural languages result from
the need to talk about anything
from any possible perspective.
K. Janowicz  and P. Hitzler: *
● “Meaning is not static, but                                                                                   
   dynamically reconstructed during language use.”
● “We should exploit the power of Semantic Web technologies and knowledge   
   patterns to directly establish interoperability between purpose-driven              
   ontologies without having to agree on a universal level before.”
* The Digital Earth as knowledge engine, Semantic Web (2012) vol. 3.

 
The Cognitive Cycle
All five steps of the cycle are critical for cognitive computing. *
Optimizing one of them while ignoring the others is inadequate.
* J. F. Sowa (2015) The cognitive cycle, http://www.jfsowa.com/pubs/cogcycle.pdf

 
The Role of Deduction
Janowicz and Hitzler emphasized non-deductive methods:
● They proposed “to transcend the deductive paradigm by viewing         
  ontology reasoning, at least partially, from an information retrieval      
  perspective.”
● The potential of “non-deductive methods for question answering has   
  been shown... by the performance of IBM’sWatson system in the            
  Jeopardy! game show.”
The Watson system addressed every step of the cycle:
● The first version of Watson, which performed poorly on Jeopardy!, 
  used 6 different reasoning algorithms.
● The version that won the Jeopardy! challenge used about 100         
  algorithms optimized for different kinds of questions and data.
● The “dramatically different environment” led the Watson team to     
  design a framework with novel methods of machine learning. *
* Gondek et al, A framework for merging and ranking answers in DeepQA.

 
IBM Watson
Multiple paradigms and a growing number of modules. *
● For Jeopardy!, one API and about 100 reasoning methods.
● Now, a few dozen APIs and growing. ** 
● Versions of all the major paradigms for natural language processing,         
  statistical, symbolic, semantic, pragmatic. ***
* Rob High, http://www.redbooks.ibm.com/redpapers/pdfs/redp4955.pdf 
** Example:  The Watson Tone Analyzer Service.
*** Zadrozny, de Paiva, & Moss, https://www.aaai.org/ocs/index.php/AAAI/AAAI15/paper/viewFile/9905/9684

 
26
Generating a Response for Jeopardy!
Multiple steps that use a variety of algorithms:
1. Parse the question and analyze the relationships among key phrases.
2. Generate hypotheses, find evidence for them, and estimate their quality.
3. Combine the best hypotheses in possible answers.
4. Rank the answers by a confidence measure. 
5. Select the best one and respond “Who is Edmund Hillary?”
6. Use feedback about success or failure for “dynamic learning.”

 
27
Finding Associations
The strength of association is fuzzy and context dependent.
Different algorithms for different kinds of associations:
● Indexes for finding co-occurrences in the data.
● Searching a network to find shortest paths.
● Deduction from definitions and axioms.
But Watson chose climate instead of religion as the context:
● Jeopardy! clue:  “This  kind of meat should not be shipped to Iraq.”
● Incorrect response:  “What is reindeer?”

 
28
Support for Ontological Diversity
The title above comes from an article (2005) by Joseph Goguen.
● He wrote his PhD dissertation on applying category theory to fuzzy sets,   
  with Lotfi Zadeh as his thesis adviser.
● He was a pioneer in institution theory, which is used to support DOL.
● In the article Tossing algebraic flowers down the great divide (1997), he    
  expressed his frustration with the gap between theory and practice. 
Quotations from those articles:
● Definition:  “An item of information is an interpretation of signs for which    
  members of some social group are accountable.”  (1997)
● “Our civilization needs to heal the wound between the social and the               
   technical-scientific world views.”  (1997)
● “We should provide support for multiple evolving ontologies for single            
  domains, and accept that translations among such theories will necessarily     
  be partial and incomplete, and that we should provide tools to help construct  
  such partial mappings.”  (2005)
● “It’s unlikely that ontologies will ever provide all the background information 
  needed to resolve data translation and integration problems.”  (2005) 

 
 
29
Knowledge Management
Karl-Erik Sveiby coined the term Knowledge Management for a 
human-oriented approach to organizational knowledge:
The nurses in a Norwegian private hospital in Oslo wanted to solve a 
problem:  how can we reduce the fear of patients going in to surgery?  
The idea came up:  invite the old patients for coffee and cake together  
with the new patients and let them talk.  The surgeons were against it,  
but the hospital decided to do a pilot test.  It became a success!  Both 
patient categories loved it, and both nurses and surgeons agreed 
afterwards:  the patients’ fear had been reduced.
The hospital generalized that success story to a policy of 
promoting knowledge sharing among everybody – surgeons, 
nurses, patients, and support staff.
Semantic systems should focus on the human origin of the 
knowledge and its relationship to human needs and goals.
For the hospital example, see http://www.sveiby.com/articles/KMCaseHospital.pdf
For other articles by Sveiby, see http://www.sveiby.com/articles/

 
30
Situations, Roles, and Perspectives
Sveiby’s example illustrates some important issues:
● Many situations involve people with different background knowledge        
  who play very different roles.
● In a hospital, surgeons, nurses, staff, and patients have very different        
  training, experience, perspectives, and ways of talkng.
● Yet they must interact and collaborate for a successful outcome.
● Knowledge sharing can improve the collaboration and the results.
Similar issues arise in every aspect of life.
An oil company had different definitions of 'oil well':
● In the geology database, an oil well was a hole in the ground drilled for     
  the purpose of getting oil, whether or not any oil was actually found.
● In the financial DB, an oil well was a pipe connected to one or more holes 
  that produce oil.  Dry holes were ignored.
● The company could not relate the financial data to the geological data to   
  determine which rock formations were the most productive.

 
31
Knowledge Discovery
Observation by Immanuel Kant:
Socrates said he was the midwife to his listeners, i.e., he made    
them reflect better concerning that which they already knew, and 
become better conscious of it.  If we always knew what we know, 
namely, in the use of certain words and concepts that are so 
subtle in application, we would be astonished at the treasures 
contained in our knowledge...
Platonic or Socratic questions drag out of the other person’s 
cognitions what lay within them, in that one brings the other to 
consciousness of what he actually thought.
                                                                             From his Vienna Logic
We need tools that can play the role of Socrates.
They should help us discover the implicit knowledge and   
use it to process the huge volumes of digital data.

 
32
Related Readings
For a review of semantic issues for interoperable systems, with 100+ references,
     http://www.jfsowa.com/ikl/ 
Fads and fallacies about logic,  by J. F. Sowa,                                                                      
     http://www.jfsowa.com/pubs/fflogic.pdf
The role of logic and language in ontology,  by J. F. Sowa,                                                  
     http://www.jfsowa.com/pubs/rolelog.pdf 
From existential graphs to conceptual graphs,  by J. F. Sowa,                                            
     http://www.jfsowa.com/pubs/eg2cg.pdf
What is the source of fuzziness?  by J. F. Sowa,                                                                   
     http://www.jfsowa.com/pubs/fuzzy.pdf
The cognitive cycle,  by J. F. Sowa,                                                                                        
     http://www.jfsowa.com/pubs/cogcycle.pdf
Slides for a talk on natural language understanding,  by J. F. Sowa,                                  
     http://www.jfsowa.com/talks/nlu.pdf 
ISO/IEC standard 24707 for Common Logic,                                                                                    
     http://standards.iso.org/ittf/PubliclyAvailableStandards/c039175_ISO_IEC_24707_2007(E).zip
For other references, see the bibliography at http://www.jfsowa.com/bib.htm 

