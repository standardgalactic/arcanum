February 2, 2010
Modal Logic for Open Minds
Johan van Benthem
February 2, 2010
CENTER FOR THE STUDY
OF LANGUAGE
AND INFORMATION

February 2, 2010
Contents
Preface
ix
1
A whirlwind history, and changes in perspective
1
I
Core Concepts
7
2
Basic language and semantics
11
3
Expressive power and invariance
25
4
Validity and decidability
37
5
Axioms, proofs, and completeness
49
6
Computation and complexity
61
II
Basic Theory
71
7
Translation and varieties of expressive power
75
8
Increasing deductive power: the landscape of modal logics
91
9
What axioms say: frame correspondence
101
10
Descriptive power: extended modal languages
109
11
Modal predicate logic
119
v

February 2, 2010
vi / Modal Logic for Open Minds
III
Selected Applications
127
12
Epistemic logic
133
13
Doxastic and conditional logic
147
14
Dynamic logic of actions and events
155
15
Logic and information dynamics
171
16
Preference and deontic logic
189
17
Modal logic and games
197
18
The structure and ﬂow of time
207
19
Modal patterns in space
219
20
Intuitionistic logic
233
21
Provability logic
243
IV
Recent Theoretical Themes
251
22
Fixed-points, computation, and equilibrium
255
23
Issues in information dynamics
265
24
System combination and undecidability
281
25
Abstract model theory
293
26
Deductive incompleteness
303
V
Coda
311
27
Modal foundations for classical logic
315
A
First-order predicate logic
323
B
Modal algebra
333

Contents / vii
February 2, 2010
Answers and hints to selected exercises
341
Guide to further literature
371
References
373
Index
379

February 2, 2010

February 2, 2010
Preface
Modal logic was born in the early part of the 20th century as a branch of
logic applied to the analysis of philosophical notions and issues. While
it still retains a bit of this grandeur, today, modal logic sits at a cross-
roads of many academic disciplines, and thus, it provides a unique
vantage point for students with broad interdisciplinary interests. These
notes are the accumulated material for a course taught for many years
at Stanford to students in philosophy, symbolic systems, linguistics,
computer science, and other ﬁelds. The purpose is to give them a mod-
ern introduction to modal logic, beyond lingering conceptions dating
back to the distant past – and topics include both technical perspec-
tives, and a wide range of applications showing the current range of the
ﬁeld. To check if the picture in these notes is representative, the reader
may consult the 2006 Handbook of Modal Logic, Elsevier, Amsterdam,
co-edited with my colleagues Patrick Blackburn and Frank Wolter, El-
sevier Science Publications, Amsterdam. For philosophers, it may also
be of interest to check with my 1988 lecture notes Manual of Inten-
sional Logic, CSLI Publications, Stanford, which then represented my
ideal of a modern introduction to the ﬁeld. Some topics have panned
out, but others have proved remarkably wide oﬀthe mark.
Part I is about basic techniques, Part II gives a ﬁrst round of theory
consolidating these. Part III then tells the story of a wide spectrum
of modern applications, many of them about the study of agency, and
Part IV is about theoretical issues again, arising out of these. Finally,
there is a coda on modal perspectives in the heartland of classical logic
itself. Working through this material will give you a modern view that
enables you to understand many strands in current research, and maybe
even participate in the enterprise, given the (Heaven knows) many open
problems in the ﬁeld today, far beyond the old ”capitalism” of studying
a zoo of modal logics like “K”, “T”, “S4”, “S5” that once ruled.
ix

February 2, 2010
x / Modal Logic for Open Minds
There are excellent introductions to modal logic today, of which P.
Blackburn, M. de Rijke & Y. Venema, 2000, Modal Logic, Cambridge
University Press, Cambridge, will often be cited in this book. In ad-
dition, there are web resources like http://www.aiml.net/, as well
as many relevant entries in the Stanford Encyclopedia of Philosophy
(http://plato.stanford.edu/).
Still, I felt there was room for something new: a less technical, but
still substantial broad text at an earlier level, that initiates a larger
student audience to the intellectual excitement of the ﬁeld of modal
logic as a whole, while training them in basic modern techniques that
should allow them to see further than the generations before them.
How to use these notes: theme selection
This book is intended as an advanced undergraduate/beginning grad-
uate course on Modal Logic. Each short chapter in these notes corre-
sponds roughly to 1 1/2 hour class meeting, supported by a section. A
typical course of mine would cover, after the introduction, most of the
“mechanics” of the ﬁeld: basic themes and theory (some 8 topics from
Parts I and II), followed by a selection of some 6 current applications
from Part III (knowledge and dynamics, but also time and space, were
the usual favorites, for their concreteness). With some recap sessions,
this came to 9 weeks in a typical Stanford spring quarter.
But as I kept on writing, more and more things crept in. Therefore
the book can be used in other ways as well. For instance, after a brief
recap of Part I, Part III could be excellent primary reading material
for a graduate course on Philosophical Logic, especially, since many
of its chapters are largely self-contained. Parts II and IV would also
make good secondary material for a course on Metatheory of Logic.
And ﬁnally, the whole text again could be used by researchers in areas
where modal logic is applied these days (such as agent systems, artiﬁcial
intelligence, or game theory) to learn more of what makes it tick.
Finally, it is a pleasure to acknowledge all the help that I have had.
Eric Pacuit wrote extensive reader’s notes that transformed the text.
Audrey Yap and Tomohiro Hoshi went through the text with their
students, and provided valuable feedback and suggestions. I also re-
ceived occasional comments from many others, including Fenrong Liu,
Darko Sarenac, and Urszula Wybraniec-Skardowska. Then there was
the proof-reading team of Viktoria Denisova, Nina Gierasimczuk, Lena
Kurzen, Fenrong Liu, Minghui Ma, S¸tefan Minic˘a and Junhua Yu.

Contents / xi
February 2, 2010
Throughout the stages of the production process, Fernando Vel´azquez-
Quesada was responsible for making this book happen at all. With all
this said, it remains to thank my Stanford students in this course for
all the good times we have had over the years.
Johan van Benthem, Amsterdam & Stanford.

February 2, 2010

February 2, 2010
1
A whirlwind history, and changes in
perspective
Some truths seem merely “contingent”, such as the fact what clothes
you are wearing today: this could easily have been otherwise. But other
truths seem “necessary”, such as the fact that, like it or not, you are not
someone else. Modal notions of necessity, possibility, and contingency
were standard fare in traditional logic up to the 19th century, and rea-
soning with them was considered a core part of the discipline. All these
notions went out the door in the work of the founding fathers of mod-
ern logic, like Boole and Frege. In particular, in his famous little book
Begriﬀsschrift from 1879, often taken to be the founding document of
modern logic, Frege has a mysterious passage where he seems to be
ticking oﬀa list of things that are irrelevant to logic, and one of them
is modality. According to that passage, saying that some proposition is
necessarily true just means that it is true, plus some autobiographical
information about how strongly you believe in it. That list was Kant’s
Table of Categories1, and what happened was that modern logic just
kept “extensional” notions like negation and quantiﬁcation, while drop-
ping “intensional” ones like modality. The result are the familiar logical
systems like propositional and predicate logic, which describe properties
and relations of objects in ﬁxed situations, represented by models. This
historical restriction of the agenda and core tools has proved immensely
beneﬁcial, especially in the analysis of the foundations of mathematics,
whose Golden Age was in the 1930s with classical results on provability,
completeness, computability, and deﬁnability by Hilbert, Post, G¨odel,
Tarski, Turing, and many others. The millennium issue TIME 2000
placed G¨odel, Turing, and Wittgenstein among the twenty most inﬂu-
1Frege does not bother to say this. The habit of citing sources and crediting
other authors is much more recent than you might think!
1

February 2, 2010
2 / Modal Logic for Open Minds
ential intellectuals of the 20th century, an incredible harvest for a small
discipline like logic. This book presupposes that readers know the at-
tractions and power of this approach, including the notions of logical
syntax, semantics, proof, and meta-theory of formal systems.
Even so, while extensional logics might be adequate for analyzing
mathematical proof and truth in an eternal realm of abstraction, modal-
ity made a fast come-back. Soon philosophers started using modern
logic to deal with patterns of reasoning as used by real agents, ex-
pressed in natural language: the noisy, diverse, and fascinating medium
which is the trademark of mankind on this planet. And then, one ﬁnds
that there is a host of notions of a “modal” character going far beyond
mere truth: necessity, knowledge, belief, obligation, temporal change,
action, and so on. Indeed, it is hard to think of any use of language
which is purely informative: every sentence we utter resonates in a web
of communication, expectations, goals, and emotions. Modal logic as
we know it today tries to analyze this structure with techniques taken
from the mathematical turn in modern logic. Incidentally, Frege had
nothing against this move per se. In a famous analogy, he compared a
formal language to a microscope: very precise, but limited in its realm
of application, while natural language was more like the human eye:
less precise, but universal in its perceptive sweep.2
What follows here is a lightning history. For details and bibliograph-
ical references, we refer the reader to four sources. On the philosophy
connection, see Roberta Ballarin’s entry on modal logic in the Stanford
Encyclopedia of Philosophy (Ballarin, 2008) plus the chapter “Logic in
Philosophy” by J. van Benthem in Jacquette (2007). Van Benthem’s
Manual of Intensional Logic (van Benthem, 1988a) extends the canvas
to linguistics and computer science, while the editorial introduction to
the 2006 Handbook of Modal Logic (Blackburn et al., 2006) includes
interfaces with all ﬁelds in play today.
For a start, soon after Frege and Russell, modal logic made its come-
back through a study of the notion of strict implication A ⇒B (C. I.
Lewis). This strengthens the usual propositional implication A →B,
which amounts to a mere truth-functional link ¬(A ∧¬B) between
the antecedent and the consequent, to the stronger modal connection
¬3(A ∧¬B): it is impossible for A to be true, and yet have B false.
Modalities per se were then studied by Carnap, Kanger, Kripke, and
2Steltzner (1996) explains how the major employer in Frege’s Jena was Zeiss
Optics, with its visionary leader Carl Zeiss and Ernst Abbe, and how Frege was
supported all of his life through anonymous donations from this source. Modern
logic owes a lot to enlightened industrialists who wanted to give back to society.

A whirlwind history, and changes in perspective / 3
February 2, 2010
many subsequent authors, explaining a necessity statement
2ϕ as say-
ing that ϕ holds throughout some relevant range of situations. This
multiple reference view takes a modal necessity operator
2 as a uni-
versal quantiﬁer ∀, and the possibility operator
3ϕ as an existential
quantiﬁer ∃, both ranging over the relevant “worlds”, points in time,
situations, or whatever relevant semantic entity, where ϕ is true. But
there are alternatives. As early as the 1930s, G¨odel interpreted neces-
sity
2ϕ as “mathematical provability” of ϕ (an ∃-type account!), while
Tarski interpreted modal formulas as describing subsets in topological
spaces, with
2ϕ standing for the topological interior of the set deﬁned
by ϕ.3 These lecture notes will mainly take the now dominant universal
range view, but we will brieﬂy discuss alternatives in the appropriate
places. Maintaining some bio-diversity of approaches is a good survival
strategy for a ﬁeld. But whatever view we take, it will be clear that
modal logic thrives on co-existence with standard logical systems.
Another source of diversity are the many diﬀerent technical ap-
proaches in the ﬁeld. These lecture notes will cover both the traditional
deductive (proof-theoretic) and semantic (model-theoretic) styles, with
one excursion to algebraic methods, an important topic that we had to
forego. But on the whole, we will take the viewpoint of “possible worlds
semantics”, though resolutely cleansed from its outdated metaphysi-
cal interpretations. We will also introduce some new themes beyond
the standard catechism, however: in particular, some awareness of ex-
pressive power and invariance, and of the computational complexity of
modal languages. These further perspectives greatly enrich one’s view
of what a modal logic – and indeed any logical system – actually is.
In terms of its natural habitat, modal logic was the main technical
vehicle for philosophical logic since the 1950s, and its practitioners like
Prior, Kripke, Hintikka, Lewis, or Stalnaker produced a series of beau-
tiful systems, and associated notions and issues that became inﬂuential
in philosophy, setting the agenda for debates in metaphysics, epistemol-
ogy, and other ﬁelds. This is the period when labels like “modal logic”,
“epistemic logic”, “doxastic logic”, “deontic logic”, “temporal logic”,
etcetera, were coined, which still form a geography that is widely used,
witness many chapters in the Handbook of Philosophical Logic (Gabbay
and G¨unthner, 1983-1989). In the 1970s, this philosophical phase was
consolidated into a beautiful mathematical theory by authors like Blok,
Fine, Gabbay, Goldblatt, Segerberg, and Thomason. But simultane-
ously, modal logic crossed over to linguistics, when “Montague seman-
3As we shall see later, this is a more complex semantic ∃∀-type account.

February 2, 2010
4 / Modal Logic for Open Minds
tics” gave the study of intensional expressions in natural language pride
of place, using mixes of modal logic with type theory and other tools
from mathematical logic. In the same decade and especially through
the 1980s, modal notions found their way into computer science in the
study of programs and computation (Pratt, 1976), and into economics
in the study of knowledge of players in games (Aumann, 1976). And
this migration across the university is still continuing: in the 1990s,
modal languages have turned up in the study of grammars, data-base
languages, and more recently, in web design, and the structure of vec-
tor spaces used in mathematical image processing. The present lecture
notes reﬂect these realities, including ups and downs in speciﬁc ﬁelds
– and understanding modal logic today means seeing a total picture,
just like reading your worldwide investment portfolio.
In these twists and turns, something strange has happened, which
confuses many people. Many logicians still see modal logic as an enrich-
ment of classical logic. The modalities increase expressive power, and
may lead to intricate issues of the interplay between, say, quantiﬁca-
tion over objects and modal reference to worlds. But there is another,
and perhaps by now the more widespread, perspective which views
things the other way around. Modal operators are themselves a sort
of quantiﬁers, but special “local” ones referring only to objects “acces-
sible” from the current one. Viewed in this way, modal languages are
not extensions, but rather fragments of classical ones, with restricted
forms of quantiﬁcation – and this weakness is at the same time a clear
strength. Compared to classical systems, modal logics lower complex-
ity (they tend to be decidable; and their validities can be described in
transparent variable-free notations), and moreover, modal logics make
us aware of the expressive ﬁne-structure of the richer languages they
are part of. One theme throughout these notes is the resulting “bal-
ance” between expressive power and computational complexity: gains
in one will be losses in the other. Such a balance is not peculiar to
modal logic: higher up, ﬁrst-order logic itself is an elegant compromise
between expressive power and axiomatizability (note how second-order
logic gains in the ﬁrst, and loses the second). Indeed, awareness of this
fundamental trade-oﬀis essential to understanding the whole point of
using logical languages to formalize an area of reasoning.
Of course, this does not mean that the “extension” view of modal
logics has become invalid. But consider an extended system like “modal
predicate logic”, which many people consider “obvious”. From a mod-
ern point of view, such a system is a potentially explosive combination
of diverse ideas: standard quantiﬁers over the object domain, restricted

A whirlwind history, and changes in perspective / 5
February 2, 2010
local quantiﬁers over worlds, and also some (insidiously) hidden as-
sumptions about how these two realms of objects and worlds are re-
lated. No wonder that the semantics of modal predicate logic has been
under debate with both philosophers and mathematicians right up un-
til today. We will bring the reader up-to-date in one of our chapters,
showing how old debates between Kripke and Lewis on “trans-world
identity” have returned in mathematics in the 1980s.
A related feature of research today is that tribal labels like “philo-
sophical”, “mathematical” or “computational” logic mean less than
they used to. Many topics in these lectures on modal logic cannot be
classiﬁed as just one or the other, and this reﬂects intellectual realities.
For instance, the modern study of rational agency and games com-
bines fundamental insights from all these sources, without any particu-
lar pecking order. In our view, this is typical of logic: its themes migrate
between academic ﬁelds, and in doing so, modify their initial agenda.
But there is no reason to be pessimistic, the way some philosophers
have the gloomy view that, once logic becomes technical, it leaves for
good. Prodigal sons tend to return from their travels – though on the
whole, a bit wiser than when they left. Some signs of such homecomings
may be seen in current areas like formal epistemology and philosophy
of action, and a number of illustrations will be found in these notes,
when discussing logics of knowledge, interaction, and games.
The same is true for the popular division between “pure” versus
“applied” logic, often misused as a label. Like any healthy discipline,
logic generates theory in a process of reﬂection on applications, and
this can go through many cycles. Indeed, in modal logic, fundamental
theory has always a unifying force counteracting expansion. This shows
at two places in these notes. Part II describes theory that arose out
of reﬂection on basic developments in Part I. In Part III, we go on to
describe a wide range of applications from the last decades, with a new
round of modern theory in Part IV. And so it goes on and on.

February 2, 2010

February 2, 2010
Part I
Core Concepts

February 2, 2010

/ 9
February 2, 2010
In this ﬁrst Part, we discuss the major technical notions in modal
logic, all stated for the basic language, but with a broader thrust for
logic in general that will become clear as we proceed. Our emphasis
is on propositional modal logic, and that for two reasons: (a) this is
by now the dominant practice in the area, and (b) essential features
of the modalities come out best on a weaker base. We may think of
propositional modal logic as a system in between propositional logic
and ﬁrst-order predicate logic, core topics that the reader has probably
studied in a ﬁrst introductory course. But taking the modal view also
throws new light on ﬁrst-order quantiﬁcation in the end – as will be
explained in detail in the next part of these lectures.
Most chapters in this ﬁrst part represent major logical themes by
themselves – and they require at least one extended classroom session:
expressive power, axiomatic deduction, completeness, and computa-
tional complexity. The latter topic is rather new in introductions to
modal logic, and it might be skipped – though I personally feel that
this material belongs to “what every educated student should know”
these days. I have hesitated about also including correspondence theory
as a core topic, but placed it in the next part eventually.

February 2, 2010

February 2, 2010
2
Basic language and semantics
2.1
Syntax of modal propositional logic
A logical formalism starts with a language, a system of patterns behind
some practice of communication and reasoning. These patterns are for-
mal and austere, but that is precisely why they highlight basic features
of the phenomenon described, while also suggesting analogies across
diﬀerent situations. Our basic language has the following syntax:
Deﬁnition 2.1.1 (Basic modal language). Formulas are deﬁned as
follows. We ﬁrst chose a basic set of unanalyzed propositions:
AT := p, q, r . . . plus ⊤(“always true”) and ⊥(“always false”)
Next, we deﬁne inductively how to construct further expressions, using
the format:
ϕ ::= AT | ¬ϕ | (ϕ ∧ψ) | (ϕ ∨ψ) | (ϕ →ψ) |
3ϕ |
2ϕ
Here is how one reads items on the last line: “all atoms are formu-
las”, “if ϕ is a formula, then so is ¬ϕ”, “if ϕ, ψ are formulas, then so
is (ϕ ∧ψ)”, etcetera. The understanding is that formulas are all and
only the syntactic strings arising from this recursive process in a ﬁnite
number of steps. While this format, originally invented for deﬁning pro-
gramming languages, is more terse than the usual formulations in most
logic textbooks, it is very perspicuous – and its brevity in ink and paper
also helps save the tropical rainforest.
Remark (Notation). In many passages in these lectures, I will denote
arbitrary propositions by proposition letters p, q, . . . but sometimes also
by capital letters A, B, . . . or Greek symbols ϕ, ψ, . . .. This practice is
not very consistent, but most readers should agree that it is nice to
have diﬀerent clothes to wear, depending on one’s mood.
There are many possible readings for the modality
2 (pronounced
“box”), as we have hinted at in our Introduction: necessary truth,
11

February 2, 2010
12 / Modal Logic for Open Minds
knowledge, obligation, . . .
3 is the dual modality, called “diamond”.
Getting ahead of our formal presentation, we can think of this sec-
ond notion as deﬁned, since there are two intuitive “dualities” between
the two modalities – like those between the universal quantiﬁer ∀and
existential quantiﬁer ∃of ﬁrst-order logic:
Fact. The following two principles are intuitively valid:
(a)
3ϕ ↔¬2¬ϕ
(b)
2ϕ ↔¬3¬ϕ
Interestingly, many notions in natural language come in dual pairs:
the universal and existential quantiﬁers, “always” and “sometimes”,
obligation and permission, “already” and “not yet”, etcetera. The phe-
nomenon is so pervasive that it has been proposed to use it in broad-
casting our presence and communicating with other civilizations in the
cosmos.4 So, one could take either modality as primitive, and some
people have strong preferences.5
Here is a formalization of a philosophical claim with both modalities:
Example (Deep philosophy?). A student in Amsterdam in the 1970s
once challenged me to formalize his profound conviction that “nothing
is absolutely relative”. Here is what I came up with:
¬2(3ϕ ∧
3¬ϕ)
which is equivalent, using some negation-pushing, to the implication
23ϕ →
32ϕ. This principle has been studied in modal logic as the
“McKinsey Axiom”, and we will see later what it means. Does this
capture the student’s wisdom? I leave that for you to judge.
Patterns should highlight important issues at a glance. Our discus-
sion of duality was a good example. Here are some further useful dis-
tinctions that can be made with modal formulas:
Illustration (Important modal patterns).
1. Distinguishing scopes of modal operators. The assertion
“If you do p, you must also do q”
has two non-equivalent readings, expressed by the two formulas
p →
2q
(“narrow scope” for
2 over →)
2(p →q)
(“wide scope” for
2 over →)
This is a very popular confusion, from the Middle Ages right until
the current literature. The two scopes come together in a principle
4Cf. the highly original monograph Freudenthal (1960) – written by a famous
Dutch mathematician.
5I myself tend to be a box-man in axiomatic proof settings, and a diamond-man
in semantic settings, depending on what works best.

Basic language and semantics / 13
February 2, 2010
that is called Modal Distribution:
2(p →q) →(2p →
2q)
whose validity, and controversial epistemic interpretation, will oc-
cupy us in later chapters.
Less confusing, but equally important, is the following modality-
quantiﬁer interchange:
“I know that someone appreciates me”
It has two possible readings, expressible as follows (with
2 now
standing for knowledge):
2∃xA(x, m)
“de dicto” reading: modal qualiﬁcation of a proposition
∃x 2A(x,m)
“de re” reading: assigning modal properties to objects
The two are not equivalent: though in this particular example,
you might agree that the de re version implies the de dicto one.
But I might know that I have at least one fan, even though, sadly,
I will never ﬁnd out in my entire life who that fan was.
2. Iterations of modal operators. Modal operators in natural lan-
guage do not often occur stacked, except for American date lines
like “I thought that we could, like, maybe, go out for a drink,
sort of”. It may be important for you to reduce this to its true
logical form! More serious stacked versions occur with the epis-
temic interpretation of modality, where the following principles of
“positive” and “negative” introspection have been hotly debated:
If I know, do I know that I know?
2ϕ →
22ϕ
And if I don’t know?
¬2ϕ →
2¬2ϕ
More generally, a logical formalism removes ambiguity from natural
language, which has no brackets to disambiguate expressions, and no
perspicuous recursion of operators.
Example (Disambiguation). The un-bracketed ﬂat symbol string
¬2p →q has three diﬀerent modal readings:
¬(2p →q)
¬2(p →q)
(¬2p →q)
One can picture these readings more concretely as diﬀerent syntax trees:

February 2, 2010
14 / Modal Logic for Open Minds
¬
→
?
?
?
?
?
?

2
q
p
¬
2
→
?
?
?
?
?
?

p
q
→
?
?
?
?
?
?

¬
q
2
p
Logical syntax comes with some useful notions that measure ex-
pressive complexity. In particular, it is not the total number of modal
operators that counts, but scoping:
Deﬁnition 2.1.2 (Modal depth). The modal depth md(ϕ) of a formula
ϕ is the maximal length of a nested sequence of modal operators. This
can be deﬁned by the following recursion on our syntax rules:
1. md(p) = 0,
2. md(¬ϕ) = md(ϕ),
3. md(ϕ ∧ψ) = md(ϕ ∨ψ) = md(ϕ →ψ) = max(md(ϕ), md(ψ)),
4. md(3ϕ) = md(2ϕ) = md(ϕ) + 1.
For instance, this works out to md(¬(2p ∧
3((p ∧q) ∧¬3r))) = 2.
As with logical systems in general, the mapping between intensional
expressions in natural language and the formulas of modal logic is not
unique – but we will not pursue this topic here. In any case, it is good
to realize that modal expressions occur seldom as sentence operators –
except in pompous phrases like “it is necessary that” – but rather in
other linguistic categories such as adverbs (“maybe”), verbs (“can”),
and adjectives (“possible”). Finally, the patterns discussed here serve
two main purposes. Just like natural language, any logical language has
several main uses, and at least two are crucial in logical theory: describ-
ing situations, and formulating inferences. The former perspective will
soon take us to issues of modal deﬁnability and expressive power, the
latter to axiomatic principles that can be employed in modal reasoning,
a topic which we have not much emphasized yet.
Principles of modal reasoning are easily formulated in this notation.
Most interpretations agree on basic modal laws like
¬3ϕ ↔
2¬ϕ
or
3(ϕ ∨ψ) ↔
3ϕ ∨
3ψ
These resemble laws for quantiﬁers – on the analogy
3 : ∃
2 : ∀
But some modal laws change colours across diﬀerent interpretations of
2. The simple principle

Basic language and semantics / 15
February 2, 2010
2ϕ →ϕ
(“Veridicality”)
is valid for knowledge, but it is invalid for modalities expressing an
obligation (what ought to be the case need not be true), or the result of
an action (what will be made the case need not be true now). A modal
formalism allows us to play on with this. For instance, the iterated
principle
2(2ϕ →ϕ) might well be considered valid on the obligation
interpretation – though, true to form, it will not imply
2ϕ →ϕ.
2.2
Semantics of modal propositional logic
Our language will be interpreted over simple graph-like structures:
Deﬁnition 2.2.1 (Possible worlds models). 6 A possible worlds model
is a triple M = (W, R, V ) of a non-empty set of possible worlds W,
a binary accessibility relation R between worlds, and a valuation map
V assigning truth values V (p, s) in {0, 1} to proposition letters p at
worlds s.7 Often, one works with pointed models (M, s) having one
distinguished “current world” s serving as the “vantage point”.
There are many interpretations for “possible worlds” s, ranging from
metaphysical worlds8 to worlds in science-ﬁction, states of a computer,
board positions in chess, or deals in a card game. With such interpre-
tations, the accessibility relation R can be universal (every world is
accessible to every other), or constrained to game states reachable by
later play, epistemic states constrained by what agents can see, points
in space with their neighbours, etcetera. A particularly helpful geomet-
rical interpretation is in machine diagrams or process graphs, where
modal formulas describe possible evolutions starting from the current
state of the process, with accessibility arrows for possible transitions.
Remark (Poly-modal languages). Transitions in process graphs are
often labeled with action types or events, so that we can have dif-
ferent accessibility relations Ra, and corresponding labeled modalities
⟨a⟩, [a], ⟨b⟩, [b], etc. We will be using the latter “poly-modal languages”
throughout these notes, but for now, we just continue with the unla-
beled case, which is a pilot for all the rest.
Next, we make precise sense of the earlier-mentioned analogy be-
tween modal operators and quantiﬁers:
6By now, this is mainly a nostalgic name – but we stick to it like to any academic
ritual. We will also use other common terms for these structures occasionally, like
“relational models”, or “Kripke models”.
7Sometimes, we also write “s ∈V (p)” for “V (p, s) = 1”. This reﬂects a widely
used identiﬁcation of propositions with sets of worlds.
8Ridiculed in Voltaire’s novel Candide, where survivors of the Lisbon Earthquake
of 1755 are told by philosophers that they live in “the best of all possible worlds”.

February 2, 2010
16 / Modal Logic for Open Minds
Deﬁnition 2.2.2 (Truth deﬁnition for the modal language). A modal
formula ϕ is true at world s in model M = (W, R, V ) written M, s |= ϕ,
in virtue of this inductive clauses, following their syntax:9
M, s |= p
iﬀ
V (p, s) = 1
M, s |= ¬ϕ
iﬀ
not M, s |= ϕ
M, s |= ϕ ∧ψ
iﬀ
M, s |= ϕ and M, s |= ψ
M, s |=
2ϕ
iﬀ
for all t with Rst: M, t |= ϕ
M, s |=
3ϕ
iﬀ
for some t with Rst: M, t |= ϕ
Example (Computing truth values of formulas in a model). In the
following process graph, some states have a unique outgoing arrow (the
process is “deterministic” there), in others, there are several (the pro-
cess is then “non-deterministic”), while there is also a “dead-lock” state
without any outgoing arrows at all:
2, p
#F
F
F
F
F
F
F
F

1
>}
}
}
}
}
}
}
}
/
 A
A
A
A
A
A
A
A
4, p, q
3, q
;x
x
x
x
x
x
x
x
The valuation is written into the diagram in an obvious manner, by
marking worlds. Here are some facts – for later reference, please note
your own informal “model-checking procedure” here:
32p
is true precisely in worlds
1, 2, 3
2(q →p)
is true precisely in worlds
2, 3, 4
Next, strip this model of its valuation for p, q:
2
>
>
>
>
>
>
>

1
?       /
>
>
>
>
>
>
>
4
3
?       All four worlds can still be deﬁned uniquely then by modal formulas
true only at them:
9We only display clauses for two Boolean operators, but the remaining ones for
disjunction and implication are similar.

Basic language and semantics / 17
February 2, 2010
4 is the only world satisfying
2⊥
(“end point”, “dead-lock”)
3 is the only world with
32⊥∧
22⊥
1 is the only world with
3(32⊥∧
22⊥)
2 is the only world with
33⊤∧¬3(32⊥∧
22⊥) 10
If we drop the loop, however, states 2 and 3 become modally indis-
tinguishable – as you might try to prove informally:
2
>
>
>
>
>
>
>
1
?       /
>
>
>
>
>
>
>
4
3
?       Truth deﬁnitions are often considered somewhat boring, with clauses
that seem trivial (“not” means not, etcetera). But there are interest-
ing features to the process of evaluation sketched here. For a start,
systematically, for any given modal formula, you can tabulate for all
sub-formulas in which worlds they are true, working upwards in the
construction tree of the formula. Thus, in the ﬁrst model above:
p
is true precisely in worlds
2, 4
2p
is true precisely in worlds
2, 3, 4
32p
is true precisely in worlds
1, 2, 3
This method may be turned into an eﬃcient algorithm for model-
checking given modal formulas in given ﬁnite models, and we will com-
pare this with the more complex case of ﬁrst-order logic in a later
chapter. We will give one more dynamic take on evaluation soon, but
for now, we return to the reasoning side of modal logic.
2.3
Valid modal reasoning, a sneak preview
Universally valid principles are deﬁned as usual:
Deﬁnition 2.3.1 (Modal validity). A modal formula ϕ is valid, written
as |= ϕ, if M, s |= ϕ for all models and worlds.
This is the sense in which the earlier two duality principles
3ϕ ↔
¬2¬ϕ,
2ϕ ↔¬3¬ϕ were valid, or the mentioned modal distribution
laws
3(ϕ ∨ψ) ↔(3ϕ ∨
3ψ).
10There is often more than one natural choice for the world-deﬁning formulas. For
instance, we can deﬁne point 2 uniquely without cleverness, using the conjunction
of the negated deﬁnitions for all the other points. More generally, in ﬁnite models,
“the last world always comes for free”.

February 2, 2010
18 / Modal Logic for Open Minds
One thing leads to another. As in propositional and predicate logic,
there are strong dualities between the two modalities and disjunc-
tion/conjunction, resulting in automatic further laws for
3,
2, ∧, ∨.
Thus, switching operators, the obvious valid counterpart to
3(ϕ ∨ψ) ↔
3ϕ ∨
3ψ is the principle
2(ϕ ∧ψ) ↔
2ϕ ∧
2ψ. On the same pattern
of standing and falling together, invalid principles are:
3(ϕ ∧ψ) ↔
3ϕ ∧
3ψ
2(ϕ ∨ψ) ↔
2ϕ ∨
2ψ
11
Invalidity of a formula is demonstrated concretely by displaying
counter-examples, i.e., concrete models M with a world s where the
invalid formula is not true:
Example (Counter-example to “ 3 over ∧”). In the black dot in the
following model M,
3p and
3q are true, but
3(p ∧q) is not:
◦p
•
5k
k
k
k
k
k
k
)S
S
S
S
S
S
S
◦q
We will talk later about algorithmic methods for ﬁnding such
counter-examples to invalid principles more systematically, turning
an “art” of ﬁnding counter-examples into a “science”.
Additional validities arise as axioms for modal logics with special
interpretations, in the form of special constraints on the accessibility
relation R. For instance, imposing the earlier Veridicality as a valid
principle in our models (in Chapter 9, we will make it precise what this
means) has the following eﬀect:
2ϕ →ϕ
says that the relation R is reﬂexive: ∀xRxx
Another well-know example makes accessibility work in one step:
33ϕ →
3ϕ
says R is transitive: ∀x∀y(Rxy →∀z(Ryz →Rxz))
Observations like these lead to the famous “landscape of modal logics”,
with axioms of diﬀerent strengths on top of the universal validities, and
ubiquitous names like “T”, “S4”, “S5”, whose botanical exploration
has been a hallmark of modal logic in its earlier phases. We, too, will
study possible modal axioms in more detail in Chapters 8 and 9.
11Actually, in both cases, one implication is valid: which one? This is the so-called
monotonicity of
3 and
2.

Basic language and semantics / 19
February 2, 2010
2.4
Semantics as dynamic procedure: modal
evaluation games
But there is still more to our “simple” truth deﬁnition! Evaluating a
modal formula ϕ may be viewed as a dynamic procedure, which is of
interest by itself. One particularly lively way of doing this is by means
of a game, a technique of growing importance in logic today.
Deﬁnition 2.4.1 (Modal evaluation game). Let M, s be a model,
and ϕ a modal formula. We deﬁne a two-person game game(M, s, ϕ)
between a player Veriﬁer (V ), claiming that ϕ is true, and Falsiﬁer
(F) claiming ϕ is false. The game starts at the world s. Each move
is dictated by the main operator of the formula ϕ and we move to its
sub-formulas: the total length is bounded by the operator depth:
atom p
test p at s: if true, then V wins, if false, then F wins,
ϕ ∨ψ
V chooses a disjunct and play continues with that,
ϕ ∧ψ
F chooses a conjunct and play continues with that,
3ϕ
V picks an R-successor t of the current world,
play continues with ϕ at t,
2ϕ
F picks an R-successor t of the current world,
play continues with ϕ at t,
¬ϕ
players switch roles in the ϕ game.
A player also loses when (s)he must pick a successor, but cannot do so.
Example (A complete game tree). Here is the complete game tree
for the modal formula
2(3p ∨
23p) played starting at state 1 in the
following modal model (you may want to check beforehand if it is true):
1

666666
2
3 3, p
t

4
T
[
In Figure 1, we draw the game nodes, plus the player that is to move
next, plus the relevant formula. Bottom leaves have “win” if Veriﬁer
wins (the atom is true there), “lose” otherwise.
In this game, both players have winning runs. But even though Ver-
iﬁer has fewer winning runs than Falsiﬁer, in the response dynamics
of this game tree, the advantage is still clearly for her. The important
game-theoretic concept here is that of a strategy, a rule which tells a
player what to do at each of her turns. For, Veriﬁer has a “winning

February 2, 2010
20 / Modal Logic for Open Minds
3 p
win
4 : V
3p
m
m
m
m
m
m
Q
Q
Q
Q
Q
Q
2 p
lose
3 : F
23p
R
R
R
R
R
R
z
z
z
z
z
z
z
z
z
z
2 : V
3p
3 p
win
3 : V
3p ∨
23p
u
u
u
u
u
u
u
u
u
u
u
u
I
I
I
I
I
I
I
I
I
I
I
I
4 p
lose
3 : V
3p
m
m
m
m
m
m
R
R
R
R
R
R
2 p
lose
1 : F
2(3p ∨
23p)

;;;;;;;;;;;;;;;;;;;;;
4 p
lose
2 : F
23p
3 : V
3p
m
m
m
m
m
m
Q
Q
Q
Q
Q
Q
2 p
lose
2 : V
3p ∨
23p
u
u
u
u
u
u
u
u
u
u
u
u
T
T
T
T
T
T
T
2 : V
3p
3 p
win
FIGURE 1 A complete game tree for the example on page 19.
strategy” in this game, a rule for playing that ensures a win for her
whatever Falsiﬁer does. The moves prescribed by this strategy are in-
dicated by the double lines in the following picture:
Example (A winning strategy in a modal game tree). Figure 2 shows
how Veriﬁer should responde to Falsiﬁer’s moves.
Note that a strategy can encode subtle interactive behaviour. For
instance, Veriﬁer has to hand the initiative to Falsiﬁer at state 3 on
the right in the game tree if she is to win! Moreover, the full picture
of interaction in this game would look at all possible strategies; for
instance, note that Veriﬁer also has a losing strategy, ensuring that she
loses whatever Falsiﬁer does.

Basic language and semantics / 21
February 2, 2010
3
win
4 : V
2:m
m
m
m
m
m
m
m
m
m
Q
Q
Q
Q
Q
2
lose
3 : F
P
P
P
P
P
~
~
~
~
~
~
~
~
~
~
2 : V
+3 3
win
3 : V
<D                  >
>
>
>
>
>
>
>
>
4
lose
3 : V
n
n
n
n
n
P
P
P
P
P
2
lose
1 : F

.................
4
lose
2 : F
3 : V
m
m
m
m
m
Q
Q
Q
Q
Q
2
lose
2 : V
         #+N
N
N
N
N
N
N
N
2 : V
+3 3
win
FIGURE 2 Winning strategy for Veriﬁer in the example on page 20.
The remaining operation of negation as role switch involves the same
tree structures. For instance, the game for the formula ¬2(3p ∨
23p)
looks exactly like the game tree that we drew for
2(3p ∨
23p), but
with (a) all V , F turn markings interchanged at intermediate nodes,
and (b) all “win”, “lose” markings switched at end nodes.
Note also that these game trees are themselves modal models as we
deﬁned them here, with nodes as worlds, and moves as accessibility
relations. This gives a foothold for applications of modal logic to game
theory. We pursue this in Chapter 17 of our lectures. For the moment,
games are just a didactic tool in our presentation of modal logic.12
12In fact, evaluation games in the style explained here work just as well for ﬁrst-
order logic, and many other logical systems.

February 2, 2010
22 / Modal Logic for Open Minds
Finally, the reason for Veriﬁer’s advantage in the above game is
intuitively clear: after all, she is defending a true statement in the model
M at the initial state s. As a simple challenge to the reader, we state
the general fact behind this observation:
Key Lemma. The following two assertions are equivalent for all modal
formulas and pointed models:
1. ϕ is true in M at s,
2. V has a winning strategy in game(M, s, ϕ).
Proof. The proof is a simple induction on the syntactic construction
of the formula ϕ and going through its successive cases will make you
appreciate the very strong connection between the logical operators in
our basic modal language and game moves.
If the formula is false, then Falsiﬁer has a winning strategy, and hence
modal evaluation games are “determined”: one of the two players has a
winning strategy. We will prove in Chapter 17 why determinacy must
always hold for logical games of the present kind.

Basic language and semantics / 23
February 2, 2010
Exercises Chapter 2
1.
(a) For each point s in the following model, give a modal formula
that is only true at s:
1
/ 2

4
O
/ 3
Use modal formulas involving only “true” (⊤) and “false”
(⊥).
(b) Try the same in the following model. Explain your diﬃculty.
1
/

2

4
/ 3
2.
(a) Determine in which states of the following model the modal
formula
323p is true:
p, 1
'N
N
N
N
N
N
N
N

2, p
o
4
/ 3
O
e
(b) Give a complete game tree for the evaluation game for
323p
in this model starting in state 1.
(c) Indicate the winning strategies for the player who has them.
3. (“Treasure Island”) Consider the following model with 9 states,
and an accessibility relation allowing one step east or south (in-
sofar as possible) from each point. State 9 has a treasure, marked
by the proposition letter t, pirates are standing at 3, 6, and 7,
marked by the proposition letter p:
1
/

2
/

3, p

4
/

5
/

6, p

7, p
/ 8
/ 9, t
(a) In which states are the following modal formulas true?
3t,
32t,
3p,
23p
(b) For each state, ﬁnd a modal formula true only there.

February 2, 2010

February 2, 2010
3
Expressive power and invariance
3.1
Invariance and expressive power
The expressive power of any language can be measured through its
power of distinction – or equivalently, by the situations it considers in-
distinguishable. A language with just the expressions “Yes” and “No”
lumps all situations in the universe together into two giant classes.
Richer languages make more distinctions. So, to capture the expres-
sive power of a language, we need to ﬁnd some appropriate structural
invariance between models. This idea has a long history in mathemat-
ics and the natural and cognitive sciences, dating back to Helmholtz’s
analysis of perception in the 19th century, and it also applies to logic.
For ﬁrst-order logic, the basic invariance is mathematical isomor-
phism, i.e., a structure-preserving bijection between models that leaves
all basic properties and relations of objects the same. It is easy to
see that ﬁrst-order logic does not distinguish between objects a in one
model M, and their images f(a) in models N related to M via an
isomorphism f. This ﬁt is perfect for ﬁnite models, where two models
are isomorphic if and only if they satisfy the same ﬁrst-order sentences.
For inﬁnite models, the implication from isomorphism to satisfying the
same sentences still holds, but the converse is trickier.13 We will not go
into details here, as our concern is with modal logic.
As we will explain in Chapters 6 and 7, the “Golden Rule” of logic
says that the balance of expressive power of a language and the com-
putational complexity of reasoning with it is constant! In particular,
ﬁrst-order logic is indeed more expressive than modal logic, but then,
its validities are undecidable – whereas basic modal logic, as we shall
see in Chapters 4 and 6, is decidable.
13A better invariance for ﬁrst-order logic, though still no perfect ﬁt, is “potential
isomorphism” – a notion that is explained in Appendix A.
25

February 2, 2010
26 / Modal Logic for Open Minds
3.2
Bisimulation as process equivalence
The right semantic equivalence for the basic modal language is as fol-
lows, and it is best motivated by viewing our models as pictures of
processes that need to be in “harmony”:
Deﬁnition 3.2.1 (Modal bisimulation). A bisimulation is a binary
relation E between the worlds of two pointed models M, s and N, t
such that sEt and also, for any worlds x, y, whenever xEy, then
1. x, y verify the same proposition letters
2. (a) if xRz in M, then there exists u in N with yRu and zEu
(b) if yRu in N, then there exists z in M with xRz and zEu.
M
x

E
y

z
E
u
N
14
Clause 1 expresses “local harmony”, the zigzag or “back-and-forth”
clauses 2 the dynamics of simulation.15 An obvious example of a bisim-
ulation between two models is the earlier-mentioned case of a one-world
cycle versus a 2-cycle. Just connect all points via the dotted lines:
◦

◦$
◦
U
Example (Existence and non-existence of bisimulations). The dashed
lines in the following picture describe a bisimulation:
◦

......
◦


◦
◦
......
◦

◦
◦
But no bisimulation connects the top worlds of the following two models
– as may be seen by supposing there is one, and then chasing further
links down the two diagrams:
14Setting things up this way makes bisimulations automatically non-empty.
15To keep the accessibility relations in the two models under consideration dis-
tinct, we sometimes write RM versus RN .

Expressive power and invariance / 27
February 2, 2010
◦
◦

?
?
?
?
?
◦p
◦q
◦

?
?
?
??
?
◦

◦

◦p
◦q
Bisimulations have two major uses, involving model transformations
going in opposite directions:
Deﬁnition 3.2.2 (Tree unraveling). Every model M, s has a bisimu-
lation with a rooted tree-like model constructed as follows. The worlds
in the tree unraveling are all ﬁnite paths of worlds in M starting with
s and passing to R-successors at each step. One path has another path
accessible if the second is one step longer than the ﬁrst. The valuation
on paths is copied from that on their last nodes.
Trees are easy to visualize, as a “normal form” for modal models.
Example (“Model expansion” from a ﬁnite graph to an inﬁnite tree).
1$

2
unravels to
⟨1⟩
?
?
?

⟨1, 1⟩
?
?
?

⟨1, 2⟩
⟨1, 1, 1⟩
?
?
?
?

⟨1, 1, 2⟩
⟨1, 1, 1, 1⟩
· · ·
But bisimulation can also be used to simplify given models to smaller
equivalent ones. The following construction of “model contraction” has
a few technical details that we omit here, but we trust the student will
get the idea from our hints plus a concrete illustration.
Deﬁnition Sketch (“Model contraction”). First observe that any
model M has bisimulations with respect to itself, for instance, the
identity relation. Also, given any family of bisimulations {Ei}i∈I be-
tween two models M, N, it is easy to see that their set-theoretic union
S
i∈I Ei is again a bisimulation: the latter is called the largest bisimula-
tion. Now, it is easy to deﬁne a “quotient” of any model M with respect
to the largest bisimulation on that model, where the new worlds are the
equivalence classes of bisimilar old worlds – and the resulting bisimu-
lation contraction is a minimal representation of the modally relevant
structure of the original model M.

February 2, 2010
28 / Modal Logic for Open Minds
We will not give further formal detail for bisimulation contraction,
but here is an example that gives the idea:
◦
/
888
◦
/

◦
◦

◦
◦
In the model to the left, there are two kinds of worlds. One kind
of world are end points without successors, the other kind are worlds
that can reach both an endpoint and a world “of their own kind”. The
model to the right is a smallest representation of the two types.
Digression While process equivalence is the most vivid intuition be-
hind bisimulation, the latter invariance has also been proposed in set
theory (e.g., by Aczel). For instance, reading arrows as pointing at
elements, the following two trees depict intuitively “the same set”:
•

888
•
•
•
•


•
•
as is seen by tagging nodes, starting from the empty set at endpoints:
{∅, {∅}}
}zzzzz
#H
H
H
H
∅
{∅}

∅
{∅, {∅}}


{∅}

∅
But this is also a typical example of bisimulation, connecting points
with the same tags.16
3.3
Modal Invariance
Now we connect up our structural comparison of models with the modal
language. Here is the key result for bisimulation (which led to the lat-
ter’s discovery, speaking historically):
Lemma (Invariance Lemma). For any bisimulation E between models
M and N and any two worlds x, y with xEy,
M, x |= ϕ iﬀN, y |= ϕ for all modal formulas ϕ.
16Barwise and Moss (1996) is an extensive exploration of set theory in this style,
involving modal languages, be it “inﬁnitary” ones allowing the use of arbitrary
conjunctions and disjunctions over (ﬁnite or inﬁnite) sets of formulas.

Expressive power and invariance / 29
February 2, 2010
Proof. By induction on formulas. First reformulate the assertion to
Every modal formula ϕ is invariant across all bisimulation links. (*)
Base case ϕ is a proposition letter p. This follows from Clause 1 for
a bisimulation.17 Boolean cases usually consist of what logicians call
“abstract nonsense”, but nonsense pleasing in its lightness nevertheless.
Here is the sub-routine for negation. The inductive hypothesis says that
(*) already holds for ϕ, and we now want to show it for ¬ϕ:
Let xEy, and M, x |= ¬ϕ. Then not M, x |= ϕ by the truth deﬁnition.
Then not N, y |= ϕ by the inductive hypothesis for ϕ. So N, y |= ¬ϕ,
again by the truth deﬁnition,
and the same for the opposite direction. The argument for a disjunction
is very similar. So, the action must be in the clause for the modality: as
this is the only place left where something of interest can happen. This
makes sense, since we are doing modal logic. Also, we can predict that
for this modal step, the remaining condition on bisimulations, namely
the zigzag clause 2 must be essential. Enough by way of preliminaries:
Let xEy, and assume that M, x |=
3ϕ. By the truth deﬁnition, there
is a world z with RM xz and M, z |= ϕ. Then the zigzag condition on
a bisimulation E gives a state u with RN yu and zEu. The inductive
hypothesis for ϕ applied (not to xEy, but) to the link zEu, gives that
N, u |= ϕ. Then by the truth deﬁnition once more, N, y |=
3ϕ.
The argument with more relations, and corresponding ﬁlled poly-
modalities ⟨a⟩is exactly the same.
As an immediate application, one can now show that certain proper-
ties of worlds are undeﬁnable in the modal language. It suﬃces to give
one model M, s where the property holds at world s, and then provide
a bisimulation E with another model N, t where the property does not
hold at the E-connected world t. For instance, the earlier-mentioned
bisimulation between the 2-point cycle and the 1-point cycle shows that
irreﬂexivity (¬Rxx) is not a modally deﬁnable property of states. Also
we can show failures of bisimulation:
Example (Bisimulation and non-bisimulation between process graphs).
The two black worlds in the models M, N are connected by the bisim-
ulation given by the dotted lines – but no bisimulation includes a match
between the black worlds in N and K:
17Base cases of an induction are usually hardwired into the relevant deﬁnitions.

February 2, 2010
30 / Modal Logic for Open Minds
◦
• z

◦

* •
j
O
◦
◦
M
N
◦
::::
•

A
◦
o
◦
K
We can show this failure of bisimulation by noting that the model in
the middle satisﬁes the modal formula
332⊥in its black world, while
the one on the right does not.
A more positive application of invariance is “transfer”. In particular,
all modal properties of worlds are preserved under our basic model
constructions of Unraveling and Contraction.
3.4
A tiny bit of modal model theory
There is a large literature on the above notions, but here we just direct
your attention to one obvious issue. We can convert the Invariance
Lemma in special cases, making the ﬁt between the modal language
and our structural invariance precise:
Proposition 3.4.1. Let worlds s, t satisfy the same modal formulas
in two ﬁnite models M, N. Then there exists a bisimulation between
M, N connecting s to t.
Proof. For the bisimulation E, take “modal equivalence” itself, i.e.,
satisfaction of the same modal formulas! This relation clearly connects
s to t, while it also preserves proposition letters. Next, suppose that
sEt, and Rsu in M. Suppose that there is no v in N with Rtv and
uEv. That is, for all of the ﬁnitely many successors v of t in N, there
is a modal formula αv true at u in M, but false in N at v.18 Let α be
the conjunction of all these formulas. Then we have α true at u in M,
and hence the formula
3α true at s in M. Therefore, by the deﬁnition
of the relation E, N, t |=
3α. Thus, by the truth deﬁnition, t has an
R-successor v where α holds, and this contradicts the construction of
α, which had one falsiﬁed conjunct at each such R-successor.19
18We can state things in this single direction without loss of generality, perhaps
by adding one negation.
19Technically, this is not an inductive argument – but rather the latest fashion in
the ﬁeld: a “co-inductive” argument.

Expressive power and invariance / 31
February 2, 2010
For inﬁnite models, this converse implication from modal equiva-
lence to bisimilarity does not hold, and you may want to try your hand
at a counter-example. We conclude by stating a truly general equiva-
lence, without proof. This match made in heaven requires a leap of the
imagination, extending our modal language to an “inﬁnitary” version
allowing arbitrary inﬁnite conjunctions and disjunctions of formulas:
Theorem 1. The following are equivalent for any two modal models
M, s and N, t:
1. s and t satisfy the same inﬁnitary modal formulas,
2. there is a bisimulation between M and N connecting s with t.
Inﬁnite modal formulas may look daunting, and they go beyond
received ideas of “syntax” – but inﬁnite logical languages work well in
modal logic, model theory, and set theory.20
3.5
Bisimulation games
As we saw already with semantic evaluation, we can bring out the dy-
namics and the ﬁne structure of logical notions further by means of
suitable games. Invariance is no exception. The ﬁne-structure of bisim-
ulation suggests the following notion:
Deﬁnition 3.5.1 (Bisimulation games). Player S (“Spoiler”) claims
that two models M, s and N, t are diﬀerent, while player D (“Duplica-
tor”) says they are similar. They play over k rounds, starting from the
match s −t. If objects matched in a round diﬀer in any atomic prop-
erty, S wins. In each round, starting with m −n, Spoiler chooses either
model M, and an R-successor x of m, or model N, and an R-successor
x of n. Next, Duplicator must respond with a successor y in the other
model, and the world match after the round is x−y. If a player cannot
choose a successor when it is her turn in a round, she loses.21
Of course, all this is easily formulated with many labeled relations,
instead of a single one. Again, as with modal evaluation games, it can
be seen from general game-theoretic results that either Duplicator or
Spoiler has a winning strategy in any game like this (see Chapter 17).
The preceding game matches up bisimulation very precisely with the
basic modal language. Here is how, again using an earlier fundamental
game-theoretic notion:22
20For instance, each model M, s is deﬁned up to bisimulation by one inﬁnitary
modal formula, true only at M, s and all N, t bisimilar to it.
21There is also a natural inﬁnite version of this game, where no ﬁnite length k is
chosen beforehand, and Duplicator must keep responding forever to win.
22In what follows, we ﬁx a modal language with a ﬁnite set of proposition letters.

February 2, 2010
32 / Modal Logic for Open Minds
Theorem 2 (Adequacy for bisimulation games). The following are
equivalent for any two models M, s, N, t, ﬁnite or inﬁnite:
1. M, s and N, t satisfy the same formulas up to modal depth k,
2. Duplicator has a winning strategy in the k-round game starting
from M, s, N, t.
Proof. The proof from 2 to 1 is by induction on the depth k of modal
formulas. Base case k = 0. The game is over at the start, and since
Duplicator wins, all proposition letters have the same truth values in
s and t. Hence, all purely Boolean formulas without modal operators
also have the same truth values, and these are the formulas of modal
depth 0. Induction step k to k + 1. Let ϕ be a modal formula of depth
k + 1 true at s. Any such ϕ is equivalent to a Boolean combination
of (i) proposition letters, and (ii) formulas of the form
3ψ, with ψ a
modal formula of depth ≤k. It clearly suﬃces to consider the latter
case. Suppose that M, s |=
3ψ. Then there is an R-successor u of s
with M, u |= ψ. Now imagine that the k + 1-round bisimulation game
starts with Spoiler choosing model M, and going to this successor u
– as he is allowed to do. The assumed winning strategy for Duplicator
then yields a response for her, i.e., a successor v for t in N, such that
Duplicator still has a winning strategy in the remaining k-round game
starting from the match u −v. By the inductive hypothesis, the latter
implies that N, v |= ψ. But then N, t |=
3ψ.
From 1 to 2, we need an additional crucial fact about modal logic
that we have not stated before:
Lemma (Finiteness Lemma). Given any ﬁnite set of proposition let-
ters, and a ﬁxed natural number k, up to logical equivalence, there are
only ﬁnitely many modal formulas of modal depth ≤k.23
Given this fact, here is the winning strategy for Duplicator:
“At round i of the game, make sure that you have a link u −v with
M, u and N, v satisfying the same formulas up to modal depth k −i”
At the start of the bisimulation game, the initial worlds s, t satisfy
the condition. At any stage, the condition implies as a special case that,
at any link, all proposition letters get the same value: so Duplicator can
never lose that way. Next, suppose the condition is satisﬁed at some
stage i with link u−v, and Spoiler makes his move, say, picking a world
x with Rux in M. Now, look at the set Σ of all modal formulas of depth
k −i −1 that are true at x – a set that we can take to be ﬁnite by the
23We will not prove the Finiteness Lemma, but it is an easy induction on the
natural number k, using well-known Boolean equivalences and normal forms.

Expressive power and invariance / 33
February 2, 2010
Finiteness Lemma, without loss of generality. Hence, the conjunction
V Σ holds at x and so M, u |=
3V Σ. Now
3V Σ is a formula of modal
depth k −i, and hence, by our assumption about Duplicator’s strategy,
N, v |=
3V Σ. But then, there must be a successor world y of v in
N satisfying
3VΣ, and this is the response which Duplicator needs
to maintain her “invariant” – since x and y will now satisfy the same
modal formulas up to modal depth k −i −1.
Let us illustrate how tight this ﬁt with the modal language really is.
Example (Structural diﬀerences and modal formulas). Consider the
following models in their roots, marked in black. Duplicator has a (triv-
ial) winning strategy in the 1-round game, but Spoiler can win in two
rounds – ﬁrst going down in M, and then taking a b or c arrow to trap
Duplicator at her middle node in N. In an obvious sense, this strategy
exploits the modal “diﬀerence formula” ⟨a⟩(⟨b⟩⊤∧⟨c⟩⊤) of depth 2,
which is true at the root of the model M, but not at that of N:
•
a◦
b

c
?
?
?
?
?
?
◦
◦
M
•
a

a
?
?
?
??
?
◦
b 
◦
c
◦
◦
N
Spoiler can make sure he keeps verifying sub-formulas of this initial
formula, while forcing Duplicator into matched worlds in the other
model where that sub-formula is false.
Next, take the non-bisimulation pair N, K of this earlier example:
• z

◦
::::
•

A
◦
o
◦
◦
N
K
Starting from a match between the two black dots, Spoiler needs 3
rounds to win: forcing Duplicator in two rounds into a matched pair
where one world has no successor, while the other does. One strategy
for this exploits the earlier modal diﬀerence formula
332⊥.

February 2, 2010
34 / Modal Logic for Open Minds
But the analogy between the modal language and games is even
tighter than all this. Note that, in the ﬁrst example above, the modal
diﬀerence formula ⟨a⟩(⟨b⟩⊤∧⟨c⟩⊤) has three modalities, while only its
modal depth 2 was needed. Can we do better? Here is a modal diﬀerence
formula for the roots of the two models which uses only two modalities:
to the left, we have the truth of [a]⟨b⟩⊤, but not to the right.
What does this tell us about the bisimulation game? This formula de-
ﬁnes another winning strategy for Spoiler (players can have many dif-
ferent winning strategies in a game!), where he ﬁrst starts in model M,
goes down the a-arrow, and then makes his next choice in the model N.
Thus, the syntactic feature of alternation of box and diamond modal-
ities indicates a game move of switching models, whereas the earlier
“uniform” diﬀerence formula let Spoiler stay inside one model with
his choices. On the basis of these observations, one can strengthen the
Adequacy Lemma to a more informative explicit version:
Theorem 3 (Strong adequacy for bisimulation games). Spoiler’s win-
ning strategies in a k-round game between models M, s, N, t explicitly
match the modal formulas of operator depth k on which s, t disagree.
Finally, here is a question you should have asked yourself by now.
What is a bisimulation itself in this game perspective? This is a strategy
for Duplicator! In each round, she can appeal to the zigzag clause to
plot her next move. And there is no bound to this, that clause is always
available (like an idealized doctor or mother, taking care of you forever):
Fact. Duplicator’s winning strategies in an inﬁnite game between
M, s, N, t match the bisimulations between them linking s to t.
Inﬁnite never-ending games may seem like an extravaganza – but
in reality, many useful games produce inﬁnite histories, and there are
even logical languages whose evaluation games on models are inﬁnite:
see our Chapter 22 on “modal ﬁxed-point languages”.

Expressive power and invariance / 35
February 2, 2010
Exercises Chapter 3
1.
(a) Draw a bisimulation between the following two models, con-
necting the black points. Check that it satisﬁes the two nec-
essary properties of Harmony and Zigzag:
•
/
%
◦p
◦
T
e
• d
◦p
T
(b) Show that no bisimulation exists between the black points
in the next two models, by giving a modal formula true in
only one of them:
• Z
/ ◦p
◦
* •
/
j
◦p
(c) Show how Spoiler can use your “diﬀerence formula” of the
previous case to win the bisimulation game between the two
models, starting from the match between the black points.
2. The earlier “Treasure Island” has now changed. Find its bisim-
ulation contraction, starting from the initial states on the upper
left. Draw the bisimulation:
1
/

2
/

3, p

4, p
/

5
/

6

7, p
/ 8
/ 9, t
3. Give an inductive proof of Theorem 3 for bisimulation games.

February 2, 2010

February 2, 2010
4
Validity and decidability
4.1
Validity and deciding the minimal modal logic
A modal formula was valid if it is true at all worlds in all models. The
valid formulas form the minimal modal logic, true solely in virtue of
local quantiﬁcation in any graph. It often takes little eﬀort to recognize
modal formulas as valid or not. What is the general situation? Logicians
think here in terms of “decision procedures”, algorithmic “mechanical”
methods that test whether a given formula is valid, or follows logically
from others. Indeed, the idea that logical deduction is essentially linked
to computation goes back to the Middle Ages. Two landmark facts
dominate the history here. Validity in propositional logic can indeed
be tested by an algorithmic decision procedure, viz. the truth table
method, and computers can do this, too. But the dream that all logical
validity might be computable was shattered by the discovery in the
1930s that validity for predicate logic has no mechanical testing method
at all. Or, put more succinctly: “ﬁrst-order logic is undecidable”. Of
course, this is not all. In between propositional and predicate logic,
many logics are still decidable – with monadic predicate logic, ﬁrst-
order logic with unary predicates only, as a prime example.24
This leads to the “Balance” mentioned earlier in this course. Modal
logic sits in between propositional logic and predicate logic qua expres-
sive power over its models. But, what about the computational com-
plexity of its validity problem? Does it side with propositional logic
(where that problem is decidable), or with predicate logic (where it is
undecidable)? There is no obvious truth table method for modal logic,
since there are inﬁnitely many models (both ﬁnite and inﬁnite ones) to
be searched in principle. But here is the truth:
24Indeed, existing methods for proof search in predicate logic (which you may
have been taught in your ﬁrst logic course) often do decide validity in special cases,
though there is no guarantee that must do so.
37

February 2, 2010
38 / Modal Logic for Open Minds
Theorem 4. The minimal modal logic is decidable.
There are many proofs of this result, backed up by concrete de-
cision procedures. Methods include “semantic tableaux”, and others
that you may know from standard logic courses. In this chapter, we
will prove decidability in a number of diﬀerent ways. Each pass will tell
us something more about what makes modal logic tick, showing some
interesting diﬀerence with ﬁrst-order logic as a whole.
4.2
The ﬁnite model property
Basic modal logic has the ﬁnite model property (FMP):
Theorem 5. Every satisﬁable modal formula (that is, true in some
M, s) has a ﬁnite model.
By contrast, ﬁrst-order logic has no FMP. Let the formula λ say that
< is an irreﬂexive transitive order where every point has a successor.
The natural numbers with “smaller than” are a model. λ has only
inﬁnite models: any ﬁnite transitive model in which each point has a
successor must have loops, which are forbidden by the irreﬂexivity.
The FMP does not give decidability per se. We still might have to
check all ﬁnite models: inﬁnitely many. But it does when we can ﬁnd
an eﬀective bound on the size of a verifying model in terms of the given
formula ϕ. This strengthened version of the FMP is called the eﬀective
ﬁnite model property. Our ﬁrst analysis works by a method of selection:
Theorem 6. Modal logic has the eﬀective ﬁnite model property.
Proof. Consider any formula ϕ satisﬁed in a model M, w. For conve-
nience, unravel M via a bisimulation to a tree, so ϕ holds at the root.
The essential point is that evaluation of ϕ only needs ﬁnite path depth
into the tree, and ﬁnite branching width. Here is the idea. Consider ϕ
as a Boolean combination taken from a ﬁnite set of propositional atoms
and modal formulas
3α (this is always possible, looking at ϕ from the
outside).25 For atoms, it is enough to know the valuation at the current
world. For each true diamond formula in this set, we choose a verifying
successor world in the model. The total number needed is bounded by
the number of sub-formulas of ϕ, which is at most the size length(ϕ) of
ϕ itself. For false diamonds, we need not choose any worlds at all, as
these only constrain what should hold at successors we need for other
reasons. Going down the tree in this fashion, we lose one level of modal
25We made this same point earlier in Chapter 3, in our proof of the Adequacy
Lemma for bisimulation games. For instance, the formula ¬(p ∧
3(q ∨
2p) ∧
2s) is
equivalent to the Boolean combination ¬(p ∧
3(q ∨
2p) ∧
2s), where we consider
the bold-face sub-formulas temporarily as “units”.

Validity and decidability / 39
February 2, 2010
operator depth in each round: the process stops at md(ϕ). Moreover,
the width of the process is also clearly bounded by the size of the for-
mula. We can make this precise by induction on ﬁnite sets of formulas
(counting their total number of operators): if such a set consists of true
formulas at a node s, then there is a ﬁnite sub-tree starting at s which
still veriﬁes the whole set. We put together the ﬁnite sub-models for
the α’s (which exist by the inductive hypothesis) to get the total model
for the set one node higher up.
We can compute an eﬀective upper bound on the size of the models
constructed in this proof, viz. length(ϕ)md(ϕ)+1. This gives an algorithm
for deciding validity. Enumerate all modal models up to this size –
using the fact that, modulo isomorphism of models, there are only
ﬁnitely many of these. Check if the given formula ϕ holds in any one
of these models. If so, ϕ is of course satisﬁable – and if not, it is not
satisﬁable at all. This decides SAT (the satisﬁability problem) for modal
formulas. And then we can decide validity of any formula ϕ by deciding
satisﬁability of ¬ϕ.
Remark (Finite depth property). Implicit in this proof is a feature of
modal formulas called their “Finite Depth Property”. For any model
M, s and modal formula ϕ, M, s |= ϕ iﬀM|k, s |= ϕ, where M|k, s is
the sub-model of M whose domain consists of s plus all worlds reach-
able from it in at most k successor steps, with k the modal depth of ϕ.
Modal formulas can only “see” the current model locally via successor
paths up to their own modal depth.
Related to this argument is the general method of ﬁltration, which
we only sketch here. It proceeds by contracting all worlds that agree on
each sub-formula of the ϕ at issue, and it is also somewhat reminiscent
of our earlier bisimulation contractions.
Deﬁnition 4.2.1 (Filtrated model). Consider any model M, and take
any modal formula ϕ. The ﬁltrated model M|ϕ arises as follows. Set
w ∼v if worlds w, v agree on the truth value of each sub-formula of ϕ.
Take the equivalence classes w∼of this relation as the new worlds. For
accessibility, set w∼Rv∼iﬀthere are worlds s ∼w, t ∼v with sRt.
Finally, for the valuation, set w∼|= p iﬀw |= p.
Clearly, ﬁltrated models are ﬁnite, and also, relevant formulas do not
change truth values, as seen by a simple induction on their construction:
Fact. For each sub-formula α of ϕ, we have this equivalence:
M, s |= α iﬀα holds at s∼in the ﬁltrated model M|ϕ.26
26The method works much more generally, but it needs further twists to preserve

February 2, 2010
40 / Modal Logic for Open Minds
4.3
Inductive analysis of valid sequents
Next, we look into the concrete syntactic structure of valid inferences.
Deﬁnition 4.3.1 (Modal sequents). A modal sequent consists of two
sequences of modal formulas separated by a double arrow: ϕ1 . . . ϕk ⇒
ψ1, . . . ψm. Such a sequence is valid if in every world in every model,
the conjunction of the ϕ’s implies the disjunction of the ψ’s.27
This implies that a sequent is valid whenever some formula appears
on both sides. This convention makes for better combinatorial reduc-
tion laws than the stipulation & ⇒&. Here, order and multiplicity of
formulas on either side of the arrow is immaterial: just think of them as
sets. We use letters A, B, . . . for ﬁnite sets of formulas. Now, we give a
set of principles that decompose questions of validity into ever-simpler
equivalent ones, so that the associated procedure terminates. The ﬁrst
of these are purely propositional:
Fact (Valid propositional reduction laws).
1. A sequent with only atoms is valid iﬀsome formula occurs on
both sides.
2. A, ¬ϕ ⇒B iﬀA ⇒B, ϕ
3. A ⇒B, ¬ϕ iﬀA, ϕ ⇒B
4. A, ϕ ∧ψ ⇒B iﬀA, ϕ, ψ ⇒B
5. A ⇒B, ϕ ∧ψ iﬀboth A ⇒B, ϕ and A ⇒B, ψ
Proof. This is a routine exercise in propositional logic.28
Reducing sequents by these rules leads to ever simpler ones in terms
of logical operators, until you hit atomic ones that you can decide “on
sight”. So, this is a decision procedure for propositional logic. Now for
the modal operators. Starting from the outside of formulas in a se-
quent, we can reduce sequents until all outer Boolean connectives have
disappeared. We are left with (using only diamonds here as primitive
modalities) irreducible sequents
p,
3ϕ1, . . . ,
3ϕk ⇒
3ψ1, . . . ,
3ψm, q
(4.1)
with p, q sequences of proposition letters. Now, we reduce these se-
quents by means of the following observation, which is again a highly
typical modal style of argument:
special relational features of the original model, such as transitivity.
27It also makes sense to speak of global truth of a sequent in a whole model, but
we will not use this here.
28You can easily ﬁnd similar decomposition rules for the other connectives.

Validity and decidability / 41
February 2, 2010
Fact (Modal Decomposition Fact). A modal sequent of the form
p,
3ϕ1, . . . ,
3ϕk ⇒
3ψ1, . . . ,
3ψm, q is valid iﬀeither
1. p, q overlap, or
2. for some i (1 ≤i ≤k), the sequent ϕi ⇒ψ1, . . . , ψm is valid.
Proof. From right to left. If either 1 or 2 holds, a simple argument
shows that 4.1 is valid. This involves just the modal truth deﬁnition
and the deﬁnition of sequent validity. Next, from left to right, argue by
contraposition. Suppose that neither 1 nor 2 holds. Then, as none of
the 2-type sequents are valid, there exist k models Mi, wi in which ϕi
is true while all the right-hand formulas ψj are false. Now put all these
models together under one new root v – and stipulate an extended
valuation at v that makes the p true, but not the q:
v
vlllllllllllllllllll
(R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R

w1

;;;;;;;;;;

7777777777
wk

;;;;;;;;;;
M1
Mk
Then the new root v satisﬁes the whole left-hand side of 4.1, but none
of the formulas on its right-hand side hold:29 and so we have shown
that 4.1 is not valid.
Comment: proof calculi Sequents are normally used in proof theory.
We then read the above rules bottom up, as introducing new logical
operators into inferences already proved. For instance, if we have ϕi ⇒
ψ1, . . . , ψm, then we conclude
3ϕi ⇒
3ψ1, . . . ,
3ψm. Reading the rules
that way gives a complete proof system for the minimal modal logic.
For modal logic, this reveals a delightful subtlety, which connects up
with so-called “substructural logics”. Our sequents had sets of formulas.
This validates structural rules of inference on sequents, allowing us
to contract two instances of the same formula into one, or permute
occurrences of formulas on the same side of the ⇒. One structural
manipulation seems particularly harmless, viz. suppression of multiple
occurrences of the same formula:
29Here, we really need to prove that our formulas do not change truth values in
passing from the separate models into the new “rooted” one – something that can
be done by choosing an appropriate bisimulation: which one?

February 2, 2010
42 / Modal Logic for Open Minds
Structural rules of Contraction
(a) if A, ϕ, ϕ ⇒B, then A, ϕ, ⇒B
(b) if A ⇒B, ϕ, ϕ, then A ⇒B, ϕ
But this may be fatal to decidable proof search: if we use Contrac-
tion backwards, searching for possible proofs of the current sequent, this
rule increases the size of the sequents that are potential candidates for
derivation. In general, this is inevitable. For ﬁrst-order logic, Contrac-
tion is indispensable, since it is involved when we appeal more than
once to the same quantiﬁer, for instance, taking diﬀerent instances of a
universal formula ∀xϕ. And this can explode proof search spaces – as
ﬁrst-order logic is undecidable. But for modal logic, this does not hap-
pen. The above semantic argument shows that the rule of Contraction
is not needed for deriving modal validities: we only need Permutation
of formulas, and Monotonicity: insertion of additional formulas right
and left.30 The latter rules, read backwards, do not increase the com-
plexity of our search space. Thus, we have one more, proof-theoretic
explanation of the decidability of the basic modal logic.
4.4
Semantic tableaux
Here is one ﬁnal re-interpretation of our inductive analysis. Reading
things in the opposite direction, we can think of the preceding reduction
rules as analyzing what it would take to produce a counter-example
for an initial sequent ϕ1 . . . ϕk ⇒ψ1, . . . ψm. In a stepwise manner,
the rules analyze the nature of some possible model M, s where all
antecedent formulas are true and all consequent formulas are false.
The result of such an analysis is a ﬁnite tree of sequents in which each
logical operator gets analyzed, whose branches either “close” (when
some formula occurs in both antecedent and consequent set), or stay
“open”. Such trees are called semantic tableaux. If all branches close,
there is no counter-example, and the initial sequent was valid. If at
least one branch remains open, even when all rules have been applied,
a counter-example may be read oﬀfrom that branch.
We do not explain this method in technical detail here, but we do
give one heuristic illustration:
Example (Modal semantic tableaux). Consider the modal formula
2(p →q) →(2p →
2q). Can we ﬁnd a counter-example? We put it on
top of a tree to be constructed, with a marker for the world:
•
2(p →q) →(2p →
2q) 1
30Proof systems without a contraction rule are crucial to categorial grammar and
linear logic, two logical approaches to language and computation.

Validity and decidability / 43
February 2, 2010
Things to the left of a dot have to be true, things to the right, false.
Analyzing this in propositional logic, there is only one way in which a
counter-example might be obtained:
2(p →q) •
2p →
2q 1
Repeating this step, we get:
2(p →q),
2p •
2q 1
Now we need to deal with the modal boxes. The ones to the left do not
make any existential requirement, but the one on the right asks for a
successor 2 of the current world 1 where q is false, while at the same
time, all formulas that are boxed to the left must be true:
p →q, p • q 2
Analyzing this in propositional logic again, there are two ways to make
the implication to the left true, written as the following “splitting”:
q, p • q 2
p • q, p 2
Now both of these nodes close, since there are formulas occurring on
both sides, making it impossible to give a counter-example. Thus, the
initial sequent was valid, and indeed, we have shown, once more, that
the modal distribution axiom is valid.31
We display the complete resulting closed tableau in full:
•
•
•
•
@
@
@
@
@
@
@

•
•
2(p →q) →(2p →
2q) 1
2(p →q)
2p →
2q 1
2(p →q),
2p
2q 1
p →q, p
q 2
q, p
q 2
p
q, p 2
=
=
Next, consider the converse implication (2p →
2q) →
2(p →q). Here
is the initial node of its tableau:
• (2p →
2q) →
2(p →q) 1
31To make all this precise, semantic tableaux need a lot of syntactic “book-
keeping”, which detracts a bit from the elegance of the idea behind this method.

February 2, 2010
44 / Modal Logic for Open Minds
We go through the rules a bit more quickly:
2p →
2q •
2(p →q) 1
We ﬁrst make a propositional split:
2q •
2(p →q) 1
•
2(p →q),
2p 1
To the left, we create a successor 2 of 1, and write in the requirements:
q • p →q 2
Applying an implication rule again, this yields:
q, p • q 2
and this closes. But we can also investigate the remaining case to the
right, attaching two successor worlds 3, 4 to 1, one for each box (there
is absolutely no reason to assume that both boxed formulas need to be
falsiﬁed in one single successor world):
• p →q 3
• p 4
Applying an implication rule again, this yields:
p • q 3
• p 4
Both nodes remain open, and no more decomposition rules apply.
The total semantic tableau is then as follows:
•
•
ppppppppppppp
O
O
O
O
O
O
O
O
O
O
O
O
O
O
•
•
•
•
•
•
•
(2p →
2q) →
2(p →q) 1
2p →
2q
2(p →q) 1
2q
2(p →q) 1
2(p →q),
2p 1
q
p →q 2
p →q 3
p 4
q, p
q 2
p
q 3
=
From the markings on the right branch of this tree, it is immediate
to read oﬀa concrete counter-example M for the initial sequent. The
set of worlds of the model M is {1, 3, 4}, the accessibility relation is

Validity and decidability / 45
February 2, 2010
{(1, 3), (1, 4)}, and the valuation makes p true at 3, and q nowhere:
3, p
1
6n
n
n
n
n
n
(Q
Q
Q
Q
Q
Q
Q
4
It is easy to see that (2p →
2q) →
2(p →q) is false at world 1 in this
model: the tableau steps themselves show how.32
Tableau rules These two examples show general tableau rules in ac-
tion. For instance, a “conditional α →β to the right” (i.e., to be made
false) gets its antecedent α on the left in a node marked with the same
world (to be made true there), leaving the consequent β on the right.
The modal rule is a bit more ambitious. A box formula
2ϕ to the right
leads to a new node marked for a fresh successor world of the current
one, where ϕ is put on the right (representing some successor world
where ϕ is to be made false). This is an “active” onetime construction
rule. Modal formulas
2ϕ to the left in a node, however, marked for
some world w, say, are “passive” but may have to be applied many
times. Every time we construct a tableau node for a successor world v
of w, we must place ϕ on its left.
Semantic tableaux were ﬁrst proposed for ﬁrst-order logic in the
1950s, but they also turned out very appropriate to modal logic, and
they are widely used today in automated deduction.
4.5
Decidability via translation
We conclude with a fourth, short, and chique proof of decidability,
which points toward yet another view of modal logic, viz. as a member
of a much larger family of logics. We will see soon in these lectures how
all basic modal formulas can be translated into ﬁrst-order formulas. In
fact, they can be translated into a fragment of ﬁrst-order logic using
only two variables over worlds, free or bound. Now, it was shown in
the 1970s that this “two-variable fragment” FO2 of ﬁrst-order logic is
decidable! Therefore, since the translation of modal formulas to two-
variable formulas is eﬀective, modal validity can be decided, too.
But beware with such easy reductions. The computational complex-
ity of deciding FO2 is in fact higher than that for modal logic, so in
that respect, we are explaining “obscurum per obscurius”. Moreover,
this path seems a dead-end as far as generalizations are concerned.
32On its open branch, the tableau leaves the propositional valuation under-
determined, thus in eﬀect creating a family of counter-examples.

February 2, 2010
46 / Modal Logic for Open Minds
Already the three-variable fragment FO3 of ﬁrst-order logic is undecid-
able (it contains all of relational algebra), so we cannot reduce validity
for modal logics with additional typically 3-variable frame conditions
like transitivity, even though these are known to be decidable.
Indeed, validity is also decidable for many stronger modal logics than
the minimal one, working only on special model classes – which we will
discuss in more detail later. Proofs for this are often adaptations of the
ones presented here. For the modal logic S5, where accessibility is an
equivalence relation, or the universal relation which holds between all
worlds, perhaps the simplest proof is again by translation. In S5 models,
a modal
2 is just a universal quantiﬁer ∀, and a
3 an existential ∃.
Then, all modal formulas translate into equivalent formulas of monadic
ﬁrst-order logic, a system which is obviously decidable.
Something to think about Here is a sweeping statement about the
landscape of all modal logics. There are countably many decision pro-
cedures (algorithms are ﬁnite sets of instructions, which can be enu-
merated), and there are uncountably many modal logics: essentially,
modulo some closure conditions, they are all subsets of the countable
set of all formulas. Therefore, most modal logics must be undecidable.
But, all logics found until the early 1970s were in fact decidable! Only
then people constructed ﬁnitely axiomatized undecidable modal logics,
borrowing ideas from standard logic. We will give an example of an
undecidable modal logic much later in Chapter 24.
Finally, just to jog your mind, here is an outrageous result from the
1980s. It is undecidable whether a given modal logic is decidable! And
maybe that fact is not so strange after all. As all academic researchers
know, it can be extremely hard to see that something is easy.

Validity and decidability / 47
February 2, 2010
Exercises Chapter 4
1.
(a) Derive the correct sequent rules for implication from those
stated for negation and conjunction, given the standard
propositional deﬁnition of →in terms of ∧and ¬.
(b) Which of the following two implications is valid? Give an
informal argument, and also an outline of a sequent proof in
the minimal logic:
2(p →q) →(3p →
3q)
(3p →
3q) →
2(p →q)
(c) As for the invalid formula, draw a counter-example.
2.
(a) Supply all missing steps in the proof of the Modal Decom-
position Fact. In particular, identify the precise place where
you need a bisimulation.
(b) What is the formulation of that Fact when stated in terms
of
2 rather than
3?
(c) Using semantic tableau rules, prove the following formula:
2(p ∧q) →(3p ∨
2q)
3. Prove the key Lemma justifying the Filtration method by induc-
tion on modal formulas.
4. Make the statement precise that modal S5 is translatable into
monadic ﬁrst-order logic. Is there also a converse translation?

February 2, 2010

February 2, 2010
5
Axioms, proofs, and completeness
5.1
Describing validities by proofs
Universal validity of a formula ϕ was deﬁned somewhat abstractly as
truth of ϕ at each world in each model. How can we describe the form
of these validities more concretely? After all, logic is also about valid
arguments, and premises ϕ1, . . . ϕk imply conclusion ψ iﬀthe implica-
tion (ϕ1∧· · ·∧ϕk) →ψ is a valid formula. One concrete method in logic
is this: give a proof system, that is, a concrete set of initial principles
and derivation rules that produce only valid principles (this property
is called soundness) - and hopefully also, all of the valid principles (the
famous property of completeness). Logical proof systems exist in many
diﬀerent formats: our “sequent calculus” in Chapter 4 was an example.
Not all logics have complete proof systems, but there is no reason not
to try in the case of modal logic.
5.2
A short-cut through ﬁrst-order logic?
But perhaps we do not have to try at all? One quick, but sneaky route
is as follows. Using the method of Chapter 7 (but in your heart, you
already know how to do this) translate modal formulas into ﬁrst-order
ones, and then use any complete proof system that you have learnt for
the latter system to derive the (translated) modal validities.
Example (Modal distribution law). Instead of proving the semanti-
cally valid modal distribution law
2(p →q) →(2p →
2q), one can
easily derive its ﬁrst-order translation (note how modal boxes become
successive bounded universal quantiﬁers here) ∀x(∀y(Rxy →(Py →
Qy)) →(∀y(Rxy →Py) →∀y(Rxy →Qy))) – using only standard
axioms and rules of ﬁrst-order logic.
But this does not give much insight into the peculiarities of modal
reasoning, which is, amongst other things, done in variable-free no-
49

February 2, 2010
50 / Modal Logic for Open Minds
tation. Moreover, a ﬁrst-order proof for a translated modal formula
might contain “junk”: intermediate formulas that have no modal coun-
terparts, which oﬀends our sense of purity.33 Therefore, we also want to
ﬁnd more intrinsically modal proof systems. Nevertheless, a comparison
with, say, axioms for FOL is useful. We shall appreciate better what
we need, and what not. For concreteness, Herbert Enderton’s famous
textbook A Mathematical Introduction to Logic (Enderton, 1971), used
by many generations of Stanford students, has the following set:
(a) all tautologies of classical logic,
(b) distribution: ∀x(ϕ →ψ) →(∀xϕ →∀xψ),
(c) universal instantiation: ∀xϕ →[t/x]ϕ, provided that t is freely
substitutable for x in ϕ,
(d) vacuous universal generalization: ϕ →∀xϕ, provided that x is
not free in ϕ,
(e) a deﬁnition of ∃xϕ as ¬∀x¬ϕ,34 and
(f) the rule of Modus Ponens: “from ϕ and ϕ →ψ, conclude ψ.
Here, each axiom can come with any ﬁnite preﬁx of universal quan-
tiﬁers. This special feature provides the eﬀect of the rule of
(g) Universal Generalization: “if ϕ is provable, then so is ∀xϕ”.
The syntactic provisos on Axioms (c) and (d) are a common source
of errors, and they reﬂect the fact that the ﬁrst-order language is all
about variable dependency and variable handling.
Theorem 7. A ﬁrst-order formula is valid iﬀit is provable using the
Enderton axioms.
We will present a variable-free proof system for the modally valid
formulas. Even so, many systems for automated deduction do use trans-
lation into ﬁrst-order logic, since computational techniques have been
highly optimized for the latter widely used system – and a user need
not care so much what happens “under the hood” of the computer.
5.3
The minimal modal logic
Our basic modal proof system is like part of Enderton’s complete set,
but without syntax worries:
Deﬁnition 5.3.1 (Minimal modal logic). The minimal modal logic K
is the proof system with the following principles:
(a) all tautologies from propositional logic,
33In fact, this junk is almost bound to occur in a proof for modal distribution.
34Or one can make both quantiﬁers primitives, with an axiom ∃xϕ ↔¬∀x¬ϕ.

Axioms, proofs, and completeness / 51
February 2, 2010
(b) modal distribution
2(ϕ →ψ) →(2ϕ →
2ψ),
(c) a deﬁnition of
3ϕ as ¬2¬ϕ,
(d) the rule of Modus Ponens,
(e) and a rule of Necessitation: “if ϕ is provable, then so is
2ϕ”.
Proofs are ﬁnite sequences of formulas, each of them either (i) an in-
stance of an axiom, or (ii) the result of applying a derivation rule to
preceding formulas. A formula ϕ is provable: written as ⊢ϕ, if there is
a proof ending in ϕ. If we want to indicate the speciﬁc modal logic we
are using, we write it as a subscript: for instance, ⊢K ϕ.
Our variable-free modal notation has no laws like the above ﬁrst-
order (c) and (d). These do appear, in a sense, in stronger systems.
If you wish, the axiom
2ϕ →ϕ of the stronger modal logic T is an
instance of universal instantiation.35 Likewise, an S5-axiom like
3p →
23p, valid on models where the accessibility relation holds between all
worlds, is really the vacuous generalization ∃xPx →∀x∃xPx.
5.4
The art of formal proof
Finding formal proofs is a skill that can be drilled into students, and
though it has few practical applications, it has a certain unworldly
beauty. We will not emphasize this drill here, but the student will do
well to study a few derivations in detail, and see the bag of useful
tricks that goes into them. Roughly speaking, proofs in the minimal
modal logic often have a propositional core, which is then “lifted” to
the modal setting. Many textbooks provide examples: say, the Manual
of Intensional Logic (van Benthem, 1988a) has a few annotated ones.
Learning formal proof is a matter of practice. You build up a library
of useful sub-routines, you learn to recognize formal patterns (in fact,
logic courses have been used as a laboratory for a variety of cognitive
psychology experiments) and soon you are airborne.36
Example (Distribution rules).
(a) If ϕ →ψ is provable, then so is
2ϕ →
2ψ:
1)
ϕ →ψ
provable by assumption
2)
2(ϕ →ψ)
Necessitation rule on 1
3)
2(ϕ →ψ) →(2ϕ →
2ψ)
modal distribution axiom
4)
2ϕ →
2ψ
Modus Ponens on 2, 3
35But this often-cited analogy is not quite right, if you think it through: why?
36If all else fails, you can opportunistically seek an informal semantic argument
for inspiration, and hide the idea in formal steps later.

February 2, 2010
52 / Modal Logic for Open Minds
(b) If ϕ →ψ is provable, then so is
3ϕ →
3ψ:
1)
ϕ →ψ
provable by assumption
2)
¬ψ →¬ϕ
propositional logic, 1
3)
2¬ψ →
2¬ϕ
by the subroutine (a)
4)
¬2¬ϕ →¬2¬ψ
propositional logic, 3
5)
3ϕ →
3ψ
deﬁnition of
3
Related useful observations about modal provability include the
widely used principle of
Replacement by Provable Equivalents:
if ⊢α ↔β then ⊢ϕ[α] ↔ϕ[β].37
Next, as for proving real theorems, it often helps to start at the end,
and ﬁrst reformulate what we are after. This is of course, standard
heuristics: reformulate the result to be proved in a top-down manner,
until you see bottom-up which available principles will yield it:
Example (An actual theorem of K). Using these observations, we
show that ⊢K (3ϕ ∧
2(ϕ →ψ)) →
3ψ:
1) by propositional logic, it suﬃces to prove the equivalent
2(ϕ →ψ)
→(3ϕ →
3ψ), which is again equivalent to
2)
2(ϕ →ψ) →(¬2¬ϕ →¬2¬ψ), which is equivalent to
3)
2(ϕ →ψ) →(2¬ψ →
2¬ϕ)
4) Now we recognize a propositional core tautology that we can use:
(ϕ →ψ) →(¬ψ →¬ϕ), and apply our distribution rule to it:
5)
2(ϕ →ψ) →
2(¬ψ →¬ϕ), and combining this with a distribu-
tion axiom to obtain:
6)
2(ϕ →ψ) →(2¬ψ →
2¬ϕ), we get the desired conclusion.
The very typographical cut-and-pastes that you will do in typing
up these proofs show the workings of (i) proof structure, (ii) pattern
recognition, (iii) modularity, and (iv) sub-routines!
Other well-known theorems of the minimal logic K are principles
such as the distribution of
2 over ∧:
2(ϕ ∧ψ) →(2ϕ ∧
2ψ)
and its diamond counterpart
3(ϕ ∨ψ) →(3ϕ ∨
3ψ). The latter can
also be derived from the former by a more general system property of
Duality, just as in classical logic. Finally, another simple way of “seeing”
K-theorems is through analogies with ﬁrst-order logic.
37Here ϕ[α] is a formula containing one of more occurrences of the sub-formula
α, and ϕ[β] results from ϕ[α] by replacing all of these by occurrences of β.

Axioms, proofs, and completeness / 53
February 2, 2010
5.5
Proofs in other modal logics
Stronger modal logics increase deductive power by adding further axiom
schemata to the minimal logic K. Then the ﬂavour of ﬁnding derivations
may change, as you develop a feeling for what the additional syntactic
power gives you. Here are some well-known examples:
Example (T, S4 and S5). The modal logic T arises from K by adding
the axiom schema of Veridicality
2ϕ →ϕ. The logic S4 adds the
schema
2ϕ →
22ϕ to T, which for knowledge is called Positive Intro-
spection. Finally, the logic S5 adds the schema
3ϕ →
23ϕ to S4.
We will discuss these logics later on, but here is one illustration:
Fact. The following principle is provable in S4:
2323ϕ ↔
23ϕ
Proof. The main steps are these. From left to right. (a) First, prove
that the formula
2α →
3α is provable for all formulas α (this is easy
to do even in the modal logic T), so that we have
23ϕ →
33ϕ. Next
(b) apply earlier sub-routines to get
2323ϕ →
2333ϕ. Then (c)
derive
333ϕ →
3ϕ in S4, and apply an earlier sub-routine to get
2323ϕ →
23ϕ. From right to left. “Blow up” the initial box in
23ϕ
to three boxes, using the S4-axiom. Then replace the second of these
by a diamond, using the same principles as before.
You can see more concretely what is going on by a “picturesque”
semantic argument for the validity of
2323ϕ ↔
23ϕ on reﬂexive and
transitive models for S4. There is even a kind of heuristic translation
between the semantic argument and a syntactic proof. But a semantic
argument may give you more. If you analyse things well in your pictures,
you will see that reﬂexivity is not needed.
Perhaps you can also ﬁnd shorter, or otherwise diﬀerent proofs for
the above semantic validities. Theorems in a logical system may well
have more than one non-equivalent proof!
5.6
The science of proof
On the practical side, computers can search for proofs in much faster,
mechanical ways. Existing theorem provers for modal logic use vari-
ous techniques.38 Usually, these are not in the above axiomatic style,
but they use a variety of other methods: (a) translation into ﬁrst-order
logic plus “resolution” methods, (b) the above “semantic tableaux”,
which are formal versions of semantic decision procedures, or (c) spe-
cially optimized modal calculi. On the theoretical side, there is a ﬁeld of
38You can look up information on the web page http://www.aiml.net.

February 2, 2010
54 / Modal Logic for Open Minds
logic called Proof Theory that deals with the structure of formal proofs,
transformations between equivalent proofs, and the like. Deep results in
Proof Theory include “cut-elimination theorems” telling us that – for
appropriate logics – theorems derived in axiomatic format can also be
derived in a “sequent calculus” (cf. Chapter 4) with only introduction
rules for logical operators. The latter format is very perspicuous for
theoretical purposes. Another proof-theoretic theme concerns the sur-
plus of proofs, as ﬁnite combinatorial objects establishing validity. A
proof often has “algorithmic content”, which allows us to extract more
concrete information about valid formulas, and perhaps even extract
programs whose execution provably meets given speciﬁcations.
5.7
The completeness theorem
Perhaps the most important result for the minimal modal logic is this:39
what K derives is the whole truth (completeness), and nothing but the
truth (soundness).
Theorem 8. For all modal formulas ϕ, ⊢K ϕ iﬀ|= ϕ
Completeness theorems were ﬁrst proved by Emil Post for proposi-
tional logic in the 1920s, and – much deeper – by Kurt G¨odel in 1929
for ﬁrst-order logic. Surprisingly, they connect the very general notion
of validity (|=) with a very concrete one of provability (⊢).
Soundness. This is usually easy to prove, by induction on the length
of proofs. One ﬁrst checks that all axioms of the stated forms are valid,
and next, that all the derivation rules preserve validity. For the minimal
logic K, this is easy to see by inspection.40
Completeness. This involves a more complicated argument. It is like
the completeness proofs for ﬁrst-order logic that you may have seen
already – but with some simpliﬁcations due to the simple structure of
the modal language. The emphasis in this book will not be on proving
completeness theorems, even though these are a large “industrial” part
of the ﬁeld. But we will tell you about the main proof steps here.
The cover argument. We argue by contraposition. Suppose a modal
formula ϕ is not derivable in K. We reformulate this assumption using
the following notion, that is important in its own right.
Deﬁnition 5.7.1 (Consistency). A set Σ of formulas is consistent if for
no ﬁnite conjunction σ of formulas from Σ, the negation ¬σ is provable
in the logic K.
39The result goes back essentially to Stig Kanger and Saul Kripke in the 1950s.
40Soundness is not always trivial: logics for program correctness have tricky proof
rules for structured data and recursion, whose soundness can be in doubt.

Axioms, proofs, and completeness / 55
February 2, 2010
Consistent sets have simple useful properties that we do not prove
here. One is that, if ϕ is not derivable, then the set {¬ϕ} is consistent.
Now we show that in general, any consistent set of formulas Σ has a
satisfying model, which provides a semantic counter-example for the
non-derivable formula ϕ, whence the latter is not semantically valid.
Maximally consistent sets. Any consistent set of formulas is con-
tained in a maximally consistent set of formulas, i.e., a consistent set
which has no consistent proper extensions. This may be proved by
general set-theoretic principles (“Zorn’s Lemma”). More popular is an
explicit “Lindenbaum construction” enumerating all (countably many)
formulas of the modal language: ψ1, ψ2, . . . and then, starting from Σ,
working stage by stage, adding the currently scheduled formula if it is
still consistent with those already chosen. In the countable limit, the
result of this is still consistent, since by our deﬁnition, an inconsistency
can only involve ﬁnitely many formulas, and hence it would already
have shown up at some ﬁnite stage. It is easy to see that the preceding
construction yields a maximally consistent set.
Maximally consistent sets have pleasant decomposition properties,
making them behave like complete records of possible worlds:
Fact. Let Σ be a maximally consistent set. Then the following equiv-
alences hold, for all modal formulas:
(i)
¬ϕ ∈Σ
iﬀ
not ϕ ∈Σ
(ii)
ϕ ∧ψ ∈Σ
iﬀ
ϕ ∈Σ and ψ ∈Σ
This may be shown by simple propositional reasoning (K contains
all Boolean tautologies). It also follows easily that maximally consistent
sets are closed under K-derivable formulas.
Now we unpack modalities. First we say that ΣR∆if for every for-
mula α in the maximally consistent set ∆, we have
3α in Σ. Soon, this
R will become the accessibility relation in a model that we are going
to create. Now we have the following further decomposition:
Fact.
(iii)
3ϕ ∈Σ
iﬀ
there is some ∆with ΣR∆and ϕ ∈∆
The proof is trivial from right to left. From left to right, it is the only
place in the whole completeness proof where we use the typically modal
principles of K.41 Consider the set of formulas Γ = {ϕ}∪{α |
2α ∈Σ}:
by the earlier deﬁnition of accessibility, any maximally consistent set
containing this will be a R-successor of Σ.
Claim. The set Γ is consistent.
41In fact, here is where you could have discovered these key axioms!

February 2, 2010
56 / Modal Logic for Open Minds
Proof. Suppose it were not: then by the deﬁnition of consistency, there
is a conjunction α of some ﬁnite set of formulas with
2α in Σ such
that K proves ¬(α∧ϕ), hence also α →¬ϕ. By Necessitation, K then
also proves
2(α →¬ϕ), and by modal distribution, it proves
2α →
2¬ϕ. Now we assumed
2α ∈Σ for all separate α ∈α. But by our
earlier observations about derivability, together, these formulas imply
that
2α ∈Σ, and since maximally consistent sets are closed under
provable consequence, we have
2¬ϕ ∈Σ. Now, given K’s deﬁnition of
3 in terms of
2, this contradicts the fact that
3ϕ ∈Σ.
The Henkin model. Now we deﬁne a model M = (W, R, V ) as follows.
Deﬁnition 5.7.2 (Canonical model). The worlds W are all maximally
consistent sets, the accessibility relation is the above deﬁned relation
R, and for the propositional valuation V , we set Σ ∈V (p) iﬀp ∈Σ.
Then we have everything in place for the ﬁnal argument:
Lemma (Truth Lemma). For each maximally consistent set Σ, and
each modal formula ϕ,
M, Σ |= ϕ
iﬀ
ϕ ∈Σ
Proof. The proof is a straightforward induction on formulas ϕ, using
all the ready-made ingredients provided in the decomposition facts for
maximally consistent sets. A typical feature of the Truth Lemma, and
one of its conceptual delights for logicians, is the harmony between a
formula just belonging to Σ as a syntactic object, and that same formula
being true at Σ, now viewed as one world in a universe of worlds where
modal evaluation can take place.
Actually, this proof establishes something more than we stated.
“Weak completeness” is the property that every valid formula is deriv-
able – or equivalently, that every consistent formula has a model. But
we have really proved “strong completeness”: all consistent sets have
a model. Equivalently, this says that each valid consequence ϕ from a
set of formulas Σ, ﬁnite or inﬁnite, has a proof using only assumptions
from that set: Σ |= ϕ iﬀΣ ⊢ϕ.
There is something magical about this completeness argument, since
we conjured up a counter-model out of our hat, using just the syntax of
the modal language plus some simple combinatorial facts about prov-
ability in the minimal modal logic. Even so, the Henkin model is a
concrete semantic object when we disregard the syntactic origins of its
worlds, and as such it even has a remarkable property. All consistent
sets can be made true in one and the same model! While we could also

Axioms, proofs, and completeness / 57
February 2, 2010
have seen this diﬀerently,42 it is a characteristic fact about the modal
language, that makes the Henkin model “largest” or “universal” among
all models. By contrast, ﬁrst-order logic has no such universal model,
since its maximally consistent theories hate each other so much that
they cannot live consistently in the same model.
Modern ﬁnite versions The following observation has become stan-
dard in the literature. One further remarkable feature of the complete-
ness proof is that it can also be carried out in a ﬁnite universe of
formulas. Just consider the initially given consistent formula and all
its sub-formulas as your total language. Everything we have deﬁned
and proved also applies when relativized to that setting, with some no-
tions and results even getting simpler. As a result, we get ﬁnite models
for consistent formulas whose size is a function of the number of sub-
formulas. This is one more way of seeing that modal logic is decidable.
5.8
Applications of completeness
You need to understand how completeness theorems are used. Note
that |= is deﬁned with a universal quantiﬁer over models, and ⊢with
an existential quantiﬁer over proofs. This highlights one basic feature.
If we want to show that some formula is non-derivable, this is a hard
task proof-theoretically, as we need to see that every proof fails. But on
the equivalent semantic side, this says there exists some model for the
negation of the formula. So, one counter-example suﬃces. Note that
this application involves only soundness.43 Here is a more theoretical
application of completeness. We show that some derivation rules beyond
those stated are “admissible” for modal reasoning:
Fact. If ⊢K
2ψ, then ⊢K ψ.
In other words, provability in K also satisﬁes a converse rule of “De-
Necessitation”. This rule is trivial in modal logics upward from T: but
for K, it is by no means obvious.
Proof. Suppose that ψ is not provable. Then by completeness, there
is a counter-model M with a world w where ¬ψ holds. Now here is a
semantic trick that is used a lot in modal logic. Take any new world v,
42For instance, here is an alternative construction. For each satisﬁable set of
formulas in the language, take one verifying model, and then form the so-called
“disjoint union” of all these models: this also works.
43It is a tragic feature of many deep logical results that their easy side makes for
the most concrete applications, whereas the deeper converse side is only there for
theoretical enlightenment. Or stated more positively, the most important insights
in logic are free from any base motive of practical gain.

February 2, 2010
58 / Modal Logic for Open Minds
add it to M and put just one extra R-link, from v to w:
v
◦

¬2ψ
w
•
P
P
P
P
P
P
P
P
P
P
ttttttt
¬ψ
M
The atomic valuation at v does not matter. In the new model M +,
2ψ is clearly false at v – hence it is not universally valid, and so by
soundness,
2ψ is not derivable in K.
In addition to axioms, modal rules of inference are a fascinating
subject of study by themselves. A nice general result is “Rybakov’s
Theorem” from the 1980s, stating that it is decidable if a given rule of
inference is admissible for the widely used modal logic S4.
Finally, having a complete axiom system does not make a logic de-
cidable, witness the case of ﬁrst-order logic. Given any formula ϕ, enu-
merating all possible proofs for it must indeed produce a proof if it is
valid. But if ϕ is not valid, we have to sit through the entire inﬁnite
process, to make sure that it was not derivable. As it happens, we have
seen already that modal validity was decidable – but this feature of
modal logic was for additional reasons.
5.9
Coda: modal logic via proof intuitions
Purely proof-theoretic modal intuitions may run deep. See the pas-
sage on H.B. Smith in the Manual of Intensional Logic (van Benthem,
1988a). This early pioneer of modal logic in the 1930s took the view
that the heart of modal reasoning was not in speciﬁc axioms or rules,
but rather in two major principles which had to be respected by any
modal system. Smith considered ﬁnite sequences of modalities as the
core notions that a modal logic is trying to capture:
−,
3,
2,
33,
32,
23,
22, . . .
He then formulated two intuitive desiderata on any concrete modal
proof system:
(a) Distinction: no two distinct sequences are provably equivalent,
(b) Comparison: of any two sequences, one implies the other.
The two requirements are at odds, since (a) wants the logic to be
weak, while (b) wants it to prove a lot. Indeed, these requirements
cannot be met in “normal modal logics” extending K.44 But even so,
44The reader may want to try her hand at the simple but clever argument.

Axioms, proofs, and completeness / 59
February 2, 2010
Smith’s intuitions are fascinating, and they have been modeled in suit-
ably generalized logics over variants of our possible worlds semantics.
This excursion is also interesting because it reminds you how,
through no fault of theirs, interesting ideas that do not “ﬁt” may
drop by the wayside as a science progresses.

February 2, 2010
60 / Modal Logic for Open Minds
Exercises Chapter 5
1. Prove the following formula in K:
2(ϕ ∧ψ) ↔(2ϕ ∧
2ψ).
2. Prove the formula
2323ϕ ↔
23ϕ in the logic K4: S4 minus
Veridicality.
3. Show that the following rule is admissible in K: if ⊢
2α ∨
2β,
then ⊢α or ⊢β.
4. Prove the Boolean decomposition facts about maximally consis-
tent sets stated in our completeness argument.
5. Prove that no “normal modal logic”, i.e., a set of modal formulas
extending the set of theorems of K and closed under Modus Po-
nens, Necessitation, and Substitution of formulas for proposition
letters, satisﬁes both requirements stated by H. B. Smith.

February 2, 2010
6
Computation and complexity
We have seen that validity in the minimal modal logic is not only ax-
iomatizable, but even decidable. But that still does not give us a good
sense of the true computational complexity of deciding whether given
formulas or arguments are valid. Logics may be decidable, yet wildly in-
feasible in practice. For instance, though propositional logic and modal
logic are both “decidable”, are they really in the same league? To an-
swer such questions, and many others about actual performance of al-
gorithms, computer scientists developed Complexity Theory. One can
measure the complexity of a task in terms of time (number of steps
taken) and space (size of the memory employed).45 Measures for time
and space involve some task-dependent variable: often the length of
the input formula, or the size of some given ﬁnite model. Thus, we are
measuring rates of growth, rather than speciﬁc numbers – just as in dis-
cussions of economic growth or pollution, where exponential growth is a
threatening sign that things are getting out of hand. Computationally,
exponential growth is seen as a boundary of infeasible computability –
while beyond that, undecidability: the absence of any algorithm solving
the given task, is just “thunder in the distance”.
6.1
Complexity: the merest sketch
Complexity theory measures the computation time or memory space
needed for performing some task as a function of input size (an excel-
lent text is Papadimitriou (1994)). In particular, among all decidable
problems, it distinguishes “feasible” rates of growth such as linear,
quadratic, or more generally polynomial (the complexity class called
P), versus “infeasible” ones like non-deterministic polynomial time
problems in NP, and then beyond to polynomial space (PSPACE),
45This can depend on one’s units, but there is a calibration on Turing machines.
61

February 2, 2010
62 / Modal Logic for Open Minds
exponential time (EXPTIME), and ever higher up:
P
NP
PSPACE
EXPTIME
· · ·
Undecidable
To get some feeling for natural tasks calibrated in this way:
(a) sorting numbers by magnitude, or ﬁnding a path from some node
of a graph to another “goal node”, takes quadratic time,
(b) parsing a sentence grammatically takes cubic time,
(c) solving a Traveling Salesman problem is in NP, while
(d) ﬁnding a winning strategy in many parlour games is in PSPACE.
Some of these classes become clearer through their connections with
logical tasks you already understand. There are many further classes
in the dotted area. For instance, the large decidable “Guarded Frag-
ment” of ﬁrst-order logic to be discussed later in Chapter 7 has doubly
exponential complexity 2EXPTIME: it may take on the order of 22|ϕ|
steps to decide whether a guarded formula ϕ has a model.46
Making these notions precise is a bit tedious, and often puts people
oﬀby its accidental details of the workings of Turing machines or other
devices. We will stick with this basic outline here, and rely on the
reader’s intuitive understanding in the discussion to follow.
Here are a few quick theoretical observations. One reason why time-
measures interleave with space-measures is this. In P-time steps, you
can only visit polynomially many memory locations: and so P (and
even NP) is contained in polynomial space. Conversely, with polyno-
mially many memory locations, you can still revisit them, using es-
sentially more time-steps. But there is an exponential upper limit, as
repeating exactly the same trajectories makes no sense. This explains
the inclusion of PSPACE in EXPTIME. A less obvious result is Sav-
itch’s Theorem stating that PSPACE = NPSPACE, where “N ” refers
to the action of a non-deterministic algorithm that is allowed guesses.
The most famous open problem in the ﬁeld is whether P = NP, or in
later terms: whether model-checking and satisﬁability for propositional
logic have the same complexity. Most people expect the answer to be
negative, but “P = NP” has resisted solution since the 1970s.
Finally, inside complexity classes such as P, PSPACE, there may
be further ﬁne-structure. Some problems sit at the upper end, and
are complete for the class. That is, every other problem in the class
is polynomial-time reducible to them. For instance, the satisﬁability
problem for propositional logic is NP-complete: it is the universally
46Here, |·| is a widespread notation for input size. E.g., |ϕ| = length(ϕ), |M| is
the size of the model M, etc.

Computation and complexity / 63
February 2, 2010
hardest task of its kind, and likewise, model-checking for propositional
formulas is complete for the class P.
6.2
Complexity proﬁle of a logic
To really understand how a logical system works, it helps to check the
complexity for all the basic tasks that it tends to be used for:
Deﬁnition 6.2.1 (Satisﬁability). Determining validity, or equivalently,
testing for satisﬁability of given formulas, is answering the question:
“Given a formula ϕ, determine whether ϕ has a model”.
But there are other, equally important tasks for a logic. Here is one:
Deﬁnition 6.2.2 (Model-checking). Model-checking, or testing for
truth of formulas in given models, is answering the question: “Given
a formula ϕ and a ﬁnite model M, s, check whether M, s |= ϕ”.47
Often the working of a semantic truth deﬁnition seems “obvious”,
and students have no problems determining truth values in simple dia-
grams. The model-checking issue shows the interesting issues of “speed
of understanding” behind this apparently simple practice.
Here is a third key task for a logical system, related to our discussion
of invariance and expressive power:
Deﬁnition 6.2.3 (Model equivalence). Model comparison, or testing
for equivalence of given models, is answering the question: “Given two
ﬁnite models M, s, N, t, check if they satisfy the same formulas.”
Consider the “complexity proﬁles” for two well-known classical logics
around modal logic. Again we suppress some details to keep you alert.
The entries in the following list mean that the problems have a solution
algorithm inside the indicated class (an upper bound), and there is no
solution method in a lower class (the given class is also a lower bound):
Theorem 9. The complexity proﬁles of propositional and ﬁrst-order
logic are as listed in the following table:
Model-Checking
Satisﬁability
Model Comparison
Propositional logic
linear time (P)
NP
linear time (P)
First-order logic
PSPACE
undecidable
NP
Proof. We merely give a few hints why all this is the case – in particular,
without worrying about lower bounds backing up our upper bounds.
First consider the proﬁle of propositional logic. (a) Model-checking is
in P. Given a ﬁxed valuation, and an arbitrary formula ϕ, the task
47Model-checking also makes sense in suitably well-behaved inﬁnite models.

February 2, 2010
64 / Modal Logic for Open Minds
of ﬁnding the truth value takes time polynomial in the size of ϕ. Just
compute truth values for sub-formulas, working upwards in the syntac-
tic construction tree of ϕ, and note that the number of sub-formulas
is the length of ϕ (disregarding brackets). So the task just takes lin-
ear time, no higher polynomial degree is needed. (b) Satisﬁability is in
NP. Given any propositional formula ϕ, testing if it has a model takes
non-deterministic polynomial time: we ﬁrst guess some valuation (this
is one non-deterministic step for the “N ”), then compute a truth value
t in polynomial time, as indicated before. This may require running
through all lines of a truth table, so being in NP has a vague odour
of exponential time, even though NP is lower in the complexity hier-
archy.48 (c) Model equivalence is in linear time (and hence in P) since
two valuations satisfy the same formulas if they are the same, and this
can be checked just running along the values for each proposition letter.
For the full ﬁrst-order language these tasks work out as follows.
Model-checking is in P if we ﬁx the formula, and let the model size
|M|= n vary. Then we can write an obvious evaluation program whose
iteration loops correspond to quantiﬁers: say, two nested loops in a
checker for ∀x∃yRxy. We just measure the running time, which is n2
for ∀x∃yRxy. If we also give the formula as an argument, however, we
need a program which analyzes both the formula of quantiﬁer depth k
and the model of size n, and the above measure would give EXPTIME:
nk steps. But we can do better by being more careful about memory
use, and show that this veriﬁcation only requires PSPACE in n + k.
Satisﬁability is undecidable, of course: this is the well-known “undecid-
ability of ﬁrst-order logic” – though things are sometimes much better
with fragments of the full language, as we will see in Chapter 7. Finally,
as we have stated in Chapter 3, model equivalence in ﬁrst-order logic
amounts to the existence of an isomorphism between the given ﬁnite
models. This “graph isomorphism problem” is at most in NP, but its
precise complexity has not yet been determined.49
6.3
The complexity proﬁle of basic modal logic
Where does the basic modal language ﬁt? Its model-checking problem,
i.e., our best performance using the truth deﬁnition of Chapter 2, turns
out to be eﬃcient, and fast. While ﬁrst-order model-checking requires a
complete search through the whole model, repeated with every quanti-
ﬁer iteration and hence generating exponential growth, there are much
faster modal algorithms. Also, close-reading the above decidability ar-
48Incidentally, validity is then in co-NP: the complement of this complexity class.
49For details of all these assertions, read B¨orger et al. (1997).

Computation and complexity / 65
February 2, 2010
gument tells us where to locate satisﬁability. Finally, the third basic
task, testing for modal equivalence, or equivalently, for the existence of
a bisimulation, has turned out relatively eﬃcient, too:
Fact. The complexity proﬁle for the minimal modal logic is as follows:
Model-Checking
Satisﬁability
Model Comparison
P
PSPACE
P
Proof. (a) Model-checking. The best modal model-checking algorithm
takes time steps of order length(ϕ) · size(M)2. Consider any modal
formula ϕ of length m and ﬁnite model M of size n. Compute the truth
values of all ϕ’s sub-formulas, bottom-up, in all worlds of the model.
Note that there are at most m sub-formulas, each uniquely marked by
operators or proposition letters occurring in ϕ. For each sub-formula,
this takes one pass through the model: n steps to compute its truth
value, and then record it – in all the worlds of M. Moreover, the number
of steps at each world is bounded: we compute a truth value for
(a) atoms (1-step look-up), (b) a Boolean operator (ﬁxed step size), or
(c)
3ψ with ψj truth values already available in each world.
The latter subroutine takes at worst n steps, searching through all
successors of the current world. Adding up the number of rounds and
their maximal cost, we get the stated bound:
m · (n · n)
The reader may ﬁnd it of interest to see just how this argument diﬀers
from model-checking for ﬁrst-order logic, and why a similar algorithm
does not work there.50 51
(b) For satisﬁability, the crux (due to Fisher & Ladner in the 1970s)
is that our proof of the ﬁnite model property need not display a model
for the given formula. One can check for the existence of such a model
branch by branch, erasing “work space”, so that we can make do with
polynomial space. Our ﬁrst “model selection argument” in Chapter 4
50Vardi proved this relevant result: ﬁnite variable fragments of ﬁrst-order logic
with a ﬁxed number of variables have a PTIME model-checking problem.
51A more precise look at our argument reveals an extra time requirement. To feed
the model M to the algorithm, we think of it as a list of worlds (objects) plus the
accessibility relation, which may contain at most n2 items. Searching for successors
of a given world requires inspection of this list, which would drive up the above
estimate to n2 steps, but not the polynomial-time outcome. Thus, these estimates
depend on how we represent the computation and the data. But details of this do
not matter up to constant factors in the polynomial. Of course, in practice, this is
essential – and there is often a long way to eﬃcient programs that work.

February 2, 2010
66 / Modal Logic for Open Minds
gives a prima facie EXPTIME bound: the model produced was ex-
ponential in the size of the given formula ϕ: “length-to-the-power-of-
depth”. In general this is unavoidable. There are modal formulas whose
smallest models are exponential in just this sense. But we do not need
to construct the whole model to check if one exists. One runs an algo-
rithm that checks depth-ﬁrst if the right branchings can be constructed,
keeping track of all sub-formulas to be made true at each point (as in
programming, say, with Prolog). This takes only polynomial space.
A way of seeing this is in terms of our earlier semantic tableaux,
ﬁnite syntactic trees whose nodes record requirements to be met by a
verifying model. These requirements are sets of sub-formulas of ϕ, with
truth values indicated: of the order of |ϕ|. As we go down the tree, the
modal depth of these sets decreases steadily, and so the maximal length
of a branch is also of order |ϕ|. Thus, on each branch the maximum
storage required is of size |ϕ|·|ϕ|.52 Now, we need no more. Say, after we
checked the left-most branch, making sure its ﬁnal requirements (depth
0) are consistent (a simple test), we backtrack, free the space below the
backtracking point, go down the next branch, etcetera.
(c) Model comparison. We saw in Chapter 3 that ﬁnite models M, s
and N, t satisfy the same modal formulas iﬀthere is a bisimulation be-
tween them. Now, ﬁnding a bisimulation is a simple process of starting
“from above”, ﬁrst putting all links between all worlds in the two mod-
els, and then successively eliminating all links that could never make
it into any bisimulation.53 We just sketch the algorithmic procedure,
which is easy to visualize. Start with the universal relation that holds
between any two points in the two models. This has at most n2 pairs,
where n is the maximum of the sizes of M and N:
. In step 1, remove all pairs that disagree on atomic propositions.
. In step k + 1 of the procedure, the previous stage has left us with
a relation Ek. Now, remove all pairs (x, y) from the latter where x
has some successor z in M such that for no successor u of y in N,
the pair (z, u) belongs to Ek, and vice versa for some successor of y
without an Ek-counterpart in M.
This procedure must stabilize at some stage: that is, Ek+1 = Ek. If this
happens with the initial link s −t still in, then we have the required
52We do need some space for pointers keeping track of where we are in the re-
cursion, so that we know where to backtrack, once some branch has been checked.
But all this takes just linear space.
53For the cognoscenti, this is the computation of a bisimulation as a greatest
ﬁxed-point of some monotone operator on relations between ﬁnite models M, s and
N, t. Cf. the lucid textbook Huth and Ryan (2000), or also our Chapter 22.

Computation and complexity / 67
February 2, 2010
bisimulation. Otherwise, there is none. Both assertions are easy to see:
throughout, we have only thrown away pairs which would be winning
for the player Spoiler in some k-round bisimulation game, as in Chapter
3. The amount of time in this procedure is polynomial.54
Some clariﬁcation behind all this: once again, analysis of given al-
gorithms ﬁnds an upper bound on the complexity of the logical task.
To show a lower bound, one must prove that all algorithms solving the
task have at least this complexity. This may be much harder. One com-
mon method is this. There exists a set of “calibration problems” whose
precise complexity has been determined. One can now reduce some
such known problem, say in NP or PSPACE, to satisﬁability in modal
logic, with a reduction in polynomial time, and get a lower bound. This
reduction method works for many problems with many logics.
6.4
Stronger modal logics and richer languages
We can also take these same issues to deductively stronger modal logics,
such as S4 or S5. Satisﬁability in S4 sides with K: it is in PSPACE-
complete – but S5 sides with propositional logic:
Fact. The satisﬁability problem for S5 is NP-complete.
Proof. We just state some relevant facts:
(a) Every model for S5 has a bisimulation with a model where ac-
cessibility is the universal relation W × W on the worlds W,
(b) A formula satisﬁable on S5-models, has a model of size linear in
its length: much smaller than for basic modal logic.
Here is a well-known example of a subtlety in complexity for modal
logics. What about the system “2-S5” with two modalities, and two
accessibility relations? This occurs in epistemic logic with two agents
(see Chapter 12). Models now involve two equivalence relations, and
satisﬁability jumps back to PSPACE: social life is more complicated
than being alone! With 3 or more agents, complexity remains the same.
Another main point is that complexity results are aﬀected by the ex-
pressive power of the language. In Chapters 7 and 10, we deﬁne richer
modal systems, and this move may drive up complexity even of the
minimal modal logic of the new languages. For instance, adding a uni-
versal modality (with universal access to each world in a model) can
make PSPACE logics EXPTIME, and sometimes even undecidable, by
54Alberto Policriti has given a very fast implementation in time n · log(n).

February 2, 2010
68 / Modal Logic for Open Minds
giving encodings for undecidable benchmark problems, such as simulat-
ing computation of Turing machines, or geometrical “Tiling Problems”
(cf. Chapter 24). For our purposes, we end with one general lesson:
“The Balance”: expressive power versus computational eﬀort
In logic just as in physics, there is a “Golden Rule” of design: what
you gain in one desirable dimension, you lose in another. In particular,
high expressive power of a system means high complexity in terms of
the three basic logical tasks hat we have outlined. And weakness may
be strength. Thus, ﬁrst-order logic itself is expressively weaker than
second-order logic, the natural medium for deﬁning many mathemat-
ical notions. But its poverty has a striking reward, viz. the recursive
enumerability of valid consequence, and hence the Completeness The-
orem, as well as powerful model-theoretic existence properties such as
the Compactness Theorem.55 A major methodological issue in logic is
then to strike a Balance between expressive power and computational
complexity. Many modal logics are good compromises on this road.
A ﬁnal practical comment. Complexity in the sense of this chapter
is a worst-case measure. It does not predict average behaviour. Many
tasks that are exponential in principle run happily in real time. Prac-
tical groups worldwide (for some examples, see http://www.aiml.net
and http://www.hylo.loria.fr) work with a mix of computational
experimentation plus theoretical analysis to see how given modal logics
actually behave on large classes of input problems.
55All these good properties fail for the much more expressive second-order logic.

Computation and complexity / 69
February 2, 2010
Exercises Chapter 6
1. Evaluate modal formulas ϕ as follows. Start in a ﬁnite model
M, s, and ﬁnd all subformulas
2ψ of ϕ whose truth value needs
to be determined. For these, run through all R-successors of s,
and repeat the process for ψ.
(a) Explain how this process may take exponential time in the
size of M and ϕ.
(b) Analyze how this algorithm diﬀers from the one described
in our text.
(c) Why does the algorithm in our text not work for arbitrary
ﬁrst-order formulas?
2. The details of computing bisimulation:
(a) Give an example of how the algorithm for testing bisimula-
tion works. Take two concrete models and show how succes-
sive cross-links between worlds disappear.
(b) Analyze in detail how much (P-)time is required by the given
bisimulation algorithm as a function of the sizes of the given
ﬁnite models M and N (i.e., their number of worlds).
3. A celebrity is someone who does not know anyone else in a group,
and who is known by everyone else. Give a procedure that checks
whether a given a group of n persons contains a celebrity. What
is the complexity of this problem, in terms of n?

February 2, 2010

February 2, 2010
Part II
Basic Theory

February 2, 2010

/ 73
February 2, 2010
After the introduction of the basic modal notions in Part I, we now
continue with the theoretical study of a number of phenomena be-
hind the behaviour that we have observed. Many of these have to do
with understanding the systematic connections between modal logic
and classical logics, mainly ﬁrst-order, but also higher-order. In the
next chapters, we strike out from the basic modal logic in a number
of ways. First, there is a dimension of expressive power, i.e., what our
formalism can say about the graph models that have been our exclu-
sive semantic interest so far. We show in Chapter 7 how the modal
language sits in a larger hierarchy of classical languages, viewing it as
a way of providing “ﬁne-structure” to classical model theory. Indepen-
dently, there is a dimension of deductive power, and in Chapter 8 we
look at the landscape of “modal logics” that extend the minimal modal
logic while staying within its language. This landscape has been the
usual focus in modal logic, but by now, other themes have become just
as prominent – and thus our hike will be short. These logical systems
may be viewed as special theories of restricted classes of models, and in
Chapter 9, we focus on this connection per se using “correspondence”
techniques. Beyond expressive and deductive power, there is a less well-
deﬁned, but real third dimension in current research, of changing the
models one is dealing with, and this descriptive power is the topic of
Chapter 10. Finally, Chapter 11 is about modal predicate logic mixing
modality with object predicates and quantiﬁers: the grand old lady of
a ﬁeld which has largely “gone propositional” in recent decades.

February 2, 2010

February 2, 2010
7
Translation and varieties of
expressive power
7.1
The classical standard translation
The clear analogy between the modal box
2 and the universal quantiﬁer
∀, and the modal diamond
3 and the existential quantiﬁer ∃can be
made precise via an eﬀective translation from modal formulas into ﬁrst-
order ones, which formalizes the modal truth conditions:
Deﬁnition 7.1.1 (Standard translation). Consider a ﬁrst-order lan-
guage over our graph models M = (W, R, V ) with one binary predi-
cate letter R for the accessibility relation, and unary predicate letters
P, Q, . . . matching proposition letters p, q, . . .. Let variables x, y, z, . . .
range over worlds. The standard translation ST(ϕ) of a modal formula
ϕ is a ﬁrst-order formula with one free variable x deﬁned inductively:
ST(p) = Px
ST(¬ϕ) = ¬ST(ϕ)
ST(ϕ ∧ψ) = ST(ϕ) ∧ST(ψ)
ST(3ϕ) = ∃y(Rxy ∧[y/x]ST(ϕ) 56
where y is a new variable
ST(2ϕ) = ∀y(Rxy →[y/x]ST(ϕ)
where y is a new variable
For instance,
(a)
3p says that ∃y(Rxy ∧Py): there exists a successor world of x
where p holds,
(b)
23(p ∨q) says that ∀y(Rxy →∃z(Ryz ∧(Pz ∨Qz))).
What should be obvious from this deﬁnition is the following equiva-
lence, viewing possible worlds models as semantic structures that serve
56Here [y/x]ϕ is the result of substituting y for all free occurrences of variable
x in the formula ϕ. By choosing a new variable, y is “freely substitutable” in this
way without clashes of bound variables. For a more sophisticated form of variable
management, see the 2-variable analysis presented below.
75

February 2, 2010
76 / Modal Logic for Open Minds
both languages, modal and ﬁrst-order, with the obvious assignment
function “x := w” mapping the variable x to the world w:
Lemma (Switch Lemma).
M, w |= ϕ
iﬀ
M |= ST(ϕ)[x := w],
for all modal formulas ϕ.
The assertion on the right is read according to the truth deﬁnition
for ﬁrst-order logic. In the early days, this Lemma was ritually proved
by induction on ϕ – but all you really need is an ability to perform a
Gestalt Switch between modal formulas and ﬁrst-order formalizations
of their semantic truth conditions on the same model M.
Of course, the same translation, and its accompanying perspective
switch, works for other modal languages. For instance, we can just as
well have many binary accessibility relations Ri for a language with
indexed modalities [i], ⟨i⟩. More examples will come later.
7.2
The modal fragment
The standard translation takes the modal language into a part of a full
ﬁrst-order language:
Deﬁnition 7.2.1 (Modal fragment). The modal fragment of ﬁrst-order
logic is the set {ST(ϕ) | ϕ is a basic modal formula}. We will call for-
mulas in the modal fragment “modal formulas” when usage is clear
from the context. Sometimes this even extends to ﬁrst-order formulas
that are logically equivalent to formulas of the form ST(ϕ).
Here is the more general picture:57
~


'
&
$
%


ML
-
FOL
The embedding provided by the translation ST is proper. For in-
stance, viewed as a property of a world x, the following analogous
ﬁrst-order formula is not in the modal fragment, and more strongly, it
is not even semantically equivalent to any formula in this fragment:
57The shaded circle is the “modal fragment” in our narrower sense, as just the set
of translations of modal formulas. The wider circle indicates the ﬁrst-order formulas
that are equivalent to such translations.

Translation and varieties of expressive power / 77
February 2, 2010
∃y(Rxy ∧¬Ryx ∧Py)
there exists a proper successor world of x
where p holds.
Fact. Proper succession is modally undeﬁnable.
Proof. It suﬃces to observe that this property of graph models is not
invariant for the semantic bisimulations of Chapter 3. The dark world to
the left in the 2-world model below has the above succession property,
but it fails in its bisimulation contraction to a reﬂexive 1-loop:
p •
% ◦p
E
has a bisimulation with
p • h
The modal fragment is characterized completely by this invariance:
Theorem 10 (Modal Invariance Theorem). The following assertions
are equivalent for ﬁrst-order formulas ϕ = ϕ(x) with one free variable:
(a) ϕ is equivalent to a modal formula,
(b) ϕ is invariant for bisimulation.
A proof can be found in Chapter 25. But what you see already
is that the modal language may be viewed in a natural manner as
the bisimulation-invariant fragment of ﬁrst-order logic, deﬁning special
properties of models that satisfy a much stricter semantic “transfer”
criterion than just invariance under isomorphism.
7.3
Discussion: what good is a translation?
Translations between logical languages raise some general issues of re-
duction between formal systems, and modal logic provides a nice con-
crete focus. Of course, in some circles, “reducibility” via translation is
a dreaded “R-word”, but let’s discuss things without drama.
Balance of expressive power and complexity Recall an earlier
theme. The modal language “strikes a good balance”. It is reasonably
expressive: it can formulate natural properties of graph models, and
valid reasoning patterns with these – and yet, it is so much weaker
than full ﬁrst-order logic that it escapes “Church’s Curse”: validity in
basic modal logic is decidable, as we have seen. This combination of
features is a role model for other fragments of ﬁrst-order logic.
Uses and non-uses of a translation ST may be used directly to
show that modal logic inherits the following fundamental properties of
full ﬁrst-order logic – even though these things were proved separately
in earlier days when people’s eyes were still clouded:

February 2, 2010
78 / Modal Logic for Open Minds
Theorem 11 (Compactness Theorem). Every ﬁnitely satisﬁable set of
modal formulas has a model itself.
Theorem 12 (L¨owenheim-Skolem Theorem). Every satisﬁable modal
formula has a countable model.
But we already proved something much stronger than the latter the-
orem, namely, the Finite Model Property of modal logic, which has no
counterpart for ﬁrst-order logic. Its proof was not automatic, involving
a deeper analysis of what makes the modal language special.
Moreover, more complicated properties of ﬁrst-order logic need not
transfer in the same easy manner. Despite a popular prejudice, frag-
ments do not inherit all good properties of the bigger language auto-
matically! Consider the following important ﬁrst-order result:
Theorem 13 (Craig’s Interpolation Theorem). If ϕ |= ψ, then there
exists an “interpolant” α with ϕ |= α |= ψ such that every non-logical
symbol in α occurs in both ϕ and ψ.
In particular, if ϕ, ψ are modal formulas, Craig’s theorem says that
they must have a ﬁrst-order interpolant α. But what guarantees that
this α itself is modal? This is not clear at all.58 As it happens, the modal
fragment has interpolation, and in fact, it inherits all nice properties
of ﬁrst-order logic that you get in a ﬁrst advanced course. But this
requires honest work via modal arguments.59
Tandem approach Does the translation ST mean that we can forget
the modal language, and just do ﬁrst-order logic? Several arguments
plead against this:
. The translation encodes just one semantics for modalities (for in-
stance, the proof-theoretic account of modality in Chapter 21 is quite
diﬀerent). So, the modal language still has an independent status.
. Thinking in the opposite direction: ﬁnding useful fragments of a
larger language with a nice (variable-free) notation is a valuable art.
Therefore, we advocate using both viewpoints in tandem. Indeed, be-
ing able to look at the same topic in diﬀerent ways is a typical abstract
skill that one learns in academic life, transcending petty quarrels.
58You might want to reﬂect on what it is about the form of, say, the L¨owenheim-
Skolem Theorem versus the Craig’s Interpolation theorem that makes the one, but
not the other, transfer easily to modal logic.
59This harmony is still not understood precisely, though bisimulation seems an
important clue. In fact, many natural-looking fragments of ﬁrst-order logic lack
interpolation, and this scarcity has been analyzed and explained in Balder ten Cate’s
dissertation Model Theory for Extended Modal Languages (ten Cate, 2005).

Translation and varieties of expressive power / 79
February 2, 2010
7.4
Extended modal languages
The ﬁrst-order setting suggests a move to richer modal languages. In
many applications, the basic modal language has the annoying feature
of “being just a bit oﬀfor the job”, and additional expressive power
would make our life a lot easier. While some logicians feel this is “cheat-
ing”, since one should only walk in the wooden shoes of our modal
forefathers, the reality of modal logic today is “language design”. Here
are three examples of ﬁrst-order deﬁnable additions.
Deﬁnition 7.4.1 (Universal modality). The universal modality reads
as follows: M, s |= Uϕ iﬀM, t |= ϕ for all worlds t in the model,
accessible or not. The dual existential modality Eϕ is deﬁned as ¬U¬ϕ.
Universal and existential modalities are often used when we want
to deﬁne global notions, not tied to any speciﬁc world. An example
is global entailment between modal propositions ϕ, ψ in our model, in
the form U(ϕ →ψ).60 One immediate question is now if such additions
disrupt the properties that we have so carefully investigated for the
basic modal language. Here are a few facts about “MLU ”, basic modal
logic extended with the universal modality. You may be able to ﬁgure
out a few, just by looking at the following statements:
(a) The ST-translation extends, with a clause ST(Uϕ) = ∀xST(ϕ).
(b) There is a characteristic notion of bisimulation for MLU, where
we either add zigzag clauses for going to arbitrary new worlds, or
equivalently, we add the requirement that the domain and range
of an MLU -bisimulation between two models M and N be the
whole universes of these models.
(c) Validity in MLU is decidable, though the computational com-
plexity goes up from the PSPACE-completeness of basic modal
logic to EXPTIME-completeness.
(d) There is a simple axiomatization for MLU which has the minimal
modal logic for
2,
3, modal S5 for U, E, plus connection axioms
Uϕ →
2ϕ.61
Many further new operators exist, like this “other-worldly” one:
Deﬁnition 7.4.2 (Modal diﬀerence logic). “Diﬀerence logic” is a
slightly more ambitious extension of the basic modal language, which
has been proposed in temporal logics for specifying process behaviour:
M, w |= Dϕ iﬀthere exists at least one v ̸= w with M, v |= ϕ.
60It may look as if this addition takes us all the way up to ﬁrst-order logic – but
our modal language still lacks lots of expressive ﬁrst-order features.
61The axioms for the modal logic S5 are presented and discussed in Chapter 8.

February 2, 2010
80 / Modal Logic for Open Minds
The existential modality is now deﬁnable as Eϕ := Dϕ ∨ϕ, and
then the following formula expresses ϕ’s truth “in a unique world”:
E(ϕ ∧¬Dϕ).62 This extended language has a simple extended notion
of bisimulation whose formulation we leave to the reader. Also, the
validities of the system can be axiomatized completely on top of the
minimal modal logic K. For instance, the symmetry of the inequality
relation ̸= shows up in the axiom
D¬D¬ϕ →ϕ.
Validity is still decidable, but the complexity goes up!
Other kinds of extension of the basic modal language occur in tem-
poral logic. In this setting, we read “worlds” as points in time, ordered
by an accessibility relation of “earlier than”:
Deﬁnition 7.4.3 (Temporal “Until” or “Since”). M, t |= UNTIL ϕψ
holds iﬀ∃t′ > t : M, t′ |= ϕ ∧∀t′′((t < t′′ ∧t′′ < t′) →M, t′′ |= ψ):
t
t′′
t′
•
· · ·
/ •
/
· · ·
◦
ψ
ϕ
Such expressive extensions are a good test for the viability of our
modal theory (and your understanding of it): they all generalize bisim-
ulation, completeness, and other earlier themes.
Hybrid logic A systematic program of extending the basic modal lan-
guage as required by speciﬁc applications has been long in the mak-
ing. In retrospect, expressive extensions occur with Arthur Prior in the
1950s, who added what are now called nominals, that is, proposition
letters a that denote one particular time-point, or world in a model,
instead of the usual p that can denote any set of worlds.63 Nominals,
and the above universal modality U inspired the extended modal logic
program of the “Sophia School”, an innovative group of Bulgarian lo-
gicians in the 1980s. In the 1990s, this approach led to so-called hybrid
logic, a family of ﬁrst-order extensions of the basic modal language.64
Basic hybrid languages have nominals, the universal modality, and
“reset modalities” @aϕ saying that ϕ is true at the world denoted by a.
62Alternative viewpoint: diﬀerence logic may be viewed as a “bi-modal logic” of
one new relation ̸=, in addition to R, which has some special frame properties.
63In temporal logic, stronger and stronger modalities were added in the 1970s –
up to a point where the “modal” notation had become as expressive as ﬁrst-order
logic itself. This was achieved by “hiding variables” in ways that ultimately went
back to a famous paper by Quine: “Variables Explained Away”, in Quine (1966).
64The chapter on “Hybrid Logic” by Areces and ten Cate in Blackburn et al.
(2006) surveys this lively area in depth.

Translation and varieties of expressive power / 81
February 2, 2010
Stronger expressive resources occur as well, in particular the “binder”
↓x · ϕ saying that ϕ holds when we let the propositional variable x
denote the current world. Thus, the formula ↓x ·
3x says that the
current world w is accessible to itself: Rww.65 The full hybrid language
sketched so far has the following inductive syntax:
p | a | x | ¬ϕ | ϕ ∧ψ |
3ϕ | @aϕ | @xϕ | ↓x · ϕ
The semantics involves modal models M as usual, plus an assign-
ment function g mapping propositional variables x to worlds g(x). One
then deﬁnes when a hybrid formula is true at a world given an assign-
ment. We display a few truth conditions that give the idea:
M, g, w |= a
iﬀ
V (a) = {w}
M, g, w |= x
iﬀ
w = g(x)
M, g, w |=
3ϕ
iﬀ
there is a v with Rwv and M, g, v |= ϕ
M, g, w |= @aϕ
iﬀ
M, g, v |= ϕ where V (a) = {v}
M, g, w |= @xϕ
iﬀ
M, g, g(x) |= ϕ
M, g, w |= ↓x · ϕ
iﬀ
M, g[x := w], w |= ϕ
This widely used modal language can still be translated into ﬁrst-
order logic. The extended translation takes any hybrid formula ϕ and
variable x, and writes an equivalent ﬁrst-order formula ST x(ϕ) with
free variable x. The reader will ﬁnd it instructive to look for the right
inductive clauses – but to set you on your path, here are two:
ST x(@yϕ) = ST y(ϕ)
ST x(↓y · ϕ) = [y/x]ST x(ϕ)
The fragment of ﬁrst-order logic obtained in this way is clearly stronger
than the basic modal one. Which precise language is it? We will return
to that question in Section 7.6.
7.5
Fine-structure of ﬁrst-order logic: counting
variables, and guards
Given this plethora of extended modal languages, what is the general
situation? The preceding examples were fragments of ﬁrst-order logic
under suitable extensions of the standard translation ST. What sort of
fragment are “modal” languages? One line runs as follows, using the
number of variables needed as a measure of ﬁne-structure:
Fact. Each basic modal formula can be translated into an equivalent
ﬁrst-order formula using only two variables, free or bound.
65Simple as it is, this ﬁrst-order property is not deﬁnable in the modal base
language: just unravel a reﬂexive point to a bisimilar inﬁnite irreﬂexive tree.

February 2, 2010
82 / Modal Logic for Open Minds
Proof. The following example will show the general trick. To translate
the modal formula
23p, ST might take a ﬁrst-order formula with fresh
bound variables for each modality:
∀y(Rxy →∃z(Ryz ∧Pz))
but you can also say this equivalently by “recycling” the two variables
x, y as follows:
∀y(Rxy →∃x(Rxz ∧Px))
It is easy to generalize this to a systematic 2-variable translation that
works for any modal formula.
More systematically, there is a ﬁne-structure hierarchy of ﬁnite-
variable fragments FO1, FO2, FO3, . . . of the full ﬁrst-order language.
The basic modal language uses only 2 variables, a temporal language
with UNTIL uses 3 variables, as is easy to check in the same style as
above by recycling variables.66 It has indeed been proposed that the
right way of thinking about modal languages is as variable-free no-
tations for ﬁnite-variable fragments. But this ﬁne-structure hierarchy
does not explain the decidability of modal languages.
Fact. The 3-variable fragment FO3 is undecidable.
Proof. The reason is that the complete algebra of binary relations can
be formulated in this language, including the Boolean operations in a
format like this (with just 2 variables):
(R ∪S)(x, y) ↔Rxz ∨Szy
but the crucial operation of composition essentially involves 3 variables,
since we need to explicitly state the existence of an intermediate point
between the two arguments:
(R; S)(x, y) ↔∃x(Rxz ∧Szy).
In logic, this relational algebra is known to be undecidable.67
So, here is another line of analysis. Consider what is clearly the
typical clause in the ST translation:
3p goes to the bounded or “guarded” quantiﬁer ∃y(Rxy ∧Py).
These “guards” turn out to be a more revealing form of ﬁne-
structure, regulating which local part of the model the “modal” quanti-
ﬁers range over – and this gives the following orthogonal ﬁne-structure
for the full language of ﬁrst-order logic:
66Still more complex notions, like suprema in orderings, use 4 variables.
67For more details, you can consult, e.g., Monk (1976).

Translation and varieties of expressive power / 83
February 2, 2010
 
 
 
 
 
 
      1
2
3
variable levels
 
 
 
 
 
 
A
A
A
A
A
A
E
E
E
E
E
E












      GF
quantiﬁer bounds
Generalizing this observation, here is a very strong fragment of ﬁrst-
order logic, far beyond the basic modal language, which still behaves
in our general modal style (Andr´eka et al., 1998). It balances right at
the edge between good expressive power and undecidability.
Deﬁnition 7.5.1 (Guarded Fragment). The Guarded Fragment con-
sists of all formulas generated by the following syntax rule:
atoms Px with x a tuple of variables | ¬ϕ | (ϕ∨ψ) | ∃y(G(x, y)∧ϕ(x, y))
where G(x, y) is an atom with variables from the sequences x, y oc-
curring in any order and multiplicity.
Note how we generalize the idea that modal evaluation needs to take
place at single worlds, while we also allow cumulative reference to sets
of objects x, y provided they are guarded. Note also that we do not
allow new variables z to occur in the ﬁnal guarded formula ϕ(x, y).
This fragment still has a characteristic notion of “guarded bisimula-
tion”, and moreover, its complexity stays low:
Theorem 14. The Guarded Fragment is decidable.
The proof generalizes the modal ﬁltration method of Chapter 4 to
ﬁrst-order formulas, and while not too hard, it is beyond the scope of
this introductory course. It can be shown that many extended modal
languages end up inside the Guarded Fragment under translation.
The above logics with universal and diﬀerence modalities involve
slight additions to guarded syntax. More importantly, so does the tem-
poral logic of UNTIL, which requires an slight extension, still decid-
able, to the so-called Loosely Guarded Fragment. The essential feature
in “loose guarding” is this: in UNTIL-statements of the form
∃y(x < y ∧Ay ∧∀z((x < z ∧z < y) →Bz)),
each pair of variables from {x, y, z} occurs under some guard predicate.
By contrast, the deﬁnition of relational composition was not loosely
guarded. In the crucial formula ∃z(Rxz ∧Szy), the variables x, y do
not occur together under a guard.

February 2, 2010
84 / Modal Logic for Open Minds
7.6
The cliﬀs of undecidability
So, where is the danger zone: what expressive power makes ﬁrst-order
logic drop down the cliﬀ? Syntactically, allowing arbitrary conjunc-
tions of guard atoms instead of single ones makes ﬁrst-order fragments
undecidable. For instance, one can eﬀectively reduce the satisﬁability
problem for the undecidable 3-variable fragment FO3 to satisﬁability
for a conjunctively guarded language. More generally, we will explain in
Section 7.8 below that undecidability tends to strike as soon as a ﬁrst-
order language can encode “grid structure”. And the basic “convergence
property” needed for the basic “cells” of this structure is typically one
step beyond the guarded fragment, requiring a quantiﬁcation
∀y(Rxy →∀z(Rxz →∃u(Ryu ∧Rzu)))
that lacks guard atoms for object combinations like x, u or y, z. In fact,
this convergence formula is not even loosely guarded.
Finally, here is another non-guarded statement, viz. transitivity of
the accessibility order:
∀x∀y(Rxy →∀z(Ryz →Rxz)).
This may seem strange, as modal logicians believe that this ubiqui-
tous property only makes life easier. But it is known that the complete
ﬁrst-order theory of a transitive relation is undecidable. The fact that
many modal logics over transitive models are decidable must have a
special explanation, and we will mention one below.
Bounded Fragment The transition from decidable to undecidable
fragments is also nicely illustrated by the earlier full hybrid language.
It can be shown that its translations are precisely equivalent to all
ﬁrst-order formulas in the so-called Bounded Fragment (BF), where all
quantiﬁers occur relativized to accessibility atoms:
∃y(Rxy ∧ϕ),
∀y(Rxy →ϕ).
The special quantiﬁcation pattern of BF has come up in set theory,
arithmetic, and other areas of logic.68 This diﬀers from the Guarded
Fragment in that the formula ϕ behind the quantiﬁer preﬁx may con-
tain other free variables than the x, y occurring in the atom. And this
diﬀerence is signiﬁcant. The Bounded Fragment is undecidable!
68BF can be characterized semantically as consisting, up to logical equivalence, of
the ﬁrst-order formulas invariant under taking generated submodels (i.e., sub-models
closed under R-successors). This is a special case of bisimulation invariance.

Translation and varieties of expressive power / 85
February 2, 2010
7.7
Moving up and sideways: higher-order and
ﬁxed-point languages
Classical ﬁrst-order logic can be extended in many ways. Adding quan-
tiﬁcation over sets or predicates leads to second-order logic. We will
encounter this much more expressive logic in our study of “frame cor-
respondences” for modal axioms in Chapter 9. Another important ex-
tension for mathematical and computational reasons adds ﬁxed-point
operators that form, e.g., the transitive closure of an accessibility re-
lation, or deﬁne other important notions inductively. We will see ex-
amples in many later chapters, and we will study modal logics with
ﬁxed-point operators in Chapter 22. The point to make here is this:
The behaviour of a logic is often best seen when it is put in a richer
environment – just as a good test of people’s character is to see what
happens when they suddenly get wealthy:
second-order logic
ﬁrst-order logic
LFP(FO)
guarded fragment
LFP(GF)
basic modal logic
µ-calculus
"
"
"
"
"
"
"
"
"
"
"
"
b
b
b
b
b
b
b
b
b
b
b
b
D
D
D
D




For instance, ﬁrst-order logic with added smallest and greatest ﬁxed-
point operators (“LFP(FO)”) makes a huge jump in complexity, since
it can deﬁne the natural numbers up to isomorphism, and hence encode
True Arithmetic. By contrast, modal ﬁxed-point logics (an example is
the modal µ-calculus (cf. the chapter by Bradﬁeld & Stirling in Black-
burn et al. (2006), cf. also Chapter 22) remain decidable!69
7.8
Another source of complexity: combination of
modal logics
In addition to increasing expressive power by strengthening the basic
modalities, one other striking modern direction is combination of basic
modalities. This happens in modal logics for modality and time, or for
69Even the complete Guarded Fragment with added ﬁxed-point operators
(“LFP(GF)”) remains decidable, as has been shown by Erich Graedel.

February 2, 2010
86 / Modal Logic for Open Minds
knowledge and action of agents in Part III of these lectures. Here we
only note a few issues, as background to our discussion of decidability.
Technical details will be found in Chapter 24 in Part IV.
When both components of a combined logic are simple, a “Divide-
and-Conquer” strategy might say that the whole system will be simple,
too. But this crucially depends on a third “argument”: the manner
of composition. A telling discovery in the 1990s has been that modal
system combination can lead to high complexity, depending on how we
let the separate modalities “interact”. Here is a typical illustration:
Theorem 15. The minimal modal logic of two modalities [1], [2] sat-
isfying the axiom [1][2]ϕ →[2][1]ϕ, in a language with the added uni-
versal modality U, is undecidable.
Instead of a proof, we sketch the background. What the axiom says
is easily seen by frame correspondence (see Chapter 9 for deﬁnitions). It
forces frames (W, R) for the logic to look like a grid structure satisfying
a ﬁrst-order convergence property, similar to one we already mentioned:
∀xyz : (xR1y ∧yR2z) →∃u : (xR2u ∧uR1z).
The most typical example for this is the structure N × N, where we
take two relations: NORTH moving one step from (i, j) to (i, j +1) and
EAST moving from (i, j) to (i + 1, j):
...
(0, 1)
/ (1, 1)
(0, 0)
/
O
(1, 0)
O
· · ·
Now, as we will show in Chapter 24, on such grid models, our simple
bi-modal language can express geometrical Tiling Problems that are
undecidable, sometimes even of very high second-order complexity.
Perhaps the simplest way of understanding this is by noting that
successive horizontal rows of an inﬁnite grid can encode successive tape
conﬁgurations of Turing machines on any input, while vertical moves
mimic computation steps. And as it turns out, the bi-modal language
is strong enough to express these two directions.70
70Grid patterns also occur naturally with logics of agency (see Chapters 14, 17).
We will see that the interchange axiom K[a]ϕ →[a]Kϕ for knowledge and action,
which expresses a seemingly natural harmless feature of “Perfect Recall”, can lead
to systems with very high complexity. In fact, the combined modal logic of agents
with perfect memory is as rich as some standard mathematical theories.

Translation and varieties of expressive power / 87
February 2, 2010
Trees versus grids This analysis gives us an appealing general view-
point on the “danger zone” described in Section 7.6, which is often
cited in the modal literature.
Modal logics of trees are harmless, modal logics of grids are dangerous!
•
O
O
O
O
O
O
O
O
O
ooooooooo
•
?
?
?
?

•
?
?
?
?

•
•
•
•
•
?
?
?
?

•
?
?
?
?

•
?
?
?
?

•
•
•
Tree
Grid
Once again, this shows how the Guarded Fragment manages to stay
decidable. Its formulas deﬁne tree structure, but they typically cannot
express grid structure. In line with this syntactic fact, unlike trees, grid
structure is typically not invariant under bisimulations – as can be seen
by unraveling a grid to a tree by the methods of Chapter 3.
7.9
Conclusions
Given this lush landscape of possible logics, including a great variety
of “modal languages”, the reader may well want to step back, and
ask what made the original modal base logic so special, given that
something must “give” in its system properties when we move to all
these extensions. Topics like this are studied in Abstract Model Theory,
and in Chapter 25, we will present a few general results, including a
proof of the Modal Invariance Theorem, as well as a Lindstr¨om Theorem
explaining what makes the basic modal logic so unique.

February 2, 2010
88 / Modal Logic for Open Minds
Exercises Chapter 7
1. Here are some questions about translations:
(a) Translate the following modal formula into a ﬁrst-order one
with 2 variables x, y only (free or bound): ⟨b⟩(⟨a⟩p∧[b]⟨a⟩q).
(b) Show that this ﬁrst-order formula is not modally deﬁnable:
UNTIL pq
∃y((x < y ∧Py ∧∀z((x < z ∧z < y) →Qz))
(c) Interpret the modal language in the original Leibniz models,
saying that
2ϕ is true if ϕ is true at every world. Based on
this, give a simpler translation of the basic modal language
into a ﬁrst-order language. In which fragment do you end
up? Conclude that this version of modal logic is decidable.
(d) Let ﬁrst-order models have a family of relations Dx, y (with
y a ﬁnite sequence of variables) saying that x is independent
from the sequence of variables y. Interpret ﬁrst-order formu-
las ∃xϕ(x, y) (with x, y all the free variables of ϕ) as saying
there is some x independent from y such that ϕ holds. Show
that this ﬁrst-order logic is decidable.
2. Consider the modal logic of
3,
2 extended with the modality E:
“at some world”.
(a) Show that all formulas of this extended modal language can
be translated into the 2-variable fragment of ﬁrst-order logic.
(b) Show that Ep is not invariant for basic modal bisimulation.
(c) Deﬁne the appropriate strengthened bisimulation for this
language precisely.
(d) What is the complexity of model-checking?
(e) Show that we still cannot deﬁne the “diﬀerence modality”
in this language.
3. In temporal logic, SINCE pq is true at a point if p holds at some
earlier point, while q holds at all points in between.
(a) Translate the modal statement SINCE pq into a ﬁrst-order
formula, using a binary predicate “<” for “later than”.
(b) Show that 3 variables suﬃce for translating any formula in
a temporal language with proposition letters, Booleans, and
the UNTIL and SINCE operators into ﬁrst-order logic.
4. Consider hybrid languages extending basic modal logic:
(a) Give the ﬁrst-order translation for the full hybrid language,
and show its semantic correctness by an inductive argument.

Translation and varieties of expressive power / 89
February 2, 2010
(b) Give a converse translation from the Bounded Fragment into
the full hybrid language, and prove its completeness as well.
5. Recall the Guarded Fragment:
(a) Explain the basic idea of guarded formulas, and ﬁnd some
examples beyond those in the text.
(b) The formula Ex¬Px is not deﬁnable by a guarded formula.
How would you try to prove this?
6. Using two binary relation symbols East and North, deﬁne as much
as you can of the complete ﬁrst-order theory of the grid model
N × N. Which formulas are guarded, which ones are not?

February 2, 2010

February 2, 2010
8
Increasing deductive power: the
landscape of modal logics
In this chapter, we look at another dimension of modal logic. We do
not increase the expressive strength of our basic language – but we now
extend its deductive strength, by means of further axioms on top of
the minimal logic. This is a diﬀerence with ﬁrst-order logic, where just
one system of validities emerged.71 Various “modal logics” represent
natural clusters of axioms that people have found plausible for certain
readings of the modalities
2,
3. And of course, there is also the joy of
pure exploration of a landscape. Our presentation is discursive, as we
just want to extend your erudition a little bit.72
8.1
Some old favourites
The minimal modal logic has been explored already in Chapter 5.73
Here are some ubiquitous further systems, following Lewis’ original
nomenclature for systems of “strict implication”. We start by recalling
our preliminary discussion of famous modal systems:
Deﬁnition 8.1.1 (T, S4, and S5). The system T adds the axiom
schema
2ϕ →ϕ to K, or equivalently, ϕ →
3ϕ. Next, S4 adds the 4
axiom
2ϕ →
22ϕ to T, or equivalently
33ϕ →
3ϕ. Finally, S5 adds
the following axiom to S4:
32ϕ →ϕ, or equivalently, ϕ →
23ϕ.
These logics have very diﬀerent validities, and hence diﬀerent reper-
toires of modal assertions. To see this, deﬁne a modality as a ﬁnite
sequence of modal operators:
71That is, if one disregards competitors like intuitionistic or linear logic.
72Some students ﬁnd it preferable to ﬁrst study Chapter 9 on frame correspon-
dence, to have a better semantic grasp of what the axioms in this chapter say.
73Aside: “minimal” is a relative term, and we will see even weaker systems later.
91

February 2, 2010
92 / Modal Logic for Open Minds
Fact. K and T have inﬁnitely many non-equivalent modalities, S4 has
only 7, S5 just 3.
Proof. One can easily give models consisting of ﬁnite intransitive chains
that show how K and T can distinguish inﬁnitely many modalities. The
“collapse” in S4 involves the fact that all modalities become provably
equivalent to one of the following:
p
2p
3p
23p
32p
323p
232p
Clearly, S4 collapses repeated cases
22 and
33 to single ones, and as
for alternations of length 4, recall an earlier-mentioned fact that the
following principle is provable as well:
2323ϕ ↔
23ϕ
Finally, S5 is so strong as to make every modality equivalent to one of
three: −,
3,
2. Here is a typical example of a relevant derivation:
⊢S5
23ϕ ↔
3ϕ
1)
23ϕ →
3ϕ
T axiom
2)
3ϕ →
233ϕ
S5 axiom
3)
33ϕ →
3ϕ
S4 axiom
4)
233ϕ →
23ϕ
from line 3 in K
5)
3ϕ →
23ϕ
from lines 2 and 4
Here is something even stronger, showing how S5 is still close to
propositional logic, making it a popular system in many applications:
Fact. In S5, every formula is equivalent to one of modal depth ≤1.
Proof. It is easy to ﬁnd an algorithm that works inside out. Using prin-
ciples of Boolean algebra and the modal distribution laws of K, place
outermost modalities in front of either purely propositional formulas
(then the job is done), or of conjunctions or disjunctions containing
at least one modalized conjunct or disjunct. Next, identify “reduction
principles” for modalities over conjunctions and disjunctions that still
contain modalities inside, which are provable in S5 (no such principles
hold even in S4). Here is one example:
2(ϕ ∨
2ψ) ↔(2ϕ ∨
2ψ)
74
74You will be asked to ﬁnd the complete list in the Exercises to this chapter.

Increasing deductive power: the landscape of modal logics / 93
February 2, 2010
Other modal logics In addition to these well-known modal logics,
there are many others. For instance, the logic K4 is S4 minus the T-
axiom, which only requires transitivity of accessibility relations. This
works for temporal order with an accessibility relation “later than” that
is not necessarily reﬂexive. One more axiom that makes sense in such
a temporal setting is the following right-linearity axiom, which added
to K4 gives the logic K4.3:
(3ϕ ∧
3ψ) →(3(ϕ ∧ψ) ∨
3(ϕ ∧
3ψ) ∨
3(ψ ∧
3ϕ))
But modal axioms have many shapes and motivations – see Section
8.3 below on “L¨ob’s Axiom” in provability logic (cf. also Chapter 21)
that gives rise to a famous axiomatic system GL.
Much of the ﬁeld has been about taxonomy of such axiomatic sys-
tems. In these lectures, we present a modern view largely ignoring this
traditional perspective, so you will get only a minimum of these codes,
which included tongue-breakers like S4.3Grz. . . Our reason is that these
systems are not “diﬀerent modal logics”, but diﬀerent special theories
of particular kinds of accessibility relation. We do not speak of “diﬀer-
ent ﬁrst-order logics” when we vary the underlying model class. There
is no good reason for that here, either.75
8.2
The lattice of modal logics: two highways
There are many other modal logics, in fact: uncountably many. Here is
how you count:
(a) There are countably many formulas: all ﬁnite strings from a ﬁnite
alphabet,
(b) Modal logics are essentially the 2ℵ0 possible subsets of these.76
In this vast ocean of possibilities, only few speciﬁc modal logics have
been explored. Moreover, some forms of good system behaviour are
necessarily less abundant:
(c) There are only countably many decidable modal logics, because
there are only countably many decision procedures.
Now, starting from the minimal modal logic K, two main “highways”
lead into the realm of modal logic. One leads to the system “Id”: the
75I have hesitated about giving a catalogue of modal logics with their usual names,
since my aim is to do away with botany of formal systems. Still, I cannot deny its
powerful hold over practitioners, maybe even my readers. Even today you will often
hear, to my mind, weird statements like “belief is KD45”: again a code name – as
if reciting some formal system amounts to understanding a phenomenon.
76Modal logics are sets of formulas satisfying deductive closure conditions, but
this does not aﬀect the count essentially.

February 2, 2010
94 / Modal Logic for Open Minds
logic of reﬂexive isolated points, axiomatized by
2ϕ ↔ϕ
the other toward the system “Un” (the logic of irreﬂexive isolated end-
points), axiomatized by
2⊥
In an obvious manner, both make every modal formula equivalent to a
purely propositional one. Here is partial map of the resulting landscape
of modal logic, with some more names:
Un
Id
K4.3
OOOOOOOOO
o
o
o
o
o
o
o
o
o
o
S5
GL
K4
S4
T



K






g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
WWWWWWWWWWWWWWWWWWWWWWWWW
Theorem 16. Every modal logic in the base language that extends
the minimal K is contained in one of the two systems Id or Un.
Think of the ﬁrst road as leading to Heaven, and the other going to
Hell. Indeed, the latter route contains exciting and seductive spots.
Proof. We give a sketch, as the main idea is within your reach by now.
Take any consistent modal logic L. Consider any frame F = (W, R) 77
where all axioms of L hold for all valuations V . Case 1: Frame F has
some end point. Then L also holds for all valuations in the generated
sub-frame consisting of just that end point (modal formulas “do not
look back”), and L ⊆Un. Case 2: Frame F has no end-points. Then
the map sending every point in F to one single reﬂexive point is a
functional bisimulation (also called a “p-morphism”), a construction
that preserves truth of modal theories. Hence L ⊆Id.78
77We will study this natural purely relational notion underlying our models in
Chapter 9. You may want to return to this passage later.
78This proof skates over some diﬃculties, and it also uses technical notions from
modal model theory. Still, our case distinction is the heart of the matter!

Increasing deductive power: the landscape of modal logics / 95
February 2, 2010
The lattice of modal logics nurtures fascinating mathematical phe-
nomena. For instance, there are interesting “intervals” between logics,
and a famous one is that between S5 and Id. “Bull’s Theorem” tells
us that it contains only countably many logics, each of which is the
complete logic of some speciﬁc ﬁnite frame! We will analyze possible
axioms in this landscape systematically in Chapter 9, by semantic cor-
respondences with special conditions on the accessibility relation.
The Id-route contains most major modal logics, including the main
ones used for modeling knowledge, read as the box modality
2ϕ that “ϕ
is true in all epistemically accessible alternatives”. Our further chapters
will have many examples. But the other road contains intriguing logics,
too, and we will discuss one to show the surprising power of modal logic.
8.3
Modal logic of provability and proofs
We saw earlier that the modal box can also be read as provability: the
existence of a proof, or more general, “evidence” for an assertion. Note
that we now take an “existential quantiﬁer” view of knowledge, rather
than the above “universal quantiﬁer” one – while still staying inside
modal semantics. Here is an illustration of this “provability logic”. The
modal distribution axiom gets a new meaning, as the formula
2(ϕ →ψ) →(2ϕ →
2ψ) :
if ϕ →ψ is provable and also ϕ, then ψ is provable. In a picture:
 
 
 
       
 
 
x
y
ϕ
ϕ →ψ
ψ
In terms of proofs, this modal law says that, if x is a proof of ϕ, and
y a proof of ϕ →ψ, then juxtaposition of the trees x, y joined by an
application of Modus Ponens at the bottom is a proof for ψ: so, the
modal axiom is a constructive form of Modus Ponens.79
Remark: Co-existence The provability interpretation sees necessity
as having compelling reasons for an assertion. There is no contradiction
with the earlier semantic account of basic modal logic. In the complete-
ness theorem for ﬁrst-order logic, you see just these two faces. Validity
79Modal logics can also be enriched with explicit proof terms, to formalize this
richer interpretation. Chapter 21 elaborates this, and has further references.

February 2, 2010
96 / Modal Logic for Open Minds
quantiﬁes universally over models, and the equivalent notion of prov-
ability is existential quantiﬁcation, but over a diﬀerent domain, viz.
that of syntactic proofs.
In particular, we can study provability logics for speciﬁc mathemat-
ical theories, and then plain modal formulas come to express deep as-
sertions in the foundations of mathematics. The highway toward Un
contains the following important modal system:
Deﬁnition 8.3.1 (G¨odel-L¨ob provability logic). The G¨odel-L¨ob logic
GL extends the minimal modal logic K with the following axiom:
2(2ϕ →ϕ) →
2ϕ
To understand this system, the modal box
2ϕ now says that the
formula ϕ is provable in some speciﬁc mathematical theory crucial to
the foundations of mathematics, viz. “Peano Arithmetic”. The axiom
looks strange from an Id-route perspective, since it seems to say that
the formerly harmless principle of modal Veridicality can only hold for
provable formulas. But what it really reﬂects is a deep result about
formal arithmetic called “L¨ob’s Theorem”.
We will study this system in more detail in Chapter 21 – but right
here, it serves as a useful reminder that there are very natural modal
logics which are utterly unlike the usual systems of T, S4 or S5 that
have tended to dominate the philosophical literature.
8.4
Completeness theorems
There are many completeness theorems for axiomatic systems in the
landscape that we have just discussed. A typical example is that for the
modal logic S4 when we restrict validity to models whose accessibility
relation is both reﬂexive and transitive:
Theorem 17. For all modal formulas ϕ, ⊢S4 ϕ iﬀ|=reﬂ& trans ϕ.
For all logics mentioned so far, the outcome turns out to be simi-
lar. Provability in the logic amounts to validity of formulas in models
whose underlying frame satisﬁes a semantic condition corresponding to
the axioms for the logic – in a sense made precise in Chapter 9. Proofs
of completeness are sometimes just like for the minimal modal logic.
For instance, working with maximally consistent sets in S4, the deﬁned
accessibility relation in the Henkin model (cf. Chapter 5) is automati-
cally reﬂexive and transitive. But for other logics, things can be much
more complicated, and there is a whole industry of techniques, such as
“bull-dozing”, or more reﬁned forms of model surgery.80
80See the earlier-mentioned textbook Blackburn et al. (2001) for a detailed expo-

Increasing deductive power: the landscape of modal logics / 97
February 2, 2010
Remark: Two Directions There are really two directions in modal
completeness research. One direction starts from a given proof system
(usually, a set of axioms and rules), and asks for a natural class of
models over which universal validity coincides with provability in the
system. This corresponds with tasks of semantic modelling, where we
start from a linguistic practice of speaking and reasoning, and construct
some semantic account for that. The other direction starts from some
independently given class of models, and asks for a complete axioma-
tization of the modal validities over it: its “modal axiomatic theory”.
The latter direction has been dominant in temporal logics (cf. Chapter
18), where we think of Time as independent from language. This can
lead to very interesting new modal axioms.
Example (Modal logic of Minkowski space-time). In relativistic space-
time, the universe consists of tuples (x, y, z, t) of three spatial coor-
dinates plus a temporal one. Simplifying, consider a one-dimensional
space with pairs (x, t). Crucial to physics is the “future light-cone”, i.e.,
the set of all pairs “reachable” from the current one by some signal at
most as fast as the speed of light. In a picture, rotated for convenience,
this gives us the following “causal accessibility relation”:
(x, t)R(x′, t′)
iﬀ
x≤x′ and t≤t′
time
possible futures
(x, t)
(0, 0)
space
sition of modal completeness techniques. Many of these go back to pioneering work
of Kripke, Scott, Segerberg, and Gabbay in the 1960s and 1970s.

February 2, 2010
98 / Modal Logic for Open Minds
The modal logic of this spatio-temporal structure extends S4 with
the following so-called “Geach Axiom”, whose precise semantic meaning
will be determined in the next chapter:
32ϕ →
23ϕ
The resulting modal logic S4.2 is indeed the complete logic of Minkowski
space-time.81 The proof (due to Shehtman, Goldblatt in the 1970s) is
complex, and it involves transforming counter-examples on abstract
possible worlds models into concrete physical spaces.
In either direction, success is not assured when seeking completeness
theorems! There are simple modal proof systems for which no complete
semantics exists at all (this “modal incompleteness” was discovered in
the early 70s; cf. Chapter 26), and there are frames whose complete
modal theory is not eﬀectively axiomatizable (compare G¨odel’s earlier
incompleteness theorem about the ﬁrst-order theory of arithmetic). So
far, the hunt for completeness has been remarkably successful, but later
in these notes (cf. Chapter 24), we will also see settings where the modal
theories of natural models are not axiomatizable at all.
81The converse McKinsey Axiom
23ϕ →
32ϕ added to S4 gives the logic of
atomic pre-orders, in which every world “sees” a reﬂexive end-point.

Increasing deductive power: the landscape of modal logics / 99
February 2, 2010
Exercises Chapter 8
1. Prove the Modal-Depth-One Lemma for S5, and give the corre-
sponding algorithm.
2. Show that the following holds in all transitive reﬂexive models:
2323ϕ →
23ϕ
3. Supply the missing steps in the formal derivations of this chapter.
4. Consider a “hedgehog” model with a root • and ever longer ﬁnite
sequences of any length going out (take the “transitive closure”
of the arrows shown):
◦
•
?






/
?
?
?
?
?
?
?
◦
/ ◦
◦
?
?
?
?
?
?
?
...
◦
?
?
?
?
?
?
?
◦
Show that L¨ob’s Axiom holds in every point of this model, what-
ever valuation you take.
5. Prove that the accessibility relation in the Henkin model, deﬁned
as in Chapter 5, for the modal logic S4 is reﬂexive and transitive.
6. Is the modal logic S4 also complete for ﬁnite trees?

February 2, 2010

February 2, 2010
9
What axioms say: frame
correspondence
9.1
Basic examples and frame truth
What made Kanger-Kripke semantics so attractive in the 1950s? It shed
new light on old modal axiom systems via systematic correspondences
between modal axioms and simple intuitive properties of the modal
accessibility relation R. Here are some famous examples:
T-axiom
2p →p
and
reﬂexivity
K4-axiom
2p →
22p
and
transitivity
S5-axiom
32p →p
and
symmetry
To formulate this precisely, we tighten up some deﬁnitions:
Deﬁnition 9.1.1 (Frames and frame truth). A frame F = (W, R) is a
directed graph. A modal model M in our earlier sense can be viewed as
a frame plus a valuation: (F , V ). We say that F , x |= ϕ (“frame truth
at a world”) if (F , V ), x |= ϕ for all valuations V . We write F |= ϕ iﬀ
ϕ is true at all worlds x in F.
Fact. F , x |=
2p →
22p iﬀthe relation R is transitive at x: i.e.,
∀y(Rxy →∀z(Ryz →Rxz)).
Truth in models is not appropriate for bringing out such correspon-
dences, as special valuations may validate axioms even though the un-
derlying frame has no nice behaviour at all. E.g., the K4-axiom is valid
in a model over any frame if the valuation value V (p) = W.
9.2
A correspondence proof
Here is how we prove frame correspondences at a high precision level.
Consider the preceding Fact:
101

February 2, 2010
102 / Modal Logic for Open Minds
From right to left. Let the valuation V be totally arbitrary. Assume
that
2p holds at x. We show that
22p holds at x, too. So, let Rxy and
Ryz. By transitivity, Rxz: and so p holds at z, using our assumption.
From left to right. There are two useful ways of going about this.
(1) Contraposition. Suppose transitivity fails: there are x, y, z with
Rxy, Ryz, but not Rxz. Deﬁne a valuation V by setting V (p) =
W −{ z }. This gives a model where at x,
2p is true but
22p is
false. So
2p →
22p does not hold on our frame F at x for all
valuations, and we refuted the left-hand side.
(2) Direct route. Assume that the left-hand side holds, and use an
“inspired valuation”. Namely: set V (p) = {u | Rxu}. This makes
2p true at x, and because the axiom holds at x for all valuations,
it also holds for this one: whence
22p must be true at x for
this particular valuation. But that can only be (check your truth
deﬁnition!) because ∀y(Rxy →∀z(Ryz →Rxz)).
How would you ﬁnd such an “inspired valuation”? By a powerful
heuristics of “minimal veriﬁcation” for axioms, to be explained below.
9.3
Second-order translation and modal
correspondence theory
Correspondences may also be essentially second-order. The key example
is L¨ob’s Axiom in provability logic. Here we just state the result for
frames globally, with truth in all worlds:
Theorem 18. F |=
2(2ϕ →ϕ) →
2ϕ iﬀ
(1) R is transitive, and
(2) R is reverse well-founded: there are no chains x1Rx2R · · · .82
The proof of this correspondence is a bit more complicated than
the above one. We postpone it to Chapter 21. Here is a striking dif-
ference: transitivity was simply deﬁnable in ﬁrst-order logic, but well-
foundedness cannot be deﬁned in ﬁrst-order logic at all.83
The general fact here is that frame truth is a second-order notion:
we quantify over all valuations, i.e., over functions. Indeed, for modal
formulas ϕ with proposition letters p1, . . . , pk, the deﬁnition of frame
truth works out to the following second-order translation:
Fact. F , x |= ϕ iﬀF , x |= ∀P1 · · · ∀PkST(ϕ),
82In particular, (2) implies the absence of any cycles, including reﬂexive ones.
83This requires a compactness argument as in your ﬁrst meta-logic course.

What axioms say: frame correspondence / 103
February 2, 2010
where ST is the “standard translation” of Chapter 7. Second-order
logic is very complex: its validities are non-axiomatizable to a high
degree, and many other familiar properties of ﬁrst-order logic disap-
pear. Against the background of these storm clouds, natural questions
emerge that are studied in Modal Correspondence Theory.84 This the-
ory contains – amongst other things – complete characterizations of
(a) When a given modal axiom has a ﬁrst-order frame correspondent
(it must be preserved under “ultrapowers” of frames),
(b) When a ﬁrst-order frame property has a modal deﬁnition (it must
be preserved under “generated subframes”, “disjoint unions”, “p-
morphic images”, and “reverse ultraﬁlter extensions”).
All these notions are well-explained in Blackburn et al. (2001).
Many axioms in modal logic have ﬁrst-order correspondents, so we
are essentially doing a bit of second-order logic, but still so close to
the border with ﬁrst-order logic that we get pleasant results. In ad-
dition to these mathematical results for connoisseurs, the theory also
provides algorithmic information on computing frame correspondents.
This theme is more practical, and we will demonstrate how it works.
9.4
The substitution algorithm
We start with a heuristic example: analyzing the K4-axiom, now with
all its boxes marked:
[1]p →[2][3]p
Which modal box here matched which universal quantiﬁer in the cor-
responding ﬁrst-order transitivity formula
∀y(Rxy →∀z(Ryz →Rxz))?
Intuitively, it makes sense to match up the nested sequences of operators
in these formulas: [2] is then the ﬁrst universal quantiﬁer ∀y(Rxy →,
[3] the second the ∀z(Ryz →while (“subtracting equals from equals”),
the modality [1] must then have something to do with the remainder,
i.e., the ﬁnal atom Rxz. This will be ampliﬁed in what follows.
As we shall see, the antecedent of the modal axiom sets up a minimal
valuation, which is then substituted in the skeleton provided by the
consequent. For a precise statement of the following algorithm and its
correctness, we refer to the literature (again, Blackburn et al. (2001)
is a good source). Hopefully, you can learn by doing. The heuristics in
what follows is easy to understand. An implication is like a promise:
84Check the “Correspondence Theory” chapter in the Handbook of Philosophical
Logic (Gabbay and G¨unthner, 1983-1989) vol. II, or van Benthem (1985).

February 2, 2010
104 / Modal Logic for Open Minds
“give me the antecedent, and I will give you the consequent”. And
obviously, you get the maximal advantage of a promise by satisfying
the antecedent in some minimal way, and then reaping the full beneﬁts
of the consequent.85
Example (2p →
22p (K4 axiom)). We look at an arbitrary world x.
This will give us a local condition that must hold there, and we get the
total frame correspondent by preﬁxing one universal quantiﬁer ∀x.
Phase 1: Analyze the antecedent. The minimal way of making the
antecedent true is by having the proposition p true only at the R-
successors of x: we must do at least this much to make
2p true anyway,
but no more is needed. Deﬁne a minimal valuation as follows:
Pu := Rxu
What this says semantically is that, in the given frame, we take the
proposition letter p to denote just the set of R-successors of the world
x. The “u” is then a syntactic free variable here, which can be used at
various places in a formula for diﬀerent syntactic substitutions.
Phase 2: Read the consequent. What
22p says is
∀y(Rxy →∀z(Ryz →Pz)).
Phase 3: Plug in the description of the minimal valuation. In our
case, Pz becomes Rxz. The result is precisely transitivity:
∀y(Rxy →∀z(Ryz →Rxz))!
86
Example (2p →p (T-axiom)). The same method works. This time,
we plug in the minimal valuation for p in the consequent Px. The result
is Rxx, that is, precisely reﬂexivity.
Example (p →
23p (S5-axiom)). Phase 1: Analyze the antecedent.
This is even easier than the preceding. The minimal way of making this
antecedent true has p true only at x: with a minimal valuation
Pu := x = u
Phase 2: Read the consequent. What
23p says is evidently that
∀y(Rxy →∃z(Ryz ∧Pz)).
Phase 3: Plug in the description of the minimal valuation. In our
case, for Pz we get x = z. The result is ∀y(Rxy →∃z(Ryz ∧x = z)),
which is a somewhat pompous way of saying87 just ∀y(Rxy →Ryx),
85If an indigent professor oﬀers you a high grade “if you pay”, give one cent, and
demand the A+.
86We get the outermost universal quantiﬁer ∀x “for free” in our analysis.
87We might distinguish a fourth phase of Simpliﬁcation by logical equivalences.
This simpliﬁes things and cuts through complications. Logic also has the inverse
use of making simple things look impressively complicated.

What axioms say: frame correspondence / 105
February 2, 2010
indeed the deﬁnition of symmetry.
Thus, for the S5 axioms, their famous relational properties come out
automatically of this algorithm!
Some obvious reﬁnements of the substitution method deal with an-
tecedents that involve diamonds, conjunctions and disjunctions. Here
is an illustration from Chapter 8:
Example (The Geach Axiom
32p →
23p). A minimal way of making
the antecedent true proceeds as follows. First, pick any R-successor y
of x. Then make
2p minimally true there in the earlier fashion:
p
x
/ y
o
o
o
o
o
o
o
o
o
O
O
O
O
O
O
O
O
O
...
p
In the corresponding property, this step preﬁxes a universal quantiﬁer
∀y(Rxy →−
so diamonds in the antecedent become universal. You may ﬁnd this
strange, but it makes sense. By our standard translation, the modal di-
amond in the Geach axiom
32p →
23p is an existential ∃y(Rxy ∧· · ·
in the antecedent of an implication. Now quantiﬁers in antecedents can
be “pulled outside” modulo logical equivalence, but in doing so, they
“ﬂip”: and in particular, an existential quantiﬁer becomes a universal
one, with a fresh variable.88
After that, the minimal valuation for the antecedent is as before:
Pu := Ryu
This is substituted in the antecedent (taking care to avoid bound
variable clashes), to get the following “convergence” property:
∀y(Rxy →∀s(Rxs →∃t(Rst ∧Ryt)))
This relational condition occurred in the Minkowski space of Chapter
8. In computation (Chapter 14) it is called conﬂuence, or “Church-
Rosser”. It is often pictured as a “diamond diagram”, which you can
ﬁnd in the picture below for the “poly-modal Geach Axiom”.
9.5
Correctness of the algorithm, and variations
A general result on frame correspondence covering many cases was
found in 1973 by Henrik Sahlqvist, then an Oslo master’s student, who
88Here is a concrete example in ﬁrst-order logic: the formula ∃y(Rxy ∧P y) →Q
(where the variable x does not occur free in Q) is logically equivalent with the
formula ∀y((Rxy ∧P y) →Q), or with ∀y(Rxy →(P y →Q)).

February 2, 2010
106 / Modal Logic for Open Minds
observed a recurrent syntactic form:
Theorem 19. There exists an eﬀective algorithm that translates all
modal axioms of the special form A →B into corresponding ﬁrst-order
properties, where
. A is constructed from basic formulas
2· · ·
2p using only ∧, ∨,
3;
. B is “positive”: constructed from proposition letters with only the
logical operations ∧, ∨,
3,
2.
Sketch.
(a) One direction of the correspondence is easy, since our construction
algorithm only involved taking logical equivalents and ﬁrst-order
substitution instances for second-order quantiﬁers. For, a true
modal formula in a frame, viewed as a universal second-order
sentence as in Section 9.3, implies all its syntactic substitution
instances (even whether these instances are “minimal” or not).
(b) Conversely, let the antecedent A hold in a frame under any val-
uation V . Then, by our syntactic analysis of the above special
A-shapes, there is also a minimal valuation V −that still makes
the antecedent true, which can be described by a ﬁrst-order for-
mula.89 Given the truth of the computed correspondent, the con-
sequent then also holds for that minimal V −. But now, since the
consequent B is syntactically positive, it is easily seen to have the
following semantic monotonicity property: its truth is not aﬀected
by going to any larger valuation V on the frame. In particular,
B is still true under the original valuation V . Thus, we see that
A →B is true in the given frame.
The result is not easily improved. Allowing
2 to scope over
3 in the
antecedent is fatal: unlike the Geach Axiom, its converse, the
McKinsey Axiom
23p →
32p
has no ﬁrst-order correspondent at all. We did note in Chapter 8 that
the latter principle is often added to the axioms of S4, to deﬁne the
atomic pre-orders, a ﬁrst-order deﬁnable notion. However, it can be
shown in a precise sense that the latter result is not provable using
the substitution method of this chapter.90 Likewise, L¨ob’s Axiom falls
outside our methods – but see Chapter 22 for a recent take.
89Here we skim over the earlier extraction of diamonds to become universal preﬁx
quantiﬁers. But that step does not essentially change the analysis.
90These results are in van Benthem (1985).

What axioms say: frame correspondence / 107
February 2, 2010
From a practical viewpoint, most modal axioms proposed in the
literature have ﬁrst-order computable form. Of course, one has to ﬁnd
their correspondents, even when the axioms are wrapped in syntax that
can be more complex than our modal languages so far.
A good test for the method are extended languages:
Example (Poly-modal Geach Axiom ⟨a⟩[b]p →[a]⟨b⟩p). Using the
same method as above, one can show that this deﬁnes the conﬂuence
property
∀y(Raxy →∀z(Rbxz →∃u(Rbyu ∧Razu))) :
y
b
'
x
a
7o
o
o
o
o
o
o
o
o
b
'O
O
O
O
O
O
O
O
O
u
z
a
7
Correspondence methods also work for our earlier extended modal
languages with universal modalities, temporal operators, and the like.
Example (Universal relation). The formula Ep →
3p holds in a frame
iﬀthe relation R is universal. From right to left, this is obvious. From
left to right, starting from world x, take any y and set V (p) = {y}.
Then Ep holds at x, and so
3p holds, and then by deﬁnition, Rxy.
There are some technical issues about comparison with the earlier
modal translation ST on models in Chapter 7, but we leave matters
here.91 We will see further examples of our techniques in Part III.
Recent extensions of the substitution algorithm even work for non-
ﬁrst-order languages with ﬁxed-points (cf. Chapters 7, 14), and they
show, in particular, how L¨ob’s Axiom yields to our style of analysis
after all. We will indicate how this works in Chapter 22. The methods
of this chapter also extend to higher-order languages, as has been shown
in the computational literature on automated deduction. One powerful
methodology is this: one takes the given axioms for some modal logic L,
computes their correspondents in a classical logical language using some
built-in translation algorithm, and then performs modal deduction in
L via translated forms in a theorem prover for classical logic.
91For instance, the relational properties in correspondence analysis need not be
preserved under bisimulation! Even transitivity is not. Bisimulation is an uninvari-
ance concerning truth on models, not on frames.

February 2, 2010
108 / Modal Logic for Open Minds
Exercises Chapter 9
1. Compute a frame correspondent for the modal formulas
3p →
32p
and
[a][b]p →[b][a]p
via our algorithm – and show that they are correct.
2. Compute the frame correspondences for two axioms relating past
and future in temporal logic: q →HFq and q →GPq. Here, as-
sume that F (and G) and P (and H) refer to diﬀerent accessibility
relations RF , RP . How must the two then be related?
3. Show in more detail that the Sahlqvist substitution algorithm is
semantically correct.
4. Prove that the combination of S4 plus the McKinsey Axiom
23p →
32p deﬁnes the ﬁrst-order class of atomic pre-orders.

February 2, 2010
10
Descriptive power: extended modal
languages
Applications of modal logic often require more expressive power than
our base system here – while at the same time, we would like to pre-
serve its simplicity and nice properties. Such extensions come in dif-
ferent forms, and we have already seen how one can say more about
semantic graph models using stronger modalities in Chapter 8. An-
other line of extension rather changes the type of structures that the
relevant modal language is concerned with, a direction of investigation
that we will call extension of descriptive power. We discuss a few ex-
amples in this chapter, without any pretense at completeness. Here the
check-list of “nice things” to retain includes earlier topics like bisimula-
tion, ﬁrst-order translation, frame correspondence, axiomatic minimal
logic, interesting special-purpose axioms, decidability, and games. We
will discuss some of these issues in a light impressionistic manner.92
10.1
Poly-modal languages
We have already encountered the widely used family of poly-modal
languages whose syntax has indexed modalities ⟨a⟩, ⟨b⟩, [a], [b], . . . where
a, b, . . . denote diﬀerent accessibility relations. Motivation is found in
two major types of interpretation:
Knowledge
[i]: “in every world that is indistinguishable for agent i”
(cf. the epistemic logic of Chapter 12)
Action
[a]: “after every successful completion of action a”
(cf. the dynamic logic of Chapter 14)
92In my own course, I use this chapter not for additional facts, but as a source
of examples to check if you have understood the material about basic modal logic.
You should be able to ﬁnd good generalizations by yourself.
109

February 2, 2010
110 / Modal Logic for Open Minds
But other systems, too, involve several accessibility relations, such
as temporal logic (Chapter 18) with its modalities [<]: “always in the
future”, [>]: “always in the past”.93
The truth deﬁnition for all these cases runs as follows:
M, x |= ⟨a⟩ϕ iﬀthere exists a world y with Raxy and M, y |= ϕ
This is pretty much like our basic modal logic, and indeed, general-
izations of all our earlier notions and results are a straightforward, and
largely typographical, exercise.
Things become more interesting when we require special connections
between the diﬀerent accessibility relations. In temporal logic, the “be-
fore” relation is the converse of the “after” relation, and we will see
many further examples in what follows – for instance, with combined
epistemic-dynamic logics in Chapter 15. Such connections often vali-
date additional axioms beyond the minimal poly-modal logic, and we
will show how this may drive up complexity of the logic considerably,
even toward undecidability, in Chapter 24.
10.2
Polyadic modal languages
Polyadic modal languages change the argument type of syntactic
modalities from unary to binary, or even higher, and the corresponding
semantic move is to have models with at least ternary accessibility
relations. The intended interpretation works as follows:
Deﬁnition 10.2.1 (Ternary modal semantics). For models with a
ternary accessibility relation, we deﬁne truth as follows:
M, x |=
3ϕψ iﬀ∃yz : R3x, yz & M, y |= ϕ & M, z |= ψ
x
• 66
		
y ◦
◦z
ϕ
ψ
The motivation for ternary relations often has to do with “composi-
tion” or “construction”:
“string x is the concatenation of strings y and z (in that order)”,
“transition arrow x is the composition of y and z (in that order)”,
“information piece x is the sum of y and z”, etcetera.
93Many systems have special-purpose notations. For instance, in temporal logic,
[<] is written as “G” and [>] as “H” – while epistemic logic uses Ki for [i].

Descriptive power: extended modal languages / 111
February 2, 2010
While this move seems to go beyond standard modal logic, a ﬁrst-
order translation for the key modality is straightforward (note again
the guarded quantiﬁer bound):
∃yz(Rxyz ∧ϕ(y) ∧ψ(z))
One usually deﬁnes the universal dyadic modality
2ϕψ dually as
¬3¬ϕ¬ψ
94
Spelling out what this means,
2ϕψ gets a disjunction in its consequent:
∀yz(Rxyz →(ϕ(y) ∨ψ(z))
You may ﬁnd this surprising, preferring a conjunctive ∀yz(Rxyz →
(ϕ(y) ∧ψ(z)). But the latter can be deﬁned in our language. For in-
stance, the conjunct ∀yz(Rxyz →ϕ(y)) is
2ϕ⊥
In general, this is a genuine extension of our earlier framework.
Ternary relations do not reduce to binary ones: think of the primitive
relation of “betweenness” Bx, yz in geometry (“x lies on the line seg-
ment with end-points y, z”). Likewise, dyadic modalities do not reduce
to combinations of unary ones! In particular,
3ϕψ is not equivalent to
3ϕ ∧
3ψ for binary accessibility relations.95
We can also generalize the notion of bisimulation, keeping in mind
an Invariance Lemma – and the reader may ﬁnd it useful to experi-
ment with formulating the right back- and forth- clauses for a ternary
relation. Also, watch out how you formulate tree unraveling! This takes
care in marking the right paths through a tree-like model.96
The minimal logic is like the base logic K, with distribution of
3
over ∨in both arguments:
3(ϕ1 ∨ϕ2)ψ ↔
3ϕ1ψ ∨
3ϕ1ψ, and likewise for the ψ-argument.
Decidability follows from our techniques of Chapter 4. There is even
a Decomposition Lemma yielding a complete sequent calculus.
Substitution-based frame correspondence also goes through.
Fact. Associativity
3p 3qr corresponds to a ﬁrst-order principle of “re-
composition”: ∀yzuv : ((Rx, yz ∧Rz, uv) →∃s(Rs, yu ∧Rx, sv)).
94One can argue as to the most appropriate “dual” reﬂecting the former ¬3¬.
95Still, there exist non-meaning-preserving validity-preserving reductions between
dyadic modal languages and “bimodal” ones, that we do not formulate here. These
replace one ternary relation Rx, yz in a model by a combination of two new binary
relations R1, R2.
96The point is that we must mark the diﬀerence between going from world x to
y in the context of one ternary “triangle” x, yz1 and in another x, yz2.

February 2, 2010
112 / Modal Logic for Open Minds
Proof. Find a “minimal valuation” for the antecedent, as before.97
But the landscape of important modal logics is quite diﬀerent here.
In dyadic modal logic, there is no S4 or S5: many important landmarks
in this new area do not even have resounding names . . .
10.3
Geometry and Arrow Logic
Dyadic modal systems speak more in concrete settings. In Chapter
19, we will look brieﬂy at modal logics of aﬃne geometry, where the
ternary relation is spatial betweenness, while
3pq says that the current
point lies on a line segment whose end-points satisfy ϕ and ψ.98 In this
setting, models suddenly become very concrete spatial arrangements:
Example (Triangle models). In the following “annotated triangle”, the
worlds are the vertices, while the lines just help to indicate betweenness,
proposition letters are true at points are marked.
q
p
p
p






















t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
q
r
4444444444444444444444
The right-most vertex is uniquely deﬁned by r, the one in the middle
by p∧
3qq, the right-most p-point is deﬁned uniquely by p∧
3qr – and
continuing in this way, each vertex has a unique modal deﬁnition.
Another concrete interpretation is in terms of Arrow Logic. This sys-
tem was invented as a generalization of Relational Algebra, the ﬁrst-
order theory of Boolean operations on binary relations – viewed as sets
of ordered pairs (x, y) – as well as the operations of composition and
converse: in particular, to remedy the latter’s undecidability. We will
discuss Relational Algebra in more detail in Chapters 14, 22 – but for
now, it suﬃces to state the semantics of Arrow Logic. Worlds are “ar-
rows”, that is, transitions between states viewed as primitive objects,
i.e., as ﬁrst-class citizens of our semantics. Formulas are expressions
97Caveat. In antecedent positions, a universal modality
2pq in front of proposition
letters now no longer guarantees the existence of unique minimal valuations, because
of its disjunctive character.
98Note that a special property of symmetry holds here for the ternary relation:
Rx, yz iﬀRx, zy.

Descriptive power: extended modal languages / 113
February 2, 2010
that denote binary relations, now viewed as, not sets of ordered pairs,
but sets of arrows. The Boolean operations retain their usual interpre-
tation. Converse then becomes a unary modality, composition a binary
one, involving two natural accessibility relations between arrows:
Deﬁnition 10.3.1 (Semantics of Arrow Logic). Arrow models M =
(W, C, R, V ) consist of a set of objects W with a valuation V plus a
ternary relation C of composition, and a binary one R of conversion:
. Arrow a veriﬁes ϕ • ψ 99 iﬀa is C-composed out of two arrows b, c
verifying ϕ, ψ, respectively.
. Arrow a veriﬁes ϕ∪iﬀa has an R-converse arrow that veriﬁes ϕ.
a
/
R
b
?
?
?
?
?
?
?
?
?
?
S
c
?









a
/
b
o
R
The arrow language has a decidable minimal logic, which contains
the most widely used laws of Relational Algebra. Modal correspondence
techniques determine what principles of this system really say:
Fact. ¬ϕ∪↔(¬ϕ)∪holds in a frame iﬀthe relation R is a function r.
In terms of this “reversal” function r, further correspondences be-
come more perspicuous, witness the following complex axiom:
Fact. The principle ϕ•¬(ϕ∪•ψ) →¬ψ holds in a frame iﬀthe following
ﬁrst-order Triangle Law holds: ∀xyz : Cx, yz →Cz, r(y)x.
Proofs are via standard substitution arguments of our earlier kind.
On top of this minimal logic, Arrow Logic views the further valid
principles of Relational Algebra as a penumbra of optional extras, re-
ﬂecting mathematical facts about the set theory of ordered pairs –
whose sum total is responsible for the undecidability of the full system.
10.4
Below “minimal”: neighbourhood models
Sometimes even the minimal system K with our semantics on directed
graphs is too strong, and we wish to reject, e.g., its Distribution of
2
over →or of
3 over ∨. Here is some motivation:
(a) “Logical omniscience” in epistemic logic (Chapter 12): the knowl-
edge of realistic agents might not be closed under taking all its
logical consequences.
99In terms of our earlier notation, this would be the standard M, a |= ϕ • ψ.

February 2, 2010
114 / Modal Logic for Open Minds
(b) Non-distribution of outcomes in game logics (Chapter 17) when
we read the modal ⟨G, i⟩ϕ as “player i has a strategy forcing the
outcomes of game G to satisfy ϕ, whatever others do”.
A generalized semantics blocking distribution was proposed in the
1960s by Scott and Montague. We move from a world-to-world relation
Rst to a world-to-set relation RsX, which says that “X is a neighbour-
hood of s”, in some free-wheeling topological sense:
Deﬁnition 10.4.1 (Neighbourhood semantics). The basic truth clause
is as follows (some neighbourhood of the current world is “all ϕ”):
M, s |=
2ϕ
iﬀ
∃X(RsX ∧∀x∈X : M, x |= ϕ)
ϕ
ϕ
ϕ
s
A more concrete motivation are modal logics of topology that we will
study in Chapter 19. Note that our original graph models are still the
special case with Roldxy iﬀRnewx{y}.
The complete logic of these models is the minimal K dropping dis-
tribution in general, for either disjunction or conjunction. Still, one
retains the valid upward monotonicity of
2:
2ϕ →
2(ϕ ∨ψ)
100
Neighbourhood semantics is an obvious generalization of our earlier
basic modal logic – and the reader may wish to generalize earlier no-
tions and results for herself. As for semantic invariance and expressive
power of the new system, here is the zigzag clause for the characteristic
invariance notion of bisimulation between models M, N:101
If sZt and RM sX, then there is a set Y
with RN tY
such that
∀y∈Y ∃x∈X : xZy – and vice versa starting from sZt and RN tY .
The point of this two-quantiﬁer clause becomes clear when checking
how modal invariance holds under just this stipulation for the zigzag
clause.102 Indeed, our truth deﬁnition in neighbourhood models treats
one single modal operator
2 as a two-quantiﬁer combination ∃∀– and
100Weaker systems without even this monotonicity modify modal truth to the
variant clause M, s |=
2ϕ iﬀRs{x ∈W | M, x |= ϕ}.
101Finding this notion in real-time has been a favourite exercise in Stanford class-
rooms since the mid 1990s.
102There is a prima facie attractive stronger equivalence clause, too: viz., if sZt
and RM sX, then there exists a set Y with RNtY such that ∀y∈Y ∃x∈X : xZy

Descriptive power: extended modal languages / 115
February 2, 2010
this observation has driven validity reductions of neighbourhood se-
mantics to bi-modal standard models.
The same point comes out under, again, translation. One can view
the neighbourhood truth deﬁnition as translating modal formulas into
a two-sorted ﬁrst-order language with “points” (variables x, y, . . .) and
“neighbourhoods” (n, m, . . .), where the latter correspond to some, but
not necessarily all sets of points. We then use two hard-wired primitive
relations N (“neighbourhood of”) and E (“element of”):
2p
translates as
∃n(Nxn ∧∀y(Eyn →Py))
This is actually a guarded formula in the sense of Chapter 7, and so
neighbourhood semantics stays well within decidable modal fragments
of full ﬁrst-order logic.
That the minimal modal logic over neighbourhood models is decid-
able may in fact be seen through various techniques. A particularly
simple argument uses the following version of our earlier Decomposi-
tion Lemma in Chapter 4:103
Fact. A modal sequent of the form p,
2ϕ1, . . . ,
2ϕk ⇒
2ψ1, . . . ,
2ψm, q
is valid iﬀeither
(a) p, q overlap, or
(b) for some i (1 ≥i ≥k), j (1 ≥j ≥m), the sequent ϕi →ψj holds.
A proof is left to the exercises: but it is highly recommended, because
it demonstrates the “looser” character of neighbourhood models over
our standard directed graphs so far.
Analyzing this argument in detail even yields the computational com-
plexity of satisﬁability (cf. Chapter 6) in the minimal neighbourhood
logic: this system side with propositional logic, which is much simpler
than the PSPACE-complete as for the minimal modal logic K:
Fact. Satisﬁability in neighbourhood semantics is NP-complete.104
Finally, we mention our earlier frame correspondences for additional
modal axioms in the “landscape” of possible modal neighbourhood log-
ics. For instance, modal distributivity over disjunctions, though not
minimally valid, expresses the special frame condition that
(a) The neighbourhood relation is monotonic: if RsX and X ⊆Y ,
then RsY , and
and ∀x∈X∃y∈Y : xZy. But you will ﬁnd no need for such an added clause in an
inductive proof for the Invariance Lemma.
103Note the small but telling diﬀerence with the original, more complex reduction.
104This outcome is sensitive to assumptions on the neighbourhood relation.

February 2, 2010
116 / Modal Logic for Open Minds
(b) The neighbourhood relation is intersective: if RsX and RsY , then
Rs(X ∩Y ).
Together, these conditions make RsY behave much like a world-to-
world relation, as we can – at least in ﬁnite models – now deﬁne a
standard accessibility relation
R#xy as “y belongs to the intersection of all neighbourhoods of x”.
Also, in this generalized setting, old correspondences for modal logics
acquire a new thrust. For instance, the neighbourhood frame condition
for the K4 axiom
2p →
22p, our starting point in Chapter 9, is now
a natural cut property extending ordinary transitivity.105
In this chapter, we have lightly discussed a few extensions of basic
modal logic to semantic structures of a more complex “similarity type”.
We have mostly just suggested how all our earlier themes still make
sense, though it can be fun to look more closely at actual details.
105There are even Sahlqvist Theorems: though not all issues have been cleared up.

Descriptive power: extended modal languages / 117
February 2, 2010
Exercises Chapter 10
1. Consider translations again:
(a) Give a ﬁrst-order translation for a dyadic modal language
with binary modalities
3ϕψ over ternary relational models.
How many variables do you need to use?
(b) Prove the Invariance Lemma for the appropriate notion of
bisimulation.
(c) Prove the frame correspondence for the associativity axiom
3(3pq)r →
3p(3qr).
2. Consider the following two “annotated triangles”. The worlds
are the vertices: the lines just help to indicate betweenness, and
proposition letters true at points are marked.
r
r
q
p















t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
r
r
444444444444444
q
p
q
p















t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
q
r
444444444444444
One can be contracted under bisimulation to a smaller ﬁgure.
How? Which triangle has all its points uniquely deﬁnable? How?
3. Some properties of neighbourhood semantics:
(a) Explain with concrete examples why the principles of distri-
bution over both ∧and ∨fail for the modal operator
2 in
general neighbourhood semantics.
(b) Prove the Invariance Lemma for the appropriate bisimula-
tion of this language. Prove that, if two ﬁnite models M, s
and N, t verify the same modal formulas, then there exists
a neighbourhood bisimulation between M, N linking s to t.
(c) “The complexity of neighbourhood modal logic can never
exceed that of the minimal K over directed graphs, since we
have only added more models”. Explain why this is a fallacy.
Must weaker logics be less complex than stronger ones?
(d) Prove the reduction for neighbourhood validity stated in the
chapter text. (Hint: it may help to draw some of the “lolly
pictures” from our main text.) Show how this fact implies
the stated NP-completeness of satisﬁability.

February 2, 2010

February 2, 2010
11
Modal predicate logic
Most research in modal logic today is about propositional languages,
as will be clear from a quick look at the Handbook of Modal Logic. To
a large extent this is a historical accident: the research community has
been held up on the way because there were already so many natural
wonders in this restricted territory. Even so, in this chapter, we brieﬂy
look at what happens when we mix modal operators with ﬁrst-order
predicate logic. There is no pretense at completeness: you should just
read this material to get sensitized to what lies ahead.
11.1
Modal predication and objects
Much of the history of modal logic in philosophy is tied up with modal
assertions about individuals and their properties. Aristotle already as-
serted that objects have some properties necessarily, and others only
accidentally. Thus, Marilyn Monroe was essentially identical to Norma
Jeane Baker, but only accidentally blonde. Quine raised some famous
worries about the consistency of this type of discourse, in his example
of the “Rational Cyclist”:
Cyclists are necessarily two-legged, but not necessarily rational. Mathe-
maticians are necessarily rational, but not necessarily two-legged. Con-
sider a cycling mathematician. Is he both necessarily rational and not
necessarily rational, with the same contradiction in his legs?
With a little reﬂection, one can see that this conundrum does not
make a modal predicate logic impossible. It rather makes it imperative!
If you formalize Quine’s prose, you see the hidden options. Saying that
cyclists are necessarily two-legged means either of two things:
∀x(Cx →
2T x)
or
2∀x(Cx →T x)
119

February 2, 2010
120 / Modal Logic for Open Minds
Negating this assertion gives options as well. Saying that cyclists are
not necessarily rational might mean any of the following:
¬∀x(Cx →
2Rx),
∀x(Cx →¬2Rx)
or
¬2∀x(Cx →Rx)
I am not even going to dignify Quine’s “paradoxette” with an ex-
tensive analysis, but it should be clear that once you sort all this out
in the right formal system, there is no diﬃculty whatsoever in saying
in which senses the given assertions are jointly consistent, or not.
11.2
Language, models, semantics
But what is the correct formal system? At the level of a formal language,
this seems easy to say. We just take the syntax rules of ﬁrst-order
predicate logic, and add the modalities
2,
3 as unary operators on
formulas ϕ. In case these formulas have free variables (ϕ = ϕ(x, y, . . .)),
we can then automatically express modal predication. This formalism
at once expresses well-known philosophical distinctions, such as that
between “de re” predications
∃x 2Px
some objects necessarily have the property P,
and “de dicto” predications like
2∃xPx
it is necessarily true that some objects have the property P.
While this may sound like somewhat stilted philosopher’s jargon, the
“de re” versus “de dicto” distinction is crucial to many expressions in
natural language, as pointed out by Richard Montague. I might know
“de dicto” that the ideal partner for me exists somewhere in this city –
but the tragedy of urban life is that I might walk these streets through
all my years, without knowing “de re” of any particular person that
(s)he is that ideal partner. Failure to convert de dicto into de re may
mean no progeny, and Darwinian disaster!
The more tricky issue is the semantics for this language. There have
been many proposals, and much controversy concerning the interpre-
tation of what it means for an object to occur across diﬀerent worlds.
For concreteness, we state one version that has been widely used.
Deﬁnition 11.2.1. Models for modal predicate logic are structures
M = (W, R, D, V ) with W a set of possible worlds, R an accessibility
relation, and D a domain map assigning sets of objects to each possible
world. Finally, V is a valuation function interpreting each predicate
letter P at each world w as a predicate V (P, w) of the right arity.106
106One can think of a family of ﬁrst-order models ordered by accessibility, but
the framework is richer, since the same model can occur at diﬀerent worlds with
diﬀerent local accessibility patterns. Also, one could think of the objects as forming

Modal predicate logic / 121
February 2, 2010
Now we must combine the semantics of predicate logic, which has
assignments taking variables to objects with the earlier one for modal
propositional logic. The following stipulation explains when a formula
ϕ is true at world w under assignment a, where we assume that the
values a(x) for the free variables x in ϕ are in the domain Dw:
M, w, a |= Px
iﬀ
the tuple of objects a(x) belongs to the
predicate V (P, w)
M, w, a |= ¬ϕ
iﬀ
not M, w, a |= ϕ
M, w, a |= ϕ ∨ψ
iﬀ
M, w, a |= ϕ or M, w, a |= ψ
M, w, a |= ∃xϕ
iﬀ
for some d ∈Dw, M, w, a[x := d] |= ϕ
M, w, a |=
3ϕ
iﬀ
for some v with Rwv where a(x) ∈Dv for
all free variables x in ϕ, D, M, v, a |= ϕ
Here individual quantiﬁers range over the local domain of objects
existing at the current world. The clause for the modality makes sure
that all objects used by a to evaluate
3ϕ in w are also available for eval-
uating ϕ in v. On the basis of this truth deﬁnition, Boolean conjunction
∧, modal box
2 and universal quantiﬁers ∀are deﬁned as usual.
Remark (Cumulation). Often, the modal clause of the preceding se-
mantics is simpliﬁed by making a further structural assumption, viz.
that object domains grow along accessibility:
For all w, v, Rwv →Dw ⊆Dv
Domain Cumulation
Now we can just stipulate that
M, w, a |=
3ϕ
iﬀ
for some v with Rwv, M, v, a |= ϕ
We keep this condition as an optional extra. Our preference is to see
what proposed axioms mean in terms of frame correspondence (see
below) – and the weaker the base used then, the better.
Example (Refuting a de dicto to de re conversion). The following
model has worlds w, v, R = {(w, w), (w, v)}, D(w) = {1}, D(v) =
{1, 2}, V (P, w) = {1}, V (P, v) = {2}. This makes the modal formula
2∃xPx →∃x2Px false at w:107




1
P
1, 2
P
w
/ v
"
one universal set that is “available” in some sense, but our modal predicate-logical
language only looks at what is available inside worlds.
107We leave it to the reader to give a counter-example with one constant domain.

February 2, 2010
122 / Modal Logic for Open Minds
When interpreting formulas
2Px, this semantics takes it for granted
that recognizing the same object across worlds is unproblematic. This
crucial aspect of Kripke’s views on modality was challenged by Lewis,
who proposed a “counterpart theory” where objects can only have coun-
terparts more or less like them in other worlds, with modality accessing
these counterparts rather than the very same objects. Philosophically,
Kripke’s views in his 1972 book Naming and Necessity have won the
day – and possible worlds are mostly viewed as diﬀerent states of aﬀairs
draped around the familiar objects in our actual world. But Chapter
26 will sound a new round in the debate with Lewis.
11.3
Minimal logic and correspondence for axioms
Our models with Domain Cumulation validate a minimal modal predi-
cate logic merging standard predicate logic with just the minimal propo-
sitional modal logic K, where Cumulation ensures validity of the modal
distribution axiom.108 This combination proves some interesting com-
bined principles, such as the following de re to de dicto implication:
∃x2Px →
2∃xPx
This can be seen semantically, or via a simple deduction combining
well-know principles:
Px →∃xPx,
2Px →
2∃xPx, ∃x2Px →
2∃xPx
On top of this minimal logic, as in Chapter 9, further axioms impose
additional constraints on suitably deﬁned frames, via systematic corre-
spondence arguments:
Deﬁnition 11.3.1. A formula ϕ of modal predicate logic holds in
a frame F = (W, R, D) (i.e., a model stripped of its valuation for
predicates) iﬀϕ is true at F under all valuation functions V .
For instance, the following famous modal predicate-logical principle
∀x2Px →
2∀xPx
Barcan Axiom
holds in frame if and only if we have a converse to Domain Cumulation:
Rwv →Dv ⊆Dw
No Object Growth
Together with Domain Cumulation, this principle is sometimes also
called the “constant domain assumption”. In that case, modal variation
only concerns the ﬁxed set of objects. We mention a few more cases in
the exercises to this chapter. Behind these observations lies a generaliza-
tion of the Sahlqvist Theorem of Chapter 9, whose proof extends here.
108Caveat: This merge is more than just the union of valid formulas. For, axiom
schemata formerly valid in just one component logic are now allowed with arbitrary
substitution instances in the combined language.

Modal predicate logic / 123
February 2, 2010
109 But also, like in propositional modal logic, some principles remain
more complex. For instance, it can be shown (we give some hints in an
Exercise) that our earlier de dicto de re principle
2∃xPx →∃x2Px
has no ﬁrst-order frame correspondent on our general models.
11.4
Some model theory of modal predicate logic
Expressive power can be analyzed with the techniques of Chapters 3
and 7. The ﬁrst-order correspondence language Lcorr has two sorts of
“worlds” and “objects”, binary relations Rwv for world accessibility
and Ewx for object x being in the domain of world w, and (k + 1)-ary
predicates Pwx for each k-ary predicate Px of objects.
Deﬁnition 11.4.1. The standard translation trans(ϕ) takes formulas
ϕ of modal predicate logic to Lcorr-formulas with the same free object
variables as ϕ plus one free world variable w:
trans(Px) = Pwx
trans(¬ϕ) = ¬trans(ϕ)
trans(ϕ ∨ψ) = trans(ϕ) ∨trans(ψ)
trans(∃xϕ) = ∃x(Ewx ∧trans(ϕ))
trans(3ϕ) = ∃v(Rwv ∧V
i Evxi(xi free in ϕ) ∧[v/w]trans(ϕ))
Any model M for modal predicate logic is at the same time one
for Lcorr, and indeed the following equivalence relates the above modal
semantics with standard ﬁrst-order evaluation:
Theorem 20 (Translation Theorem). For each model M and formula
ϕ of modal predicate logic, M, w, a |= ϕ iﬀM, a+ |= trans(ϕ), where
the assignment a+ sends object variables to their a-values, while the
free world variable of trans(ϕ) goes to the world w.
Thus, syntactically, modal predicate logic becomes a fragment of
the full two-sorted ﬁrst-order language Lcorr. In this setting, its special
characteristic semantic invariance is then a mixture of two structural
relations: modal bisimulation plus the notion matching it for a full ﬁrst-
order language, namely, potential isomorphism (cf. Chapter 7):
Deﬁnition 11.4.2. A world-object bisimulation between two models
M, N for modal predicate logic is a relation Z between tuples wd in
M and ve in N of the same length (here, bold face letters denote ﬁnite
sequences, and objects in matched tuples belong to the speciﬁed initial
world) that satisﬁes: (a) each match between corresponding objects in
109More precisely, there is an eﬀective translation into ﬁrst-order frame properties
for all modal predicate-logical formulas α →β, where α has the inductive syntax
rule ∃| ∧| ∨|
3 | γ with γ having syntax P x | ∀|
2, while β is a wholly positive
formula with syntax rule P x | ∀| ∃| ∧| ∨|
3 |
2.

February 2, 2010
124 / Modal Logic for Open Minds
matched tuples induces a partial isomorphism for predicate logic, (b)
if wRw′ in M, then there is a world v′ in N with vRv′ and w′dZv′e,
and vice versa in the other direction, and (c) if d in M, then there is
an object e in N with the pair wdd, vee in Z – and again vice versa.
Here is an analogue for modal predicate logic of the Modal Invariance
Theorem of Chapter 7, just as an illustration:
Theorem 21 (Invariance Theorem). The following are equivalent for
formulas ϕ in Lcorr:
1. ϕ is invariant for world-object bisimulations,
2. ϕ is deﬁnable by a formula of modal predicate logic.
11.5
Tricky phenomena
Our results so far suggest smooth generalization. But over the last
decades, it has emerged that modal predicate logic can behave quite
diﬀerently from its propositional counterpart. A striking instance is
incompleteness: often, there is no complete axiomatization for model
classes that caused no problems in the propositional case. In addition,
there are failures of model-theoretic results such as interpolation the-
orems. Thus, choosing the right semantics for modal predicate logic is
not an easy matter. We will discuss these issues in Chapter 26.
Here we conclude with a modern diagnosis in terms of “combining
modal logics”, mentioned brieﬂy toward the end of Chapter 7. We are
really trying to merge two diﬀerent logical systems, each with its own
semantics: the propositional modal realm of worlds and accessibility,
and ﬁrst-order predicate logic over domains of individual objects. Now,
Chapter 27 shows how ﬁrst-order logic itself is a modal logic, inter-
preted over spaces of variable assignments, with accessibility relations
Rx for moving from one assignment to another diﬀering from it only
in the value for the variable x. Modal predicate logic, then, is what
is technically called a product of two modal logics, and we will see in
Chapter 24 that product logics can be very unlike their components.
More conceptually, the underlying issue here is what are to be the
“objects” in a modal predicate logic. Recent proposals tend to make
them a family of functions across worlds, turning models into mathe-
matical categories. But whichever way we construe them, it is important
to perform this extension also from a practical point of view. Knowing
objects like persons, telephone numbers, or even rules and methods is
crucial to natural language and human agency.110
110I am gradually becoming more uneasy about this omission, and these pangs of
conscience may show in a second edition of this book.

Modal predicate logic / 125
February 2, 2010
Exercises Chapter 11
1. Show that the modal distribution law is not valid in a modal pred-
icate logic allowing arbitrary changes between world domains.
2. Prove that, using our most general semantics without Domain
Cumulation, the axiom ∃x2Px →
2∃xPx corresponds, in the
technical sense, to ∀w : ∀v(Rwv →∀x(Exw →Exv)).
3. Give a detailed frame correspondence argument that the Barcan
Axiom deﬁnes reverse domain inclusion along accessibility.
4. (Diﬃcult) Prove that, on frames with Domain Cumulation, the
modal predicate-logical axiom
2∃xPx →∃x2Px is ﬁrst-order
deﬁnable by the conjunction of the two ﬁrst-order properties (a)
No Object Growth, (b) each world whose domain has more than
one object has at most one world successor.
5. (Very diﬃcult) Prove that, on general models, the same modal
axiom
2∃xPx →∃x2Px is not ﬁrst-order deﬁnable.
6. Prove the Translation Theorem stated in Section 11.4.

February 2, 2010

February 2, 2010
Part III
Selected Applications

February 2, 2010

/ 129
February 2, 2010
Modal logic is in use today across a wide range of disciplines, and
no introductory course can do justice to its whole range. The following
chapters reﬂect the major illustrations from which I have chosen over
the years, loosely grouped under two headings.
The ﬁrst group (Chapters 12–17) is about a basic interest unify-
ing the diverse systems of philosophical logic, viz. information, rational
agency, and interaction. I present traditional labels like “epistemic” or
“doxastic” logic in one coherent story, mixing in dynamic logic from
computer science, and ending in modern logics of games played by
agents with preferences and goals. But modal structures arise equally
well in the heartland of mathematical logic, and Chapters 18–21 give ex-
amples ranging from the study of time and space to the foundations of
mathematics. I have not added a separate group of chapters on the area
with perhaps the bulk of logic research today, viz. computational logic,
but its themes play throughout these notes, in particular, dynamic and
temporal logic, but also our concern with complexity.111
Even so, I had to make choices, and some important topics are miss-
ing from this survey, especially on the mathematical side. The reader
will have to check with the Handbook of Modal Logic (Blackburn et al.,
2006) to ﬁnd chapters dealing with such topics as the widespread al-
gebraic approaches to the ﬁeld (nowadays also including “co-algebra”),
inﬁnitary modal languages, and modal set theory.
These chapters are light, and they merely serve to introduce students
to their areas. Even so, there is a lot of material, and in a typical
course, I just choose a three-week line of special topics, depending on
student interest. In particular, the chapters on epistemic, doxastic and
dynamic logics are favourites for their appealing intuitions and links
across disciplines, while temporal and spatial logics are popular for the
way they throw new light on “standard” structures in mathematics.
The main notions and techniques from Parts I and II will return
throughout the chapters to come. Relational graph models are central,
from knowledge to time, space, and provability, even when notations
diﬀer. Thus, hopefully, you will see the unity of modal logic precisely
in this diversity. Even so, the style in what follows diﬀers from the
“instruction manual” in Parts I and II, as we are introducing new areas
relying on these earlier results. One ﬁnal diﬀerence with standard logic
texts is worth noting. While introductions to propositional or predicate
111Personally, I ﬁnd all these standard terms misleading and useless, and if the
reader ﬁnds it hard to classify the content of these lectures as philosophical, math-
ematical, or computational, then all the better!

February 2, 2010
130 /
logic (or modal logic in the preceding parts) usually train students with
abstract technical examples, modal logic in the areas discussed here
requires a real Art of Modeling. It is not trivial to ﬁnd good models
for information states, processes, or games, and a certain creativity is
required. Unlike drill in formal deductions or truth deﬁnitions, modeling
is not a skill that can be taught in some algorithmic fashion. But we
hope that the student will also pick up some signiﬁcant abilities in tying
logic to meaningful real scenarios.
Introducing chapters 12 through 17: Modal logics of agency
While philosophical logic has been a diverse collection of topics, there
is a more systematic view that ties many of these together. Logic has
been traditionally considered the study of reasoning, or even more spe-
cialized: deductive proof. But in recent decades, a much broader view
has emerged where logic is about a wide spectrum of common sense
reasoning activities, often intertwined with natural language. But one
can go still one step further. Reasoning, after all, is just one form of
information handling by rational agents. Agents can also make obser-
vations, ask questions, and thus direct information ﬂow from many
sources, either alone or in interaction with others. Think of a scien-
tiﬁc experiment, where observation occurs entangled with deduction, a
match made immortal by Sherlock Holmes. Or think of a debate, the
original paradigm for logic historically, where several agents interact,
and where a natural mixture occurs of deductive moves, questions, and
perhaps even observation of new relevant facts. In recent years, there
has been a move toward bringing this full reality into the scope of logic,
including the informational events that drive it. Here is a glimpse of
what a logic of full-blooded agency involves.
Rational agents are endowed with a number of powers and can per-
form many cognitive tasks. You can think of them as a next stage after
classical Turing machines, that are still simple robot-like agents for ba-
sic computational tasks. Here are some core features of agency that
have turned out amenable to logical investigation. First of all, agents
exercise informational powers, through external acts of observation, or
internal acts of inference, introspection, or memory retrieval. In doing
so, they change their knowledge, but also other attitudes that guide
behaviour, such as their beliefs. But this information gathering is not a
blind process: it has a direction, given by an agenda of current “issues”,
and the agenda items are steered by agents’ questions, and other acts.
In a stronger sense, these directions are tied up with genuine goals, hav-
ing to do with agents’ preferences and evaluation of situations, another

/ 131
February 2, 2010
crucial aspect of rational agency. Without the latter, there is just logi-
cal “kinematics”, but no deeper explanatory “dynamics” of behaviour.
And ﬁnally, human agency is crucially interactive, largely taking place
in social settings. As in physics, where “many-body interaction” is the
key, strategic “many-mind interactions” drive logical behaviour, includ-
ing conversation, argumentation, or more general games.
Thus, we get a picture of individual agents endowed with a set of
core capacities, involved in dynamic transitions of various kinds from
one state to another, and in the process, creating long-term practices
over time, with larger groups of participants. Now you can see what
the following chapters are trying to do. They give you the logical ap-
paratus to talk about agents’ attitudes like knowledge or belief, and
they study dynamic informational events that change these attitudes,
such as observation or communication. Next, they consider how agents
evaluate the world, as expressed in their preferences, and ways these
may change, too. And ﬁnally, they bring it all together in the study
of games, where agents display all these abilities in one setting, with
strategic interactive behaviour over time. By the time you have mas-
tered these chapters, you will be in an excellent position to join in the
modern study of agency, which opens up exciting new horizons for logic.

February 2, 2010

February 2, 2010
12
Epistemic logic
Modal logics have been typically used to model what philosophers call
propositional attitudes such as “x knows that ϕ”, “x believes that ϕ”,
etcetera. Natural language is very rich in these, which probably says
something about human cognition, but philosophers and logicians have
mainly concentrated on a few. In this chapter, we consider knowledge.
12.1
Epistemic notions across disciplines
Epistemic notions have been discussed in philosophy ever since Plato,
who analyzed knowledge as “justiﬁed true belief”. True belief alone is
not enough for knowledge: I might believe that the Earth is round be-
cause my Palo Alto psychic told me it is shaped like her glass bowl,
but is this knowledge? That is why Plato added a demand for “justi-
ﬁcation”.112 In this century, the “Gettier Paradox” is taken by many
to show that Plato’s Formula is not enough – and there has been a
rich tradition of ﬁnding further ingredients. Another area where epis-
temic attitudes come up is theology. Religious people believe, they do
not necessarily know that their beliefs are correct. That is why there
is a genuine “act of faith”, that we do not experience when entrusting
ourselves to the known truth that 2 + 3 = 5.113
Natural language has a vast array of epistemic phrases, such as
“know, believe, be convinced, doubt”. And even without such explicit
expressions, there may be implicit epistemic attitudes. “Oedipus saw
his father on the road, quarreled with him, and then killed him.” In the
sense of bare perception, he just saw a man who happened to be his
father. In the sense of epistemic seeing, he saw the man and recognized
him. We would call him guilty of parricide in the second case, not the
112In view of later multi-agent concerns, you might ask: whose justiﬁcation?
113Logic-minded theologians have tried to give proofs for God’s existence, often
with a modal ﬂavour. A good reference is Plantinga (1978).
133

February 2, 2010
134 / Modal Logic for Open Minds
ﬁrst – though the Greek tragedy did not acknowledge this distinction.
Virtually everything we say has this potential ambiguity. In Koestler’s
Darkness at Noon a communist prisoner is shown the statement that
“in 1947, I had discussions with American spy so-and-so”. His jailers
tell him this is just the literal truth, so why not sign? But, at the
time of meeting, the statement was only true in the bare sense (he did
not know that the American was a spy), while signing it now will be
interpreted epistemically as an admission of guilt.114
Issues of knowledge have also come up in computer science. Though
computational agents are not humans, it is convenient to reason about
them as if they were.115 By now, multi-agent systems are the real-
ity of computing with the Internet, or the Grid, and border-lines with
other disciplines get blurred. In particular, in economics, the paradigm
for “multi-agent systems” are games, and epistemic notions were intro-
duced in the foundations of game theory in the 1970s, to provide an un-
derpinning for standard solution concepts like Nash equilibrium. Epis-
temic issues also come up in the foundations of mathematics - and we
will touch upon “intuitionistic logic” in Chapter 20, which sees math-
ematics as epistemic travel through a universe of information states.
If you ﬁnd this host of subjects bewildering, please realize that dis-
ciplinary boundaries are artiﬁcial if you focus on issues of information,
agency and cognition – the broader area we are entering now. That is
why (some) logicians have no diﬃculty in making such mental leaps.
12.2
Epistemic logic: basic language and semantics
We start with the simplest language, where knowledge of agents refers
to their current information range, being the set of all possible worlds
they consider compatible with the actual world. While epistemic logic
was initially developed as an account of the knowledge of single agents
in some philosophical sense, perhaps its most interesting uses have to
do with information in ordinary life and human interaction. Here is a
typical intuitive situation of this sort.
Example (Questions and Answers). I approach you in Amsterdam,
and ask “Is this building the Rijksmuseum?”. As a well-informed and
helpful Dutch citizen, you answer truly: “Yes”. This is the sort of thing
we all do competently all the time. But subtle information ﬂows. By
asking the question, I convey to you that I do not know the answer,
and also, that I think it is possible that you do know. This information
114Note again the multi-agent “control”: whose description is being used?
115Another logic-laden epistemic topic is security in electronic communication.

Epistemic logic / 135
February 2, 2010
ﬂows before you have said anything at all.116 After that, by answering,
you do not just convey the topographical fact to me that this building
is the Rijksmuseum. You also make me know that you know, and that
you know that I know you know, etc. This knowledge up to every
ﬁnite depth of iteration is called common knowledge. It mixes “factual”
information with “social” information about the information of others.
In particular, epistemic overtones concerning mutual information of
agents are not mere side-eﬀects of communication. They steer concrete
actions. If I know that you do not know that I know your pin code and
account number, I may well try to empty your bank account. But if I
know that you know that I know these data, I will not. Here is a basic
epistemic language that captures the essentials of our example.
Deﬁnition 12.2.1 (Basic epistemic language). The basic epistemic
language EL extends propositional logic with modal operators Kiϕ
(“i knows that ϕ”), for each i ∈I, as well as CGϕ: “ϕ is common
knowledge in the group G”. The inductive syntax rule is as follows,
where“p” stands for any choice of proposition letters:
p | ¬ϕ | ϕ ∨ψ | Kiϕ | CGϕ
We write ⟨i⟩ϕ for the existential modality ¬Ki¬ϕ: which says intu-
itively that “agent i considers ϕ possible”. The existential dual modal-
ity of CGϕ is written as ⟨CG⟩ϕ.117
These agent modalities can deal with the preceding scenario:
Example (Questions and Answers, continued). Let Q ask a factual
question “ϕ?”, to which A answers truly: “Yes”. The presupposition
for a normal truthful answer is that A knows that ϕ: which may be
written as KAϕ. The question itself, if it is a normal co-operative one,
conveys at least the presuppositions
(i) ¬KQϕ ∧¬KQ¬ϕ (“Q does not know whether ϕ”),
(ii) ⟨Q⟩(KAϕ ∨KA¬ϕ) (“Q thinks that A may know the answer”).
After the whole two-step communication episode, ϕ is known to both
agents: KAϕ ∧KQϕ, while they also know this about each other:
KQKAϕ ∧KAKQϕ, etcetera. Indeed, they achieve the “limit notion”
of common knowledge, written as C{Q,A}ϕ. The importance of this
notion has been recognized in many areas by now, from philosophy to
game theory, computer science, linguistics, and psychology.
116Both presuppositions fail with rhetorical questions: a teacher knows the answer,
and need not have any illusions about the students’ knowing the answer.
117Common knowledge CG is a higher-order notion, while individual modalities
are ﬁrst-order. The dual modality ⟨CG⟩is mainly a technical convenience.

February 2, 2010
136 / Modal Logic for Open Minds
The preceding assertions only make precise sense when backed up
by a semantics. Here is the formal version of the intuitive idea of “in-
formation as range” in the graph models of Chapter 2:
Deﬁnition 12.2.2 (Models). Models M for the epistemic language
are triples (W, {→i| i ∈G}, V ), where W is a set of worlds, G is a set
of agents, the →i are binary accessibility relations for agents between
worlds, and V is a valuation assigning truth values to proposition letters
at worlds. We will also use the notation ∼i for accessibility.
In what follows, our primary semantic objects are pointed models
M, s where s is the actual world representing the true state of aﬀairs,
even though the agents may not know this.
Epistemic models encode collective information states for groups of
agents ﬁnding themselves in some real situation that they need not
know, and may want to learn about. We impose no general structural
conditions on the accessibility relation – leaving this choice as a “degree
of freedom” for the modeler using the system. But in fact, many of our
examples work with S5-style equivalence relations (reﬂexive, symmet-
ric, and transitive; cf. Chapter 8) – and the reader should feel free to
keep such special settings in mind throughout.
Example (Setting up realistic models). A real feel for the elegance and
utility of epistemic logic only comes from the “art of modeling” real
scenarios. Doing so also dispels delusions of grandeur about “worlds”.
Consider a simple game: three cards “red”, “white”, “blue” are given
to three players: 1, 2, 3, one each. Each player sees her own card, but
not that of the others. The real distribution over the players 1, 2, 3 is
red, white, blue (rwb). Here is the resulting information state:
rwb
1
3
444444444444444
rbw
2
F
F
F
F
F
F
F
F
bwr
2
x
x
x
x
x
x
x
x
1
F
F
F
F
F
F
F
F
3
wbr
brw
2
3 














wrb
1
x
x
x
x
x
x
x
x
This pictures the 6 relevant states of the world (the “hands”, or distri-
butions of the cards), with the appropriate accessibilities (equivalence
relations in this case) pictured by the uncertainty lines between hands.
E.g., the single 1-line between rwb and rbw indicates that player 1 can-
not distinguish these two situations, whereas 2 and 3 can (they have
diﬀerent cards in them). In particular, the diagram says the following,

Epistemic logic / 137
February 2, 2010
intuitively: though they are in rwb (as an outside observer can see),
no player knows this. Of course, the game itself is a dynamic process
yielding further information, which will be our theme in Chapter 15.
Over these structures, which may often be pictured graphically and
concretely as a sort of “information diagrams” for a group of agents,
we can now interpret the epistemic language:
Deﬁnition 12.2.3 (Truth conditions).
M, s |= p
iﬀ
V makes p true at s
M, s |= ¬ϕ
iﬀ
not M, s |= ϕ
M, s |= ϕ ∧ψ
iﬀ
M, s |= ϕ and M, s |= ψ
M, s |= Kiϕ
iﬀ
for all t with s →i t: M, t |= ϕ 118
M, s |= CGϕ
iﬀ
for all worlds t that are reachable from s by
some ﬁnite sequence of arbitrary →i steps with
i ∈G we have M, t |= ϕ 119
Example (A model for a question/answer scenario). Here is how a
question answer episode might start (this is just one of many appro-
priate concrete initial situations!). In the following diagram, reﬂexive
arrows are presupposed, but not drawn. Intuitively, agent Q does not
know whether p, but A is fully informed about it:
p • o
Q
/ ◦¬p
In the black world, the following formulas are true:
p, KAp,
¬KQp ∧¬KQ¬p,
KQ(KAp ∨KA¬p),
C{Q,A}(¬KQp ∧¬KQ¬p),
C{Q,A}(KAp ∨KA¬p)
This is an excellent situation for Q to ask A whether p is the case:
he even knows that she knows the answer. Once the answer “Yes” has
been given, intuitively, this model changes to the following one-point
model where maximal information has been achieved:
p •
Now, of course C{Q,A}p holds at the black world.
The epistemic language sharpens various intuitive distinctions. For
instance, saying that “everybody in the group knows something” is not
yet common knowledge, but the operator EGϕ of universal knowledge
in a group, being the conjunction of all formulas Kiϕ for all i ∈G.
The social character of group information suggests further notions.
118This is of course just the standard universal box modality
2 of Parts I and II.
119More precisely, one can deﬁne a new accessibility relation →G for the whole
group G as the reﬂexive transitive closure of the union of all separate relations →i
(i ∈G). CG is then the universal modality for this relation.

February 2, 2010
138 / Modal Logic for Open Minds
Example (From implicit to explicit group knowledge). Suppose that
both agents have information that the other lacks, say as follows:
p, q • o
Q
/ ◦¬p, q
p, ¬q ◦
A
O
Here, the black dot is the actual world. The most cooperative scenario
is for Q to tell A that q is the case (something that Q knows), while
A can then tell her that p. This reduces the initial three-point model
to the one-point model where p ∧q is common knowledge.
Another way of describing what happens in the preceding example
is that, when Q, A do the best they can in informing each other, they
will cut things down to the intersection of their individual accessibility
relations. This suggests a new natural notion for groups:
Deﬁnition 12.2.4 (Distributed knowledge). Intuitively, a formula ϕ is
implicit or distributed knowledge in a group, written DGϕ, when agents
could come to see it by pooling their information. More technically, this
involves intersection of accessibility relations:
M, s |= DGϕ
iﬀ
for all t with s∩i∈G →i t : M, s |= ϕ
120
Intuitively, agents can turn their implicit group knowledge into com-
mon knowledge by acts of communication: Chapter 14 has more.
12.3
Validity, axiomatic systems, and correspondence
Basic logics Validity of formulas ϕ in epistemic logic is deﬁned as
usual, as truth of ϕ in all models at all worlds. Consequence from
premises to conclusions is then deﬁned as in Chapter 4, through valid
conditionals. Our completeness theorem of Chapter 5 then tells us that
the minimal modal logic K is at the same time a minimal epistemic
logic, at least for individual knowledge operators.121
120Here the relation for DG runs from world s to all t that are connected to it
simultaneously by every agent accessibility relation →i. This relates all those worlds
that no agent can distinguish from the current one. There have been doubts in the
literature whether this is really the best intuitive account of distributed knowledge as
“what can be made explicit through communication”, partly, because bisimulation
invariance fails. We forego such further issues here.
121We drop agent subscripts for K-operators when they play no essential role.

Epistemic logic / 139
February 2, 2010
Even though this calculus is simple, one of its axioms has sparked
continuing debate, viz.
K(ϕ →ψ) →(Kϕ →Kψ)
Epistemic Distribution
This says that agents’ knowledge is closed under logical inferences,
and this “omniscience” is usually considered unrealistic. At stake here
is a distinction between semantic and inferential information. Seman-
tically, in terms of pure observation, an agent who has the information
that ϕ →ψ and that ϕ, also has the information that ψ. But in a
more ﬁne-grained perspective of inferential information and dynamic
processes of elucidation, this need not be the case at all.122
Systems of deduction like this may be used in two modes. They either
describe (a) the agents’ own explicit reasoning “inside” our scenarios,
or (b) our own “outside” reasoning as theorists about them. In many
settings, the diﬀerence between the two stances will not matter: the
modeler is “one of the boys” – but sometimes, it may.
Stronger logics: correspondence On top of the minimal epistemic
logic, we can help ourselves to stronger axioms endowing agents with
further informational features. These will impose matching structural
conditions on accessibility by frame correspondence (cf. Chapter 9).
Here are three more axioms with vivid epistemic interpretations:
Kϕ →ϕ
Veridicality
Kϕ →KKϕ
Positive Introspection
¬Kϕ →K¬Kϕ
Negative Introspection
The former is uncontroversial (knowledge is “in synch” with reality),
but the latter two have been much discussed. They assume that, in ad-
dition to logical omniscience, agents also have unlimited introspection
into their own epistemic states. But we are all surrounded by people
who do not realize their own ignorance!
Formally, these axioms correspond to the following structural con-
ditions on accessibility, by techniques that you already know:
Kϕ →ϕ
reﬂexivity
∀x : x →x
Kϕ →KKϕ
transitivity
∀xyz : (x →y ∧y →z) ⇒x →z
¬Kϕ →K¬Kϕ
euclidity
∀xyz : (x →y ∧x →z) ⇒y →z
The complete deductive system with all the above axioms is our
earlier logic S5, or “multi-S5” when we have more than one agent.
122There are many proposals for ﬁnely-grained syntactic perspectives on informa-
tion: cf. the chapter by van Benthem & Mart´ınez in the Handbook of the Philosophy
of Information. There are also dynamic logics of inference steps and related acts of
“awareness raising”, that go beyond our present scope.

February 2, 2010
140 / Modal Logic for Open Minds
What may be surprising is that this logic has no “interaction axioms”
relating diﬀerent modalities Ki, Kj. But none are plausible.
Example (Your knowledge and mine do not commute). Here is a
counter-example to K1K2p →K2K1p. Its antecedent is true in the
black world to the left, but its consequent is false:
• o
2
/ ◦o
1
/ ◦
p
p
¬p
Such formulas only hold for agents with special informational links.
In the “dynamic epistemic logics” of Chapters 15, 23, some commu-
tation principles do hold, but then between epistemic modalities and
action modalities. In between the minimal logic K and S5, many other
epistemic logics have a following, such as “KD45” for belief.
Stronger languages Another earlier theme is extension of expressive
power, having to do with which modal language we want to use for de-
scribing our structures. The basic epistemic language is one candidate,
but one may add “universal modalities” ranging over all worlds (acces-
sible or not), or “nominals” picking out single worlds (cf. Chapters 7,
10). The most striking addition in the epistemic setting has been the
earlier-mentioned group modality of common knowledge.
Theorem 22. The complete epistemic logic with common knowledge
is axiomatized by adding the following principles to the minimal logic,
with EG the earlier modality “everyone in the group knows”:
CGϕ ↔(ϕ ∧EGCGϕ)
Fixed-Point Axiom
(ϕ ∧CG(ϕ →EGϕ)) →CGϕ
Induction Axiom
These axioms are also of independent interest for what they say. The
Fixed-Point Axiom expresses an intuition of “reﬂective equilibrium”:
common knowledge of ϕ is a proposition implying ϕ of which every
group member knows that it is true. Restated slightly diﬀerently, its
“ﬁxed point character” says that the agents are in an epistemic state
where saying that it is a truth that everyone knows that state adds
nothing new. On top of this, the Induction Axiom reﬂects the usual
Induction Axiom of Arithmetic in an obvious manner:
(ϕ(0) ∧∀n(ϕ(n) →ϕ(n + 1)) →∀nϕ(n)
Technically the epistemic Induction Axiom says that CGϕ is not just
any equilibrium state of its kind, but the largest.123
123Thus, common knowledge is a “greatest ﬁxed-point”: cf. Chapter 22 for details.

Epistemic logic / 141
February 2, 2010
12.4
Invariance, expressive power, and the balance
with complexity
All more advanced topics from our earlier chapters make immediate
sense for the epistemic language. We brieﬂy mention a few. First, we can
translate the whole language eﬀectively into ﬁrst-order logic, though we
would need a “ﬁxed-point extension” of ﬁrst-order logic called LFP(FO)
to deal with common knowledge (cf. Chapters 7, 22 for such extensions).
Next, inside this larger arena, we can measure the expressive power
of epistemic languages in terms of their invariance for various notions
of bisimulation. The intuitive interpretation of this invariance relation
does acquire a certain local ﬂavour, of course – this time, not as a
“process equivalence”, but as equivalence of information structure.
Example (Bisimulation-invariant information structures). Our earlier
question-answer example has a bisimulation with the following variant:
• p
Q
• p
Q

Q
///////////
◦¬p
A
O
O
O
O
O
O
O
O
◦¬p
◦¬p
In a natural sense, both models represent the same information state
for the agents. Bisimulation also occurs naturally in information update
changing a current model. Suppose that the initial model is like this,
with the actual world indicated by the black dot:
p •
2
1
◦¬p
p ◦
All three worlds satisfy diﬀerent epistemic formulas, as you can check
for yourself. Now, despite her uncertainty, in the actual world, agent 1
does know that p, and can say this – updating to the model
p •
1
p ◦
But here the two worlds are intuitively redundant, and there is an
obvious bisimulation to just the one-point model
p •

February 2, 2010
142 / Modal Logic for Open Minds
Deﬁning information states Chapter 3 had model-theoretic results
tying bisimulation closely to truth of modal formulas across models.
The epistemic perspective suggests one more basic issue. First, note
that the intuitive notion of an “information state” has both syntac-
tic and semantic versions. Syntactically, there is the modal theory of
a world w in a model M: an explicit record of all formulas that are
true “internally” at w about the facts, agents’ knowledge of these, and
their knowledge of what others know. By contrast, modal models M, w
locate the same information implicitly in the local valuation of world
w plus its global interaction with other worlds via accessibility rela-
tions.124 The following result says essentially that states in an epistemic
model and their maximally consistent epistemic theories are equivalent:
Theorem 23. For each ﬁnite model M, s, there is an epistemic formula
β with common knowledge125 such that the following are equivalent:
(a) N, t |= β
(b) N, t has a bisimulation ≡with M, s such that s ≡t.
The Invariance Lemma of Chapter 3 said that bisimulation has the
right ﬁt with the modal language. The new theorem strengthens this
to say that each semantic state is captured by one epistemic formula.
This result extends to arbitrary models, provided we are willing to
use formulas from a language allowing arbitrary inﬁnite conjunctions
and disjunctions (cf. Chapter 7, 22). Instead of a proof, we give an
illustration of how such complete deﬁnitions work.
Example (Deﬁning a model up to bisimulation). Consider the two-
world model for our earlier basic question-answer episode. Here is an
epistemic formula which deﬁnes its ϕ-state up to bisimulation:
p ∧C{Q,A}((KAp ∨KA¬p) ∧¬KQp ∧¬KQ¬p)
These results allow us to switch, in principle, between semantic and
syntactic accounts of information states. Syntactic states have been
dominant in areas like belief revision theory, and semantic ones in the
dynamic epistemic logics that we will discuss in Chapters 15 and 23.
124This “external” global feature is sometimes considered a drawback of relational
semantics. But really, it is a brilliant move, describing worlds externally through
their interactions with other worlds, the same way Category Theory describes math-
ematical structures through their morphisms with other structures.
125Common knowledge is needed to make sure we quantify over all accessible
worlds in our models. In fact, even a single reﬂexive point cannot be deﬁned up
to bisimulation in the basic modal language, since any modal formula true in that
point can be made true in the root of a ﬁnite tree (by unraveling, Chapter 3), which
has no bisimulation with it: just consider the irreﬂexive end points!

Epistemic logic / 143
February 2, 2010
Computational complexity While issues of derivability and deﬁn-
ability have been the main pillars of logical analysis so far, in recent
years, there has been a growing awareness that issues of task complex-
ity form a natural complement. Given that all information available
to us has to be recognized, or extracted to be of use, it is natural to
ask how complex such extraction processes are – cf. our discussion for
basic modal logic in Chapter 6. The “complexity proﬁle” of the ba-
sic epistemic language is that of the basic modal one. Model-checking
takes PTIME, satisﬁability is PSPACE-complete, and model compar-
ison takes PTIME. But there are a few nice twists in the epistemic
setting. Single-agent satisﬁability in S5 was in NP, since S5 had a
normal form without iterated modalities close to propositional logic.
But with two agents, involving two equivalence relations as in many of
our examples, satisﬁability jumps back to PSPACE: social life is more
complicated than being alone.
These complexity results are aﬀected by the expressive power of the
language. For instance, when we add the earlier common knowledge
modality CGϕ to the language, the above proﬁle changes as follows:
Fact. The complexity proﬁle of the epistemic language with CG is:
Model-Checking
Satisﬁability
Model Comparison
PTIME
EXPTIME
PTIME
Best algorithms for model-checking formulas with common knowl-
edge are quite clever; while the analysis of decidability also changes
considerably from what we saw in Chapter 6.
Information and games Finally, we note that computation is not
just a routine chore measuring “diﬃculty” of tasks: it is also a funda-
mental process in its own right. This comes out particularly well with
the earlier game versions of basic tasks (Chapters 2, 3), which model the
“intensional” procedural activity behind them in a vivid manner. There
were games for semantic model-checking, model comparison, and there
are even logical games for testing validity or satisﬁability via model
construction moves. Indeed, games have a more general relevance to
epistemic logic. They are typical multi-agent informational processes,
whose practice and theory involves epistemic notions in an essential
way. We present this link in more detail in Chapter 17.
12.5
Conclusion
We have surveyed epistemic logic as a species of modal logic, emphasiz-
ing how our earlier general themes play naturally in this setting. But we
have also shown how the peculiarities of an interest in knowledge lead

February 2, 2010
144 / Modal Logic for Open Minds
to new modal logical notions. Of course, there are still further issues
that might be pursued, and we mention three particular avenues.
A richer epistemic predicate logic (cf. Chapter 27) can make further
important distinctions about knowledge of properties of individual ob-
jects, such as ∃xKaϕ(x) (“de re knowledge”) versus Ka∃xϕ(x) (“de
dicto knowledge”). Such richer systems are needed to formalize natural
reasoning about knowing objects, such as telephone numbers, or peo-
ple. As we said in the Introduction to this Part, extending our whole
framework to the predicate-logical case is a task that mostly still needs
to be done – and who knows, it may be done by you!
In addition to declarative knowledge there is procedural knowledge
and “skills”. An account of the intuitive notion of “know-how” versus
our present “know-that” would involve knowledge which procedures
lead to certain desired (information) states. Some of this will be con-
sidered in Chapters 16, 17 using tools from dynamic logic (Chapter
15).
Finally, the philosophical tradition also has the natural notion of jus-
tiﬁcation or evidence for knowledge. One option is to add resources to
our systems with explicit justiﬁcations or cost functions for epistemic
modalities – say in an indexed format K[x]ϕ: “evidence x supports
knowledge that ϕ”. Then earlier axioms acquire interesting new formu-
lations, such as modal distribution:
K[x]ϕ →(K[y](ϕ →ψ) →K[x + y]ψ),
with + some “merge” function for evidence. So, we can know logical
consequences of our knowledge, but at a cost indicated by the calculus
of evidence. Keeping track of justiﬁcations also has independent virtues:
it allows for ﬁner-grained analyses of many epistemic notions. Now,
“having evidence” is an existential quantiﬁer that seems at odds with
our universal quantiﬁer for Kϕ as “in all current alternatives”. But the
provability logic of Chapter 21 shows how the two can co-exist happily.

Epistemic logic / 145
February 2, 2010
Exercises Chapter 12
Epistemic models always have equivalence relations in what follows, –
but in the diagrams, only the minimal set of lines is displayed.
1. Some earlier modal topics in epistemic semantics:
(a) Find epistemic formulas that uniquely deﬁne each world in
this model:
p ◦
2
1
◦p
1
p ◦
◦¬p
(b) The following information model is “over-elaborate”. How
would you show that technically?
¬p ◦
2
1
◦p
1
p ◦
2
◦¬p
2. Which one of the following two implications is valid in multi-S5?
Draw a counter-example for the other:
⟨1⟩K2ϕ →⟨2⟩⟨1⟩ϕ,
⟨1⟩K2ϕ →⟨2⟩K1ϕ
3. Here some basics of reasoning with groups:
(a) Show that EGϕ does not imply CGϕ, while DGϕ does not
imply EGϕ.
(b) Check the validity of the axioms for common knowledge with
the semantic explanation in our models.
(c) Common knowledge is undeﬁnable in terms of ordinary K-
operators for single agents in a group, if that group has at
least 2 members. Prove this by considering models consisting
of ﬁnite linear chains of worlds connected by alternating ∼1
and ∼2 links. Hint: Use a suitable “Finite Depth Property”
for multi-agent epistemic formulas.
(d) Consider knowledge across diﬀerent groups. Does CG1ϕ ∧
CG2ϕ imply CG1∪G2ϕ, or vice versa? Can you ﬁnd other
valid principles of this sort?

February 2, 2010

February 2, 2010
13
Doxastic and conditional logic
13.1
From knowledge to belief as a trigger for actions
While best available information and knowledge are important, our
actions are often driven by less demanding attitudes of belief. I am
riding my bicycle since I believe that it will get me home, even though
my epistemic range includes worlds where the Great Earthquake ﬁnally
happens. Indeed, decision theory is about choice and action on the basis
of beliefs, since waiting for knowledge may last forever. Think of simple
scenarios like in Chapter 12. The cards have been dealt. I know that
there are 52 of them, and I know their colors. But I have more ﬂeeting
beliefs about who holds which card, or how other agents will play.126
With this distinction in attitude comes one of dynamics. An event
of hard information changes irrevocably what I know. If I see the Ace
of Spades played on the table, I come to know that no one holds it
any more. But there are also events of soft information, that aﬀect my
current beliefs without aﬀecting my knowledge about the cards. I see
you smile. This makes it more likely that you hold a trump card, but
it does not rule out that you do not. This soft information motivates
the semantics of belief in the sections to follow.
13.2
Basic logic of belief and knowledge: ﬁrst attempt
A simplest “doxastic logic” works in the same style as epistemic logic,
with an accessibility relation that drops Veridicality (reﬂexivity), be-
cause, crucially, beliefs can be wrong:
Example (A mistaken belief). Consider the following model with two
worlds that are epistemically accessible to each other, but the pointed
arrow is the only belief relation. Here, in the actual black world to the
126I could even be wrong about the cards (a demon replaced the King of Hearts
by Clinton’s visiting card), but this worry seems morbid in normal scenarios.
147

February 2, 2010
148 / Modal Logic for Open Minds
left, the atom p is true, but the agent mistakenly believes that ¬p:
p •
+ ◦¬p
More precisely,
Biϕ
(“i believes that ϕ”)
is a universal modality of the sort we know over a new accessibility
relation RB,i. Here, intuitively, knowledge implies belief: Kiϕ →Biϕ,
but not vice versa. One may believe more propositions than those one
knows, which gives a converse semantic requirement that the relation
RB,x should be included in RK,i. For belief, I am willing to consider
fewer alternatives. I believe that Australia exists (it is there in all worlds
I ﬁnd most plausible), even though I do not strictly know this: my only
evidence is having seeing the Russell Crowe movie “Heaven’s Burning”.
Again, we see the distinction between hard and soft information.
As for logical systems, one usually takes the minimal modal logic K
once more, just as for knowledge, plus the K4 axiom of positive intro-
spection for belief. The veridicality axiom Baϕ →ϕ is not plausible,
but instead, one usually requires
Baϕ →¬Ba¬ϕ
Belief Consistency127
Further axioms govern the interplay of knowledge and belief. As we
said already, it is uncontroversial that knowledge implies belief:
Kaϕ →Baϕ
while some authors accept strong introspection laws like
Baϕ →KaBaϕ
Combinations of knowledge and belief have been used, for instance, in
semantic analyses of “assertoric force” of statements in natural lan-
guage. When an agent a says that ϕ, then the force of this seems
stronger than Baϕ, but weaker than Kaϕ, and hence the intermediate
force BaKaϕ has been proposed. Further epistemic attitudes, such as
“be convinced” are studied in Lenzen (1979). These, and even richer no-
tions return in modern computer science, in the so-called BDI (“belief-
desire-intention”) framework for describing interactive agents.
This view of belief, though appealing, still has some problems:
Example. Consider a “public announcement” !p of the true fact p.
Applied to our earlier two-world model, the result is the one-world
model where p holds, with the inherited empty doxastic accessibility
127This is still an idealization, of course: our actual beliefs can be inconsistent.

Doxastic and conditional logic / 149
February 2, 2010
relation. But on the above reading of belief, the agent then believes
that p, but also that ¬p, as B⊥is true at such an end-point.
In this way, agents who have their beliefs contradicted are shattered
and start believing anything. Such a collapse does not sound right.
13.3
Plausibility models
A richer view of belief follows the intuition that an agent believes the
things that are true, not in all epistemically accessible worlds, but only
in those “most relevant” to her. I believe my bicycle will get me home,
even though I do not know that it will not suddenly disappear in an
earthquake chasm. But worlds where it stays on the road are more
plausible than those where it drops down, and among the former, those
where it arrives on time are more plausible than those where it does
not. Static models for this setting are easily deﬁned:
Deﬁnition 13.3.1 (Epistemic-doxastic models). Epistemic-doxastic
models are structures M = (W, {∼i}i∈I, {≤s,i}i∈I, V ) where the re-
lations ∼i stand for epistemic accessibility, and the ≤s,i are ternary
comparison relations for agents read as follows, ≤s,i xy if, in world s,
agent i considers x at least as plausible as y.
In line with our intuitions, one can impose further conditions on
these abstract plausibility relations. For convenience, we will just write
the two main arguments, suppressing the world. An often-used mini-
mum is reﬂexivity and transitivity, while a lushed version adds
for all worlds x, y, either x ≤y or y ≤x
connectedness
The latter yields the well-known geometrical systems of “nested spheres”
of equiplausible worlds as a concrete picture for our models – that is
also known from the possible-worlds semantics for conditional logic,
where spheres represent worlds equally “close” to the current one.128
The latter setting has only three options for worlds x, y:
either strict precedence x < y or y < x, or equiplausibility x ≤y ∧y ≤x.
While this is attractive, there are also scenarios with a fourth option:
¬ x ≤y ∧¬ y ≤x
incomparability
This happens in practice when comparing worlds according to con-
ﬂicting criteria – and sometimes, the latter partial orders are just the
mathematically more elegant and perspicuous approach.
Further natural constraints regulate the interplay of epistemic and
doxastic structure. It makes sense to view plausibility as the same re-
128The natural strict variant of these orderings is x < y iﬀx ≤y ∧¬y ≤x.

February 2, 2010
150 / Modal Logic for Open Minds
lation throughout epistemic equivalence classes, requiring that, when
s ∼i t, the worlds s, t agree on their plausibility order. This makes
agents know their plausibility order, validating knowledge introspection
axioms for belief. Instead of pursuing this abstract analysis, we give a
concrete illustration of the sort of belief model that we have in mind:
Example (Two-agent knowledge and belief). In the following model,
dotted lines mark epistemic accessibility, and within equivalence classes,
arrows point at worlds with greater plausibility. In the actual world y
with the black dot, looking at his epistemic range y, z, Agent 2 knows
that q, does not know that p, and in fact, looking at the world z that
he considers most plausible, believes that ¬p. For agent 1, these things
work analogously, looking at worlds y, x. As for higher-order knowledge,
e.g., Agent 2 believes (by looking at world z) that Agent 1 knows that
q, whereas actually (in y), 1 does not know that q:
◦
1
1
) •
2
)
2
◦
x : p, ¬q
y : p, q
z : ¬p, q
One can interpret many logical operators in this richer comparative
structure. In what follows, we use intuitive “minimality” formulations
for belief Biϕ, though these would have to be modiﬁed in models that
contain inﬁnitely descending sequences in the world ordering.129 First
of all, there is plain belief, with a modality interpreted as follows (we
will often drop agent subscripts for convenience):
Deﬁnition 13.3.2 (Belief as truth in the most plausible worlds). In
epistemic-doxastic models, knowledge is interpreted as usual, while for
belief, we now say that M, s |= Biϕ iﬀM, t |= ϕ for all worlds t that are
minimal in the ordering λxy. ≤i,s xy, restricted to the set {t | s ∼i t}
of worlds that are epistemically accessible from s.130
This semantics with a comparative ordering of worlds gives ﬁne-
structure to the earlier bare accessibility relation for doxastic logic. The
logic validated by this stipulation depends on the relational properties
assumed for the plausibility order – but this is not our concern in this
chapter. We rather focus on the models as such, and note that a com-
parative order like this allows us to interpret further important doxastic
notions. Often, absolute belief does not suﬃce – and the richer plau-
sibility order naturally allows us to interpret conditional belief, which
129We consider such changes for inﬁnite models an orthogonal issue to the main
thrust of this chapter, and will only refer to them occasionally.
130The lambda term λxy. ≤i,s xy denotes the relation {(x, y) |≤i,s xy} for a ﬁxed
world s. Also, we use the term “minimal”, but “maximal” would be ﬁne, too.

Doxastic and conditional logic / 151
February 2, 2010
“pre-encodes”, so to speak, what beliefs an agent will have after some
new information comes in. We write this notion as
Bψϕ,
with the intuitive reading that, conditional on ψ,
the agent believes that ϕ.
The semantic account of this notion is close to standard conditional
logic, as developed by Lewis and Stalnaker since the 1960s – but explicit
doxastic versions seem to have occurred ﬁrst in computer science, in
the work of Boutilier, Halpern, Shoham, and others:
Deﬁnition 13.3.3 (Conditional beliefs as plausibility conditionals).
In epistemic-doxastic models, M, s |= Bψϕ iﬀM, t |= ϕ for all worlds
t that are minimal for λxy. ≤i,s xy in the set {u ∼i s | M, u |= ψ}.
Absolute belief Bϕ is a special case of this: B⊤ϕ. It can be shown
that conditional belief is not deﬁnable in terms of absolute belief, so
we have a genuine language extension.131
13.4
Conditional logic
Conditional logic was developed for counterfactual assertions like
“if the match had been struck, an explosion would have occurred”.
By now, it has also been applied to a wide range of indicative condi-
tionals. Such a conditional ϕ ⇒ψ is true at the model M, w if
ψ is true in all the minimal or “closest” worlds to w where ϕ is true,
with closeness measured by some comparison order on worlds.132 This
is exactly the above clause. Thus, results from conditional logic apply
to conditional belief. For instance, on models with reﬂexive transitive
plausibility orderings, we have the following completeness theorem:
Theorem 24. The logic of Bψϕ is axiomatized by standard proposi-
tional logic plus the following laws of conditional logic:
(a) ϕ ⇒ϕ
(b) ϕ ⇒ψ implies ϕ ⇒ψ ∨χ
(c) ϕ ⇒ψ, ϕ ⇒χ imply ϕ ⇒ψ ∧χ
(d) ϕ ⇒ψ, χ ⇒ψ imply (ϕ ∨χ) ⇒ψ
(e) ϕ ⇒ψ, ϕ ⇒χ imply (ϕ ∧χ) ⇒ψ
On connected orders, we also get the following additional axiom valid:
131Compare the fact that the binary quantiﬁer “Most A are B” is not deﬁnable in
a ﬁrst-order logic plus a unary quantiﬁer “Most objects in the universe are B”.
132Again, we forego some subtle reformulations needed in cases like Lewis’ “if I
were taller than I am . . .”, with models allowing for “inﬁnite approach”.

February 2, 2010
152 / Modal Logic for Open Minds
(f) ((ϕ ∨ψ) ⇒ϕ) ∨¬((ϕ ∨ψ) ⇒χ) ∨(ψ ⇒χ)
One can determine its relational content through frame correspondence
techniques, but we leave this as a technical exercise.
For much more information on conditional logic and its current ram-
iﬁcations in philosophy, computer science, and game theory, see the
chapters on “Modal Logic and Philosophy”, and on “Modal Logic, In-
formation and Games” in the Handbook of Modal Logic.
13.5
A down-to-earth modal alternative
While we have presented a standard line in the literature, there is a
simpler alternative. In this intermezzo, we forget the epistemic structure
in our models, and just concentrate on the plausibility order of worlds.
Given a binary plausibility relation ≤, just introduce a modality making
the following “local” assertion at a world w:
M, s |= ⟨≤⟩ϕ
iﬀ
there exists a v ≥s with M, v |= ϕ
i.e., some world v at least as plausible as s satisﬁes ϕ. This simple sys-
tem can express many natural notions (as observed by Boutilier in the
early 1990s). Four dissertations at ILLC Amsterdam (Girard (2008),
Liu (2008), van Otterloo (2005) and Roy (2008)) provide applications
to belief revision, preference, and games.133 Here we just give one illus-
tration, whose veriﬁcation we leave to the reader:
Fact. In ﬁnite pre-orders, the standard truth deﬁnition of a conditional
A ⇒B can be written as the following modal combination:
U(A →⟨≤⟩(A ∧[≤](A →B)))
with U the universal modality of Chapter 7.134
13.6
Further topics: system combination, and a ﬁrst
glimpse of information dynamics
Combined epistemic-doxastic logics In actual agency, knowledge
and belief occur intertwined, and require combinations of epistemic
and doxastic logic. We already noted the elegant semantics making
epistemic accessibility an equivalence relation, and plausibility a pre-
order over equivalence classes, the same as viewed from any world inside
such a class. This will have the eﬀect of making the following valid:
Bϕ →KBϕ
Epistemic-Doxastic Introspection135
133The dissertation server http://www.illc.uva.nl has downloadable versions.
134When combining the conditional or doxastic language with an epistemic one,
this universal modality can be replaced by a knowledge operator.

Doxastic and conditional logic / 153
February 2, 2010
Combined epistemic-conditional logics But there are further rea-
sons for combining our modal systems so far. For instance, in episte-
mology, Nozick proposed that knowledge is true belief with a surplus
in terms of “successful tracking” of the facts. The true belief Bϕ ∧ϕ is
held in place by two counterfactual assertions:
(a) if ϕ persists after a counterfactual change, I still believe it:
ϕ ⇒Bϕ
(b) if ϕ were to become false after some counterfactual change, I
would come to believe that ¬ϕ:
¬ϕ ⇒B¬ϕ
The philosophers are ahead of the logicians here. The complete epis-
temic logic of this intriguing notion has not yet been found – though
it has challenging diﬀerences from that in Chapter 12. For instance,
Nozick knowledge is not closed under weakening of known propositions
ϕ to propositions ϕ ∨ψ logically entailed by them.
All this shows that rational agency involves a rich repertoire of modal
notions: epistemic, doxastic (and beyond to preferences and intentions).
But one important step remains to be made toward a complete picture.
A “dynamic turn” Here is a further topic that motivates much of our
Chapters 12, 13. Our account of knowledge was really about epistemic
models that change when new information comes in. For instance, the
point of our card example was not that players’ knowledge stays as in
the initial diagram. This knowledge gets updated every time events hap-
pen that produce further information, such as showings of cards, other
observations, linguistic statements, or other forms of communication.
Thus, we need to move from “statics” to “dynamics”. This dynamics
plays just as well in our doxastic logics, where being wrong is the engine
of progress. As soon as we see that our beliefs are wrong, we engage in
dynamic procedures of belief revision, or if you wish: learning.
To bring this “Dynamic Turn” into the scope of our analysis, we
need to design a logic of state-changing actions, and that is the topic
of our next Chapter 14 on “dynamic logic” – a major area of contem-
porary modal logic. Chapter 15 then puts a number of things together,
and shows you how combined modal systems can deal with concrete
activities of communication or games. Later on, in Chapter 23, we will
study some technical issues raised by these developments.
135There are some complications: e.g., bisimulations now need back-and-forth
clauses for the intersection of epistemic accessibility and plausibility.

February 2, 2010
154 / Modal Logic for Open Minds
Exercises Chapter 13
1. Verify that Disjunction of Antecedents holds for conditional logic.
2. Show that on models with pre-orders, the conditional logic axiom
((ϕ ∨ψ) ⇒ϕ) ∨¬((ϕ ∨ψ) ⇒χ) ∨(ψ ⇒χ) corresponds to
connectedness of the order.
3. Show that conditional belief Bψϕ is not equivalent to belief in
the corresponding conditional: B(ψ →ϕ).
4. Prove the adequacy of the stated modal deﬁnition U(A →
⟨≤⟩(A ∧[≤](A→B))) for conditionals A ⇒B on ﬁnite models.
5. Show that Nozick’s notion of knowledge does not satisfy mono-
tonicity: you can know A without knowing that A ∨B.

February 2, 2010
14
Dynamic logic of actions and events
This chapter is about logics of programs, action, and process structure.
For more details than we can provide here, see the textbook Goldblatt
(1987), the comprehensive monograph Harel et al. (2000), or the chap-
ter by Bradﬁeld & Stirling in Blackburn et al. (2006).
14.1
Modal logic over process graphs
A poly-modal language with [a], ⟨b⟩(cf. Chapters 7, 10) describes ef-
fects of actions. This was the “process intuition” behind the notion of
bisimulation in Chapter 3, but now we pursue it more explicitly. Mod-
els M = (S, { Ra }a∈A, V ) have labeled transitions Ra for successful
executions of action a (such models are also called “labeled transition
systems”, with Ra written as →a). Here, S consists of the states of a
computer, the world, or any process. The binary relations Ra encode
successful program executions, or transitions for any action a at all. The
valuation V indicates for each atomic proposition, a “local property”
of the process, whether it is true or not, at any state. This is about the
simplest logical model of action. It can be pictured as follows:
Example (A process graph). A process graph has labeled arrows be-
tween nodes, and, when relevant, information about atoms annotating
the nodes. In the following picture, the four dots indicate states West,
North, East and South – where West is the “starting state”:
◦
b

a
!
•
c
$
a
8q
q
q
q
q
q
q
q
q
q
q
q
a
!
b
*
◦
b
a
c
xqqqqqqqqqqqq
◦
155

February 2, 2010
156 / Modal Logic for Open Minds
There are three types of action: a, b, c. In West, actions b, c are deter-
ministic: one possible transition. (Here, c “loops”, and does not change
the state.) Action a is non-deterministic in West: two possible transi-
tions. South is an end state: no action is possible. Actions also have
relationships. For instance, above right, b “undoes” the eﬀect of a, as a
“converse”. But atomic actions also combine to form compound ones.
Thus, the sequential action a; b (a followed by b) gives a new transition
from West to South, and from North to North. Local state properties
might be a proposition letter q (“cold”) true in West and North.
In a concrete computational setting, evaluating predicate-logical lan-
guages or simple programming languages, the states are usually all
variable assignments into some ﬁxed domain of objects, transitions are
shifts in values for a variable, and the valuation says which atomic
predicates hold for every relevant assignment of objects to variables.
This analogy will drive our ﬁnal Chapter 27.
14.2
Program correctness
A basic computational logic is Hoare calculus of correctness assertions:
{ϕ}π{ψ}
“after every successful execution of program π
starting from a state where precondition ϕ holds,
postcondition ψ holds in the ﬁnal state”:
ϕ ◦
/ • ψ
These statements involve both program expressions π and logi-
cal propositions ϕ, ψ.136 Non-determinism is allowed: a program may
have more than one successful execution starting from the same initial
state: ψ is to hold after each of these. Also, in this setting, success-
ful executions are identiﬁed “extensionally” with binary transitions
⟨input state, output state⟩, without “intensional” information on how
this was achieved. Finally, {ϕ}π{ψ} expresses partial correctness: it
does not require that any execution of π terminates.137
Hoare “correctness rules” can analyze imperative “While Programs”
constructed from atomic instructions x := t using the operations of
Sequential composition
π1; π2
Guarded choice
IF ϕ THEN π1 ELSE π2
Iteration
WHILE ϕ DO π
Starting from assignments x := t involving terms t constructed with
variables, 0, and the successor +1, these programs have universal com-
136Likewise, an IF ϕ THEN π1 ELSE π2 involves both assertions and programs.
137Dijkstra’s “total correctness assertions” do include strong termination.

Dynamic logic of actions and events / 157
February 2, 2010
puting power on the natural numbers N: any computable (recursive)
function whatsoever can be deﬁned by a program of this kind.
Deﬁnition 14.2.1 (Rules of the Hoare Calculus).
{P}S{A}
{A}T {R}
{P}S; T {R}
composition
{P ∧E}S{Q}
{P ∧¬E}T {Q}
{P}IF E THEN S ELSE T {Q}
guarded choice
{I}S{I}
{I}WHILE E DO S{I ∧¬E}
iteration138
{P}S{Q}
{P ∧A}S{Q ∨B}
monotonicity
Here are some simple examples of true correctness statements:
{x = 4 ∧y = 3}(IF x < y THEN (z := x; y := y + 1)
ELSE z := y); z := z + 1{x = 4 ∧y = 3 ∧z = 4}
{x = 3 ∧y = 4}(IF x < y THEN (z := x; y := y + 1)
ELSE z := y); z := z + 1{x = 3 ∧y = 5 ∧z = 4}
These assertions can be derived systematically using the above rules,
starting from the following initial axiom
{[t/x]A}x := t{A}
For a methodology of developing well-structured imperative programs
in tandem with correctness proofs, cf. Kaldeway (1990).
A key observation motivating our next step is this: program correct-
ness statements are modal implications ϕ →[π]ψ!
14.3
Propositional dynamic logic, semantics and proof
Language and semantics The following system (PDL, for short)
generalizes all earlier ideas about describing eﬀects of programs.
Deﬁnition 14.3.1 (Language of dynamic logic). The PDL language
has two components, one of programs and one of propositions:
F := atomic propositions | ¬F | (F ∧F) | ⟨P⟩F
P := atomic actions | (P; P) | (P ∪P) | P ∗| (F)?
138Here, I is called the “loop invariant”: and ﬁnding one is usually an art.

February 2, 2010
158 / Modal Logic for Open Minds
Note the mutual recursion: the modality ⟨P⟩F uses programs to
construct assertions, while the test (F)? uses assertions to construct
programs. The existential modality ⟨π⟩ϕ is a “weakest precondition”,
true at those states where program π can be performed to achieve the
truth of ϕ. The program operators are now the regular operations of
relation composition, Boolean choice, Kleene iteration,
and tests for formulas.
This system deﬁnes the earlier standard operators on programs:
Conditional Choice
IF ε THEN π1 ELSE π2
((ε)?; π1) ∪((¬ε)?; π2)
Guarded Iteration
WHILE ε DO π
((ε)?; π)∗; (¬ε)?
This system extends both modal logic and relational algebra.
Deﬁnition 14.3.2 (Semantics of dynamic logic). The semantics match-
es the mutual recursion in the syntax. M, s |= ϕ says that formula ϕ is
true at state s, while M, s1, s2 |= π says that the transition from state
s1 to state s2 corresponds to a successful execution of the program π:
M, s |= p
iﬀs ∈V (p)
M, s |= ¬ψ
iﬀnot M, s |= ψ
M, s |= ϕ1 ∧ψ2
iﬀM, s |= ϕ1 and M, s |= ψ2
M, s |= ⟨π⟩ϕ
iﬀthere is an s′ with M, s, s′ |= π
and M, s′ |= ϕ
M, s1, s2 |= a
iﬀ(s1, s2) ∈Ra
M, s1, s2 |= π1; π2
iﬀthere is an s3 with M, s1, s3 |= π1
and M, s3, s2 |= π2
M, s1, s2 |= π1 ∪π2 iﬀM, s1, s2 |= π1 or M, s1, s2 |= π2
M, s1, s2 |= π∗
iﬀsome ﬁnite sequence of π-transitions in M
connects the state s1 with the state s2
M, s1, s2 |= (ϕ)?
iﬀs1 = s2 and M, s1 |= ϕ
Again, the semantics does not represent details of program execution
as such, only its input-output relations.
Axiomatic proof system Propositional dynamic logic has a natural
minimal logic generalizing our system of Chapter 5:
Deﬁnition 14.3.3 (Axiom system for PDL). The logic PDL has rules
of Modus Ponens and Necessitation plus the following axioms:
. All principles of the minimal modal logic for all modalities [π]
. Computation rules for decomposing program structure:
⟨π1; π2⟩ϕ ↔⟨π1⟩⟨π2⟩ϕ
⟨π1 ∪π2⟩ϕ ↔(⟨π1⟩ϕ ∨⟨π2⟩ϕ)
⟨ϕ?⟩ψ ↔(ϕ ∧ψ)
⟨π∗⟩ϕ ↔(ϕ ∨⟨π⟩⟨π∗⟩ϕ)

Dynamic logic of actions and events / 159
February 2, 2010
. The Induction Axiom: (ϕ ∧[π∗](ϕ →[π]ϕ)) →[π∗]ϕ.
Fact (Soundness). All theorems of PDL are universally valid.
This requires a simple check of validity for the given axioms.
This elegant axiomatic calculus generalizes the algebra of regular
expressions in formal language theory, propositional modal logic, the
earlier Hoare Calculus for correctness assertions {ϕ}π{ψ}, and even the
epistemic logic of Chapter 12.139 Here is an illustration:
Fact. Under the transcription ϕ →[π]ψ, plus the above deﬁnitions
for IF THEN ELSE and WHILE DO, the logic PDL derives all Hoare
rules for sequencing, conditional choice and guarded iteration.
A proof is postponed to the Exercises for this chapter. For instance,
the Hoare WHILE rule is really this fact about transitive closure:
{I}S{I}
implies
{I}S∗{I}.
This proof-theoretic strength reﬂects a general fact:
Theorem 25. The logic PDL axiomatizes universal validity in propo-
sitional dynamic logic.
The completeness proof is as in Chapter 5, but over a ﬁnite set of
formulas (the “Fisher-Ladner closure” of the initial formula).
Decidability The preceding proof method also yields the following
Corollary. Validity in PDL is decidable.
But, compared with Chapter 6, computational complexity for this
more expressive language goes up from the PSPACE-completeness of
the basic modal logic to EXPTIME-complete.
What makes PDL special compared with our earlier logics is the “in-
ﬁnitary” operation of iteration, repeating an action an arbitrary ﬁnite
number of times. This is crucial to recursive computation and long-
term action, including strategies in games (Chapter 17). One surprising
thing about PDL is that, while adding transitive closure to ﬁrst-order
logic drives up the complexity to high levels (one can deﬁne the nat-
ural numbers up to isomorphism, and validity gets high second-order
complexity), PDL expresses the “bare bones” of computability while
staying decidable, thanks to its weak modal base (cf. Chapter 7). This
theme will return in the ﬁxed-point logics of Chapter 22.
139The accessibility relation for common knowledge is deﬁned by the program
(S ∼i)∗. The laws for common knowledge are then special cases of the ∗laws.
Chapter 23 even uses a more baroque system of “epistemic PDL”.

February 2, 2010
160 / Modal Logic for Open Minds
14.4
Background: relational algebra
The program component of PDL is related to an important part of
ﬁrst-order logic: viz. the algebraic study of logical operations on binary
relations. This so-called Relational Algebra has the following opera-
tions, indicated with their set-theoretic interpretation:
Boolean operations
−, ∩, ∪
complement, intersection and union
Ordering operations
◦,ˇ
composition and converse
Identity element
∆
the identity relation
Here, ∪models choice, ◦sequential composition and ˇ converse for
binary relations. Interpretation of algebraic terms proceeds inductively:
−R
= {(x, y) | ¬Rxy}
R ∩S = {(x, y) | Rxy ∧Sxy}
R ∪S = {(x, y) | Rxy ∨Sxy}
R ◦S = {(x, y) | ∃z : Rxz ∧Szy}
Rˇ
= {(x, y) | Ryx}
∆
= {(x, y) | x = y}
Deﬁnition 14.4.1 (Basic relational algebra). The calculus for rela-
tional algebra contains all valid equations of Boolean Algebra, plus the
following equations for composition, converse, and diagonal:
R ◦∆= R = ∆◦R
Rˇˇ= R
(−R)ˇ= −Rˇ
(R ∪S)ˇ= Rˇ∪Sˇ
(R ◦S)ˇ= Sˇ◦Rˇ
(R ◦S) ◦T = R ◦(S ◦T )
R ◦(S ∪T ) = (R ◦S) ∪(R ◦T )
(R ∪S) ◦T = (R ◦T ) ∪(S ◦T )
(Rˇ◦−(R ◦S)) ∪−S = −S
Relational Algebra started in the 19th century as a general algebraic
theory of binary relations, just as Boolean Algebra treated elementary
operations on sets (unary relations). This shows as follows:
Deﬁnition 14.4.2 (First-order translation). The following translation
sends relation-algebraic terms R to ﬁrst-order formulas R(x, y):
−R(x, y) = ¬R(x, y)
R ∩S(x, y) = R(x, y) ∧S(x, y)
R ∪S(x, y) = R(x, y) ∨S(x, y)
R ◦S(x, y) = ∃z : R(x, z) ∧S(z, y)
Rˇ(x, y) = R(y, x)
∆(x, y) = (x = y)
With proper care, “recycling variables” in the composition step, this
translation can make do with a three-variable fragment (compare the
two variables needed for basic modal logic in Chapter 7):
Fact. Each ﬁrst-order relational operation deﬁnable using only three
variables can be deﬁned using the basic operations of Relation Algebra.

Dynamic logic of actions and events / 161
February 2, 2010
This ﬁrst-order translation has uses like those for modal logic.
Known properties of ﬁrst-order predicate logic transfer – but this time,
Relational Algebra also inherits some of the bad. In particular, the
equational theory of full set relation algebras is undecidable.
But there are also natural inﬁnitary operations on binary relations.
These encode unlimited actions, such as repetition (“Kleene star”), or
in other words, reﬂexive transitive closure:
R∗= { (x, y) | some ﬁnite sequence of successive R transitions links x to y }
The Kleene star satisﬁes principles of “regular algebra”, such as140
R ∪R∗= R∗
R∗∗= R∗
(R ∪S)∗= (R∗◦S∗)∗
Now one of the virtues of propositional dynamic logic is that it encodes
many of these principles in a perspicuous decidable calculus – at least
for those operations of Relational Algebra that have a reﬂection inside
PDL. In particular, all relation-algebraic validities involving ∪, ; ,∗can
be derived in PDL, using the following transcription:
Fact. An equation R = S is valid in Relational Algebra iﬀthe PDL-
formula ⟨R⟩p ↔⟨S⟩p is valid – where p is some new proposition letter.
It is an illuminating exercise to give PDL-proofs for laws like
⟨R ◦(S ∪T )⟩p ↔⟨(R ◦S) ∪(R ◦T )⟩p
⟨(R ∪S)∗⟩p ↔⟨(R∗◦S∗)∗⟩p
Again the “Balance” of Chapter 7 returns: you have now seen a
modal language provides perspicuous decidable fragments of complex
classical systems, this time, for computational processes.
14.5
A tiny bit of process theory: invariance, safety,
and process equivalences
Invariance The expressive power of PDL may be measured via modal
bisimulations. One can prove invariance for all formulas – but there is
a new aspect. Intertwined with the old inductive argument, one has
to show that the back-and-forth clauses are inherited by the regular
program constructions: indeed, each binary transition relation [π] shows
this behaviour, upward from the atomic ones:
Proposition 14.5.1. Let ≡be a modal bisimulation between two mod-
els M, M ′, with s ≡s′.
(a) s, s′ verify the same formulas of propositional dynamic logic,
140Algebraic versions of PDL were proposed in the early 1980s by Dexter Kozen.

February 2, 2010
162 / Modal Logic for Open Minds
(b) if sRM
π t, then there exists t′ with s′RM ′
π
t′ and s′ ≡t′,
and similarly in the opposite direction.
Proof. By a simultaneous induction on formulas and programs. Here is
a typical step. If sRM
π1;π2t then, by the PDL-truth deﬁnition, there is a
state x with sRM
π1 x and and xRM
π2 t. By the inductive hypothesis for π1
with respect to s ≡s′, there is then an x′ with x ≡x′ and s′RM ′
π1 x′.
Next, by the inductive hypothesis for π2 with respect to x ≡x′, there
exists a state t′ with t ≡t′ and x′RM ′
π2 t′. Then, by the truth deﬁnition
we have s′RM ′
π1;π2t′ – and we are done. Similar arguments work for the
other regular program constructions. In particular, the inductive step
for tests recurses toward the opposite formula side.
Safety This motivates a new notion for program operations:
Deﬁnition 14.5.1 (Safety for bisimulation). An n-ary operation
O(R1, . . . , Rn) on programs is safe for bisimulation if, whenever the
relation ≡is a bisimulation between two models for their respective
transition relations R1, . . . , Rn, then the same ≡is also a bisimulation
for the relation O(R1, . . . , Rn).
The core of the program induction in the invariance proof is that the
three regular operations ; ∪∗of PDL are safe for bisimulations. Non-
regular program operations outside of standard PDL that typically lack
safety are Boolean negation or conjunction:
Example (An unsafe program operation). The dotted lines in the
following picture shows a bisimulation for the relations a, b that does
not bisimulate for the intersection a ∩b:141
•
a

b
@
@
@
@
@
@
@
•
a

b

◦
◦
◦
Safe again is the following operation called test negation
¬(R) = { (x, x) | for no z: Rxz }
PDL has a program companion to the Modal Invariance Theorem of
Chapter 7. The “Modal Safety Theorem” says this (cf. Chapter 25):
Theorem 26. First-order deﬁnable programs (in the language for re-
lational algebra) are safe for bisimulations of their atomic relations iﬀ
141With essentially the same example, it can also be shown that the notion of
distributed knowledge in Chapter 12, which involved intersection of epistemic acces-
sibility relations, is not bisimulation invariant.

Dynamic logic of actions and events / 163
February 2, 2010
they can be deﬁned from the latter using only the safe operations ; , ∪
and test negation ¬: dynamic counterparts of Boolean ∧, ∨and ¬.
Process equivalences Any fundamental theory of processes must
specify two things together:
(i) a representation format – say, process graphs – plus (ii) a notion of
invariance saying when two representations stand for the same process.
Now bisimulation is deﬁnitely not the only reasonable invariance.
If observable behaviour is your only concern, a coarser view suﬃces:
just compare all ﬁnite sequences of actions that can occur from the
initial state. This so-called ﬁnite-trace equivalence is used in formal
language theory: two automata are equivalent if they recognize the
same language, viewed as a set of strings.142 Most computer scientists,
however, see local internal choices as relevant process structure – and
the back-and-forth clauses of bisimulation capture that.
Example (Process diﬀerences). The following models lead to the same
ﬁnite traces (viz. ab, ac), but they are not bisimilar:
•
a◦
b

c
?
?
?
?
?
?
◦
◦
•
a

a
?
?
?
??
?
◦
b 
◦
c
◦
◦
Finer process invariances than bisimulation include isomorphism of
process graphs, which ﬁts better with a ﬁrst-order language of pro-
cess properties (cf. Chapter 7). There is a broad spectrum of process
theories, a variety comparable to the “geometries” of Chapter 19.
14.6
Inﬁnitary translation and correspondence
The ﬁrst-order translation of Chapter 7 for modal logic extends to PDL.
Naturally, there are now two parts to the procedure. One component $
takes propositions to unary formulas ϕ(x), while its companion # takes
programs to binary ones π(x, y), in a mutual recursion:
Deﬁnition 14.6.1 (Standard translation for dynamic logic).
(p)$ = Px
(¬ϕ)$ = ¬(ϕ)$
(ϕ ∧ψ)$ = (ϕ)$ ∧(ψ)$
(⟨π⟩ϕ)$ = ∃y((π)# ∧[y/x](ϕ)$)
142It is also used by newspapers when comparing senators’ voting records, regard-
less of internal diﬀerences (one’s decision process may be fast, another’s involves
sleepless nights full of dilemmas). But for other purposes, like deciding whether to
live with someone, you may want to know all about that internal structure.

February 2, 2010
164 / Modal Logic for Open Minds
(a)# = Raxy
(π1 ∪π2)# = (π1)# ∨(π2)#
(ϕ?)# = x = y ∧(ϕ)$
(π1 ◦π2)# = ∃z([z/y](π1)# ∧[z/x](π2)#)
(π∗)# = W
n∈N(π ◦· · · ( n times ) · · · ◦π)
The latter clause, of course, makes the formalism inﬁnitary.
Proposition 14.6.1. The translation is correct from dynamic logic
into a countably inﬁnitary ﬁrst-order logic over state transition models.
This translation has various uses. First, without iteration, it shows
that dynamic logic is ﬁrst-order. With it, we end up in a small “con-
structively deﬁned” countable fragment of the inﬁnitary ﬁrst-order
logic Lω1ω, or also: ﬁrst-order logic with ﬁxed-points LFP(FO).
Our earlier frame correspondences of Chapter 9 also have a use here.
There are no obvious action logics stronger than minimal PDL. But we
can encode basic relationships between speciﬁc actions. For instance,
consider this abstract version of the Composition Axiom:
⟨c⟩p ↔⟨a⟩⟨b⟩p.
This is a “Sahlqvist form”, and its ﬁrst-order frame correspondent can
be computed with the substitution method of Chapter 9:
∀x∀y : (Rcxy ↔∃z(Raxz ∧Rbzy)).
This says that the binary transition relation c is just the relational
composition a; b! Thus, the Composition Axiom of PDL deﬁnes the
latter operation precisely. A similar analysis may be given for all PDL-
axioms: they ﬁx the intended meanings of their operations.
14.7
Richer languages, more complex logics
Like our modal languages in Parts I, II, PDL is an open-ended enter-
prise. For instance, adding converse of programs, running them back-
wards, gives a temporal variant of the system. Also, the missing Boolean
program operations ∩and −may be brought in after all. The former
addition is known to preserve decidability, but the latter does not, as
we can then encode the undecidable full algebra of set relations.143 An-
other useful extension of propositional dynamic logic has a loop operator
(π) for programs π, true at those states s where sRπs. Other exten-
sions are the modal µ-calculus of Chapter 22, and temporal languages
in computer science (see Chapter 18).
14.8
The charms of propositional dynamic logic
Our ﬁnal point is this. PDL started as a logic for program analysis in
computer science, proposed by Vaughan Pratt around 1976 (with some
143Harmless-looking extensions of P DL can have skyrocketing complexity.

Dynamic logic of actions and events / 165
February 2, 2010
prehistory in Poland), and it enjoyed some success for that purpose.
Even so, people observed around 1980 that PDL cannot easily deal with
distributed computation and concurrent processes, and hence it quickly
lost favour. But scientiﬁc theories often have an unpredictable subse-
quent history not foreseen by their founders. Gradually, it has become
clear that PDL is a nice general-purpose theory of action, since pro-
gram structures occur everywhere. You can see this already in Harel’s
lovely book Algorithmics, the Spirit of Computing (Harel, 1987) where
key examples of sequential composition, guarded choice, and iteration
come from cooking recipes (“if not up to taste, keep adding salt”, etc.).
More generally, PDL is very much alive today in philosophy and other
areas. We will see examples in Chapters 15, 17.144 This chapter ends
with an excursion showing PDL-style ideas at work in linguistics.
14.9
ENCORE: PDL takes a look at ﬁrst-order logic
The following is an extra, but you may ﬁnd it well worth-while!
Natural language meets logical form The following system has be-
come quite inﬂuential in the semantics of natural language. Dynamic
predicate logic (DPL) “dynamiﬁes” the ﬁrst-order predicate logic that
we were all were raised with. Here is why and how. Given a not quite
perfect match with natural language, you are usually drilled in “trans-
lation folklore” to make ﬁrst-order formulas ﬁt actual linguistic forms.
Here are some typical examples:
1
A man came in. He whistled.
Underlined phrases can co-refer.
2
∗No man came in. He whistled.
Co-reference impossible.
3
∗He whistled. A man came in.
Co-reference impossible.
4
If a man came in, he whistled.
Underlined phrases can co-refer.
5
∗If no man came in, he whistled.
Co-reference impossible.
6
A man came in. So, he came in.
Underlined phrases can co-refer.
Let us ﬁrst summarize what you have probably been taught:
The naive direct translation for 1: ∃xCx ∧Wx, does not give the
intended scope, and hence one uses a bracket-trick (notice that natural
language has no such device): ∃x(Cx ∧Wx).
The direct translation for 2: ¬∃xCx ∧Wx, does give the intended
scope, no binding occurs from the quantiﬁer to the “free pronoun” in
Wx, and hence no tricks are needed.
144van Benthem (2007a) explains how program structure, both sequential and
parallel, is essential to general conversation and argumentation.

February 2, 2010
166 / Modal Logic for Open Minds
The direct translation for 3: Wx ∧¬∃xCx, does give the intended
scope, no binding occurs from the quantiﬁer to the free pronoun in Wx,
and again no tricks are needed.
The direct translation for 4: ∃xCx →Wx, does not give the intended
scope, and you are taught a bracket trick plus a quantiﬁer change (by
contrast, the natural language sentence has →as its main operator):
∀x(Cx →Wx).
The direct translation for 5: ¬∃xCx →Wx, gives the right scope,
as no binding goes from the quantiﬁer to the free pronoun in Wx.
The direct translation for 6: ∃xCx.Cx (note that this inference is
a text with two sentences, separated by a punctuation mark), does
not give the intended cross-sentential scope, and it is hard to model
inference with anaphora from premise to conclusion coherently at all.
“Dynamifying” standard ﬁrst-order semantics Now, the idea of
DPL is this: stop being ad-hoc, and change the “static” interpretation of
predicate logic, so that the dynamic meaning of the “naive translations”
for natural language works without tricks. To achieve this, ﬁrst-order
formulas ϕ are now re-interpreted as semantic evaluation procedures,
denoting transition relations between variable assignments.
This is like operational semantics for simple imperative program-
ming languages, whose successive instructions change states, viewed as
assignments of data-objects to variables. Think of registers ﬁlled with
transient objects: say, the instruction x := 2 replaces the current con-
tent of register x with the value 2. This is also like PDL actions:
Atoms are tests:
M, s1, s2 |= Px
iﬀ
s1 = s2 and IM (P)(s1(x))
Conjunction is composition:
M, s1, s2 |= ϕ ∧ψ
iﬀ
there is s3 with M, s1, s3 |= ϕ and M, s3, s2 |= ψ
Negation is a failure test:
M, s1, s2 |= ¬ϕ
iﬀ
s1 = s2 and there is no s3 with M, s1, s3 |= ψ
Existential quantiﬁcation is random assignment:
M, s1, s2 |= ∃x
iﬀ
s2 = s1[x := d] for any object d in the domain
Note that only existential quantiﬁers can drive the state forward.
And in doing so, existential formulas ∃xϕ are read like compositions
∃x ∧ϕ: ﬁrst reset x, then successfully execute ϕ. Finally, the DPL
negation is the “safe” relational algebra version of Section 14.5.
Example (Dynamic evaluation and binding). (1) Dynamic evaluation
of ∃xCx ∧Wx composes one random assignment with two successive
test actions. This moves from any state s to some state s[x := d] where

Dynamic logic of actions and events / 167
February 2, 2010
both C(d), W(d) hold. This explains the binding in the ﬁrst example.
(2) Evaluation of Wx ∧∃xCx composes a test, a random assignment,
and one more test. This moves from any state s where W(s(x)) holds
to some state s[x := d] where C(d) holds: no co-reference achieved. (3)
The non-binding in the third example is explained by the nature of the
negation test, which leaves no new value for x to co-refer. (4, 5) To get
the given implication examples right, we ﬁrst deﬁne ϕ →ψ dynamically
as ¬(ϕ ∧¬ψ). This works out to (check!) a new test operation:
every successful execution of ϕ can be followed by one of ψ.
Check for yourself that this does what it should for both implica-
tions. (6) The ﬁnal “text” example follows directly by reading an intra-
sentential dot as a composition operator.
Logic as evaluation algebra DPL makes predicate logic into a dy-
namic logic for “variable reassignment” plus “atomic test”. Even non-
well-formed expressions like Px.∃x can be interpreted now (think of
overhearing part of a conversation that breaks oﬀ). And we can also
add new operators: say, substitutions [t/x] as speciﬁc assignments, or
parallel conjunction of actions. The eﬀect is a mix of general relation
algebra, plus speciﬁc features of ﬁrst-order actions.
Example (Some background explanation). The algebraic reason for
the scope behaviour in (1) is just the associativity of composition. Also,
we can deﬁne a universal quantiﬁer ∀xϕ as ¬∃x¬ϕ, and observe that,
dynamically, the two translations for (4): ∃xCx →Wx and ∀x(Cx →
Wx) are equivalent in relational algebra. As for atomic actions, ∃x is the
same procedure as ∃x; ∃x (why?). Also, Px; Qy is the same procedure
as Qy; Px. The latter are speciﬁc facts, not general algebraic ones.
One can study all this in PDL.145 The reader may try with this
relation-algebraic law for embedded disjunctions:
¬(ϕ ∪ψ)
is the same relation as
¬ϕ; ¬ψ
In this setting, Hoare-style correctness statements acquire a delight-
ful ambiguity. Between the braces, ﬁrst-order formulas stand for their
usual static meanings – while, in the middle, they denote programs for
evaluation procedures. Here are two correctness axioms:
{ϕ}∃x{∃xϕ},
{ϕ}Px{ϕ ∧Px}.
There is a translation lurking here from DPL into standard logic.
Inference Finally, what is valid inference for DPL? The standard “if
the premises are true, the conclusion is true” no longer makes sense.
145Note the related acronyms “PDL”, “DPL”: LPD still seems free for the taking.

February 2, 2010
168 / Modal Logic for Open Minds
Procedures are not “true” or “false”. We deﬁne
Dynamic inference: Once you have successfully processed all successive
premises, you can successfully execute the conclusion.
This dynamic style of inference is non-classical. For instance, it is
non-monotonic. If A |= B, then A, C |= B need not hold, take:
A = ∃xPx,
B = Px,
C = ∃x¬Px.
We do retain “left-monotonicity”: you can add an extra premise C
on the left: what you said prior to the premises cannot invalidate a
conclusion, what you say after them may.146
DPL views natural language as a cognitive programming language.
This may seem strange: logic is usually considered “declarative” rather
than “imperative”. But again, it exempliﬁes the Dynamic Turn in
Chapter 13, that includes “dynamic semantics”, “belief revision the-
ory”, and other systems placing cognitive actions at centre stage.
146These properties of dynamic inference, too, can be studied in PDL, using the
modal pattern [A]⟨B⟩true that expresses the essence of dynamic inference.

Dynamic logic of actions and events / 169
February 2, 2010
Exercises Chapter 14
1. Which of these two formulas is valid in PDL, which is not?
[(a ∪b)∗]p →([a∗]p ∧[b∗]p)
([a∗]p ∧[b∗]p) →[(a ∪b)∗]p
Give a counter-example for the invalid one, and motivate the
other.
2. Explain the following validities of PDL, and give a formal proof:
[a∗]p ↔[a∗][a∗]p,
[(a ∪b)∗]p ↔[(a∗; b∗)∗]p
3. Show that the Hoare rule for WHILE DO is valid in the PDL
semantics. Analyze it also syntactically via the PDL iteration
axioms, showing how the rule mentioned in the text from {I}S{I}
to {I}S∗{I} is crucial.
4. Consider a simple “action version” of propositional logic:
(a) Correctness assertions {A}S{B} are like “action condition-
als” A →S B: “if A, then you need not have B, but you
get it by performing action S”. Find the valid and the in-
valid cases among the following, where A, B, C are arbitrary
formulas, while S is any program. Explain your answers.
.{A}S{A}
.{A}S{B} ⇒{A ∧C}S{B}
.{A}S{B} ⇒{A}S{B ∨C}
.{A}S{B} ⇒{¬B}S{¬A}
.{A}S{B}, {A}S{C} ⇒{A}S{B ∧C}
(b) The principle {A}S{B}, {B}S{C} ⇒{A}S{C} is not valid.
How could you make it valid by using a PDL-style pro-
gram construction? The same question for {A}S{B} ⇒
{¬B}#(S){¬A} for some suitable operation #.
5. Write a∗as a new action b. Find the frame correspondence for
⟨b⟩p ↔p ∨⟨a⟩⟨b⟩p :
what should be the relationship between Ra and Rb?
Can you also ﬁnd the property matching the Induction Axiom:
(p ∧[b](p ∧[a]p)) →[b]p ?
6. Explain how bisimulation safety for programs arises in an induc-
tive proof of the Invariance Lemma for PDL.

February 2, 2010
170 / Modal Logic for Open Minds
7. Explain the properties of common knowledge by deﬁning it in
PDL, viewing epistemic logic as a special dynamic logic.
8. Let ¬ be the strong negation of dynamic predicate logic. That is:
¬(R)st
iﬀ
s = t and there is no u such that Rsu.
(a) Give a valid axiom of the form ⟨¬(R)⟩ϕ ↔· · ·
(b) Prove the following algebraic law by translation into PDL:
¬(R; S) = ¬(R; ¬¬S).

February 2, 2010
15
Logic and information dynamics
In Chapters 12 and 13, we described one major paradigm for modal
logic: the knowledge and beliefs that agents have on the basis of in-
formation. Then in Chapter 15, we described another major source of
modal intuitions, the dynamic logic of actions. In recent years, the two
perspectives have come together in various ways, and in this chapter, we
give a few illustrations. The reason for doing this is quite simple: agents
change their knowledge and beliefs continually on the basis of incoming
information, and such processes of information ﬂow seem so “logical”
that a logical theory should be able to deal with them explicitly.
15.1
Information ﬂow in card games
For a start, consider a follow-up to an example in Chapter 12. Cards
“red”, “white”, “blue” were dealt to players: 1, 2, 3. Each player sees
his own card only. The real deal was 1:red, 2:white, 3:blue (rwb). The
following epistemic model was the group information state:
rwb
1
3
444444444444444
rbw
2
F
F
F
F
F
F
F
F
bwr
2
x
x
x
x
x
x
x
x
1
F
F
F
F
F
F
F
F
3
wbr
brw
2
3 














wrb
1
x
x
x
x
x
x
x
x
Now the following two conversational moves take place:
2 asks 1
“Do you have the blue card?”,
1 answers truthfully
“No”.
Who knows what then? Here is the eﬀect in words:
171

February 2, 2010
172 / Modal Logic for Open Minds
Assuming that the question is sincere, 2 indicates that she does not
know the answer, and so she cannot have the blue card. This tells 1 at
once what the deal was. But 3 does not learn, since he already knew
that 2 does not have blue. When 1 says she does not have blue, this
now tells 2 the deal. 3 still does not know even then.
We now give the updates in the diagram, making them geometrically
transparent. Here is an “update video”:
After 2’s question:
After 1’s answer:
rwb
3
///////////////
bwr
2








1
?
?
?
?
?
?
?
?
brw
2
wrb
rwb
3
///////////////
wrb
We see in the ﬁnal diagram that 1, 2 know the initial deal now, as
they have no uncertainty lines left. But 3 still does not know, but she
does know that 1, 2 know – and in fact, the latter is common knowledge.
Similar analyses exist for other conversation scenarios, and indeed, for
a wide variety of puzzles, and parlour games such as “Clue”.
15.2
Modeling update by hard information
Here is a common sense view: new information eliminates possibilities
from the current range. In particular, public announcements of true
propositions P give “hard information” that changes the current model
irrevocably, discarding worlds which fail to satisfy P:
Deﬁnition 15.2.1 (Updating via deﬁnable sub-models). For any epis-
temic model M, world s, and formula P true at s, the updated model
M|P, s (“M relativized to P at s”) is the sub-model of M whose
domain is the set {t ∈M | M, t |= P}.
Drawn in a simple picture, such an update step goes
'
&
s
s
P
¬P
from M
to M|P
You can think of this as a typical step of communication, but it is also
an act of public observation, regardless of language. These diagrams of
a jump from one model to another visualize arguments about logical

Logic and information dynamics / 173
February 2, 2010
principles in this setting. Crucially, truth values of formulas may change
in an update step as depicted here: most notably, since agents who did
not know that P now do after the announcement.
This update mechanism explains many puzzles – one of them an
evergreen packing many relevant topics into one story:
Example (“Muddy Children”). After playing outside, two of three
children have got mud on their foreheads. They can only see the others,
so they do not know their own status. (This is an inverse of our card
games.) Now their Father says: “At least one of you is dirty”. He then
asks: “Does anyone know if he is dirty?” Children answer truthfully.
As questions and answers repeat, what happens?
Nobody knows in the ﬁrst round. But in the next round, each muddy
child can reason like this: “If I were clean, the one dirty child I see
would have seen only clean children, and so she would have known
that she was dirty at once. But she did not. So I must be dirty, too!”
In the initial model, eight possible worlds assign D or C to each child.
A child knows about the others’ faces, not her own, as reﬂected in the
accessibility lines in the diagrams below. Now, the successive assertions
made in the scenario update this information:
Example, continued (Updates for muddy children). Updates start
with the Father’s public announcement that at least one child is dirty.
This communicative act eliminates those worlds from the initial model
where the stated proposition is false. i.e., CCC disappears:
from
DDD
1
rrrr
3M
M
M
M
M
CDD
2
DDC∗
2
DCD
2
CDC
2
3
:::::::::
1

CCD
1

DCC
3
<<<<<<<<<
CCC
3
LLLL
1
q
q
q
q
q
to
DDD
1
rrrr
3M
M
M
M
M
CDD
2
DDC∗
2
DCD
2
CDC
3
:::::::::
1

CCD
1

DCC
3
<<<<<<<<<
When no one knows his status, the bottom worlds disappear:
DDD
1rrrr
3M
M
M
M
M
CDD
DDC∗
DCD
2

February 2, 2010
174 / Modal Logic for Open Minds
The ﬁnal update is to
DDC∗
In this sequence of models, domain size decreases size stepwise: 8, 7,
4, 1. With k muddy children, k rounds of the simultaneous assertion “I
do not know my status” yield common knowledge which children are
dirty. A few ﬁnal assertions by those who now know achieve common
knowledge of the distribution of the D and C for the group.
15.3
Dynamic logic of public announcement:
language, semantics, axioms
Now we bring the update steps into a suitable combination of epistemic
and dynamic logic:
Deﬁnition 15.3.1 (Language and semantics of public announcement).
The language of public announcement logic PAL is the epistemic lan-
guage with added action expressions, as well as dynamic modalities for
these, deﬁned by the syntax rules:
Formulas
P : p | ¬ϕ | (ϕ ∨ψ) | Kiϕ | CGϕ[A]ϕ
Action expressions
A : !P
The epistemic language is interpreted as before in Chapter 12, while
the semantic clause for the new dynamic action modality is “forward-
looking” among models as follows:
M, s |= [!P]ϕ
iﬀ
if M, s |= P, then M|P, s |= ϕ
This language can make characteristic assertions about knowledge
change such as [!P]Kiϕ, which states what ϕ agent i will know after
having received the hard information that P.
Now, reasoning about information ﬂow through public update re-
volves around the following dynamic “recursion equation” that relates
new knowledge to old knowledge the agent had before:
Fact. The following equivalence is valid for PAL:
[!P]Kiϕ ↔(P →Ki(P →[!P]ϕ)).
Proof. Compare the models M, s and M|P, s before and after update:
'
&
s
t
s
t
6
6
P
¬P
from M
to M|P

Logic and information dynamics / 175
February 2, 2010
The formula [!P]Kiϕ says that, in M|P, all worlds t ∼i-accessible from
s satisfy ϕ. The corresponding worlds t in M are those ∼i-accessible
from s that satisfy P. As truth values of formulas may change in an
update step, the right description of these worlds in M is not that
they satisfy ϕ (which they do in M|P), but rather [!P]ϕ: they become
ϕ after the update. Finally, !P is a partial function: P must be true
for its announcement to be executable. Thus, we make our assertion on
the right conditional on !P being executable, i.e., P being true. Putting
this together, [!P]Kiϕ says the same as (P →Ki(P →[!P]ϕ)).147
Here is how this functions in a calculus of public announcement:
Theorem 27. PAL without common knowledge is axiomatized com-
pletely by the laws of epistemic logic over our static model class148 plus
the following recursion axioms:
[!P]q
↔P →q
for atomic facts q
[!P]¬ϕ
↔P →¬[!P]ϕ
[!P](ϕ ∧ψ) ↔[!P]ϕ ∧[!P]ψ
[!P]Kiϕ
↔P →Ki(P →[!P]ϕ)
Proof. First, consider soundness. The ﬁrst axiom says that update ac-
tions do not change ground facts in worlds. The negation axiom inter-
changing [ ]¬ and ¬[ ] is not a modal base law, and it says that update
is a partial function. The conjunction axiom is valid in the minimal
modal logic. And we have seen the crucial knowledge axiom already.
Next, we turn to completeness. Suppose that formula ϕ of PAL is
valid. Start with some innermost occurrence of a dynamic modality in
a sub-formula [!P]ψ in ψ. Now the axioms allow us to push this modal-
ity [!P] through Boolean and epistemic operators in ψ until it attaches
only to atoms, where it disappears thanks to the base axiom. Thus,
we get a provably equivalent formula with [!P]ψ replaced by a purely
epistemic formula. Repeating this process until all dynamic modalities
have disappeared yields a purely epistemic formula ϕ′ provably equiv-
alent to ϕ. Since ϕ′, too, is valid, it is provable in the base logic, which
is complete by assumption, and hence, so is our ϕ itself.
Example (Announcing an atomic fact makes it known). Here is a
typical calculation using the recursion axioms:
[!q]Kq ↔(q →K(q →[!q]q)) ↔(q →K(q →(q →q))) ↔(q →K⊤) ↔⊤.
147The consequent even simpliﬁes to the equivalent formula P →Ki[!P ]ϕ.
148Think of poly-modal K, or multi-agent S5, with equivalence relations ∼i.

February 2, 2010
176 / Modal Logic for Open Minds
15.4
Exploring the framework: learning, agency,
communication
Modal logic of information dynamics raises many new issues.
Learning Public announcement of atomic facts p makes them common
knowledge. But not all events !ϕ result in common knowledge of ϕ. A
counter-example are so-called “Moore-type” sentences. In a question-
answer scenario, let the answerer A say truly
p ∧¬KQp
“p, but you don’t know it”
This removes Q’s ignorance about p, and thus makes itself false: true
sentences like this lead to knowledge of their negation! This also oc-
curred with the Muddy Children, where the last assertion of ignorance
led to knowledge. Similar phenomena occur in philosophy:
Example (Veriﬁcationism and the “Fitch paradox”). The general ver-
iﬁcationist thesis says that what is true can be known – or formally:
ϕ →
3Kϕ
149
VT
A neat argument by Fitch trivializes this principle, taking the instance
P ∧¬KP →
3K(P ∧¬KP)
Then we have a chain of three conditionals (say, in modal T):
(a)
3K(P ∧¬KP) →
3(KP ∧K¬KP)
(b)
3(KP ∧K¬KP) →
3(KP ∧¬KP)
(c)
3(KP ∧¬KP) →⊥
Thus, a contradiction follows from P ∧¬KP, and we have shown over-
all that P implies KP, making truth and knowledge equivalent. Now,
it seems plausible to read the modality
3 as referring to an event of
hard information, and then the point is again that the Moore sentence
P ∧¬KP cannot be truly announced without making itself false.
This is just a beginning. Dynamic logics of information can classify
types of assertions: “self-refuting”, “self-fulﬁlling”, etcetera, depending
on the shape of announced formulas, leading to more sophisticated
versions of “Veriﬁcationism” and actions of learning.
Agency Basic epistemic logics, say S4, highlight some assumptions
about agents’ powers that have become a focus of debate:
The axiom K(ϕ →ψ) →(Kϕ →Kψ) describes agents’ powers of
deduction,150 and the .4 axiom Kϕ →KKϕ powers of introspection.
149The
3 is an existential modality whose precise nature is irrelevant here.
150This is often called “epistemic closure” of knowledge under known consequences.

Logic and information dynamics / 177
February 2, 2010
Here, PAL adds what one might call a
“Knowledge Gain Axiom”
[!P]Kϕ ↔(P →K[!P]ϕ)
This principle interchanges knowledge after an event with knowledge
before that event. What this means is easier to see when we adopt a
more abstract stance. Consider
K[a]ϕ ↔[a]Kϕ
This says that I know now that action a will produce eﬀect ϕ if and
only if, after a has occurred, I know that ϕ. For many actions and
assertions, this is ﬁne. But there are counter-examples. I know now,
that after drinking, I get boring. But after drinking, I do not know
that I am boring. Vice versa, after the exam I know that I have failed,
but I need not know right now that after the exam I have failed.
This involves two new features of agents, which have received far
less attention in the epistemological literature: their powers of mem-
ory, and their powers of observation of relevant events. Drinking is an
action that impairs both of these epistemic powers, whereas the public
announcements of PAL leave an agent in full possession of both.
Common knowledge We did not give a PAL recursion axiom for
formulas [!P]CGϕ. Such a principle can only be found by suitably ex-
tending the modal language: one of our standard themes.
Deﬁnition 15.4.1 (Conditional common knowledge). The operator
CP
Gϕ says that ϕ is true in all worlds in model M reachable from the
current world s via some ﬁnite path of accessibilities running entirely
through worlds satisfying P. Plain CGϕ is the special case C⊤
Gϕ.
It is not hard to see that the following equivalence is valid:
[!P]CGϕ ↔(P ∧CP
G[!P]ϕ)
The next result shows that the hierarchy stops here:
Theorem 28. PAL with conditional common knowledge is axioma-
tized completely by adding the valid recursion law
[!P]Cϕ
Gψ ↔(P →CP ∧[!P ]ϕ
G
[!P]ψ)
Example (Atomic announcements produce common knowledge).
[!q]CGq ↔(q →Cq
G[!q]q) ↔(q →Cq
G⊤) ↔(q →⊤) ↔⊤
Conversation PAL may also be used as a logic of longer-term conver-
sations, or complex observation procedures, by iterating single update
steps. Here is a relevant observation:
Fact. The formula [!P][!Q]ϕ ↔[!(P ∧[!P]Q)]ϕ is valid.

February 2, 2010
178 / Modal Logic for Open Minds
The proof should be easy given your familiarity with PAL by now.
You will ﬁnd it rewarding to see why we cannot just use !(P ∧Q).
Further conversational structures would arise by enriching PAL with
program constructs from PDL, expressing conditional assertions (“if ϕ,
then say P, else Q”) or guarded iterations like “as long as not all
children know the solution, keep asking the Father’s question”. While
this can be dealt with in the style of Chapter 15, it has been discovered
in 2004 that such logics of long-term conversation can be extremely
complex – for reasons explained in Chapters 23, 24.
Optimal communication What can agents in a group achieve by
maximal communication? Consider two agents in some collective infor-
mation state M with actual world s. They can tell each other things
they know, thereby cutting down the model to smaller sizes. Suppose
they wish to be maximally cooperative.
Example (The best agents can do by internal communication). What
is the best that the agents can achieve in the following model?
◦
Q
•
Q
A
◦
A
◦
Q
◦
Geometrical intuition suggests that this must be:
•
Q
A
◦
Indeed, a two-step conversation getting there is the following:
Q sighs: “I don’t know”, then A sighs: “I don’t know either”
This particular scenario also works in the opposite order.
Successive updates in any ﬁnite model must eventually end in a sub-
model that can no longer be reduced, where everything agents know
is common knowledge. This “communication core” often consists of
the actual world plus all worlds linked to it by the intersection of all
uncertainty relations151, as with distributed knowledge in Chapter 13.
151Technical subtleties with the “communication core” go beyond this course.

Logic and information dynamics / 179
February 2, 2010
Thus, communication can turn implicit knowledge of a group into
common knowledge. This is a new theme in dynamic logic of infor-
mation – but not in neighbouring ﬁelds like computer science152 and
economics: see the classics Aumann (1976) and Geanakoplos and Pole-
marchakis (1982).153 More extensive links to economic game theory will
return in Chapter 17 on modal logic and games.
15.5
Technical themes: bisimulation, correspondence,
complexity
Bisimulation Recall the bisimulation of Chapter 3. PAL still ﬁts:
Fact. All formulas of PAL are invariant for bisimulation.
Proof. This follows from the earlier reduction to purely epistemic for-
mulas. But a more informative proof goes via the following observation
about update, viewed as an operation O on models. We say that such
an operation respects bisimulation if, whenever two models M, s and
N, t are bisimilar, then so are their values O(M, s) and O(N, t).
Fact. Public announcement update respects bisimulation.
Proof. Let ≡be a bisimulation between M, s and N, t. Consider their
sub-models M|ϕ, s, N|ϕ, t after public update with ϕ. Now the point
is that the restriction of ≡to these is still a bisimulation. Here is the
proof of the relevant zigzag clause. Suppose that some world w has an
∼i-successor v in M|ϕ, s. This same v is still available in the other
model: it remained in M since it satisﬁed ϕ, but then v also satisﬁed
ϕ in N, t, because of the Invariance Lemma for the bisimulation ≡–
and so it stayed in the updated model N|ϕ, t, too.
Frame correspondence PAL is a concrete way of taking new hard
information, subject to the general laws in its completeness theorem.
One can also reverse the perspective, state abstract postulates gov-
erning information update, and then see which concrete operations on
models validate these, using the frame correspondences of Chapter 9.
We give a brief sketch:
Consider abstract model-changing operations ♠p taking epistemic
models (M, s) with a distinguished set of worlds named by a proposi-
tion letter p, to new models (M♠p, s) – where the domain of worlds
152An excellent and inﬂuential book linking epistemic logic with computer science,
from distributed protocols on the internet to communication and rational agency,
is R. Fagin, J. Halpern, M. Vardi & Y. Moses Fagin et al. (1995).
153Geanakoplos (1992) also has Muddy Children update scenarios.

February 2, 2010
180 / Modal Logic for Open Minds
remains the same. By link elimination, we mean the process that cuts
all epistemic links between p-worlds and ¬p-worlds.
Theorem 29. Link elimination is the only model-changing operation
that satisﬁes the following equivalence for all sets q:
[♠p]Kq ↔(p →K(p →[♠p]q))
Proof. From left to right, let q be the set of worlds that are ∼-accessible
from the current world s after the operation ♠p has been applied to
the model. This makes the left-hand side true. Assume also that s is in
p. Then the right-hand side says that all worlds in the set p that are
∼-accessible from s are still accessible after the operation ♠p. Thus,
the relation change leaves all already existing links from p-worlds to
p-worlds. In the converse direction, we let q be the set of ∼-accessible
worlds in M♠p that were ∼-accessible p-worlds from s in M. The left-
hand side then tells us that all new accessibilities came from old ones.
Together, we see that the p area after the update has just its old links,
and none sticking out into its complement. This is one half of the link-
cutting version of epistemic update; the other half follows by applying
the same analysis to the complement set of p.154
This is just one version in a sequence. We state one next step. Now
assume that the domain of worlds may change from M to M♠p. To
zoom in on PAL-style eliminative update, we also need the existential
modality Eϕ of Chapter 7. We state the following result without proof,
though it is well within reach of the techniques of Chapter 9:
Theorem 30. Eliminative update is the only model-changing opera-
tion that satisﬁes the following three principles:
(a) ⟨!p⟩⊤↔p
(b) ⟨♠p⟩Eq ↔(p ∧E⟨♠p⟩q), and
(c) [♠p]Kq ↔(p →K(p →[♠p]q)).
Complexity Chapter 6 emphasized computational complexity of log-
ical tasks. Here is the score for information dynamics:
Theorem 31. Validity in PAL is decidable.
Proof. The reduction that proved completeness is an eﬀective algorithm
from PAL-formulas into equivalent epistemic ones. After that, use the
decision procedure for the epistemic base logic.
This does not settle the complexity – as the translation may increase
formula length exponentially. But here is the true proﬁle of the logic:
154The veteran reader will recognize a substitution argument from Chapter 9.

Logic and information dynamics / 181
February 2, 2010
Theorem 32.
. The complexity of satisﬁability in PAL is PSPACE-complete.
. Model-checking for PAL formulas takes PTIME.
. Model comparison for PAL formulas takes PTIME.
Thus, though it shows us much more, PAL has the same balance of
expressive power and complexity as its static epistemic base logic.
15.6
Belief change under hard information
The same ideas work for changes in belief, as introduced in Chapter
13.155 A capacity for learning from new facts contradicting our earlier
beliefs seems typical of rational agency, and here is how it goes:
Fact. The formula [!P]Bϕ ↔(P →BP ([!P]ϕ)) is valid for beliefs after
events of hard information.
Of course, this is not enough to keep our full language in harmony.
We need to know, not just which beliefs are formed after new informa-
tion, but rather which conditional beliefs arise:156
Theorem 33. The logic of conditional belief under public announce-
ments is axiomatized completely by
. Any complete static logic for the model class chosen,
. the PAL recursion axioms for atomic facts and Boolean operations,
. the following new recursion axiom for conditional beliefs:
[!P]Bψϕ ↔(P →BP ∧[!P ]ψ[!P]ϕ)
Proof. First we check the soundness of the new axiom. On the left
hand side, it says that in the new model M|P, s, ϕ is true in the best
ψ-worlds. With the usual precondition for the announcement, on the
right-hand side, it says that in M, s, the best worlds that are P now
and will become ψ after announcing that P, will also become ϕ after
announcing P. This is indeed equivalent. The remainder of the proof is
our earlier stepwise reduction analysis, noting that the above axiom is
recursive, pushing announcement modalities inside.157
The present simple setting hides some tricky scenarios:
155We will often drop agent subscripts of modalities, for greater readability.
156Again, for simplicity, we suppress the interplay with epistemic structure.
157This logic relates two notions that are close: conditional belief Bψϕ, and belief
after information has been received: [!ψ]Bϕ. The two are equivalent in case ϕ, ψ
are modality-free “factual” formulas. But they may diverge with epistemic-doxastic
formulas, since conditional belief evaluates ϕ in the original model M, while [!ψ]Bϕ
evaluates ϕ in the updated model M|ψ, where truth values may have changed.

February 2, 2010
182 / Modal Logic for Open Minds
Example (Misleading with the truth). Consider a model where an
agent believes that p, which is indeed true in the actual world depicted
to the far left, but for “the wrong reason”: she thinks that the most
plausible world is the one to the far right. For convenience, assume that
each world also veriﬁes a unique proposition letter:
•
% ◦
% ◦
p, q1
¬p, q2
p, q3
Now giving the true public information that we are not in the ﬁnal
world (say, in the form of “!¬q3”) updates this model to
•
% ◦
p, q1
¬p, q2
in which the agent believes mistakenly that ¬p.
Observations like this have been made in philosophy, computer sci-
ence, and game theory. Thus, further epistemic-doxastic attitudes make
sense, as hinted at in Chapter 13. Here is a new notion, intermediate
between knowledge and belief, stable under new true information:
Deﬁnition 15.6.1 (Safe belief). The modality of safe belief B+ϕ is
deﬁned as follows: M, s |= B+ϕ if, for all worlds t in the epistemic
range of s with t ≥s, M, t |= ϕ. Thus, ϕ is true in all epistemically
accessible worlds that are at least as plausible as the current one.158
This modality is stable under hard information, at least for factual
assertions ϕ that do not change their truth value as the model changes.
And indeed, the new notion is the base modality [≤]ϕ for the plausi-
bility ordering that we already considered in Chapter 13:
Example (Three degrees of doxastic strength). Consider this picture,
now with the actual world in the middle:
◦
" •
" ◦
Kϕ is what we know: ϕ must hold in all three worlds in the epistemic
range, less or more plausible than the actual one. B+ϕ describes our
safe beliefs in further investigation: ϕ is true in the two worlds from
the middle toward the right. Bϕ describes the most fragile thing: our
beliefs as true in all worlds in current topmost position on the right.
Fact. The following PAL-style axiom holds for safe belief:
[!P]B+ϕ ↔(P →B+(P →[!P]ϕ))
158Safe belief uses an intersection of epistemic accessibility and plausibility order.

Logic and information dynamics / 183
February 2, 2010
15.7
Belief change under soft information
In more general revision scenarios, an agent can also take incoming
signals in a softer manner, without throwing away options forever. But
then, we need a general mechanism that makes new information P more
plausible, without burning our ships behind us.
Example (Default rules). A default rule A ⇒B does not say that all
A-worlds are B-worlds. It rather says that the counter-examples: i.e.,
the A∧¬B-worlds, become less plausible until further notice. This “soft
information” does not eliminate worlds, it changes their ordering.
An event making us believe that P need only rearrange worlds mak-
ing the most plausible ones P by “promotion” rather than elimination.
Thus, on the earlier models M = (W, ∼i, ≤i, V ), we change the rela-
tions ≤i, rather than the set of worlds W or the epistemic ∼i. One
very strong policy is a radical social revolution where the underclass P
becomes the upper class. In a picture, we get a reversal:
s
s
P
¬P
P
¬P
from M, s
to M⇑P, s
Deﬁnition 15.7.1 (Radical, or lexicographic upgrade). A lexico-
graphic upgrade ⇑P changes the current ordering ≤between worlds
in M, s to a new model M⇑P, s as follows: all P-worlds in the cur-
rent model become better than all ¬P-worlds, while, within those two
zones, the old plausibility ordering remains.
We take a matching “upgrade modality” in our dynamic language:
M, s |= [⇑P]ϕ
iﬀ
M⇑P, s |= ϕ
Theorem 34. The dynamic doxastic logic of lexicographic upgrade is
axiomatized completely by
(a) any complete axiom system for conditional belief on static models,
(b) the following recursion axioms:
[⇑P]q
↔
q
for all atomic propositions q
[⇑P]¬ϕ
↔
¬[⇑P]ϕ
[⇑P](ϕ ∧ψ)
↔
[⇑P]ϕ ∧[⇑P]ψ
[⇑P]Kϕ
↔
K[⇑P]ϕ
[⇑P]Bψϕ
↔
(3(P ∧[⇑P]ψ) ∧BP ∧[⇑P ]ψ[⇑P]ϕ) ∨
(¬3(P ∧[⇑P]ψ) ∧B[⇑P ]ψ[⇑P]ϕ)
159

February 2, 2010
184 / Modal Logic for Open Minds
Proof. Most axioms are simpler than for PAL, since unlike !P, ⇑P has
no precondition. The ﬁrst axiom says that upgrade does not change
truth values of atomic facts. The second says upgrade is a function on
models, the third is a general law of modality, and the fourth says that
there is no change in epistemic accessibility. The ﬁfth axiom is the locus
for the speciﬁc change in the plausibility ordering. The left-hand side
says that, after the P-upgrade, all best ψ-worlds satisfy ϕ. On the right-
hand side, there is a case distinction. Case (1): there are epistemically
accessible P-worlds in the model M that become ψ after the upgrade.
Then lexicographic reordering ⇑P makes the best of these worlds in
M the best ones over-all in the ψ-zone of M⇑P. Now, in the original
model M – more precisely, its epistemic range from the current world
s – the latter worlds are just those satisfying the formula P ∧[⇑P]ψ.
Thus, the formula BP ∧[⇑P ]ψ[⇑P]ϕ says that the best among these in
M will satisfy ϕ after the upgrade. But these best worlds are just
those described earlier, since lexicographic reordering does not change
plausibility ordering inside the P-area. Case (2): no P-worlds in the
original M become ψ after upgrade. Then lexicographic reordering ⇑P
makes the best worlds satisfying ψ after the upgrade just the same as
the best worlds before that satisﬁed [⇑P]ψ. The formula B[⇑P ]ψ[⇑P]ϕ
in the recursion axiom says these best worlds become ϕ after upgrade.
The rest of the completeness proof is a reduction argument as before.
More conservative belief revision policies can be axiomatized as well.
A general method uses the dynamic logic of Chapter 14. First note that:
Fact (Radical upgrade). ⇑P is deﬁnable as a program, where “T ”
stands for the universal relation between all worlds:
⇑P(R) := (?P; T ; ?¬P) ∪(?P; R; ?P) ∪(?¬P; R; ?¬P).
A deﬁnition for a relation R on models is in PDL-format if it can
be stated using the old relation, union, composition, and tests.160
Theorem 35. Each relation change in PDL-format has a complete set
of recursion axioms that can be derived via an eﬀective procedure.
Proof. Computing modalities for the new relation after a model change
uses the program axioms of PDL. We use the existential epistemic
modality
3 when dealing with the universal relation. For instance:
159Here, “3” is the dual existential epistemic modality ¬K¬ of Chapter 12.
160A further example is the “suggestion” operator #P of Chapter 16 that takes
out all pairs from the old relation with “¬P over P ”: #P (R) = (?P ; R) ∪(R; ?¬P ).

Logic and information dynamics / 185
February 2, 2010
⟨⇑P(R)⟩ϕ ↔⟨(?P; T ; ?¬P) ∪(?P; R; ?P) ∪(?¬P; R; ?¬P)⟩ϕ
↔⟨?P; T ; ?¬P⟩ϕ ∨⟨?P; R; ?P⟩ϕ ∨⟨?¬P; R; ?¬P ⟩ϕ
↔⟨?P ⟩⟨T ⟩⟨?¬P⟩ϕ ∨⟨?P⟩⟨R⟩⟨?P ⟩ϕ ∨⟨?¬P ⟩⟨R⟩⟨?¬P ⟩ϕ
↔(P ∧
3(¬P ∧ϕ)) ∨(P ∧⟨R⟩(P ∧ϕ)) ∨(¬P ∧⟨R⟩(¬P ∧ϕ)).
This transforms into an axiom for safe belief after radical upgrade ⇑P.
15.8
Conclusion
Methods from dynamic logic of programs turn epistemic and doxastic
logics into rich descriptions of information ﬂow and attitude change.
The same methodology applies to preference change (Chapter 16), and
other features of rational agency – and you now have the tools in hand
for “dynamiﬁcation” of many other logical systems.

February 2, 2010
186 / Modal Logic for Open Minds
Exercises Chapter 15
1. Suppose that in our card example, Child 2’s question is not
treated as informative. What happens then? Draw the updates.
2. Let us change the Muddy Children a little bit:
(a) Let the Muddy Children in our scenario with 3 kids speak
in turn. What happens? Draw the successive diagrams.
(b) Suppose the father says “At least one of you is clean”, while
the same procedure is followed as before. Compute the up-
date sequence, and explain what happens.
3. Three men are standing on a ladder, each wearing a hat. Each
can see the colours of the hats of people below him, but not his
own or those higher up. It is common knowledge that only red
and white occur, and that there are more white hats than red
ones. The actual order is white, red, white from top to bottom.
(a) Draw the information model.
(b) The top person says: “I know the color of my hat”. Is that
true? Draw the update.
(c) Who else knows his color now? If that person announces that
he knows his colour, what does the bottom person learn?
4. Consider the system PAL of Public Announcement Logic:
(a) Give equivalent versions for the PAL axioms with existential
modalities ⟨!P⟩.
(b) Why does not PAL need an additional axiom for the operator
combination [!P][!Q]ϕ?
5. What does the interchange axiom K[a]ϕ →[a]Kϕ express in
terms of frame correspondence?
6. Three cards r, w, b are distributed over three people 1, 2, 3, with
an actual world ⟨r, w, b⟩as before. But this time, nobody reads
their card, or that of the others. Using some suitable extended
form of update, describe the following scenarios:
(a) 1 reads his card publicly, and says: “2 does not have red”.
(b) 1 reads his card, and then shows it to 2 – while 3 observes
just the showing.
(c) 1 shows his card to the others without reading it himself.
7. Let 3 agents have only ordinary telephone lines, without a facility
for conference calls. One of them knows that p.

Logic and information dynamics / 187
February 2, 2010
(a) Can they achieve common knowledge of p by phone calls if a
non-involved person cannot see if a phone call is being made,
or even if he can: but cannot check its content?
(b) What should you assume about the “protocol” to make sure
that common knowledge results from the phone calls?
8. Reasoning with belief:
(a) Give a concrete example showing that conditional belief is
not always the same as belief following the information that
the antecedent holds.
(b) Check the soundness of the axioms for hard and soft belief
change in our text.
(c) Check that these axioms still hold if we interpret beliefs
within epistemic equivalence classes as in Chapter 13.
(d) Using the earlier modal deﬁnition of conditional belief in
terms of safe belief, derive the recursion axiom for condi-
tional belief after hard update !P from the stated recursion
axiom for safe belief after hard update.
(e) Give a valid recursion axiom for safe belief after radical soft
update ⇑P.

February 2, 2010

February 2, 2010
16
Preference and deontic logic
So far, we have looked at agents processing information. But human
activity is goal-driven, and hence we also need to describe agents’ eval-
uation of states of the world, or outcomes of their actions. All these
things come together in even such a simple scenario as a game, where
we need to look at what players want, what they can observe and guess,
and which moves and long-term strategies are available to them in or-
der to achieve their goals. That will be the topic of Chapter 17 – but
for now, we concentrate on preference logic per se. We will merely show
how modal patterns arise, with some new themes special to this area.
16.1
Modal logic of betterness
We start with a simple setting. Modal models M = (W, ≤, V ) consist of
worlds W (or any sort of objects subject to evaluation and comparison),
a “betterness” relation ≤between worlds (“at least as good as”),161 and
a valuation V for proposition letters at worlds (properties of objects).
The comparison may vary among diﬀerent agents, but as usual, we
suppress agent subscripts ≤i for greater readability. We use the artiﬁcial
term “betterness” to stress that this is an abstract comparison. Still,
this semantics is natural in decision theory, where worlds (standing for
outcomes of actions) are compared by utility, or game theory, where
end nodes of a game tree (standing for diﬀerent ﬁnal histories of the
game) are related by preferences for the diﬀerent players.162
Over these models, we can interpret a modal language, and see which
patterns of reasoning it can be deﬁne. In particular, a formula ⟨≤⟩ϕ
makes a “local” assertion at a world w:
M, w |= ⟨≤⟩ϕ
iﬀ
there exists a v ≥w with M, v |= ϕ
161Warning. In this chapter ≤stands for betterness, not plausibility order!
162A helpful analogy: compare the plausibility orders for belief in Chapter 13.
189

February 2, 2010
190 / Modal Logic for Open Minds
This logic can express many notions about preference-driven action.
Which properties should betterness have? Total orders with reﬂex-
ivity, transitivity, and connectedness are common, as these properties
are enforced by numerical utilities. But the logical literature on prefer-
ence often has reﬂexive and transitive pre-orders, with four intuitively
irreducible basic relations between worlds:
w ≤v, ¬v ≤w (w < v)
w strictly precedes v
v ≤w, ¬w ≤v (v < w)
v strictly precedes w
w ≤v, v ≤w (w ∼v)
w, v are indiﬀerent
¬w ≤v, ¬v ≤w (w#v)
w, v are incomparable.
One may also take an independent weak order w ≤v (“at least as
good”), and a strict w < v (“better”) satisfying w ≤v ∧¬ v ≤w.
16.2
Deﬁning global propositional preference
Concrete modal systems bring their own special topics. In particular,
many authors consider preference a relation between propositions. Tech-
nically, this calls for comparison of sets of worlds. For a given relation ≤
among worlds, this may be achieved by lifting. One ubiquitous proposal
in relation lifting is the ∀∃stipulation that
a set Y is preferred to a set X if ∀x∈X ∃y∈Y : x ≤y.
But there are alternatives. Von Wright, the father of preference logic,
favoured the ∀∀stipulation that
a set Y is preferred to a set X if ∀x∈X ∀y∈Y : x ≤y.
Such options are a feature, not a bug. In a game, when comparing
sets of outcomes that can be reached by moves, players have options.
They might prefer a set whose minimum utility value exceeds the maxi-
mum of another (this is like the ∀∀reading) – or settle for the maximum
of one set exceeding that of the other, like the ∀∃reading.
Many liftings are deﬁnable in our modal base logic when extended (as
in Chapter 7) with a universal modality Uϕ: “ϕ is true in all worlds”.
For instance, the ∀∃reading runs as follows:
U(ϕ →⟨≤⟩ψ)
We will use the notation Pϕψ for lifted propositional preferences.
Priorities One can also derive betterness on worlds from a primitive
relation of “priority” between propositions, or properties of objects.
This perspective occurs, e.g., in Social Choice Theory, and linguistic
Optimality Theory, where one orders sentence parses and meanings in

Preference and deontic logic / 191
February 2, 2010
terms of linguistically desirable properties. One might start with a ﬁnite
linear sequence P of properties, and then order objects as follows:
x ≤y if, when y lacks some property P in P that x has, there is a P ′
with higher priority than P in P that y has and x lacks.
This is just one option: “lowering” has a its diversity, like “lifting”.163
16.3
Ceteris paribus clauses
Many preferences are defeasible: they hold only ceteris paribus. This can
mean two things. The normality sense says we only make comparisons
“under normal circumstances”. Thus, I prefer beer over wine, but not
when dining at the Paris Ritz. This refers to the most plausible worlds
of a model, linking preference to the doxastic logic of Chapter 13 –
combining modal logics of betterness and belief.
But there is also von Wright’s equality sense of ceteris paribus: in-
volving comparison under the proviso that certain propositions do not
change their truth values. A ceteris paribus preference for ϕ over ψ
with respect to proposition A says that
both (i) among the A-worlds I prefer ϕ over ψ, and
also, (ii) among the ¬A-worlds I prefer ϕ over ψ.
This, too, ﬁts a modal logic, with the following operators:
M, w |= [Γ]ϕ
iﬀ
M, v |= ϕ for all t with s ≡Γ t,
M, w |= [Γ]≤ϕ
iﬀ
M, v |= ϕ for all t with s ≡Γ t and s ≤t,
M, w |= [Γ]<ϕ
iﬀ
M, v |= ϕ for all t with s ≡Γ t and s < t,
Here s ≡Γ t holds iﬀthe worlds s, t agree on the truth values of all for-
mulas in the set Γ.164 Then Γ-equality-based ceteris paribus preference
Pϕψ can be deﬁned like this:
U(ϕ →⟨Γ⟩≤ψ)
The logic of this system is completely axiomatizable. We merely list
one valid axiom that allows us to shift a ceteris paribus set:
(α ∧⟨Γ⟩≤(α ∧ϕ) →⟨Γ ∪{α}⟩≤ϕ
16.4
Entanglement: preference, knowledge, and belief
Natural notions of preference mix modal logic of pure betterness with
other considerations. This “entanglement” can take many forms:
Combining separate operators Consider a system with knowledge
and preference, whose models have both epistemic accessibility relations
163The dissertations Changing for the Better (Liu, 2008) and Modal Logic for
Belief and Preference Change (Girard, 2008) have many more details.
164In Chapter 3, the symbol ≡stood for bisimulation: a wholly unrelated use.

February 2, 2010
192 / Modal Logic for Open Minds
and a preference order. The language has betterness modalities ⟨≤⟩, the
universal modality, and epistemic K as in Chapter 12. It can interpret
nested operator combinations such as
KPϕψ
knowing that some global betterness relationship holds,
PKϕKψ
preferring to know certain things over others.
The semantics allows betterness comparison with epistemically inac-
cessible worlds, which can express a sense of “regret”.165 The language
improves on the earlier global preferences Pϕψ, reading the earlier
U(ϕ →⟨≤⟩ψ) with a universal modality in epistemic terms:
K(ϕ →⟨≤⟩ψ)
Intersection modalities The preceding formula refers to ψ-worlds
that are better than epistemically accessible ϕ-worlds, but the ψ-worlds
themselves need not be accessible. But the normality sense of ceteris
paribus made comparisons inside the normal worlds. This requires a
new modality for the intersection of epistemic ∼and betterness ≤:
M, w |= ⟨≤∩∼⟩ϕ
iﬀ
there is a t with s ∼t and s ≤t s.t. M, t |= ϕ
Now we can deﬁne versions of “internally epistemized” preference as
K(ϕ →⟨≤∩∼⟩ψ). This richer logic is no longer bisimulation-invariant
(cf. Chapters 12, 14). Similar points hold for belief instead of knowledge,
using intersection modalities for betterness and plausibility relations.
16.5
Dynamics of preference change
Like information, agents’ preference can change when new events hap-
pen. There are many triggers for this. First, pure information changes
can modify preference, if the latter was entangled with what agents
know or believe. In particular, one can combine the logic PAL of hard
information of Chapter 15 with modal betterness logic, leading to valid
principles for betterness after public announcement:
[!ϕ]⟨≤⟩ψ ↔(ϕ →⟨≤⟩(ϕ ∧[!ϕ]ψ))
Similar laws hold for merely belief-changing events of soft information.
But there are also intrinsic events that change betterness order, such
as following a command, or a suggestion. Consider the following action
#ϕ of “suggestion”, removing just blatant infractions:
For each model M, w, the model M#ϕ, w is M, w with the
new relation ≤′ = ≤−{ (x, y) | M, x |= ϕ and M, y |= ¬ϕ }.
Now, we enrich the static language by adding action modalities:
165Realists will not use this facility, and the logic does not force them to.

Preference and deontic logic / 193
February 2, 2010
M, w |= [#ϕ]ψ
iﬀ
M#ϕ, w |= ψ
These operations state what agents will prefer after their betterness
relation has changed. Say, if you suggest that it is better to drink beer
than wine, and I accept this, then I now come to prefer beer over wine,
even if I did not do so before.
As in the dynamic logics of Chapter 15, the crux is the “recursion
equation” stating when a preference obtains after an action. Here is the
relevant principle for suggestions, whose two cases follow the deﬁnition
of the above model change:
⟨#ϕ⟩⟨≤⟩ψ ↔(¬ϕ ∧⟨≤⟩⟨#ϕ⟩ψ) ∨(ϕ ∧⟨≤⟩(ϕ ∧⟨#ϕ⟩ψ))
Just this once, we give a complete axiom system, so you can see con-
cretely what a dynamic logic of preference change looks like:
Theorem 36. The dynamic logic of preference change under sugges-
tions is axiomatized completely by
1. the static modal logic of the underlying model class, plus
2. the following equivalences for the dynamic modality:
[#ϕ]p
↔p
[#ϕ]¬ψ
↔¬[#ϕ]ψ
[#ϕ](ψ ∧χ) ↔[#ϕ]ψ ∧[#ϕ]χ
[#ϕ]Uψ
↔U[#ϕ]ψ
[#ϕ]⟨≤⟩ψ
↔(¬ϕ ∧⟨≤⟩[#ϕ]ψ) ∨(ϕ ∧⟨≤⟩(ϕ ∧[#ϕ]ψ)).
This logic automatically derives a dynamic logic of lifted proposi-
tional preferences. For instance, we can compute as follows how the
earlier ∀∃-type preferences Pϕψ arise:
[#ϕ]Pψχ ↔P([#ϕ]ψ ∧¬ϕ)[#ϕ]χ ∧P([#ϕ]ψ ∧ϕ)(ϕ ∧[#ϕ]χ)
It is easy to combine this with the logic PAL of knowledge update
under hard information (Chapter 15), and the same style of analysis
also applies to entangled intersection modalities:
⟨#ϕ⟩⟨≤∩∼⟩ψ ↔(¬ϕ ∧⟨≤∩∼⟩⟨#ϕ⟩ψ) ∨(ϕ ∧⟨≤∩∼⟩(ϕ ∧⟨#ϕ⟩ψ))
16.6
Excursion: deontic logic
Deontic logic is the study of obligation and permission, traditionally
with modalities Oϕ: “ϕ ought to be the case” and Pϕ: “it is permitted
that ϕ”. These notions are usually studied with abstract deontic acces-
sibility relations. But in our setting, they relate directly to betterness
orderings: what is obligatory is what holds in all best worlds: presum-
ably, the ones we should strive for. The relevant ordering here need not
be our own, but it may be given by some moral or legal authority.

February 2, 2010
194 / Modal Logic for Open Minds
This ties in with all our topics so far. For instance, note the strong
analogy between obligation and belief, as truth in all most plausible
worlds (Chapter 13). Indeed, deontic logic has undergone a very simi-
lar formal development, including the notion of conditional obligation,
comparable to conditional belief. Also, the counterpart to acts of belief
revision are dynamic events that change the deontic betterness order,
say, the promulgation of a new law. Viewed in this way, deontic logic is
really about multi-agent preferences (me, the law-giver, other people),
and how these interact. And dynamics describes how our obligations
change under changes in the law, or just in our information.
16.7
Multi-agent interaction and group preference
While preference logic has been mainly studied for individual agents,
most scenarios of interest involve social interaction. Games are driven
by players’ moves, their preferences over outcomes, and beliefs about
what other players will do (Chapter 17). Another basic social setting
are groups that deliberate and take decisions – as in Social Choice
Theory. There has been some logical analysis of this sort of group
behaviour, in particular, merging individual betterness relations into
collective ones.166 These analyses assume that the group G has enough
structure to resolve conﬂicts in the process of aggregating individual
preference relations. Here is one concrete way of doing this, generaliz-
ing the earlier derivation of object preference from priority sequences:
Deﬁnition 16.7.1 (Object order induced by priority graphs). Con-
sider a priority graph G = (G, <) of indices (which may have multiple
occurrences), standing for agents, issues, or any other relevant items.
The over-all induced object order is this:
x ≤G y
iﬀ
for all indices i ∈G, either x ≤i y,
or there is some j > i in G with x <i y
Powerful aggregation mechanisms like this invite the logics of our chap-
ters so far. Even so, the systematic job of developing epistemic, doxas-
tic, and preferential logics for groups, considered as serious entities in
their own right, has not been done yet.
We leave matters here – but this open end is important. The dynam-
ics of preference change under information and other triggers is crucial
for understanding deliberation, fair procedure, and social organization.
166An analogous natural task is belief merge for a group of agents.

Preference and deontic logic / 195
February 2, 2010
Exercises Chapter 16
1. We can introduce a modality ⟨<⟩ϕ for a strict order saying that
ϕ is true in some strictly better world (with ‘strictly better’ as
deﬁned in the text). This will validate several axioms for the
combination of ⟨≤⟩, ⟨<⟩, such as ⟨<⟩ϕ →⟨≤⟩ϕ (but not the
converse). Can you ﬁnd other valid axioms?
2. Show the validity of the ceteris paribus axiom
(α ∧⟨Γ⟩≤(α ∧ϕ)) →⟨Γ ∪{α}⟩≤ϕ
3. Show the validity of the stated reduction axiom for betterness
change under suggestion.
4. Consider subsets of a connected pre-order ≤. A set Y is preferred
to a set X if ∀x∈X ∀y∈Y : x≤y. Which basic properties hold for
this set order? Must it be linear?
5. Let us derive betterness order from given properties:
(a) Consider a ﬁnite “priority sequence” P of properties, and
order objects as follows:
x < y iﬀx, y diﬀer in at least one property in P , and the ﬁrst
P ∈P where this happens is one with Py, ¬Px.
Show that this induced object order < is reﬂexive, transitive,
and connected. Show that every ﬁnite connected order can
be obtained from some P in this way.
(b) Consider a priority graph G = (G, <) as introduced in Sec-
tion 16.7. Show how its induced object ordering generalizes
the object ordering of the previous item. Which ordering do
we get when we take the disjoint union of two such graphs?
And what about sequential composition of priority graphs?

February 2, 2010

February 2, 2010
17
Modal logic and games
A concrete area where information and action meet is that of games,
where players’ strategies involve interaction over time with other play-
ers’ moves. We will just show you a number of ways in which modal
logic is involved here, without any pretense at systematic theory. In par-
ticular, we assume that the reader is familiar with basic game-theoretic
notions, or can pick up the needed from the present text.167
17.1
Extensive games as process models
An extensive game is a tree with labeled relations going from node
to node (the available moves), in which intermediate nodes indicate
players’ turns, and end nodes carry information about players’ utilities
when the game stops. Histories in such a tree can also be inﬁnite, but
most examples in this chapter are about games of ﬁnite depth. Such
a tree is a modal model process with nodes as worlds, labeled actions,
and markings for local properties of stages.
Example (An extensive game tree). Consider a game for two players
A, E with four actions c, d, a, b, and a special property p holding at two
of the four possible end states, yielding this process graph:
A
◦
c
ullllllllllllll
d
)R
R
R
R
R
R
R
R
R
R
R
R
R
R
E
E
◦
a
vmmmmmm
b
(Q
Q
Q
Q
Q
Q
◦
a
vmmmmmm
b
(Q
Q
Q
Q
Q
Q
◦
◦
◦
◦
p
p
167An excellent text is M. Osborne & A. Rubinstein, A Course in Game Theory
(Osborne and Rubinstein, 1994). Interfaces with logic are in my lectures Logic in
Games, ILLC, Amsterdam, 2001, van der Hoek & Pauly, 2006, in the Handbook of
Modal Logic, and the 2008 ESSLLI lectures by E. Pacuit & O. Roy.
197

February 2, 2010
198 / Modal Logic for Open Minds
Here is a typical modal formula that is true at the root of this model:
[c ∪d]⟨a ∪b⟩p
each of the actions c and d leads to a state where either a or b can be
executed to get to a ﬁnal state where p holds. This says in the given
graph that player E has a strategy ensuring that the outcome of the
game satisﬁes p. Here, p might be the property that E wins, in which
case the modal formula expresses that “E has a winning strategy”.
More complex strategies than a single response give rise to longer
modal
2,
3 sequences. Here is a more technical example of the power
of modal languages (read “zero-sum” here as “win/lose only”):
Theorem 37 (Zermelo’s Theorem). Each ﬁnite 2-player zero-sum
game is determined: one of the two players has a winning strategy.
Proof. Here is a procedure for computing the player with the winning
strategy at any node in a ﬁnite 2-player game with end nodes marked
wini or ¬wini for players i. One starts in end nodes, and works upwards
as follows. First, colour end nodes black that are wins for player I, and
the other ones white. Then extend this stepwise as follows:
If all children of a node x have been coloured, do one of the following:
(a) player I is to move, and at least one child is black: colour x black;
if all children are white, colour x white, (b) likewise for player II, with
white and black interchanged.
Working upward to the root, this eventually gives black to all nodes
where player I has a winning strategy, and white to those where II has
a winning strategy. Here is the colouring for a simple game tree:
II
◦
jjjjjjjjjjjjjjjjj
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
I
II
•
tttttt
N
N
N
N
N
N
N
N
◦
pppppppp
K
K
K
K
K
K
K
I
◦
•
•
◦
oooooo
N
N
N
N
N
N
winI
winI
◦
◦
Zermelo was concerned with Chess, which also allows draws. His
result implies that one of the two players has a non-losing strategy.168
The diﬀerence between theory and practice: right now, a century later,
it is still unknown which player has the non-losing strategy!
168The result was rediscovered by the Dutch world Chess champion Euwe.

Modal logic and games / 199
February 2, 2010
Here is what drives the algorithm:
Fact. Player I has a winning strategy in a node iﬀeither
(i) it is an end node which is winning for I, or
(ii) it is I ’s turn, and at least one move is available to a node where
I has a winning strategy, or
(iii) it is II ’s turn, but all II ’s available moves lead to nodes where I
has a winning strategy.
But now we see a modal logic pattern! Let move be the union of all
available actions. Then the rule for i’s winning positions wini may be
deﬁned by the following modal recursive deﬁnition:
wini ↔(end ∧wini) ∨(turni ∧⟨move⟩wini) ∨(¬turni ∧[move]wini)
The technical background is the modal ﬁxed-point logic of Chapter 22.
Zermelo’s reasoning yields a mechanical algorithm that traverses ﬁ-
nite game trees, and determines node-by-node which player has the win-
ning strategy. This algorithm is the basis for all sophisticated methods
that solve games using computers, a form of “meta top sport”. Recently,
for the board game Checkers, 15 years of computer labour yielded the
Zermelo answer: the starting player has a non-losing strategy.
17.2
Dynamic logic of strategies
This modal description does not yet deﬁne the strategies that players
follow in a game, i.e., the rules that guide their behaviour. But the dy-
namic logic of Chapter 14 can do just that. For a start, the total move
relation was a program union of atomic transition relations movei, and
the statement about a winning strategy in our ﬁrst example of an ex-
tensive game involved these:
[a ∪b]⟨c ∪d⟩p
More generally, strategies are partial transition functions deﬁned on
players’ turns by rules “if she plays this, then I play that”. Functions are
also binary relations, and indeed, arbitrary binary transition relations
make sense in games. These allow more choices at nodes, a bit like
general plans of action. Now PDL was our modal language for deﬁning
transition relations, and it makes sense here as well: on top of the
“hard-wired” moves in a game, we get PDL-style relations that deﬁne
strategies. And once we have these, we can use a modal language to
state what players can achieve by following these (interactive) plans:
Fact. For any PDL strategy term σ, PDL can deﬁne the following
“forcing modality” {σ, i}ϕ: σ is a strategy for player i forcing the game,
against any play of others, to pass only through states satisfying ϕ.

February 2, 2010
200 / Modal Logic for Open Minds
Here is a related result. Giving strategies for both players, we get to
a unique end-point of a game, and here is how:
Fact. PDL can deﬁne the outcome of running joint strategies σ, τ.
Proof. The formula is [((turnE; σ) ∪(turnA; τ))∗](end →p) 169
We conclude with another use of PDL. As a binary relation, a strat-
egy σ for player i in a ﬁnite game M is just a ﬁnite set of ordered pairs
(s, t). Thus, it can be deﬁned by a PDL program union, if we can deﬁne
the singleton relations {(s, t)}. Now call a model M expressive if all
its states s are uniquely deﬁnable by modal formulas def s. Then deﬁne
{(s, t)} by the program expression
?def s; U; ?def t
where U stands for the universal relation.
This simple observation proves:
Fact. In expressive ﬁnite extensive games, PDL deﬁnes all strategies.
17.3
Games with imperfect information
Many games have imperfect information: players need not know exactly
where they are in the tree – for instance when playing at cards.
Example (An extensive game with imperfect information). Consider
this variant of the game of Section 17.1, now with an uncertainty for
player E about the ﬁrst move played by A. (Perhaps, A put his move
in an envelope.) This models a combined modal-epistemic language:
A
◦
c
ujjjjjjjjjjjjjjjj
d
)T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
E
E
•
a
vmmmmmm
b
)R
R
R
R
R
R
R
E
◦
a
ulllllll
b
(Q
Q
Q
Q
Q
Q
◦
◦
◦
◦
1
2, p
3, p
4
The modal formula [c ∪d]⟨a ∪b⟩p is still true at the root. But we can
make more subtle assertions now, using the dotted lines as an acces-
sibility relation for knowledge, just like in Chapter 12. At stage s, a
player knows those propositions that are true throughout the “infor-
mation set” to which s belongs. Thus, after A has played move c from
the root, in the black state, by the standard semantics of epistemic
logic, E knows that playing either a or b will give her p – because the
disjunction ⟨a⟩p ∨⟨b⟩p is true at both middle states:
KE(⟨a⟩p ∨⟨b⟩p)
169Dropping the end →describes eﬀects of strategies at intermediate nodes.

Modal logic and games / 201
February 2, 2010
On the other hand, there is no speciﬁc move of which E knows that it
guarantees an outcome satisfying p – which shows in the black node,
witness the truth of the epistemic-dynamic formula
¬KE⟨a⟩p ∧¬KE⟨b⟩p
We recognize the de re/de dicto distinction from Chapter 11.
17.4
Preferences, rationality, and solving games
Real game theory arises only when players get payoﬀs, and have prefer-
ences between outcomes. Then, the Zermelo colouring algorithm must
be extended to a numerical procedure called Backward Induction (BI ).
We do not give details of the method, but just an illustration.
Example (A Backward Induction computation). Here is a simple case
of this ubiquitous method for computing optimal interactions – with
outcome values indicated for A and E in that order:
A
O
O
O
O
O
O
O
O
ooooooo
ooooooo
1, 0
E
?
?
?


0, 2
1, 1
If player E gets to play, she will choose left, since she prefers 2 over 1.
This is a standard assumption of “rationality”: I choose what is best for
me, given my options.170 Anticipating that, A chooses left, since that
gives him 1, while going right would give him only 0. Thus, optimal
strategies for the players are those marked by the double lines.
Analyzing this reasoning suggests modal logics of action and pref-
erence. Finite game trees are not only models for a dynamic logic of
moves, but also for players’ preferences. Here is just one deﬁnability
result out of many recent ones, in a modal correspondence version:171
Fact. The backward induction solution of a ﬁnite game is the unique
function bi satisfying this modal law for all formulas ϕ:
⟨bi⟩[bi ∗](end →ϕ) →[move]⟨bi∗⟩(end ∧⟨≤⟩ϕ)
The formula says that there is no alternative to a BI -move all of
whose outcomes would be better than following that BI -move. You
will see the analogy with the Geach convergence axioms of Chapter 9.
170More sophisticated versions have a doxastic aspect: agents choose what they
think is best for them, given what they believe about their options.
171This simpliﬁed version assumes that end nodes are uniquely deﬁnable.

February 2, 2010
202 / Modal Logic for Open Minds
Backward Induction ﬁnds a so-called Nash equilibrium: a set of
strategies where no player can achieve a better outcome for herself
by unilaterally changing her strategy, while the others stick to theirs.
Stated diﬀerently, each player’s strategy is a “best response” to those
of the others. Notions of equilibrium, locking interactive behaviour into
place, are typical for game theory, and economics in general. They, too,
have a ring of preference logic – and logics for deﬁning equilibria and
studying their properties are a lively research area.
More generally, the entanglement of modal notions, noted in Chapter
16, is very noticeable in this setting. Reasoning about games, and by
players inside games, involves a mix of actions, knowledge, belief, and
preference. Moreover, it is important to understand that reasoning,
since game solution methods may have surprising outcomes.
Example (The darker sides of Backward Induction). Consider the
following simple numerical variant of our earlier game:
A
O
O
O
O
O
O
O
O
ooooooo
ooooooo
1, 0
E
?
?
?


0, 100
99, 99
As before, Backward Induction computes an equilibrium with outcome
(1, 0) by bottom-up reasoning about players’ “rationality” – making
both hugely worse oﬀthan the right-most outcome (99, 99).
So, why does this happen? It pays to analyze the reasoning more
closely. It derives expectations from betterness among end nodes, and
chooses moves accordingly. This is a dynamic doxastic process like in
Chapter 15. Each complete history of the game is a world, and the
backward induction algorithm creates a plausibility order among these,
the same for both players. In our example this ordering eventually has
world (1, 0) on top, then (0, 100) and then (99, 99). Thus in games,
the plausibility relations stipulated in earlier models for belief are now
created by a dynamic analysis connecting belief with preference.172
Clearly, this is just the start of a study of games where all logics of
Part III so far can be put to use, static and dynamic. And this study
is not conﬁned to justifying standard game-theoretic rationality. It can
equally well undermine received notions, by analyzing quite diﬀerent
assumptions about players’ behaviour.
172This involves crucial betterness comparisons with worlds that we believe will
not happen: it is precisely those that keep the actual prediction “in place”.

Modal logic and games / 203
February 2, 2010
17.5
Dynamic logics of game change
Finally, the dynamic logics of Chapter 15 also make sense. For instance,
one can break a bad Backward Induction solution by changing a game.
Example (Promises and game change). In our earlier game, the Nash
equilibrium (1, 0) can be avoided by E’s promise that she will not
go left. This is a public announcement that some histories will not
occur (we make this binding by a huge ﬁne on infractions) – and the
new equilibrium (99, 99) results. Interestingly, this makes both players
better oﬀby restricting the freedom of one of them!
A
O
O
O
O
O
O
O
O
ooooooo
ooooooo
1, 0
E
?
?
?


0, 100
99, 99
A
O
O
O
O
O
O
O
O
O
O
O
O
O
O
O
O
ooooooo
1, 0
E
99, 99
Our earlier methods apply here at once:
Theorem 38. The dynamic logic of changing games by announcement
is axiomatized by a modal logic of moves and strategies,173 the PAL
axioms for atoms and Boolean operations, plus one law for moves:
⟨!P⟩⟨a⟩ϕ ↔(P ∧⟨a⟩(P ∧⟨!P⟩ϕ))
We can also talk about explicit strategies. Using PDL as before, this
leads to a logic PDL + PAL. It is easy to show that PDL can relativize
strategies π to π|P in the submodel deﬁned by P, and we need this for
the following result about the earlier forcing modalities:
Theorem 39. PDL + PAL is axiomatized by the logic of Theorem 38
plus the following reduction axiom for strategy modalities:
[!P]{σ}ϕ ↔(P →{σ|P}[!P]ϕ)
PAL-style model-changing logics also suggest new analyses for game
solution methods. Many such methods involve pruning game trees in
successive rounds. This can be modeled as “internal deliberation” be-
tween players, driven by repeated announcements of “Rationality”:
Theorem 40. The Backward Induction solution is obtained through
iterated announcement, as long as possible, of the assertion “No player
chooses a move all of whose further histories end worse than all histories
after some other available move”.174
173This static modal game logic could be PDL again, as earlier on this chapter.
174In game theory, the nodes eliminated in this way are called the “strictly dom-
inated” ones. Our iterated announcement procedure leaves one with only topmost
BI-moves. For lower nodes, one has to keep track of intermediate stages.

February 2, 2010
204 / Modal Logic for Open Minds
Proof. This is a simple induction on ﬁnite trees. We show the procedure
for a “Centipede game”, with three turns, branches indicated by name,
and pay-oﬀs for A, E in the given order:
A
E
A
u 5, 5
x
y
z
1, 0
0, 5
6, 4
Stage 0 of the announcement procedure rules out branch u, which
is the only one to violate the stated form of Rationality. Next, Stage 1
rules out z, which now violates Rationality after branch u has disap-
peared – while Stage 2 rules out y. What remains is the BI solution x,
which on its own satisﬁes Rationality. Elimination stops.
This iterated announcement procedure necessarily ends in largest
sub-games that cannot be further compressed: i.e., the Rationality as-
sertion holds throughout. When this sub-game is non-empty, through
deliberation, players have achieved common knowledge of rationality.
17.6
Conclusion
We have shown by examples how modal logics apply to games in a
natural manner. We worked with games in extensive form, but similar
methods apply to the usual matrix games in strategic form.
Finally, the reader may want to think about our ﬁrst use of games,
in the evaluation and model comparison tasks for basic modal logic
(Chapters 2 and 3). Thus you see that, while logic can be used to an-
alyze games, conversely also, games can be used to analyze logic. This
intriguing duality is far from being completely understood.

Modal logic and games / 205
February 2, 2010
Exercises Chapter 17
1. Using formulas of dynamic logic, express the following assertion:
“No matter what player II does in the course of the game, the result
of player I ’s playing strategy σ is always an end state satisfying p”.
2. Consider a ﬁnite game where no two worlds satisfy the same for-
mulas. Show that every strategy for a player is PDL-deﬁnable.
3. Consider the following epistemic-dynamic axiom for imperfect
information games: (turni ∧Ki[a]ϕ) →[a]Kiϕ. Which game-
theoretic form of “Perfect Recall” is expressed by this?
4. Show that the stated modal-preference axiom for Backward In-
duction is valid. Give a more formal equivalence proof using a
frame correspondence argument.
5. Show the soundness of all dynamic axioms for game change stated
in our text.
6. Finite games satisfy a version of “L¨ob’s Axiom” (Chapter 21):
state which one.
7. Re-analyze our “hard” public announcement analysis of Back-
ward Induction, now using a dynamic scenario of suitable “soft
information” events (Chapter 15) that change plausibility order-
ing in a game tree without eliminating nodes.
8. Turn the Card update example of Chapter 15 into a “knowledge
game” by adding a purpose and pay-oﬀs, and analyze players’ best
conversational strategies. For such games with Muddy Children-
like features: see
http://spotlightongames.com/summary/abbey.html.
9. In a two-step game, either the ﬁrst player has a move such that all
further countermoves lead to a win for her, or, for every move of
the ﬁrst player, there is a countermove making the second player
win. Which classical logical law justiﬁes this? Turn this into a
general proof of Zermelo’s Theorem. Why does not this “pure
logic method” work for inﬁnite games?

February 2, 2010
206 / Modal Logic for Open Minds
Introducing chapters 18 through 21: Mathematical structures
While the preceding chapters dealt with many aspects of agency,
modal logic also has quite diﬀerent applications. The following group
of chapters follows another line, running through mathematics and com-
putation. First we deal with modal structures in Time and Space, then
we move to mathematical reasoning itself, viewing proof from two foun-
dational perspectives: intuitionism, and classical provability logic.
While this looks like a more traditional line, it is not at all disjoint
from our earlier concerns. For instance, temporal logic is also important
in the study of language, computation and agency, and intuitionistic
logic may be viewed as a knowledge-related paradigm providing an
alternative to our earlier epistemic logic. But the topics to come also
stand on their own.
Again, many of our general modal themes will return, and you may
be surprised to see what they have to say about these classical areas,
that have also been well-studied from other logical perspectives.

February 2, 2010
18
The structure and ﬂow of time
18.1
Origins and habitats of temporal logic
Time is a long-standing concern in many disciplines, from philosophy to
physics, psychology, and computer science – and logic joins in this en-
deavour, too. Temporal discourse and reasoning show logical structures,
and many of these are modal. Temporal logics were initially proposed
for analyzing famous arguments from the philosophical tradition involv-
ing time, but it soon became clear that such reasoning involves presup-
positions about the ontology of temporal entities and their order, which
can be brought out by logical means. Afterwards, techniques developed
in this way were applied to linguistic semantics, and the repertoire of
temporal expressions in natural languages.
In recent decades, temporal logic has been used extensively in com-
puter science and artiﬁcial intelligence as a vehicle for describing pro-
cesses, and general cognitive agency (Chapter 15). Temporal logic today
is a vast area of research, and we will only skim the surface. All earlier
modal themes of Parts I, II return, but often with a very special ﬂavour.
18.2
Tense logic: languages, semantics, and invariance
Basic language We start with a propositional system with operators
Fϕ
at least once in the future, ϕ will be the case
Pϕ
at least once in the past, ϕ has been the case
Derived from these, we have two dual universal modalities:
Gϕ
always in the future from now ϕ
Hϕ
always in the past up until now ϕ
This simple formalism already generates interesting patterns:
207

February 2, 2010
208 / Modal Logic for Open Minds
Example (Temporal expressions).
GFϕ
ϕ is always going to be true at some later stage
PHϕ
once upon a time, ϕ had always been the case
G(ϕ →Fϕ)
ϕ will always “enable” ϕ to become true afterwards.
Semantics The usual modal models M for this language can now
be interpreted as “ﬂows of time” (T, <, V ), where < is an earlier than
relation between points in time. The only special feature is that we use
both the relation itself and its converse in the truth deﬁnition:
M, t |= Fϕ
iﬀ
for some t′ > t : M, t′ |= ϕ
M, t |= Pϕ
iﬀ
for some t′ < t : M, t′ |= ϕ
Of course, we may want special principles to hold for the relation
of temporal precedence, and these can often be found systematically
using the modal frame correspondences of Chapter 9. For instance, the
axiom Gϕ →GGϕ, or alternatively Hϕ →HHϕ, enforces transitivity
of the temporal order. Here are some further examples:
Fact. Rightward Linearity of temporal order: ∀y∀z((x < y ∧x < z) →
(y < z ∨z < y ∨z = y)), is deﬁned by the tense-logical axiom (Fp ∧
Fq) →(F(p ∧q) ∨F(p ∧Fq) ∨F(q ∧Fp)).175 Density ∀x∀y(x < y →
∃z(x < z ∧z < y)) is deﬁned by Fϕ →FFϕ, the converse 4-axiom.
(Forward) discreteness ∃y(x < y ∧∀z(z < y →(z = x ∨z < x))) is
deﬁned by “Hamblin’s Axiom” ϕ →FH(ϕ ∨Fϕ).
All these facts follow from the substitution method of Chapter 9.
But some natural principles for temporal precedence are second-order:
Example (Two higher-order principles). Continuity says that tempo-
ral ﬂow is “as full as can be”: every subset with an upper bound has a
supremum (a lowest upper bound).176 Next, homogeneity says that all
points in time are “essentially the same”: every point can be mapped
onto any other one by some order-isomorphism of the temporal frame.
No consensus has emerged, and temporal logic studies many diﬀerent
patterns of time: linear or branching, dense or discrete, and so on.
Basic model theory The notion of modal bisimulation applies here
without further ado, provided we add clauses for backward steps in the
converse relations. But is bisimulation the right measure of identity for
temporal structure? This depends on the level of detail. For instance,
with successive events, temporal betweenness seems essential, a relation
not preserved by bisimulation. In that case, we need stronger semantic
invariances, and stronger temporal languages.
175Leftward Linearity of the order may be deﬁned likewise using P .
176We will see a tense-logical axiom expressing Dedekind Continuity a bit later on.

The structure and flow of time / 209
February 2, 2010
Many further issues make sense. For instance, we are often inter-
ested in special temporal properties deﬁned only by special formulas.
A typical example is forward persistence of propositions ϕ over time,
making ϕ →Gϕ valid. Here is a suﬃcient syntactic condition:
Fact. On transitive models, all formulas constructed from atoms ⊥, ⊤
and arbitrary formulas Pϕ, Gϕ using P, G, ∧, ∨are forward persistent.
Extended languages The tense system of natural language goes be-
yond future and past. Consider a progressive tense (“Baby is cry-ing”):
M, t |= Πϕ
iﬀ
∃t1 < t∃t2 > t∀u(t1 < u < t2 →M, u |= ϕ)
Fact. The progressive is not deﬁnable in the temporal base language.
Proof. Πϕ is not invariant for temporal bisimulation, witness the fol-
lowing two models, where numbers mark points to be identiﬁed:
•2
•2
•1
?





q • 4
?





_??????
•1
_???????
•3
?





_???????
•3
?





_??????
•2
q • 4
?





•1
_???????
•3
?






_??????
Set V (q) = {4} in both cases. Then, Πq is true on the left in the point
4 (consider some upper point 2 and its diagonally opposite 3) – but, it
fails in its counterpart 4 on the right.
The progressive tense is still ﬁrst-order deﬁnable under an obvious
translation. The same is true for many temporal operators.
Example (Next time). The following useful operator O (“next time”,
“tomorrow”) only makes sense on discrete models:
M, t |= Oϕ
iﬀ
M, t + 1 |= ϕ
And here are two stronger temporal notions from Chapter 7 that
translate into the 3-variable fragment of ﬁrst-order logic:
Example (Since and Until).
(a) M, t |= Sϕψ iﬀfor some point t′ < t, M, t′ |= ϕ and for all x
with t′ < x < t, M, x |= ψ.
(b) M, t |= Uϕψ iﬀfor some point t′ > t, M, t′ |= ϕ and for all x
with t < x < t′, M, x |= ψ.
A famous result is “Kamp’s Theorem” on functional completeness:

February 2, 2010
210 / Modal Logic for Open Minds
Theorem 41. On continuous linear orders, every ﬁrst-order statement
with one free variable is deﬁnable in the {S, U} formalism.
The underlying fact is that on linear orders < with a ﬁrst-order
language expressing unary properties, the 3-variable fragment already
suﬃces for deﬁning all ﬁrst-order assertions.177
Multiple indices Another type of extension in temporal logic are mul-
tiple indices, keeping track of more than one point together. This makes
sense, for instance, in formal systems describing the ubiquitous tenses
of natural language. A famous proposal is the “three-point scheme” of
Reichenbach, casting sentences as describing events E that happened
at some time, while there is also a point of speech S where the sentence
is uttered, plus an auxiliary “point of reference” R. Tenses then diﬀer
in the way in which they set up a narrative:
Present
“I am sinning”
E, R, S
(E = R = S)
Perfect
“I have sinned”
E
R, S
(E < R = S)
Imperfect
“I sinned”
E, R
S
(E = R < S)
Past Perfect
“I had sinned”
E
R
S
(E < R < S)
Similar schemes explain sentences involving also future tenses.
“Double-indexing” in a format M, t, t0 |= ϕ 178 has also been pro-
posed to model the properties of the fundamental temporal indexical
expression NOW, which refers back, no matter how deeply embedded
in a formula, to the original point t0 of evaluation:
M, t, t0 |= NOW ϕ
iﬀ
M, t0, t0 |= ϕ
In the limit of this approach, there is a whole family of extended
temporal languages describing properties of pairs or longer tuples of
worlds, up to the expressive power of a full ﬁrst-order language.
18.3
Tense logic: deduction and complete logics
Minimal logic and beyond The minimal tense logic is exactly like
the minimal modal logic K, but with the following additional axioms
expressing that future and past are converses:
ϕ →GPϕ
ϕ →HFϕ
Interesting features include “anisotropy” (no preferred direction):
Mirror Image Property for Future versus Past:
if |= ϕ(F, P, G, H) , then |= [P/F, F/P, H/G, G/H]ϕ
The pair ϕ →GPϕ, ϕ →HFϕ exempliﬁes this substitution.
177There exist many sophisticated generalizations of Kamp’s Theorem.
178This technique keeps getting rediscovered, since it makes sense more widely.

The structure and flow of time / 211
February 2, 2010
On top of this logic, speciﬁc temporal structures add further axioms.
Theorem 42. The complete tense logic of the rational number line
Q is given by the minimal tense logic plus the above axioms for (a)
linear order, (b) density, and (c) two principles ensuring existence of
successors toward past and future: P⊤and F⊤.
Theorem 43. The complete tense logic of the reals R extends that of
Q with the following axiom of “Dedekind Continuity”: (FHp ∧F¬p ∧
G(¬p →G¬p)) →F((p ∧G¬p) ∨(¬p ∧Hp)).
Although completeness theory has enjoyed an immense success in
temporal logic, the area has also seen the ﬁrst set-backs: natural logics
for which no complete set of temporal frames exists.
Example (An Incomplete Tense Logic). Consider the past-looking
L¨ob’s Axiom H(Hp →p) →Hp, that expresses (a) transitivity, plus
(b) well-foundedness of the temporal order (cf. Chapters 9, 21). Add
the McKinsey Axiom GFp →FGp, which now expresses “future sta-
bilization”. On transitive frames, the latter enforced the existence of
(reﬂexive) end-points: ∀x∃y(x < y ∧∀z(y < z →z = y)). Together,
these two principles form a consistent tense logic, but they hold on no
temporal frame. More details can be found in Chapter 26.
Looking in the opposite direction, there is also no guarantee that
natural temporal structures have well-behaved axiomatizable logics. In
practice, however, many such logics have been found: from the standard
number lines to complex relativistic structures (cf. Chapter 10). One
explanation may be found in Chapters 7, 24; many temporal structures
are tree-like, and hence fall in the scope of Rabin’s Theorem guaran-
teeing even decidability. Another, much easier observation is that the
complete tense logics of classes of structures deﬁned by a ﬁrst-order
sentence must always be recursively enumerable.
Complexity We forego decidability and computational complexity
here, though temporal logic is one of the best-researched areas of
modal logic in this respect.179 Complexity of satisﬁability for tense log-
ics ranges from NP-complete (for instance, on linear orders) through
PSPACE-complete (like K and S4) to EXPTIME-complete (when
models include binary trees), while undecidable tense logics have also
been constructed – some of extremely high second-order complexity.
In addition, since temporal languages are widely used to specify
properties of processes, the complexity of model-checking, too, has been
extensively researched. As the reader will recall from Chapter 6, model-
179See the chapter by Hodkinson & Reynolds in the Handbook of Modal Logic.

February 2, 2010
212 / Modal Logic for Open Minds
checking for modal languages on ﬁnite models can be very eﬃcient, and
many computational resources exist for temporal logics.
18.4
An alternative: interval ontology
Structures and axioms Durationless points have been a prevalent
image, but alternative intuitions take Time as having extended periods
or intervals as its primary stuﬀ. Motivations have come from philoso-
phy, linguistics, and artiﬁcial intelligence, as being closer to common
sense conceptions and simple algorithms for temporal information.
Deﬁnition 18.4.1 (Interval models). Temporal interval models consist
of a set of temporal intervals, with suitable relations such as
i < j
i wholly precedes j
i ⊆j
i is included in j
iOj
i overlaps with j
Here are some familiar pictures that use linear stretches:
precedence
i
j
inclusion
j
i
overlap
i
j
There is no uniform choice of relations or operations in the ﬁeld.
Sometimes, one includes all possible relative positions between bounded
linear intervals. Of these, there are exactly thirteen, as may be shown
by listing the possible positions for i and j in the above picture.
Example (Concrete intervals). Typical interval models arise as convex
sets X in the ordering on point models, that is:
∀t1 ∈X∀t2 ∈X∀t ∈T : ((t1 < t ∧t < t2) →t ∈X)
Think of linear intervals, convex sets in a plane, etcetera.
On the other hand, interval models can be taken as primary tem-
poral pictures without any point-based underpinning, satisfying some
suitable constraints. We merely formulate a few candidates, showing
how various primitive relations between intervals might interact:
<, O
∀x ¬x < x
∀x xOx
∀x∀y (xOy →yOx)
∀x∀y (xOy →¬x < y)
∀x∀y∀z∀u (x < yOz < u →x < u)

The structure and flow of time / 213
February 2, 2010
adding ⊆
∀x x ⊆x
∀x∀y∀z (x ⊆y ⊆z →x ⊆z)
∀x∀y (x ⊆y ⊆x →x = y)
∀x∀y∀z∀u (x ⊆y < z ⊇u →x < u)
∀x∀y (x ⊇yOz ⊆u →xOu)
All these formulas are universal Horn clauses of the form
∀x1 · · · ∀xk: conjunction of atoms involving x1, . . . xk
implies atom involving x1, . . . xk
that do not require existence of points, but merely drive a “composition
table” for temporal relations. In addition, there are more negotiable
requirements on interval models, such as
Convexity
∀x∀y∀z∀u(u ⊇x < y < z ⊆u →y ⊆u)
Linearity
∀x∀y(x < y ∨y < x ∨xOy)
Languages and modal axioms Basic tense logic extends to interval
models with valuations for proposition letters, while adding operators
taking advantage of the new structure. Thus, with two primitive rela-
tions < and ⊆, one gets two new modalities:
2downϕ
ϕ holds in all subintervals
2upϕ
ϕ holds in all superintervals
This logic can be studied by our techniques from Part II.
Fact. The following pairs are frame correspondences for inclusion:
reﬂexivity
2downp →p
transitivity
2downp →
2down
2downp
atomicity
2down
3downp →
3down
2downp
As for the interaction with temporal precedence, we have, for instance:
right monotonicity
Fp →
2downFp
left monotonicity
Pp →
2downPp
This richer structure can be studied using bisimulation and other
known techniques, but it also raises many new issues. For instance,
verbs in natural language have diﬀerent aspectual behaviour in terms
of persistence under changes in intervals. Important properties are pre-
served under going to sub-intervals, like “being in love” or “going to
get married”. Such forms of “temporal inertia” are also important in
data bases or reasoning about causation and action:
Fact. Truth of temporal formulas constructed from arbitrary formu-
las Pϕ, Fϕ,
2downϕ and
3upPp using ∧and ∨, is always preserved
downward along inclusion of intervals.

February 2, 2010
214 / Modal Logic for Open Minds
Our earlier Progressive “be V-ing” turns an event description V into
a “state description”, which is downward persistent. Likewise, a Perfec-
tive “have V-ed” turns V into a downward persistent state description,
as reﬂected in the monotonicity of the above past operator P.
The translation methods from Chapter 7 still apply. Our modal lan-
guages translates into either a ﬁrst-order logic over primitive intervals,
or a second-order logic over point models where interval quantiﬁers
range over suitable subsets, say convex ones. In this setting of richer
classical languages, many extended modal formalisms can be devised.
Example (Extended modal interval logics). Here are some modal op-
erators in a richer calculus of aspectual structure and reasoning:
BEGIN ϕ is true at [t1, t2] iﬀthere exists t3 < t2 with ϕ true at [t1, t3]
START ϕ is true at [t1, t2] iﬀthere exists t3 > t2 with ϕ true at [t1, t3]
BEFORE ϕ is true at [t1, t2] iﬀthere exists t3 ≤t1 with ϕ true at [t3, t1].
Also, the binary modalities of Chapter 10 express sums of intervals.
Diﬀerent views and representations The diﬀerent paradigms are
related. We have already seen how point models induce intervals as
special subsets. A converse strand in the literature, going back to Rus-
sell and Wiener, retrieves points as maximally overlapping families of
intervals. This is one way how the interval structure of our common
sense experience gives rise to mathematical “public time”.
18.5
Branching temporal logic
The most widely used temporal formalisms in philosophy and computer
science today involve a richer structure than our point- or interval-
based models so far. We also want to have a tree of possible histories
around, modeling some unfolding process, or the total “playground”
of a game (cf. Chapter 17). There are many logics for this purpose.
Some are extensions of the dynamic logic PDL of Chapter 14, now
used over unraveled tree models. For instance, one popular formalism
CTL extends PDL to an expressive and yet computationally still quite
manageable fragment of the modal µ-calculus of Chapter 22.
Just for illustration, we deﬁne a richer structure making histories
(“paths”, “branches”) into independent objects. This gives the lan-
guage a combined temporal and modal ﬂavour, where temporal op-
erators stay inside one history, while modal operators cross the lines.
Think of this setting as a tree of ﬁnite sequences of events, with a se-
lection made among all possible branches in the tree, leaving just the
“legal runs” obeying some relevant protocol:

The structure and flow of time / 215
February 2, 2010
/ s
h′
h
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
Language and models The basic language has proposition letters
standing for local process properties of nodes, Boolean operations, as
well as temporal and modal operators.
Deﬁnition 18.5.1 (Branching temporal semantics). Formulas are in-
terpreted at nodes s on histories h, in the following format:
(a)
M, h, s |= Faϕ
iﬀ
s∩⟨a⟩lies on h and M, h, s∩⟨a⟩|= ϕ
The standard operator F (“at some point in the future”) is the transi-
tive closure of this modality, taken over all possible events a.
(b)
M, h, s |= Paϕ
iﬀ
s = s′∩⟨a⟩and M, h, s′ |= ϕ
Again, P (“at some point in the past”) is the transitive closure.
(c)
M, h, s |=
3ϕ
iﬀ
M, h′, s |= ϕ for some history h′ which
coincides with h up to stage s.180
Ontological and epistemic interpretations One can read the
modality
3 as absolute historical possibility in some ontological sense,
but also, as an epistemic possibility for agents, referring to future con-
tinuations which they think possible.181 In the latter vein, branching
temporal models become a good extended setting for information ﬂow,
knowledge update, and belief revision performed by rational agents, as
studied in Chapter 15. In particular, if players i also have beliefs about
the future course of the process, we add binary relations ≤i of relative
plausibility, and a matching doxastic modality
(d)
M, h, s |= Biϕ
iﬀ
M, h′, s |= ϕ for all histories h′ that
coincide with h up to stage s and are
most plausible for i according to the
given relation ≤i.
These languages can faithfully translate the dynamic epistemic, dox-
astic, and preferential logics of Chapters 12, 13, and 15. Special modal-
temporal axioms express special features of branching structures, such
180Enriching this language describes event trees more fully. E.g., a “sideways”
modality for simultaneity might refer to truth at sequences of the same length.
181This interpretation needs agent-relative accessibility relations on histories.

February 2, 2010
216 / Modal Logic for Open Minds
as behaviour over time of agents with perfect memory that may be
studied via frame correspondences. There is a growing literature on
these logics and their connections with process theories in computer
science and accounts of strategic equilibrium in game theory.
18.6
Further linguistic and mathematical perspectives
Temporal logic is a vast area, and we have just opened a few windows.
Natural language has a much richer repertoire of temporal expressions,
where verb tenses, aspects, and adverbials structure a narrative.
Likewise, much more can be said about time in the sciences. We con-
clude with a tiny sample, reﬂecting our theme of invariance. Consider
any frame (T, <). Temporal propositions denote subsets of T , and so
temporal operators are unary operations f on the power set of T . Not
all a priori functions are plausible, however: certain constraints must
be obeyed. It may be demanded that genuine temporal operators f be
insensitive to inessential shifts in temporal order:
Temporal automorphism invariance
π[f(A)] = f(π[A]) for all A ⊆T and all <-automorphisms π.
This induces a uniformity on the transformation f. For instance, on
the real number line R, f-images of singleton propositions {t} must now
arise through one uniform choice of the f-value in the form of a union
of the three relevant regions {t}, {t′ | t′ < t}, {t′ | t < t′}. Further
constraints include a requirement of local computability:
Continuity of temporal operators
f commutes with arbitrary unions of all its arguments.
For such temporal operators, computation of f(A) amounts to taking
the union of all values at singletons f({t}) with t ∈A. Together, the
two constraints characterize basic tense logic:
Fact. On the reals, the automorphism-invariant continuous temporal
operators are the basic tenses F , P plus all disjunctions of these.
Similar notions apply to extended tenses, such as the Progressive,
leading to a temporal hierarchy in terms of invariance behaviour. This
invariance analysis also extends to the interval setting, provided we now
look at combined precedence/inclusion-automorphisms.
18.7
Conclusion
As we said at the start, time is a phenomenon with many aspects, and a
province of many disciplines. We have shown that logic is one of these.

The structure and flow of time / 217
February 2, 2010
Exercises Chapter 18
1. Give some concrete examples for the Mirror Image property, and
then prove it.
2. Prove the stated frame correspondence for Hamblin’s Axiom and
forward discreteness.
3. Deﬁne the “serial sets” of reals as ﬁnite unions of convex intervals.
Show that the serial sets are closed under the Boolean operations,
plus the set operations matching the operators F and P.
4. Find a characteristic axiom for interval models with convexity.
5. Consider any interval model. A ﬁlter F is a non-empty set of
intervals closed under super-intervals. Set F < G if ∃f ∈F, g ∈
G, f < g. The “point interval” p(i) for the interval i is the set of
ﬁlters to which it belongs. Investigate some properties of the map
p: is it an isomorphism, a homomorphism?
6. Let us do some temporal logic:
(a) Which of the following principles is valid in branching tem-
poral logic, and which ones have counter-examples?:
3Fϕ →F
3ϕ
F
3ϕ →
3Fϕ
2Fϕ →F
2ϕ
F
2ϕ →
2Fϕ
(b) Deﬁne a branching time analogue of the earlier axiom for
Perfect Recall in dynamic epistemic logic (Chapter 15), and
show what condition it imposes.
7. Give a more detailed argument that the incomplete tense logic
over K4 with the backward L¨ob and forward McKinsey axioms
holds on no frames.
8. Show that all ﬁrst-order deﬁnable classes of frames have recur-
sively enumerable sets of tense-logical validities.

February 2, 2010

February 2, 2010
19
Modal patterns in space
19.1
Spatial structures
When thinking about the physical world, logicians have taken Time as
their main interest, maybe also because of its natural ﬁt with computa-
tion and action in general. Despite the evident signiﬁcance of Space and
geometry, spatial logics have been more marginal – even though his-
torically, the axiomatic method was largely geometrical. An exception
to this neglect was Tarski’s famous decidable ﬁrst-order axiomatization
of elementary geometry, going one step further than Hilbert’s famous
Grundlagen der Geometrie. Today Space has a growing importance in
many disciplines, and you can get a good impression of spatial reason-
ing in the Handbook of Spatial Logics (Aiello et al., 2007).
Space can be studied at many levels, that come with their own math-
ematical transformations. You must ﬁrst choose some level of structure
(topological, aﬃne, metric), and determine its invariances (homeomor-
phism in topology, Euclidean transformations in geometry, etc.). At
each of these levels, a logician will then design languages that bring
out interesting laws, preferably in a calculus of some reasonable com-
plexity. In this chapter, we look at a few such patterns from a modal
perspective starting from a “coarse” theory of space: topology.182
182We assume that the reader already knows some topology, the mathematics of
Space up to transformations that, intuitively, shift and compress it, but without
breaking or tearing up essential “inside outside” structure. Here is a crash course
in one footnote, with the absolute basics. A topological space is a pair (X, O) of
a set X and a family O of subsets of X (the “open sets”, or “opens”) containing
the the empty set and X itself, while being closed under taking ﬁnite intersections
and arbitrary unions. An open set containing a point is called a “neighbourhood”
of that point. Any set X contains a largest open set, its “interior” – and the opens
and the interior operation encode the same thing. Dually, everything might be
formulated in terms of closed sets, the complements of open sets. The opens are
often given by a sub-base: some family of sets which is then closed under the given
two operations to get all opens. Typical examples are metric spaces, where the “unit
219

February 2, 2010
220 / Modal Logic for Open Minds
19.2
Modal logic and topology
Let M be a topological model (X, O, V ) with points X, a family of open
sets O satisfying the usual conditions for a topology, and in addition,
a valuation V as in modal models. A modal language ﬁts very well:
Deﬁnition 19.2.1 (Topological semantics).
2ϕ is true at point s in
M (written M, s |=
2ϕ) if s is in the topological interior of JϕKM:
that is, the set of points satisfying ϕ in M. Formally, one can write
∃O ∈O : s ∈O ∧∀t ∈O : M, t |= ϕ.183
Dually, the existential modality
3 denotes a topological closure op-
erator. Typical examples of topologies are metric spaces like the real
line, or real Euclidean planes or 3D spaces, but later on, we will also
look at diﬀerent more abstract topologies, derived from trees. Please
think of our semantics as concretely as you can, in visual pictures. That
is precisely the charm of this interpretation of the modal language:
Example (Deﬁning parts of spoons). Let the proposition letter p de-
note the following “spoon” in R2. We explain the topological regions
deﬁned by some other modal formulas (these need not be open!):
p
2p
3p ∧
3¬p
32p
p ∧¬32p
3(p ∧¬32p) ∨
32p
spheres”, consisting of all points around some point up to a given distance, generate
the familiar open sets in n-dimensional spaces like the real line, or the plane. This
is one major source of topological spaces. The other source are tree models with
reﬂexive transitive orders, where a sub-base is given by the “cones” consisting of
points with all their successors in the ordering. Typically, in the latter topologies,
points have a smallest neighbourhood, whereas in the familiar metric spaces, this
is not true at all: e.g., 0 has no smallest open interval around it in the reals. Both
extremes will play a role in what follows. Next, as for invariances, a homeomorphism
is a bijection between two topological spaces that preserves open sets both ways.
Homeomorphic spaces are “the same”, even though they might be very diﬀerent in
terms of geometric properties like what lies between what on lines, or metric distance
structure. Perhaps of even greater interest are rougher continuous functions from
one space M onto another N that preserve open sets only from image to source: if
the set X is open in N, then the inverse image f−1[X] is open in M. These preserve
many topologically relevant properties already. Finally, while topology started as a
theory of space, it also has informational interpretations, with the open sets standing
for “information pieces” of some sort, and “points” as limits of inquiry. This makes
topology connected to the intuitionistic logic of our next chapter, but we will not
pursue this analogy in any detail here.
183This is reminiscent of the neighbourhood models of Chapter 10: see below.

Modal patterns in space / 221
February 2, 2010
You see how modal formulas of various operator depths deﬁne the in-
terior, the boundary, the handle, and even the single special point con-
necting the handle to the main oval part.
This interpretation is attractive because of the following
Fact. The modal axioms of S4 express basic topological properties:
2ϕ →ϕ
inclusion
22ϕ ↔
2ϕ
idempotence
2(ϕ ∧ψ) ↔(2ϕ ∧
2ψ)
intersection closure of opens
There is no analogue of closure under arbitrary unions in our ﬁnite
formulas, but we do have the following theorem in the logic S4:
(2ϕ ∨
2ψ) ↔
2(2ϕ ∨
2ψ)
More generally, one can prove this general completeness result:
Theorem 44. A modal formula is topologically valid iﬀit is provable
in the logic S4.
The proof is by “sleeping with the enemy”. Soundness is seen by
direct inspection, as we just did. For completeness, one just ﬁnds an S4-
style reﬂexive-transitive possible worlds model for a consistent formula
(as in Chapter 5). Now, any such model generates a topology:
Fact. Each pre-order induces a topology, where topological modal eval-
uation amounts to standard modal evaluation on relational models.
Proof sketch. The opens are all subsets of the model that are closed
under taking ≤-successors. In particular, an open basis is given by all
“upward cones” s≤= { t ∈W | s ≤t }. With this transformation,
truth throughout some open neighbourhood of a world is equivalent to
truth in all its relational successors.
Structures of this special kind are called “Alexandroﬀtopologies”,
in which arbitrary intersections of open sets are open, not just ﬁnite
ones. Our earlier relational modal models are such topologies and vice
versa, and this link can be made quite precise. For instance, over rela-
tional models, in an inﬁnitary modal language, we have an unrestricted
distribution law matching the Alexandroﬀproperty:
2
^
i∈I
ϕi ↔
^
i∈I
2ϕi
But the most central topologies came from metric spaces, so one
main interest is how modal logic behaves in that less familiar territory.
Example (Unlimited distribution fails on metric spaces). Interpret the
proposition letters pi as the open real interval (−1/i, +1/i), for i ∈N.

February 2, 2010
222 / Modal Logic for Open Minds
Then the modal formulas
2pi denote the same intervals, and hence
their conjunction denotes the intersection of them all, i.e., {0}. But the
formula
2V
i∈I pi denotes the topological interior of the singleton set
{0}, which is the empty set ∅.
The following intriguing point is often overlooked. Historically, the
ﬁrst semantic interpretation for modal languages was in topological
terms, by Tarski in the 1930s, and the “standard relational seman-
tics” of the 1950s then switched to tree-like topologies. Only nowadays,
broader topological models are picking up interest again.
19.3
Special topics: invariance, expressive and
deductive power
All the earlier topics from general modal logic return with new twists.
Comparison games One can analyze expressive power of the modal
language with games comparing points in topological models, probing
their degree of analogy:
Deﬁnition 19.3.1 (Topo-games). A topo-game has a Spoiler claiming
that two models M, s and N, t are diﬀerent, while Duplicator claims
that they are analogous. Rounds proceed as follows, starting from some
current match s −t. Spoiler takes one of these points, and chooses one
of its open neighbourhoods U in its model. Duplicator responds with
an open neighbourhood V of the other current point. Still in the same
round, Spoiler chooses a point v ∈V , and then Duplicator chooses a
point u ∈U, making u −v the new match. Duplicator loses if the two
points diﬀer qua atomic properties.
This looks abstract, but it is concrete. Here are some illustrations:
Example (Comparing cutlery). In the above spoon models, compare
the following sets of intuitively diﬀerent points:
(a)
(b)
(c)
For a start, here is a useful auxiliary fact. It does not matter if players
choose small or large open neighbourhoods in the game. You can see
this by trying a few moves, but there is also a general result, like the

Modal patterns in space / 223
February 2, 2010
earlier fact that on relational models, evaluation of formulas only needs
to look at R-closed “generated submodels” around the current point:
Fact (Locality Lemma). For any model M, s and modal formula ϕ,
and any open neighbourhood O of s, the following are equivalent:
(a) M, s |= ϕ,
(b) M|O, s |= ϕ, with M|O the model M restricted to the subset O.
This Fact is an easy induction on modal formulas. Now we consider
games for the above three situations, where black lines indicate the
initial match between points.184 For vividness, things will be stated
largely from the perspective of Spoiler, since we have chosen cases with
a topologically signiﬁcant diﬀerence. If you want to see a winning strat-
egy for Duplicator, just let a game start with two points in the interior
of the spoon: whatever Spoiler does, Duplicator serenely tags along.
Case (a). If Spoiler chooses a neighbourhood to the left, Duplicator
chooses a small interior disk to the right, and whatever Spoiler chooses,
there will be an inside point that Duplicator can match in the open to
the left. So, this is a bad idea. But if Spoiler starts with a small disk on
the right, Duplicator must respond with a disk on the edge to the left,
which then allows Spoiler to choose an object outside of the spoon, and
every response by Duplicator is losing, since it falls inside the spoon.
So, Spoiler has a winning strategy in one round. This is reﬂected in the
earlier modal diﬀerence formula of operator depth 1 distinguishing the
two positions – say
2p.
Case (b). Spoiler’s winning strategy starts with an open on the han-
dle to the left, and Duplicator must choose an open on the rim of the
oval. Now Spoiler picks an object there inside the spoon, and Duplica-
tor can only respond by choosing outside of the spoon (an immediate
loss), or on the handle. But the latter reduces the game to case (a),
which Spoiler could already win in one round. The diﬀerence formula
this time has modal depth 2.
Case (c) is the most complicated, since the point connecting rim and
handle is most like an ordinary rim point, but Spoiler has a winning
strategy in 3 rounds, matching a modal diﬀerence formula of modal
depth 3, for instance,
3(p ∧¬32p) ∧
32p.
As in Chapter 3, one can prove an Adequacy result by induction:
Fact. Duplicator has a winning strategy in the comparison game over
k rounds starting from two models M, s and N, t iﬀthese two pointed
models satisfy the same modal formulas up to modal operator depth k.
184We are comparing points, not ﬁgures as a whole. To do the latter, we could let
Spoiler ﬁrst mark two points that he wants to play from.

February 2, 2010
224 / Modal Logic for Open Minds
The proof is like that for relational models: you might give it a try.
Topo-bisimulation Here is a matching relation for topological models:
Deﬁnition 19.3.2 (Topo-bisimulation). A topo-bisimulation is a rela-
tion E between points in two models M, M ′ connecting only points
verifying the same proposition letters, and satisfying the zigzag clauses
(a) Whenever sEt and s ∈U ∈O, there is an open V with (a1)
t ∈V ∈O′ and (a2) ∀v ∈V ∃u ∈U : uEv. (b) The same vice versa.185
Topo-bisimulation is a coarse variant of homeomorphism. By a sim-
ple induction, it leaves the modal language invariant, and even its in-
ﬁnitary extension with arbitrary set conjunctions and disjunctions.
Still, the other basic topological transformation of a continuous map
is coarser than this, as it only preserves open sets in one direction,
backward from image to source. Even so, such maps preserve much
topological structure, and part of the reason is logical preservation.
Consider a continuous map f from M onto N, and let V be a proposi-
tional valuation on N. Then taking inverse images f −1[V (p)] induces
a corresponding valuation on M:
Fact. Continuous maps with their induced valuations preserve, going
from N to M, all modal formulas created by the following syntax:
p | ¬p | ∧| ∨|
2.186
To ﬁnd concrete applications, we move to key topological notions:
Extended modal languages Many topological notions require slight
extensions of the modal base language. For instance, call a topological
space connected if it cannot be written as a disjoint union of two non-
empty open sets. A topo-bisimulation argument shows that this is not
deﬁnable in our basic modal language. But an extended language with
the universal modality U of Chapter 3 provides a correspondence:
Example (Connectedness). A topological space (considered as a
“frame” without a valuation) is connected iﬀthe following modal
formula holds for all valuations: (U(2p ∨
2q) ∧Ep ∧Eq) →E(p ∧q).
Now, note two things. First, given that continous maps are surjective
functions, the preceding preservation result easily extends to allow for
two more syntactic operators in the preserved formulas: the universal
185This is similar to the bisimulations for neighbourhood models in Chapter 10.
186These shapes look like “universal formulas” in the basic modal language, pre-
served when going to relational sub-models. But here, these formulas are preserved
under, amongst others, extensions of topologies on the same base domain. There is
more to this connection, but we will stick to a minimum in our discussion.

Modal patterns in space / 225
February 2, 2010
modality U and the existential E. Next, the negation of the connect-
edness axiom can be written in this modal syntax. That is why it is
preserved from a continuous image to the source, and hence: if the
original space is connected, so is its image.187
Special completeness theorems Deductive power and completeness
of modal logics also make sense for topological structures. Here is a fa-
mous result by McKinsey & Tarski in the 1940s: S4 is not just adequate
for tree topologies, but also for the other major branch of topologies:
Theorem 45. The complete modal logic of any metric space without
isolated points equals S4.
The proof is diﬃcult, and simpliﬁcations and variants are still ap-
pearing. This theorem shows how little the modal language can say
about topological structures: not even a rich metric space like the re-
als can elicit more music from it than S4. But in another sense, by
its very weakness, the completeness gives attractive concrete connec-
tions between the modal language and spatial patterns. For instance,
it follows that any consistent modal formula in reﬂexive transitive S4-
models can be made true by choosing a suitable valuation on the reals.
This is highly non-trivial:
Example (Satisfying consistent formulas on the reals). Consider this
tree, with numbers for unique proposition letters true at the nodes:
p
'O
O
O
O
O
O
O
O
O
wooooooooo
q
r
?
?
?
?

s
t
In this reﬂexive transitive S4-model (we omitted some arrows for conve-
nience), formulas true at end points are necessarily true there. We ﬁrst
make p true at some real number r. The fact that the root sees a q-world
187We can also test this analysis against another major feature of continuous maps:
they preserve compactness. (What follows corrects an argument in van Benthem
and Bezhanishvili (2007).) First, the obvious logical form of Compactness is in an
inﬁnitary modal language:
U
_
i∈I
2ϕi →
_
J ﬁnite ⊆I
U
_
j∈J
2ϕj
But its negation is not of the right form, since the negated consequent would contain
existential modalities. However, we can redeﬁne compactness in a way that does ﬁt:
start with an antecedent saying that all formulas ϕi imply
2ϕi, and then state
the ﬁnite cover property in terms of the ϕi rather than the
2ϕi. There are many
technical model-theoretic questions here that have not been explored yet.

February 2, 2010
226 / Modal Logic for Open Minds
means that r is in the closure of the set of q-worlds, and hence in the
reals, there must be a convergent sequence of q-points toward it. In fact,
given that the q-world is an endpoint satisfying
2q, we see a convergent
sequence of open q-intervals toward the initial point. Looking at the
node with r, we have to put another convergent sequence, of r-points
which themselves have converging sequences of open s- and t-intervals
around them. The resulting nested pattern on the reals quickly gets
complicated, and the procedure for satisfying consistent statements on
S4-trees on the reals, involves fractal-style nested ﬁgures.
Stronger logics than S4 arise with special structures. For instance,
suppose we only want serial sets of real numbers: ﬁnite unions of convex
sets (proposed as a model for temporal “events”). The modal logic
of the serial sets is much stronger, since fewer sets are available as
denotations for modal formulas.
Fact. Serial sets validate the principle (¬ϕ ∧
3ϕ) →
32ϕ.
You will ﬁnd it rewarding to check the concrete spatial reason.188
Generalization: neighbourhood models Topological models are
special cases of the neighbourhood models of Chapter 10, where the
latter dropped even the S4-properties, validating a minimal logic be-
low K. The two semantics have essentially the same complexity. While
relational models read one modality as one quantiﬁer, topological se-
mantics reads a modal box as a classical quantiﬁer combination ∃∀:
“every point in some neighbourhood”. This explains all the additional
eﬀort in deﬁning games, topo-bisimulation, and the like.189
19.4
Geometrical modal logics
Next, we increase descriptive power (cf. Chapter 10), and change the
similarity type of our models to include geometrical notions.
Aﬃne geometry Models M = (W, B, V ) get a primitive ternary
relation B of betweenness, which supports a new “convexity modality”:
M, s |= Cϕ
iﬀ
s lies in between two points satisfying ϕ, i.e.,
∃t, u : Bs, tu with M, t |= ϕ and M, u |= ϕ.
Again this language has appealing concrete spatial models:
188Actually, the modal logic of the serial sets is exactly that of the “2-fork”: a
3-world tree model with a root and just two daughters.
189To do away with this, one would have to use a bimodal translation to two-
sorted models with “points” and “sets”, where points can belong to sets and open
sets can be neighbourhoods of points. This involves a neighbourhood relation N
plus membership ∈, yielding a transcription ⟨N⟩[∈] for
2.

Modal patterns in space / 227
February 2, 2010
Example (Convexity formulas on a tetrahedron). Consider the propo-
sition letter p interpreted as the vertices of the following tetrahedron:
1

///////////
2
OOOOOOOOOOO
3
4

The formula Cp holds on just the edges, CCp in the whole solid.190
Now dimensionality of metric spaces Rn shows up in the logic:
Fact. The reals validate the equivalence CCϕ →Cϕ.
Equivalences with higher indices hold in higher dimensions. Valid
combined principles with the earlier modal topological language include
C
2p →
2Cp
Complete logics are unknown – and this whole area is replete with
open problems (see the Handbook of Spatial Logics).
But we can also have a more powerful polyadic betweenness modality
(cf. Chapter 10), satisfying full distributivity. It says that the current
point lies on an interval whose endpoints have properties ϕ and ψ:
M, s |= ⟨B⟩ϕψ iﬀ∃t, u : Bs, tu with M, t |= ϕ and M, u |= ψ.
In a picture:
s
t
|
u
ϕ
ψ
Chapter 10 gave a concrete illustration, that we copy here:
Example (Triangle models). In the following “annotated triangle”, the
worlds are the vertices, while the lines just help to indicate betweenness
and proposition letters are true at marked points.
q
p
p
p















t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
q
r
444444444444444
190You will ﬁnd the proof a very useful exercise in 3D visualization.

February 2, 2010
228 / Modal Logic for Open Minds
The right-most vertex is uniquely deﬁned by the formula r, the one
in the middle by p ∧
3qq, the right-most p-point by p ∧
3qr – and
continuing, each vertex has a unique modal deﬁnition.191
There are also links with standard geometry via frame correspon-
dences. Consider the natural modal axiom of Associativity:
⟨B⟩p ⟨B⟩qr →⟨B⟩⟨B⟩pq r
This syntactic Sahlqvist form yields to the techniques of Chapter 9
– but it acquires a classical meaning from aﬃne geometry:
Fact. On betweenness frames, Associativity deﬁnes Pasch’s Axiom.
Proof. Pasch’s Axiom says that “Every line drawn through a vertex of
a triangle into its interior can be continued to intersect the opposite
side”. This is easily expressed in ﬁrst-order terms, using the following
picture. The correspondence is then a straightforward exercise.
∀xyvzu((Bv, yz ∧Bu, xv) →∃s(Bs, yx ∧Bu, sz))
x
,,,,,,,,
M
M
M
M
M
M
M
M
M
M
M
M
M
M
M
M
s
u
y

v
z
Metric geometry The same analysis extends to metric structure. This
requires adding a quaternary predicate of “equidistance”, or ternary
“relative nearness”:
Nx, yz
y is closer to x than z is to x
y
z
x
This relation satisﬁes nice laws, including “Triangle Inequalities” like
(Nx, yz ∧Nz, xy) →Ny, xz
This is like similarity “sphere models” for conditional logic (Chapter
13), but complete logics for this geometrical version are unknown.
19.5
Mathematical morphology
Theories of space are still emerging. We end with one that recently
turned out to involve modal logic. “Mathematical morphology” is a new
191Chapter 10 had more details for modal deﬁnabilities in this triangle example.

Modal patterns in space / 229
February 2, 2010
theory of shapes in computational image processing. Spatial or visual
regions are taken as sets of vectors, that can typically be “added”. In
addition to the ordinary Booleans, this yields two key operations for
manipulation of images or pictures. One involves vector addition in the
usual parallelograms, as in the following diagram with vectors coming
from two sets A and B:
y + z(A + B)
y(A)
4
z(B)
G
x
G
4j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
The other operation smoothes a rough ﬁgure A by “subtracting”
some suitable B, say a small circle rolling around A’s inside edges:
A
B
A −B
The resulting notions on sets of vectors A, B (also X, Y, . . .) are:
Deﬁnition 19.5.1 (“Minkowski operations”). Addition of regions is
the sum A+B = { x | ∃y∈A, z∈B : x = y +z }. Subtraction uses vector
diﬀerences: A −B = { x | ∀y∈B : x + y ∈B }.
Here are some valid principles in this algebra of images:
Fact. The following laws hold for all regions in Euclidean space:
(X ∪Y ) + S = (X + S) ∪(Y + S),
(A ∪B) −C = (A −C) ∪(B −C)
There are also useful deﬁned operations with special laws, such as
morphological opening X ◦S =def (S −X) + S
Fact. Morphological opening satisﬁes idempotence (X ◦S)◦S = X ◦S.
Typically non-valid is the idempotence law A + A = A. The reason
in words: adding an image to itself may create quite a diﬀerent image.
Excursion: linear logic There is a surprising link here with linear
logic in proof theory and computation, which views propositions as
multi-sets of “resources”, making, say, a multi-set {P, P} with two oc-

February 2, 2010
230 / Modal Logic for Open Minds
currences diﬀerent from the singleton {P}. This changes the usual laws
of conjunction and implication:
Theorem 46. Morphological addition and subtraction satisfy the laws
of multiplicative linear logic, with + for the product conjunction, and
A −B for the implication B →A.
The two directions of the above “opening” law (X ◦S) ◦S = X ◦S
are literally the following two derivable sequents in linear logic:
(S →X) + S ⇒(S →((S →X) + S)) + S
(S →((S →X) + S)) + S ⇒(S →X) + S
Completeness for this geometrical version of linear logic is open.
Arrow logic of vector spaces For a modal perspective on the same
structures, we go back to the Arrow Logic of Chapter 10, with a binary
modality for a ternary relation Cx, yz that we now read as: “vector x is
the sum y + z”. The Boolean connectives of Arrow Logic match those
of mathematical morphology. Finally, it had a unary modality for a
binary relation of converse Ix, y, that is now the linear minus operation:
x = −y. This generalizes the linear logic analysis, though a fortiori, the
complete arrow logic of mathematical morphology is unknown.
A further resemblance between mathematical morphology and modal
logic is the use of language extensions when convenient. For instance,
special letters are often used to formulate valid laws involving sin-
gle vectors. Here is an identity that holds in this way, but not with
arbitrary sets of vectors:
Fact. The identity S →(X + {t}) = (S →X) + {t} is valid.
From right to left, this is derivable as a generally valid implication
(S →X) · A ⇒S →(X · A)
in both linear logic and arrow logic. The converse has counter-examples,
but it does become derivable when we treat the singleton as a nominal
(cf. Chapter 7): a proposition letter only true in one world. One can
now appeal to a special nominal principle for the modal derivation:
S ⇒(S + {t}) −{t}.
19.6
Conclusion
Logic of space is a rich and relatively unexplored research area with
an old tradition. This chapter has shown how modal structures come
up naturally in topology, geometry, and linear algebra. All notions and
techniques of Parts I, II made sense – on their own, or in combination
with other logical perspectives.

Modal patterns in space / 231
February 2, 2010
Exercises Chapter 19
1. Consider some basic facts about topological models:
(a) Prove the topological Locality Lemma in the text.
(b) Prove that a topo-bisimulation leaves modal formulas invari-
ant. Show how the Locality Lemma follows from this fact.
(c) Prove that two ﬁnite modally equivalent topological models
have a topo-bisimulation between them.
(d) Prove the extended preservation lemma with universal mo-
dalities for continuous maps.
2. Recall the special logic of “serial sets”:
(a) Show why the “two-fork” satisﬁes the axiom in the text.
(b) Show why the “two-fork” frame captures precisely the modal
logic of the serial sets.
3. Look at the picture of a tetrahedron in our text:
(a) Explain in detail why the tetrahedron is deﬁned by the
modal formula CCp.
(b) Show why the reals satisfy the principle Cϕ →CCϕ.
4. Now move to metric geometry:
(a) Find as many valid ﬁrst-order triangle inequalities for rela-
tive nearness as you can.
(b) Using nearness in the real plane as a similarity relation for
conditionals, do we get new laws of conditional logic valid
beyond those in Chapter 13?
5. Check the soundness of some of the principles stated in the text
for mathematical morphology.

February 2, 2010

February 2, 2010
20
Intuitionistic logic
Our ﬁnal topics in Part III come from the foundations of mathematics,
but they also have a broader thrust for computation and epistemology.
20.1
Implicit versus explicit knowledge
The epistemic logic of Chapter 12 has explicit operators for knowl-
edge. But there are older traditions where the semantics of logical lan-
guages itself gets “epistemized”. Then the standard logical operations
(Booleans, quantiﬁers) acquire epistemic meanings, without any special
K-operators. The paradigm of this “implicit epistemics” is intuitionis-
tic logic, originating in a view of mathematics as intuitive construction
of objects and proofs for their properties.
20.2
The logic of constructive proof
Intuitionistic logic describes constructive proof, with high standards.
Here is a famous unprincipled (though rather clever) non-constructive
classical proof:
Fact. There exist two irrational numbers x, y such that xy is rational.
Proof. Consider
√
2
√
2
√
2
. This is equal to
√
2
(
√
2·
√
2) = (
√
2)2 = 2,
which is rational.
Case 1:
√
2
√
2 is rational – and we are done: let x = y =
√
2.
Case 2:
√
2
√
2 is irrational: and we take x =
√
2
√
2, y =
√
2.
This proof gives no conclusive information about the actual objects
the theorem is about! There is also a constructive proof showing that
Case 2 in fact obtains (a deep result). The distinction between mere
proof and explicit construction dates back to Antiquity: geometrical
“constructions” occur intertwined with proofs in Euclid’s Elements.
233

February 2, 2010
234 / Modal Logic for Open Minds
Intuitionism rejects all laws of classical logic that support non-
constructive reasoning, retaining only those with a proof-theoretic
underpinning. In particular, Excluded Middle ϕ ∨¬ϕ is rejected, as
we have no general way of knowing which disjunct is the case. Here is
the systematic thinking behind this critical position. Consider a mathe-
matician who constructs objects, and proves their properties. Typically,
proofs for complex assertions can be constructed from proofs for com-
ponent assertions. For the Boolean key notions, this works as follows:
A proof for a conjunction A ∧B is a pair of proofs, for A, and for B. A
proof for a disjunction A∨B is a proof for A or one for B. And a proof
for a negation ¬A is a refutation of A, that is: an eﬀective method
transforming each proof of A into one for a manifest contradiction.
Read in this way, Excluded Middle says that each statement A is
provable or refutable. But G¨odel’s Theorems tell us that “incomplete-
ness” is frequent in mathematics: some statements are neither provable
nor refutable in arithmetic, analysis, or set theory (assuming that these
theories are consistent).192 193
The proof interpretation of the logical notions validates a system of
laws of its own. For instance, the Law of Non-Contradiction still holds.
Assuming that we have both a proof and a refutation for A is untenable,
and this observation itself is a proof for ¬(A ∧¬A). And many other
useful classical principles remain correct. What does happen is that
classical reasoning often “splits” into variants, some intuitionistically
correct, others not. A beautiful example is the famous method of proof
by contradiction. In classical logic, one can establish an assertion ¬A
by ﬁrst assuming A, and then deriving a contradiction. This pattern
is unproblematic to an intuitionist. But classical logic also has a more
magical variant: prove an assertion A by deriving a contradiction from
its negation ¬A. This second method is intuitionistically unacceptable:
“refuting refutability” is not the same as positive proof. The former
does establish something, but only the double negation ¬¬A. Thus,
intuitionists reject the classical equivalence between ¬¬A and A. They
ﬁnd the ﬁrst weaker than the second.194
192Even so, intuitionists agree that mathematical structures admit of reasoning
with Excluded Middle if they are “simple enough” – say: ﬁnite. But automatic
extrapolation of classical logic to inﬁnite structures is problematic.
193You might object that the objection does not aﬀect classical Excluded Middle.
For, a meaning shift has taken place from truth to provability. So, Brouwer, the
founder of intuitionism, did not ﬁght classical logic on its own territory: as so often
with revolutionaries, he changed the agenda.
194Proposing marriage by refuting non-proposing works rarely. A witty Dutch lo-
gician once proposed a funerary inscription “L.E.J. Brouwer: not not dead”.

Intuitionistic logic / 235
February 2, 2010
Proof theory is a stronghold of intuitionistic logic. The standard
natural deduction rules for implication (Modus Ponens, Conditionaliza-
tion) give intuitionistic, not classical logic! Intuitionistic proof calculi
and type theories have proofs with an algorithmic surplus constructing
objects whose existence is derived. This is appropriate in computer sci-
ence. If you can prove intuitionistically that every sequence of numbers
has a sorted version, then that proof will contain a sorting algorithm,
that you can try to extract. Or, you can design algorithms and correct-
ness proofs at the same time in natural intuitionistic calculi.195
20.3
Information models for intuitionistic logic
It is also possible to interpret intuitionistic logic in a semantics of in-
formation stages, from poorer to richer, where formulas describe stages
of the process.196 A mathematician, or a rational agent in general,
gradually acquires more information, moving upward in this order. At
ﬁnal stages of the process, where all information is in, classical logic
holds. But in intermediate stages, classical laws may fail. Let us call a
negation not-A true at a stage of the model when A has been refuted
right now already: no further richer stage makes A true. Under this
interpretation, it is easy to see that Excluded Middle can fail:
Example (Refuting Excluded Middle). Take an extremely simple in-
formation model with only two stages, an initial one where we do not
have A yet, followed by a ﬁnal stage where we do have it:
A
1 ◦
/ • 2
At the ﬁrst stage 1, A fails by assumption, but neither does not-A hold,
since we do get A at stage 2 after all. Thus, the disjunctive statement
A ∨¬A does not hold at stage 1.
This semantics has a delicate diﬀerence between saying “A does not
hold” at a stage, and saying that “¬A holds”. Indeed, an intuitionist
cannot use her own strong negation not to deny the law of Excluded
Middle: ¬(A∨¬A) is a contradiction also intuitionistically. The follow-
ing principle is intuitionistically valid:
¬¬(A ∨¬A)
This is not Excluded Middle, as ¬¬A ↔A was intuitionistically in-
valid. The distinction is easily seen in our models: ¬¬A unpacks to the
195For more information, see the two volumes Constructivism in Mathematics by
Troelstra and van Dalen (Troelstra and van Dalen, 1988).
196Such models were ﬁrst devised by Brouwer’s colleague Beth in Amsterdam,
himself not an intuitionist. Later versions of the semantics are due to Kripke.

February 2, 2010
236 / Modal Logic for Open Minds
assertion that each stage has a later stage where A is made true (A is
“inevitable”), but this is not to say that A is true right here and now.
In stage 1 of the above picture, ¬¬A is true, but A is not.
More generally, intuitionistic logic is the logic of a process of ac-
quiring knowledge by an agent moving toward ever richer epistemic
states.197 This is just our basic modal semantics with a new epistemic
interpretation. Think of each model M = (W, ≤, V ) as a research pro-
gram with a set of information states W, a growth relation ≤, and a
valuation V that records which atomic facts are known at each stage.
In line with this interpretation, we demand persistence of atomic facts:
Heredity
If M, s |= p and s ≤t, then also M, t |= p.
By induction, Heredity holds for all propositional formulas given the
intuitionistic truth conditions. We saw the clause for negation already,
while conjunction and disjunction are interpreted as usual. As an illus-
tration, we saw a failure of Excluded Middle, but here is a failure of an
even weaker variant:
Example (Refuting Weak Excluded Middle). Weak Excluded Middle
¬p ∨¬¬p fails in the root of the following model:
◦p
•
7p
p
p
p
p
p
p
'O
O
O
O
O
O
O
◦
Finally, an implication ϕ →ψ holds at a stage if in all further stages
where ϕ holds, the ψ holds as well. Thus, a negation ¬ϕ is equivalent
to ϕ →⊥, with ⊥an “absurd” statement that never holds.
At end points, intuitionistic and classical evaluation coincide. Thus,
intuitionistic logic generalizes classical logic to intermediate stages of
investigation – and being weaker in this richer setting, it can make
sophisticated new distinctions. For instance, intuitionistically, connec-
tives are not inter-deﬁnable as in classical logic. One can even deﬁne
new ones without classical counterparts.198
20.4
Model theory of intuitionistic logic
All earlier modal topics make sense for intuitionistic logic – including
bisimulation, axiomatic proof, ﬁrst-order translation, correspondence,
197Ordinary mortals like us eventually start moving backwards through this land-
scape. These models suggest a systematic comparison with the epistemic informa-
tion models of Chapters 12, 13 and 15, but we will not undertake this task here.
198Similar points apply to quantiﬁers, a topic not treated in this chapter.

Intuitionistic logic / 237
February 2, 2010
and complexity. The underlying reason is that the system is much like
the basic modal language over pre-orders, under the so-called
G¨odel translation sending proposition letters p to
2p, ∧to ∧, ∨to ∨,
ϕ →ψ to
2(ϕ →ψ), and ¬ϕ to
2¬ϕ.199
Viewed in this way, the intuitionistic language is a “hereditary frag-
ment” of the full modal language, being those formulas ϕ for which
ϕ →
2ϕ is valid. The completeness theorem for intuitionistic proposi-
tional logic (its proof is like for modal K in Chapter 5) identiﬁes the
universal validities as the theorems of “Heyting’s calculus” HPC. We
can then prove facts like those for K, such as the “Disjunction Prop-
erty” of HPC: if ϕ ∨ψ is a theorem, then so is either ϕ or ψ. This
clearly fails for classical logic!
The complexity of satisﬁability for intuitionistic propositional logic
is that of K and S4: PSPACE-complete. This is worth noting, as many
people think that intuitionistic logic is simpler than classical logic. This
is false: the price of constructivism in propositional reasoning is a jump
up from the NP-completeness of classical propositional logic.200
On top of HPC, further axioms give intermediate logics between
intuitionism and classical proof – whose meaning can be made explicit
by frame correspondences. Excluded Middle makes every point an end-
point, and takes us up to classical logic. Weak Excluded Middle ¬p ∨
¬¬p imposes conﬂuence: akin to the relational conﬂuence conditions in
Chapters 7, 9, and 24.
Two kinds of information The modal setting suggests merging “im-
plicit” and “explicit” epistemic logic, since we can introduce an explicit
modality
2 for the stage inclusion order. But this modality is not the
epistemic K of Chapter 12. Quantifying over future stages in an intu-
itionistic model mixes two intuitively diﬀerent notions:
(a) factual information about the world and what other people know
about it,
(b) procedural information about how we can ﬁnd out such things.
Even the dynamic epistemic logic of Chapter 15 has no counterpart
for the latter notion, unless we extend it with temporal operators over
admissible histories of investigation (Chapter 18).201 Other neighbours
199This translation is to be applied recursively, working inside out.
200This is just one instance of the unfortunate scarcity of insights from computer
science in philosophical circles.
201Recent versions of dynamic epistemic logic add protocols regulating admissible
sequences of events in the informational process. As to basic events occurring in
such protocols, if you look more closely at intuitionistic models, their upward steps

February 2, 2010
238 / Modal Logic for Open Minds
are the dynamic doxastic logics in Chapter 15. Backtracking along the
stage inclusion order leads to appealing notions of belief revision.202
20.5
Aside: intuitionistic mathematics
On this logical foundation, intuitionistic mathematics has new kinds of
behaviour. In particular, its weaker base allows for theorems that con-
tradict those of classical mathematics, such as Brouwer’s famous result
that every function from real numbers to real numbers is continuous.
Also, the algorithmic aspect of intuitionistic proofs has a thriving litera-
ture by itself. Indeed, our emphasis on information models is somewhat
suspect to staunch intuitionists, as our informal reasoning about these
models was classical!203 Should not the meta-theory of intuitionistic
logic be intuitionistic itself ? See again the book by Troelstra & van
Dalen (Troelstra and van Dalen, 1988).
20.6
The story goes on: intuitionism and games
Intuitionism is associated with foundations of mathematics, and proofs
of extraterrestrial precision. But it also relates to a diﬀerent tradition
going back to Antiquity, of logical patterns in dialogue and debate. Af-
ter all, even a formal proof is not just a “conversation stopper”, but
an ultimate attempt at clarity and inter-subjective communication. In
the mid 1950s, this was seen by Lorenzen, when looking for an under-
pinning of logic in daily practices of argumentation. His idea was that
the logical core operations “or”, “and” and “not” function as a sort of
switches, not just in a computer, but also in discussion. The resulting
dialogue games have rules like this:
When I defend A ∨B, you can press me as to which of the two I will
defend. Thus, a disjunction is a choice for its defender. Likewise, a
conjunction A ∧B is a choice for the attacker: as the defender of a
conjunction is committed to both its parts.
In this manner, an argumentation game unrolls between the defender
of an assertion and its attacker, and this explains in a dynamic manner
why conjunction and disjunction are so analogous. They are the same
are of two interesting kinds. One is public announcements of factsas in Chapter 15,
ruling out further histories. But there are also non-eliminative steps of “explicitly
realizing” facts that were already implicitly known. The latter acts relate to the
epistemological problem of “omniscience” mentioned in Chapter 12: some implicit
information still needs to be made explicit.
202One retreats to the nearest earlier stage where the new proposition P was still
consistent, and then moves up to a closest information stage enforcing P .
203An intuitionist colleague of mine compares uses of Excluded Middle to taking
drugs. The ﬁrst time, you feel a moral barrier – but the next time, you feel less
compunction, until you are hooked on classical stuﬀ.

Intuitionistic logic / 239
February 2, 2010
act, namely choice, but performed by diﬀerent players. Moreover, in a
dialogue, interesting interactions arise through the operation of logical
negation, which triggers a role switch:
defending ¬A is attacking A, and vice versa.
Being able to put yourself in another person’s place seems an essential
cognitive achievement. Dialogues become games by stipulating that
players lose when they must say something (i.e., engage in a legiti-
mate attack or defense), but are prevented from doing so by the game
rules. Then all notions from Chapter 17 apply. In particular, Lorenzen
called an inference valid if the defender of the conclusion has a winning
strategy: a rule that will always lead her to win the game against any
defender granting the premises.
Example (Winning with the Sudoku Rule). When you defend a con-
clusion B against someone defending premises A∨B and ¬A, then ﬁrst
attack that disjunction, forcing him to choose.204 If his answer is B,
then you win at once – and if his choice is A, then you can now safely
attack A, since he has just placed himself in the shameful conversational
position of “self-contradiction”: A, ¬A.
General winning strategies in argumentation may of course be much
more complex that this simple gambit.
Now Lorenzen observed that Excluded Middle is not plausible in this
game setting. The defender of A ∨¬A need not have a strategy telling
her infallibly which disjunct to choose, and win. In fact, the logical
validities backed up by winning strategies in these dialogue games are
precisely those of intuitionistic logic! By now, dialogue games have been
found that do match classical logic, and the diﬀerence is instructive.
Their debating rules, quite humanely, allow the defender of a disjunc-
tion to revise her initial choice later on.
We already saw a connection between Excluded Middle and games
in Chapter 17. Here is a paraphrased proof of Zermelo’s Theorem:
Suppose the game lasts for only 1 move, and Player I starts. Then
either I has a move that makes her win (and her winning strategy “I
choose such a winning move”), or all initial moves lead to loss for
I, and in that case, it is Player II who has a winning strategy (“just
wait, and win”). When a game lasts for two rounds, we just repeat the
given reasoning. Either the starting player has a move taking her to a
position where she has a winning strategy, and then she has a winning
strategy in the whole game – or all moves of the starting player lead
204This is the principle of Sudoku puzzles: there must be one of k digits, we can
rule out one of these, leaving one of k −1 digits – and so on.

February 2, 2010
240 / Modal Logic for Open Minds
to a position with a winning strategy for the other player, and then the
latter player has a winning strategy. And so on for longer games.
The pivotal role of Excluded Middle will be clear. Of course, intu-
itionists would not object: our games here were ﬁnite. In inﬁnite games,
matters are more delicate, as studied in descriptive set theory.
New logical operations We end with a surprising twist. Argumenta-
tion is all about interaction unfolding over time. But in such a setting,
our interpretation of the disjunction A ∨B as a choice for one of the
sub-games A, B seems too drastic. Why make this choice right at the
start, when we know nothing yet about what happened in those sub-
games? For this reason, it has been proposed to add a second logical
form of choice. Now the sub-games A, B are played in parallel, and the
player who has to choose may decide locally, at each of her turns, in
which of the two games the next move is to be played. A much-cited
example again comes from Chess. Here is a method that makes you
beat even the world champion, the “Copy Cat” strategy:
Play two games at once, one as White and one as Black. Let Champion
open as White, then copy his move to the other game as White, and stay
there, forcing him to respond as Black to your (i.e., his own) opening
move. Next copy this answer in the other game (you have the power to
switch), etcetera. Both games get exactly the same sequence of moves,
and you must win one of them (or draw in both).
So now we have a new logical operation of “parallel disjunction” A+
B (where the + refers to parallel play as in our switching scenario). As
we saw, in Lorenzen dialogues, Excluded Middle does not always hold
for the choice disjunction ∨. But the Copy Cat argument shows that
quite generally, “interactive choice” A + B satisﬁes Excluded Middle:
the logical principle A + ¬A is valid without any restrictions!
Thus, we see a new world of logical operations with their own laws,
and Boolean algebra is now just one corner of a beautiful general theory
of complex interactive behaviour.205
205An elegant exposition of these ideas in computer science and beyond is found in
the chapter “Information, Processes and Games” (Abramsky, 2008) in the Handbook
of the Philosophy of Information.

Intuitionistic logic / 241
February 2, 2010
Exercises Chapter 20
1. Look at the two classically valid De Morgan laws:
¬(ϕ ∨ψ) ↔(¬ϕ ∧¬ψ),
¬(ϕ ∧ψ) ↔¬ϕ ∨¬ψ
Of the four implications, three are valid intuitionistically, one is
not. Motivate the valid ones in terms of the proof interpretation,
and give a counter-example for the invalid one.
2. Show that intuitionistic logic has the Disjunction Property.
3. Find a notion of bisimulation that is appropriate for the intu-
itionistic language.
4. Analyze intuitionistic information models with a dynamic epi-
stemic logic of public announcement, where “protocol” restric-
tions may occur on the true assertions that can be announced at
a stage. Also explain the steps that do not ﬁt this format, since
no branching occurs: can you deﬁne an act of “realization” as in
Footnote 201?
5. Analyze the temporal belief revision sketched in Footnote 202.
6. Reasoning with games:
(a) Show there is a winning strategy in a dialogue game for
Proponent in defending the formula p ∧¬(p ∧q) →¬q. Also
for ((p →q) ∧r) →(p →(q ∧r)).
(b) Show that there is a winning strategy for Opponent when
Proponent puts forward the formula ¬(p ∧q) →(¬p ∨¬q).
(c) What standard logical objects correspond to winning strate-
gies for Proponent and Opponent in dialogue games?
7. Intuitionistic predicate logic, too, has the Heredity property. How
would you interpret quantiﬁers to make sure that this holds?

February 2, 2010

February 2, 2010
21
Provability logic
Our ﬁnal topic concerns any sort of proof, intuitionistic or classical.
21.1
Modal logic of provability and proofs
We noted in Part I that a modal box
2ϕ can also be read as provabil-
ity: the existence of a proof or evidence for ϕ. This is an existential
quantiﬁer view of knowledge, rather than our usual semantic universal
one. Here is an illustration: the modal distribution axiom
2(ϕ →ψ) →(2ϕ →
2ψ)
now says that, if ϕ →ψ is provable and also ϕ, then ψ is provable:
 
 
 
       
 
 
x
y
ϕ
ϕ →ψ
ψ
In particular, if x is a proof of ϕ, and y a proof of ϕ →ψ, then
merging x, y by a ﬁnal application of Modus Ponens is a proof for ψ:
the axiom is a constructive form of Modus Ponens.
Remark on co-existence The provability interpretation sees neces-
sity as having compelling reasons for an assertion. There is no con-
tradiction with the semantic account. For instance, the completeness
theorem for ﬁrst-order logic matches these two faces. Validity quantiﬁes
universally over models, and the equivalent notion of provability quan-
tiﬁes existentially, but over the diﬀerent domain of syntactic proofs.
243

February 2, 2010
244 / Modal Logic for Open Minds
21.2
G¨odel-L¨ob logic
With provability for speciﬁc mathematical theories, modal formulas can
express facts in the foundations of mathematics. The earlier highway
to Un (Chapter 8) contains an important case:
Deﬁnition 21.2.1 (G¨odel-L¨ob provability logic). The G¨odel-L¨ob logic
GL extends the minimal modal logic K with the axiom
2(2ϕ →ϕ) →
2ϕ
Speciﬁcally, the modal box
2ϕ is meant to say that ϕ is provable in
a theory crucial to the foundations of mathematics, viz. Peano Arith-
metic. The axiom looks strange for an Id-route traveler, as it says that
the formerly harmless T -axiom of Veridicality can only hold for provable
formulas. But it really reﬂects a deep result about Peano Arithmetic
called “L¨ob’s Theorem”, as explained later.
Valid principles on this account of
2 include, as already observed
by G¨odel: (a) the laws of K (we saw this for modal distribution by
“proof combination”), and (b) the transitivity law
2ϕ →
22ϕ of K4,
which now says that one can prove that provable formulas are provable,
for instance, by running a “proof-checker”. In this setting, even simple
modal derivations can be non-trivial:206
Example (L¨ob’s axiom implies K4). The following elegant proof was
found by Dick de Jongh in the 1970s. Substitute the formula
2ϕ ∧ϕ
for ϕ in L¨ob’s Axiom
2(2ϕ →ϕ) →
2ϕ. This yields the theorem:
2(2(2ϕ ∧ϕ) →(2ϕ ∧ϕ)) →
2(2ϕ ∧ϕ)
Now note that the following principle is derivable in K alone:
2ϕ →
2(2(2ϕ ∧ϕ) →(2ϕ ∧ϕ))
Therefore, again in the minimal modal logic K, we can prove
2ϕ →
2(2ϕ ∧ϕ)
and from this, still in the minimal modal logic K, we get
2ϕ →
22ϕ
207
We elaborate a bit, to show modal logic at work in this new setting.
G¨odel’s famous arithmetical Liar Sentence ϕ now has this modal form:
ϕ ↔¬2ϕ
says “I am not provable”
The top-level pieces of G¨odel’s proof can then be clariﬁed as follows:
Theorem 47. If ⊢ϕ ↔¬2ϕ, then ⊢¬2⊥→¬2ϕ.
206A publishable formal ﬁrst-order proof was the derivation of the Russell Paradox.
207The student may ﬁnd it worthwhile to write out a complete formal derivation.

Provability logic / 245
February 2, 2010
This simple modal notation expresses a deep foundational fact: the
liar sentence cannot be proved if no contradiction is provable. In other
words, we have the gist208 of the First Incompleteness Theorem: if
arithmetic is consistent, it cannot prove G¨odel’s liar sentence.
Proof. This is a basic modal deduction using only principles from K4:
1)
ϕ ↔¬2ϕ
(assumption)
2)
2ϕ →¬ϕ
(from 1, by propositional logic)
3)
2ϕ →
2¬ϕ
(from 2, by Necessitation, Distribution, and K4)
4)
2ϕ →
2ϕ ∧¬ϕ
(from 3, in the minimal K)
5)
2ϕ →
2⊥
6)
¬2⊥→¬2ϕ
The origins of L¨ob’s Axiom lie in the Paradox of the Truth Teller:
“what I am saying right now is true”.
No truth value seems applicable for this cousin of the Liar. The arith-
metical version is a formula ϕ stating its own provability. Is ϕ right or
wrong? Here is the answer for Peano Arithmetic:
Theorem 48 (L¨ob’s Theorem). If ⊢
2ϕ →ϕ, then ⊢ϕ.
Proof. Using G¨odel’s “diagonalization technique”,209 create an arith-
metical sentence σ with the following intriguing self-referential property
(“my own provability implies ϕ”):
⊢σ ↔(2σ →ϕ)
Now comes a “magical” piece of modal reasoning that has delighted
generations. Put in reasons for each step by yourself!
1)
σ →(2σ →ϕ)
2)
2σ →
2(2σ →ϕ)
3)
2σ →(22σ →
2ϕ)
4)
2σ →
22σ
5)
2σ →
2ϕ
6)
2σ →ϕ
using that ⊢
2ϕ →ϕ!
7)
(2σ →ϕ) →σ
8)
σ
9)
2σ
10)
ϕ
208Caveat: there is much more depth to G¨odel’s complete argument!
209An accessible modern exposition of these ideas is P. Smith, 2007, An Introduc-
tion to G¨odel’s Theorems, Cambridge University Press, Cambridge.

February 2, 2010
246 / Modal Logic for Open Minds
L¨ob’s Axiom is just the formalized form of L¨ob’s Theorem.
21.3
Semantic analysis and completeness
Recall a statement from Chapter 9 about the models for GL:
Theorem 49. F |=
2(2p →p) →
2p iﬀ(1) R is transitive, and (2)
R is reversely well-founded, i.e., there are no chains x1Rx2Rx3R · · · .
Proof. First, we show that L¨ob’s Axiom implies transitivity. Let Rsx
and Rxy, but not Rsy. Setting V (p) = W −{x, y} makes L¨ob’s Axiom
false at s. Next, let (1) hold. If (2) fails, then there is an ascending
sequence s = s0Rs1Rs2 · · · – and setting V (p) = W −{s0, s1, s2, ...}
refutes L¨ob’s Axiom at s. Conversely, if L¨ob’s Axiom fails at s, there
must be an inﬁnite upward sequence of ¬p-worlds. This arises by taking
any successor of s where p fails, and repeatedly applying the truth of
2(2p →p) – using the transitivity of the frame.
The transitivity clause (1) is surprising, as the K4-axiom had orig-
inally been postulated separately in provability logic – but we saw a
modal derivation just above. Also, one can see that L¨ob’s Axiom in its
second-order translation is close to well-foundedness. This correspon-
dence analysis suggests a completeness result:
Theorem 50. The theorems of L¨ob’s Logic are precisely the modal
formulas that are valid in all transitive reverse well-founded orderings.
And by a Henkin-style argument over ﬁnite sets of formulas:
Theorem 51. L¨ob’s Logic has precisely the modal formulas valid in
all ﬁnite trees, with accessibility the dominance relation.
The same method shows validity in provability logic to be decidable.
This semantics is formal. The intended use is the arithmetical in-
terpretation, where proposition letters range over formulas in the ﬁrst-
order arithmetic of the natural numbers with zero 0, successor S, ad-
dition +, and multiplication ×. The modal operator then refers to the
arithmetized provability predicate in Peano Arithmetic:
2ϕ = ∃yProof PA(y, #(ϕ)), with #(ϕ) the G¨odel code of ϕ.
In 1975, Solovay proved that L¨ob’s Logic is arithmetically complete.
The above axioms derive every valid modal principle of provability in
Peano Arithmetic. Please contrast this with G¨odel’s Incompleteness
Theorem: we cannot axiomatize all of arithmetic, but we can axiomatize
signiﬁcant parts of its meta-theory.

Provability logic / 247
February 2, 2010
21.4
Further theory: the ﬁxed-point theorem
The attraction of this system is again a balance: a poor but perspicuous
modal language captures key phenomena in arithmetic. A celebrated
result (due to de Jongh and Sambin) is a modal version of the arith-
metical Fixed-Point Lemma underlying the proof of G¨odel’s Theorem:
Theorem 52. Consider any modal formula ϕ(p, q) in which the propo-
sition letter p only occurs in the scope of a modality, with q a sequence
of other proposition letters.210 There exists a formula ψ(q) such that
ψ(q) ↔ϕ(ψ(q), q) is provable in L¨ob’s Logic, and also, any two solu-
tions to this ﬁxed-point equation w.r.t. ϕ are provably equivalent.
There is also a simple algorithm for computing the ﬁxed-point ψ(q).
Example (Solving ﬁxed-point equations in provability logic.). Here
are a few typical cases, which explain some of our earlier illustrations:
Equation:
p ↔
2p
Solution:
p = ⊤
p ↔¬2p
p = ¬2⊥
p ↔
2p →q
p =
2q →q
More complex recursions work when the body ϕ(p, q) has multiple oc-
currences of p. There are also algorithms that solve simultaneous re-
cursions with tuples of proposition letters p.
Excursion: analysis and extensions Two noteworthy aspects of
the preceding result are (a) existence and uniqueness of the new predi-
cate p, and (b) its explicit deﬁnability in the modal base language. The
ﬁrst is a general property of all recursive deﬁnitions over well-founded
orderings. But we also get the concrete information that this recursive
predicate can be deﬁned inside the original modal language. A general
reason for this beautiful fact seems to be unknown. We do know that
it also happens elsewhere:
Theorem 53. Explicit deﬁnability for ﬁxed-point equations with all
occurrences of p under some operator holds for all propositional lan-
guages with “generalized quantiﬁers” Qp over sets of worlds satisfying
(a)
Q(P) is true at x iﬀQ(P ∩Rx) is true at x 211
Locality
(b)
Qp →
2Qp
Heredity
This covers quantiﬁers Q like modal “in some successor”, but also ﬁrst-
order “in at most ﬁve successors”, or even second-order quantiﬁers like
“in most successors of each successor”.
210For instance, what is allowed is q ∨
2p or q ∨
2¬p, but not, say, p, ¬p, or q ∨p.
211Here Rx is the set {y | Rxy} of all worlds in M that are accessible from x.

February 2, 2010
248 / Modal Logic for Open Minds
We will compare provability logic with other ﬁxed-point languages
in Chapter 22 on the modal “µ-calculus”. To end here, we link up with
ﬁxed-point extensions of classical logic.
21.5
Coda: correspondence moves to ﬁxed-point logic
This digression can be skipped if you had enough provability logic.
L¨ob’s Axiom is beyond the Sahlqvist Theorem of Chapter 9, as its
antecedent has a modal box over an implication. But the L¨ob frame-
equivalent of transitivity plus well-foundedness is deﬁnable in a natural
extension of ﬁrst-order logic – viz. LFP(FO): ﬁrst-order logic with ﬁxed-
point operators. Here is a brief explanation.
The antecedent
2(2p →p) of L¨ob’s Axiom still allows for the min-
imal valuation step in the substitution algorithm. For, if this modal
formula holds anywhere in a model M, x, then there must be a small-
est predicate P for p making it true at M, x – because of the following
set-theoretic property guaranteeing a minimal verifying predicate:
Fact. If
2(2pi →pi) holds at world x for all i ∈I, then, with JpiK the
set of worlds with pi in M,
2(2P →P) holds at x for P = T
i∈IJpiK.
Here is the more general notion behind this observation:
Deﬁnition 21.5.1 (Intersection Property). A formula ϕ(P, Q) has the
intersection property if ϕ(P, Q) holds in a model M for all predicates
P in {Pi | i ∈I}, we also have M, ∩Pi |= ϕ(P, Q).212
The L¨ob antecedent displays a syntactical format that ensures this:
Deﬁnition 21.5.2 (PIA format). A ﬁrst-order formula is called a
PIA condition (“positive antecedent implies atom”) if it has the form
∀x(ϕ(P, Q, x) →Px), with P occurring only positively in ϕ(P, Q, x).
The L¨ob antecedent has the ﬁrst-order PIA form
∀y((Rxy ∧∀z(Ryz →Pz)) →Py).
It is easy to see that this format implies the Intersection Property.
Moreover, we have this syntactic observation:
Fact. Minimal predicates for PIA-conditions are deﬁnable in LFP(FO).
Example (Computing a minimal valuation for L¨ob’s Axiom). An-
alyzing
2(2p →p) closely, the minimal predicate satisfying it at a
world x describes exactly the following set of worlds: {y | ∀z(Ryz →
Rxz) and no inﬁnite sequence of R-successors starts from y}.
Substi-
212The formula ϕ(P, Q) holds for a predicate P in {Pi | i ∈I} if M |= ϕ(P, Q)
when we interpret the predicate letter P as the predicate P.

Provability logic / 249
February 2, 2010
tuting this description in the L¨ob consequent
2p yields precisely the
earlier-mentioned frame condition.
Thus we can generalize the correspondence results in Chapter 9:
Theorem 54. Modal axioms with PIA antecedents and syntactically
positive consequents deﬁne frame conditions in LFP(FO).
Not all modal axioms yield: it can be shown that the McKinsey
Axiom
23ϕ →
32ϕ still has no frame-equivalent in LFP(FO). There
is more theory behind these observations, but the main point here is
again that provability logic naturally connects with ﬁxed-points.213
21.6
Conclusion
Provability logic is a beautiful theory where modal logic blends with
arithmetical facts. There are elegant publications by Boolos and others
unfolding much more of this rich theory, and in particular, one exciting
new development are “logics of proofs” or justiﬁcations where modal
boxes now come with explicit proof terms.214
213It has been proved recently that modal provability logic and the modal µ-
calculus of Chapter 22 are very close under mutual translations, a surprising uniﬁ-
cation of the area of modal logic with added recursive deﬁnitions.
214For details on this system, classical provability logic, as well as many other sub-
jects, cf. Artemov’s Chapter on “Modal Logic and Mathematics” in the Handbook
of Modal Logic (Artemov, 2008).

February 2, 2010
250 / Modal Logic for Open Minds
Exercises Chapter 21
1. Correspondence for provability principles:
(a) Analyse the following L¨ob variant semantically:
2(2ϕ ↔ϕ) →
2ϕ.
What corresponding frame property do you ﬁnd?
(b) Also ﬁnd a correspondent for this generalized variant:
[a]([b]p ↔p) →[c]p.
2. Try a Henkin-style argument like in Chapter 5 to establish com-
pleteness of the G¨odel-L¨ob logic. How can you keep things ﬁnite
to get decidability?
3. (Cf. Chapter 22 for relevant notions.) Show how the G¨odel-L¨ob
logic can be faithfully translated into the modal µ-calculus.

February 2, 2010
Part IV
Recent Theoretical
Themes

February 2, 2010

/ 253
February 2, 2010
Theory and applications often go together, though perhaps with a
phase diﬀerence. Modal logics were developed in the 1950s and 1960s for
the analysis of philosophical, linguistic and mathematical notions, and
the 1970s saw a ﬁrst wave of mathematical theory about the resulting
systems. We have seen some major themes from this phase in Parts
I and II. Then in Part III, we looked at a broad spectrum of recent
developments, including applications to information, computation, and
agency, as well as new studies of perennial mathematical structures
like time, space, and proof. Both ways, modal logic now also extends
into computer science, artiﬁcial intelligence, and even economics. But
this phase, too, raises its theoretical issues, that play across ﬁelds, and
provide new unity to the expanding universe of the ﬁeld. In this ﬁnal
part, we will look at some theoretical issues that have been prominent
since the 1990s, giving the student a glimpse of threads that run across
the current diverse area. While some people see the unity of modal
logic in maintaining some vast Platonic Museum of formal systems, I
see major issues and styles of answers as truly keeping a ﬁeld together.
This part is even less of a textbook than Part III – but the inter-
ested reader may at least get a sense of what lies behind the material
presented in the mainstream of this course.

February 2, 2010

February 2, 2010
22
Fixed-points, computation, and
equilibrium
Computation has been a major theme throughout these lectures – but
the best logical take on it is still a matter of study. Some people think
that Recursion Theory, starting from the 1930s provides all the answers,
but that approach mixes two things: computational process structure,
and the coding power of one particular data structure, viz. the natural
numbers. Thus, major results in Recursion Theory are an entangled
mixture of both inﬂuences. But then, in the 1970s, people started sep-
arating the former from the latter in ﬁxed-point logics of computation,
working over arbitrary data structures. These provide abstract accounts
of program or process structure, including the crucial notions of itera-
tion and recursion. Now, adding operators for ﬁxed-points to ﬁrst-order
logic yields an intriguing but highly complex system LFP(FO), where
one can deﬁne the natural numbers up to isomorphism after all. One
surprising discovery around 1975 was the propositional dynamic logic
PDL of Chapter 14 that showed how modal theories of computation
can be both illuminating and decidable. Later on, even stronger modal
ﬁxed-point logics were discovered, in particular, the modal µ-calculus
that will also be discussed brieﬂy in this chapter. These ﬁelds picked
up much interest around 1980, but were then gradually abandoned in
favour of systems hat could deal with parallel computation, still the re-
ality of modern computing. Still, today, they are being revived for their
intriguing mathematical structure, and the insights that this holds for
at least the foundations of sequential computation.215
215More could be said about modal logic and concurrency, including links with
Process Algebra, but we must set a limit somewhere.
255

February 2, 2010
256 / Modal Logic for Open Minds
22.1
Recursion and ﬁxed-points
Many natural notions have “circular deﬁnitions”, such as the transitive
closure of a relation:
tc(R)(x, y) ↔(Rxy ∨∃z(Rxz ∧tc(R)(z, y))).
Which predicate is deﬁned here? One concrete intuitive reading is this:
if R stands for the “parent” relation, then tc(R) stands for the family
relation of “ancestor”. More abstractly, starting from the empty rela-
tion (“false”) as an initial approximation, the given schema can be used
to produce, step by step, the following approximation sequence:
R,
R ∪(R; R),
R ∪(R; R) ∪(R; R; R) ∪· · ·
and in the countable limit, the usual deﬁnition of the transitive closure
of R, as reachability via a ﬁnite sequence of R-steps, as used for instance
in the dynamic logic of Chapter 14.
This recursive format will not always work. Unacceptable circular
deﬁnitions exist, too – but they tend to involve negations, such as the
following post-modern family relation:
Parent# xy ↔Parent xy ∨¬Parent # xy
Its approximation sequence, starting from False, oscillates between the
two predicates Parent# xy and True.216
Still, recursive deﬁnitions occur widely in mathematics, computer
science, and linguistics – but also in our agency-related Chapters 12
through 17. Transitive closure was essential to propositional dynamic
logic, which described iterated structures in actions, but also in in-
formation structure, where common knowledge was an “equilibrium
notion” deﬁned by the recursion
CGϕ ↔ϕ ∧EGCGϕ
More general equilibrium conditions on strategies for players underlie
the solution concepts of game theory. Indeed, the provability logic of
Chapter 21 involved “cracking” deﬁnitions of this sort. All these notions
call for logical systems that can capture the essentials in a perspicuous
manner, and allow us to reason about, and with recursive deﬁnitions.
The underlying mathematical theory studies “ﬁxed-points” for func-
tions on sets of objects P, as the current value for some predicate p,217
and computing, for some given description ϕ, the next approximation as
216The Liar Sentence “The statement I am now making is not true” is a more
famous example where negation inside a circular deﬁnition wreaks havoc.
217Think of how, generally, modal proposition letters denote sets of worlds.

Fixed-points, computation, and equilibrium / 257
February 2, 2010
the set of states satisfying ϕ(P). This works under general conditions,
described by the Tarski-Knaster Theorem, a result about monotone
operators F on partial orders ≤satisfying
x ≤y →F(x) ≤F(y).
Theorem 55. On complete partial orders ≤(where all suprema and
inﬁma exist), monotone operators always have ﬁxed-points x where
F(x) = x. There is even always a smallest and a greatest ﬁxed-point in
the order ≤, that need not coincide.218
Here is a modal logic extending our basic system with a systematic
format for recursive deﬁnitions via ﬁxed-point operators:
22.2
Modal µ-calculus
The language includes the basic modal syntax, but it adds one operator
µp · ϕ(p)
provided that p occurs only positively in ϕ.
Here positive occurrence is deﬁned in the style of Chapter 9, say as
being inside an even number of negations, since negation is the only
“polarity-switcher” among ∧, ∨,
2,
3, µp ·. Here the µ-operator stands
for a smallest ﬁxed-point in the following semantic sense:
Deﬁnition 22.2.1 (Fixed-point semantics). In any model M, the for-
mula ϕ(p) deﬁnes an inclusion-monotone set transformation
Fϕ(X) = { s ∈W | (M, p := X), s |= ϕ }
By the Tarski-Knaster Theorem, the operation Fϕ must have a smallest
ﬁxed-point on the power set of the domain W. Now M, w |= µp · ϕ(p)
iﬀworld w belongs to the latter set.
Here is a simple auxiliary semantic result behind the syntax restric-
tion. If a formula ϕ(p) in our language has only positive occurrences of
the proposition letter p, then it is semantically monotone in p:
If M, s |= ϕ(p), and V (p) ⊆Q, then (M, p := Q), s |= ϕ(p),
with (M, p := Q) the model M with the value of p reset to Q.
This smallest ﬁxed-point can be reached bottom-up by an ordinal
sequence of approximation stages
ϕ0, . . . ϕα, ϕα+1, . . . , ϕλ, . . .
with ϕ0 = ∅, ϕα+1 = Fϕ(ϕα), and ϕλ = S
α<λ ϕα.
The smallest ﬁxed-point formula µp · ϕ(p) denotes the ﬁrst stage
where ϕα = ϕα+1. Likewise, we can deﬁne a formula νp · ϕ(p) for the
218The smallest ﬁxed-point is in fact the inﬁmum of the set {x | F (x) ≤x}.

February 2, 2010
258 / Modal Logic for Open Minds
greatest ﬁxed point of the operator Fϕ, starting from the whole domain
of M as its ﬁrst approximation, and going downward to smaller sets.
Both ﬁxed-points exist by the Tarski-Knaster theorem. Indeed, one can
see that the following deﬁnability holds between them:
Fact. νp · ϕ(p) = ¬µp · ¬ϕ(¬p).
Try to prove this for yourself.219 We can use this fact as a deﬁni-
tion of νp · ϕ(p). In general, smallest and greatest ﬁxed-points need not
coincide in a model, and others may be in between.
This system generalizes propositional dynamic logic (cf. Chapter 14).
Example (Transitive closure and dynamic logic). “Some ϕ-world is
reachable in ﬁnitely many Ra-steps” is ⟨a∗⟩ϕ = µp · (ϕ ∨⟨a⟩p).
But other ﬁxed-point formulas deﬁne notions beyond PDL:
Example (Well-foundedness). µp ·
2p deﬁnes “the well-founded part”
of the accessibility relation for
2 in any modal model: that is, the set
of points from where no inﬁnite ascending R-sequence starts.220
Greatest ﬁxed-point operators deﬁne still further notions:
Example (Inﬁnity). In any model, νp ·
3p deﬁnes the set of points
where some inﬁnite sequence starts.
This is sometimes described negatively as “non-termination”, but
it is also the set of states from where our process never breaks down.
Computer science is long past the traditional bias from recursion theory
toward ﬁnitely terminating programs, since some crucial programs on
your computer, like its operating system, are meant not to terminate.
The µ-calculus can describe termination via µ-operators, but it can
also describe inﬁnite process behaviour such as “safety” or “fairness”
by ν-operators. This feature is in line with the branching temporal
logics of Chapter 18, that typically allow for inﬁnite histories for general
processes and games.
Formulas with stacked ﬁxed-point operators, allowed by our syntax,
express much more complex process behaviour.
Major properties of this system keep it “modal” and attractive:
Theorem 56. µ-calculus formulas are invariant for bisimulation.
Theorem 57. The µ-calculus is decidable.
219You may be surprised to see that three negations occur instead of two. But note
at least that this feature gets the positive occurrence right in the µ-formula.
220It is illuminating to trace the approximation sequence for µp ·
2p in the ordinal
model ω + ω (two copies of N in a row) with the relation “greater than” downward.

Fixed-points, computation, and equilibrium / 259
February 2, 2010
Theorem 58. The µ-calculus validities are eﬀectively axiomatized by
two simple proof rules on top of the minimal logic K:
(i)
µp · ϕ(p) ↔ϕ(µp · ϕ(p))
Fixed-Point Axiom
(ii)
if ⊢ϕ(α) →α, then ⊢µp · ϕ(p) →α
Closure Rule
The Closure Rule tells us that we really have a smallest ﬁxed-point.
22.3
A few further topics
Generalizing earlier themes All of our earlier basic theory in Parts
I and II still makes sense in this extended framework. For instance,
concerning its model theory, there is a celebrated result by Janin &
Walukiewicz extending the modal Invariance Theorem of Chapter 7:
Theorem 59. The language of the µ-calculus consists precisely of the
bisimulation-invariant formulas of the system MSOL: monadic second-
order logic over binary orderings.
The proof of this result involves methods from Automata Theory,
and indeed, the modern theory of the µ-calculus involves automata and
games, far beyond classical modal logic. These methods are so powerful
that they sometimes yield improved versions of classical results. For
instance, a famous result by Lyndon says that, in ﬁrst-order logic,
A formula ϕ(P) is semantically monotone with respect to a pred-
icate P (in the above-deﬁned sense) iﬀϕ(P) is logically equiva-
lent to a formula all of whose occurrences of P are positive.
But the latter deﬁnition cannot always be found eﬀectively: and it is
even undecidable whether a ﬁrst-order formula is monotone with re-
spect to a given P. By contrast, in the µ-calculus, we have a stronger
uniform Lyndon theorem: the positive equivalent can be found eﬀec-
tively using a transformation on associated automata.
In this setting, bisimulation invariance implies that, like the basic
modal logic (Chapter 2), the µ-calculus is insensitive to the diﬀerence
between general models and unraveled tree models. This tree-oriented
character explains many of its features, including the decidability.
Next, with frame correspondences, we can extend our theory of
Chapter 9 to systematically determine properties corresponding to
modal axioms stated using ﬁxed-point operators.
Example (A L¨ob variant).
2∗(2p →p) →
2∗p deﬁnes upward well-
foundedness of R, without transitivity.221
221Here, if
2 is the modality [R],
2∗is the corresponding one for [R∗].

February 2, 2010
260 / Modal Logic for Open Minds
Example (Term rewriting). The formula
32∗p →
23∗p expresses
Weak Conﬂuence: points diverging from a common root still have a
common successor in the transitive closure of the relation.222
Connections to provability logic The new system subsumes the
provability logic of Chapter 21:
Theorem 60. L¨ob’s Logic is axiomatized by the two principles
(a)
2p →
22p,
(b) µp ·
2p
Proof. We do this as a practical combinatorial exercise in working with
these systems. From L¨ob’s Logic to (a) was a purely modal deduction.
Next, (b) is derived as follows. By the ﬁxed-point axiom of the µ-
calculus, we have
2µp ·
2p →µp ·
2p. So it suﬃces to get
2µp ·
2p.
Now L¨ob’s Axiom implies:
2(2µp ·
2p →µp ·
2p) →
2µp ·
2p
and the antecedent of this is derivable by modal Necessitation from the
converse direction of the µ-calculus ﬁxed-point axiom.
Next, assume (a) and (b). We show that, in the modal logic K4,
µp ·
2p →(2(2p →p) →
2p).
The proof rule for smallest ﬁxed-points gives µp ·
2p →α for any for-
mula α if
2α →α can be proved. Now us this law of K4 (try!):
2(2(2q →q) →
2q) →(2(2q →q) →
2q)
One can recast this link between provability and ﬁxed-point logics:
Theorem 61. L¨ob’s Logic faithfully embeds into the µ-calculus.
The converse is more tricky. Albert Visser has shown recently that
there is an eﬀective translation from the µ-calculus into provability
logic, though not a faithful one. This leaves open an option of merging
the two major approaches to ﬁxed points in the modal literature.
22.4
Further languages
Beyond computation Patterns like the above also occur in logics
of information, such as epistemic logic. In Chapter 12, we saw that
common knowledge in groups of agents G had a typical equilibrium
character, and indeed, it can be deﬁned by a greatest ﬁxed-point:
CGϕ ↔νp · (ϕ ∧EGp)
222Basic laws of term rewriting are implications between modal properties.

Fixed-points, computation, and equilibrium / 261
February 2, 2010
where EG (“everybody knows”) is the conjunction of all single-agent
knowledge operators. In Chapter 23, we will see more of these connec-
tions with dynamic logics of information.
Fragments While the µ-calculus is modal, it makes sense to look at
better fragments. Propositional dynamic logic was one. Here is another:
Deﬁnition 22.4.1 (Continuous fragment). The ω −µ-calculus only
allows ﬁxed-point operators in the following existential format:
µp · ϕ(p)
with ϕ constructed according to the syntax rule
p | all p-free formulas | ∧| ∨|
3 | µ 223
This syntax guarantees that smallest ﬁxed-points are always reached,
in any model, in at most ω approximation steps. A typical example is
the transitive closure of a binary relation. This “uniformity” ﬁts well
with examples from practice. Its mathematical core is called Scott Con-
tinuity: the approximation map Fϕ for formulas ϕ from this fragment
has the following property:
For all worlds w and sets X,
w ∈Fϕ(X) iﬀw ∈Fϕ(X0) for some ﬁnite X0 ⊆X.224
PDL is a still weaker fragment inside the ω −µ-calculus where the
recursion formula may not even use conjunctions ∧.
Second-order extensions But there are also extensions. In partic-
ular, the µ-calculus is related to the much stronger system SOML of
modal logic with second-order quantiﬁers over proposition letters. µ-
calculus formulas are deﬁnable in SOML plus a PDL-style iteration
modality
2∗for transitive closure.
LFP(FO) But the most obvious comparison is the earlier-mentioned
logic LFP(FO) that extends ﬁrst-order logic with smallest and great-
est ﬁxed-point operators over formulas ϕ(P) with positive occurrences
of the relevant predicates P, now of any arity. Its syntax is an obvi-
ous generalization of that for the µ-calculus. This natural extension
of ﬁrst-order logic loses Compactness and Completeness. As we said,
one can easily deﬁne the standard natural numbers up to isomorphism,
so the valid formulas of LFP(FO) include True Arithmetic, and even
form a highly complex Π1-complete set (cf. Chapters 10, 24).225 Se-
mantically, this system is not very well-understood, though we know
that its formulas are invariant for potential isomorphism (cf. Chapter
223We omit a technicality in the precise syntax of the continuous fragment.
224A semantic characterization theorem was proved recently by Ga¨elle Fontaine.
225Such logics have the complexity of second-order arithmetic with quantiﬁers over
sets of natural numbers, an incredibly strong system encoding much of Analysis.

February 2, 2010
262 / Modal Logic for Open Minds
7 and the Appendix on ﬁrst-order logic), and LFP(FO) also satisﬁes a
downward L¨owenheim-Skolem Theorem. We used this system already
as a frame-correspondence language for L¨ob’s Axiom in Chapter 21.
The interesting point here in a modal perspective is how adding
ﬁxed-points explodes the complexity of expressive power and validity
on top of ﬁrst-order logic, but not on top of the weaker language of
modal logic. And this phenomenon extends to other modal-like frag-
ments of ﬁrst-order logic. For instance, the system LFP(GF) of the
Guarded Fragment (Chapter 7) with ﬁxed-point operators is still de-
cidable. Thus, going the “modal way”: weakening classical logic often
gives a more solid ground for then adding features that would be harm-
ful in general. This seems a nice mystery to conclude this chapter with.

Fixed-points, computation, and equilibrium / 263
February 2, 2010
Exercises Chapter 22
1. Explain the meaning of the µ-calculus formula µp ·
2p in some
detail. Show how the approximation sequence for this smallest
ﬁxed-point can take up to any ordinal length, in arbitrary models.
2. Show the soundness of the proof system for the µ-operator.
3. Deﬁne the operator [π]ϕ of PDL as a greatest ﬁxed point.
4. Prove that all formulas of the µ-calculus are invariant for bisim-
ulation. One way you can do this is by translation into inﬁnitary
modal logic: a separate exercise in itself.
5. Derive the induction axiom of propositional dynamic logic:
2ϕ ∧[∗](ϕ →
2ϕ) →[∗]ϕ
from L¨ob’s Axiom and appropriate Fixed-Point Axiom here:
[∗]ϕ ↔(2ϕ ∧
2[∗]ϕ)
6. Discuss the following non-analogy between PDL and the µ-
calculus: the former has explicit programs telling us how to reach
certain points. What would be a way of adding programs to the
µ-calculus after all – where would that make sense?
7. The inﬂationary µ-calculus allows for arbitrary approximation
maps without any monotonicity or positive occurrence condi-
tions on µp · ϕ(p). We just deﬁne the approximation map using
an union: Fϕ(X) = { s ∈W | (M, p := X), s |= ϕ } ∪X. Prove
that smallest ﬁxed-points always exist for any such operator.
8. Prove that the µ-calculus is closed under taking simultaneous
ﬁxed-points (how do you deﬁne these; why do they exist?).
9. Prove that De Jongh-Sambin ﬁxed-points (Chapter 21) can be de-
ﬁned in the µ-calculus by the following simultaneous inﬂationary
inductive deﬁnition: r ↔
2r, p ↔
2r ∧ϕ(p, q).

February 2, 2010

February 2, 2010
23
Issues in information dynamics
The public announcements !P in Chapter 15 were simple events, but
real information ﬂow is much more complex. In real life, agents need
not get the same information out of events that they witness. When I
take a new card from the stack in a game, I see the one I get, but you
do not. When I overhear what you tell your friend, you may not notice
that I do. At the website of your bank, you have an encrypted private
conversation that as few people as possible should learn about. The
most enjoyable games are all about diﬀerent information for diﬀerent
players. In all these cases, modeling the dynamics poses a challenge,
and simple elimination of worlds is deﬁnitely not the right mechanism.
This chapter gives an introduction to a signiﬁcant extension of PAL
that deals with partially private information, and its broader temporal
setting in the branching perspective of Chapter 18.
23.1
Multi-agent information ﬂow
We start with a simple scenario of information ﬂow of a private nature:
Example (Two envelopes).
We have each drawn a closed envelope. It is common knowledge that
one holds an invitation to a lecture on logic, the other to a wild night
out. We are both ignorant of the fate in store for us. Now I open my
envelope, and read the contents, without showing them to you. Yours
remains closed. Which information has passed because of my action?
I know now which fate is in store for me. But you have also learnt
something, viz. that I know – though not what I know. Likewise, I did
not just learn what is in my envelope. I also learnt something about
you, viz. that you know that I know. The latter fact has even become
common knowledge between us. And this may not even be all.
What general principle lies behind this scenario? Intuitively, we need
to eliminate links now instead of worlds. The initial information state
265

February 2, 2010
266 / Modal Logic for Open Minds
has collective ignorance, the update removes my uncertainty link – but
both worlds are still needed to model your ignorance:
P •
you
◦
me
P •
you
◦
In the resulting model, all observations from our story come out right.
This kind of update occurs in many games, and the system to be pre-
sented in this chapter has been used to completely analyze the parlour
game of Clue. Here is another phenomenon all around us:
Example (CC and BCC in email). Sending an email with a CC is
like a public announcement. But what if you send one with BCC?
Now some people receive the message, while others do not realize that.
Scenarios like this go beyond link cutting, as they may add new worlds.
Here is a simplest case. Initially, we are both ignorant whether P is
true. An initial model again looks as follows:
P •
you
◦
me
Now you hear a public announcement that P, but you are not sure if
I heard it. Then we need two things: a copy of the model where you
think nothing happened, and an “update copy” for the information that
I received. This requires at least 3 worlds, and we need a new update
mechanism that can increase the number of worlds.
These phenomena pose real challenges. It is not easy to write the
right epistemic models by hand, and the usual “art of modeling” has
to become more of a science. And this is not just “information engi-
neering”, since maintaining diﬀerent information for diﬀerent agents is
the reality of social organization, and perhaps even civilization.
23.2
Event models and product update
Here is the red thread through the above examples: agents learn from
events to which they may have diﬀerent access. This idea was turned
into logic by a group of young researchers over the last 10 years, cf.
the recent textbook by van Ditmarsch, van der Hoek & Kooi (van
Ditmarsch et al., 2007)226 For a start, the epistemic models of Chapter
226An up-to-date survey is the chapter “Epistemic Logic and Information Update”
by Baltag, van Ditmarsch & Moss (Baltag et al., 2008) in the Handbook of the
Philosophy of Information (Adriaans and van Benthem (2008)).

Issues in information dynamics / 267
February 2, 2010
12 have a natural companion, when we look at the events involved in
scenarios of communication or interaction:
Deﬁnition 23.2.1 (Event models). An epistemic event model E =
(E, {∼i}i∈G, {Pref}f∈E, e) has a set of events E, epistemic uncertainty
relations ∼i for each agent,227 a map assigning preconditions Pref to
events f, stating when these are executable, and an actual event e.
Here agents’ uncertainty relations encode which events they cannot
distinguish in the relevant scenario, because of their observational limi-
tations. When I open my envelope, you know it must be either Lecture
or Night-Out, but you cannot distinguish the two events “my reading
L”, “my reading N”. Hence both are in the event model, though not
other events that we can all distinguish from these two, such as Mount
Etna erupting. Next, an event model has no valuation, but events come
with preconditions for their occurrence. A public announcement !P has
truth of P for its precondition, reading Night-Out has the precondition
that this card is in fact in my envelope, my asking a genuine question
meant I did not know the answer. Most events carry information about
when and where they occur. That is precisely why they are informative!
The following mechanism describes how new worlds after update
with an event model (i.e., one step of observation in an epistemic sce-
nario) are pairs of old worlds with an event that has taken place:
Deﬁnition 23.2.2 (Product update). For any epistemic model (M, s)
and event model (E, e), the product model (M × E, (s, e)) is an epis-
temic model with the following main components. Its domain is the
set { (s, e) | s a world in M, e an event in E, M, s |= Pree } and its
accessibility relations satisfy the rule
(s, e) ∼i (t, f)
iﬀ
both s ∼i t and e ∼i f.
The valuation for atoms p at (s, e) is the same as that at s in M.228
M × E is a product of the epistemic model M and the event model
E, and this explains its possible growth in size. But some pairs are
eliminated by the preconditions, and this makes information ﬂow. Next,
the product rule for epistemic accessibility has the following motivation:
we cannot distinguish two new worlds if we could not distinguish them
before, and the new events do not distinguish them either.
Even so, the deﬁnition is incomplete: what language did the precon-
ditions come from? For simplicity, we assume here they are from our
227The ∼i are often equivalence relations – but using directed accessibility one can
even model more complex “mistaken beliefs”.
228There are also versions with real world change: van Benthem et al. (2006).
Beyond preconditions, these also stipulate post-conditions on eﬀects of events.

February 2, 2010
268 / Modal Logic for Open Minds
epistemic base language, by atomic propositions (“I have the red card”)
or epistemic ones (“I think you may know whether P”). The intuitive
understanding in our update mechanism is that the preconditions are
common knowledge in the group.
This mechanism can model a wide range of phenomena:
Example (Public announcement). The event model for a public an-
nouncement !P has just one event with precondition P, and reﬂexive
accessibility arrows for all agents. The product model M ×E then just
retains the pairs (w, !P) with M, w |= P, thus producing an isomorphic
copy of our earlier PAL-style model M|P.
Example (The two envelopes). Our initial epistemic model was like
this (“L” is my having the lecture, “N” the NightOut):
M
L •
you
◦
me
N
You could not distinguish between the two events of my reading “Lec-
ture” and my reading “NightOut” – and this shows in the following
event model, where the black event is actual:
E
events
I-Read-Lecture
you
I-Read-NightOut
preconditions
I-have-Lecture-card
I-have-NightOut-card
We also assume all reﬂexive arrows for both agents. The resulting
product model M × E looks like this. Of the 4 possible pairs, 2 drop
out by the preconditions, but this time, we do not just copy the original
model, but perform link-cutting, yielding the intended outcome:
M × E
(have-lecture, read-lecture)
you
(have-nightout, read-nightout)
Example (The doubtful signal). Here is how model size can increase.
Consider our ubiquitous earlier model
M
P •
you
◦
me
Now take an event model for the earlier scenario where I hear !P, while
perhaps you merely experienced an identity event Id:

Issues in information dynamics / 269
February 2, 2010
E
events
!P
you
Id
preconditions
P
⊤
This time, the product model M ×E has 3 worlds, arranged as follows:
M × E
(•, !P )
you
you
(•, Id)
you
(◦, Id)
me
This clearly satisﬁes our intuitive expectations described earlier.
Product models for realistic scenarios can increase size considerably.
Successive uses of BCC in emails (a device that can be modeled here)
may explode the initial model, as we all know when trying to keep track
of who is supposed to know what. Parlour games like “Clue” start with
simple models, evolve to complex models in mid-play where players
know very diﬀerent things, and only get simpler again in the end game.
In this practical setting, computer programs have been developed that
perform product update and related symbolic calculations.
23.3
Exploring the mechanism further
There is more to this system than meets the eye, and here is some:
Under-informed versus misinformed When you buy a board
game, its rules on the cover may make things complicated, but they
will not mislead you. Likewise, using BCC in an email system need
not mislead recipients, provided they are aware that it is an available
move. Indeed, product update helps classify various kinds of “public
ignorance”. For instance, public resolution of a known question does
not increase domain size, but cuts links. But a secret observation of a
card will mislead you: cheating crosses a complexity threshold.
Product update describes the latter scenario, too, provided we in-
crease generality. Instead of epistemic equivalence relations, we can just
as well use pointed accessibility arrows in models that indicate what the
current world, or event, might be like according to you. In particular,
that world itself is not among these when you are mistaken.229
229In this way, dynamic epistemic logic is also a dynamic doxastic logic of belief –
though the latter topic has further complexities that we do not purse in this chapter.

February 2, 2010
270 / Modal Logic for Open Minds
Example (A secret peep). We both do not know if P is the case, but
I secretly look and ﬁnd out. The initial model is
M
P •
you
◦
me
Here is the event model, with the pointed arrows read as just indicated:
E
events
!P
me
(
you
) Id
you, me
w
preconditions
P
⊤
We get a model M ×E with 3 worlds, ordered as in the next picture (for
convenience, leaving out a reﬂexive arrow for me in the actual world,
and reﬂexive arrows for us both in the other two):
M × E
(•, !P )
you
+
you
)
(•, Id)
E
you,me
v
(◦, Id)
This ﬁts intuitive expectations. In the actual world, I know exactly
what has happened – while you still think, mistakenly, that we are in
one of the other two worlds, where everything is just like before.
23.4
Language and logic of DEL
The logic for DEL is similar to that of PAL in Chapter 15. The only
new feature in what follows is the use of event models inside modalities,
which takes some guts, but there is nothing to it really:
Deﬁnition 23.4.1 (DEL language and semantics). The dynamic epis-
temic language is deﬁned by the following inductive syntax rule:
p | ¬ϕ | ϕ ∨ψ | Kiϕ | CGϕ | [E, e]ϕ
where E, e is any event model with distinguished event e.230 The se-
mantic interpretation of this language is standard for all these clauses,
except for the dynamic modality, where we set:
M, s |= [E, e]ϕ
iﬀ
if M, s |= Pree then M × E, (s, e) |= ϕ
This formalism is a sort of watershed. If you are “born to be wild”,
230This recursion is tricky when event preconditions come from the same language.

Issues in information dynamics / 271
February 2, 2010
DEL is for you.231 Axiomatizing this language goes by the PAL method-
ology of recursion axioms:
Theorem 62. DEL is eﬀectively axiomatizable, and decidable.
Proof. The recursion axioms are like for PAL, with two adjustments:
[E, e]q
↔(Pree →q)
[E, e]Kiϕ ↔(Pree →V
e∼if∈E Ki[E, f]ϕ)
The latter equivalence holds since worlds (t, f) that are accessible from
(s, e) in M × E are those whose world component t is accessible from
s in M, and whose event-component f is accessible from e in E.232
The ﬁnal completeness argument reducing all formulas to equivalent
ones in the epistemic base language runs as in Chapter 15.
The system also supports basic notions of Parts I and II:
Fact. All formulas of DEL are invariant for epistemic bisimulation.
Proof. One proof is by reduction to basic EL formulas. More informa-
tive is a direct induction, where the dynamic modality uses this
Fact. For bisimilar epistemic models M, s and N, t, the product model
(M, s) × (E, e) is bisimilar with the model (N, t) × (E, e).233
23.5
Excursion on extensions: common knowledge
Is the dynamic epistemic language right for our intended uses of in-
formation models? New modalities make sense, too, such as common
knowledge (Chapter 12). This connects up with the ﬁxed-point logics
of Chapters 14, 22, and we sketch an illustration (van Benthem et al.
(2006) has details), only for the intrepid reader. We will work with ar-
bitrary models, not necessarily with equivalence relations. Here is the
simplest illustration of what we want to analyze:
Example (Secret observation, or private subgroup announcement).
Consider the following two-event model involving two agents 1, 2 –
where 1 learns that the precondition of e holds, say p, while 1 thinks
that nothing has happened (⊤). What group knowledge arises?
231In practice, one often uses ﬁnite event models, though this is not required.
232If the event model is inﬁnite, this axiom contains an inﬁnitary conjunction!
233One could call two event models “the same” if, for all (M, s), (M, s)× (E1, e1)
and (M, s) × (E2, e2) are bisimilar. A structural characterization of this notion of
action emulation has been found, but it is quite complex.

February 2, 2010
272 / Modal Logic for Open Minds
e
1
$
2
( f
1,2
y
First, agent 2 learns nothing signiﬁcant here. This is because the second
event (that 2 takes to be the real one) with its accessibilities acts as a
public announcement of its precondition ⊤. Now here is a general law:
Fact. ⟨!⊤⟩ϕ ↔ϕ is valid in PAL.
The reason is, semantically, that announcing ⊤does not change a
model – or alternatively, just use the PAL recursion axioms. Of course,
1 does learn that p is the case, which can be seen through the DEL
reduction axiom (note that only e is accessible to e for 1):
[E, e]K1p ↔(p →K1[E, e]p) ↔(p →K1(p →p)) ↔(p →⊤) ↔⊤
But now for groups. Try to write a recursion axiom for common
knowledge [E, e]C{1,2}ϕ in this setting: it is not at all obvious! Here
is a solution, written for convenience with existential modalities, that
may be computed by the techniques that prove our next theorem:
⟨E, e⟩⟨CG⟩ϕ ↔⟨(1 ∪2)∗⟩ϕ
⟨E, e⟩⟨CG⟩ϕ ↔(p ∧⟨(?p; 1)∗⟩(p ∧ϕ)) ∨(p ∧⟨(?p; 1)∗⟩(p ∧⟨(1 ∪2)∗⟩ϕ))
To see the issue, draw a picture of CGϕ in a product model M × E,
with a ﬁnite accessibility sequence (s1, e1), . . . , (sk, ek), and try to write
that information in M, with only s-sequences.
The only known solution drastically extends our epistemic language:
Deﬁnition 23.5.1 (The system EDL). The epistemic dynamic-lan-
guage EDL is deﬁned by the following inductive syntax rules:
formulas
p | ¬ϕ | (ϕ ∧ψ) | [π]ϕ
programs
i | π ∪π | π; π | π∗|?ϕ
The semantics is over the standard epistemic models of Chapter 12, in
a mutual recursion. Formulas are interpreted as in Chapter 14, with
M, s |= [π]ϕ saying that ϕ is true at all successors of s in M ac-
cording to the relation denoted by the program π. Programs denote
binary accessibility relations between worlds: atomic i are agents’ epis-
temic uncertainty relation, ∪stands for union (“choice”), ; for sequen-
tial composition, and ∗for reﬂexive transitive closure (“Kleene star”).
Moreover, ?ϕ is the test program {(s, s) | M, s |= ϕ}.
Warning EDL is unlike DEL, which changes models. EDL stays in
one model, where programs denote accessibility relations for complex

Issues in information dynamics / 273
February 2, 2010
agents. E.g., common knowledge CGϕ is [(∪i∈Gi)∗]ϕ, i.e., knowledge for
the “complex agent” (∪i∈Gi)∗. Conditional common knowledge Cψ
Gϕ as
in Chapter 15 even involves “agents” with tests: (?ψ; ∪i∈Gi; ?ψ)∗. Of
course, not every program deﬁnes a natural epistemic “agent”.
The important point is that EDL does provide recursion axioms for
common knowledge, and in fact much more. Consider DEL as earlier
in this chapter, but now with EDL as its static language. The crucial
recursion axiom will analyze ⟨E, e⟩⟨π⟩ϕ, for any program expression π
of EDL, using existential modalities for convenience.
Deﬁnition 23.5.2 (Product closure). A language L is product closed if
for every ϕ ∈L, the formula ⟨E, e⟩ϕ interpreted using product update,
is equivalent to a formula already inside L. Eﬀective product closure
requires an algorithm producing the equivalents.
Our completeness result showed that epistemic logic EL is product-
closed for ﬁnite event models: the recursion axioms drive an eﬀective
algorithm. We use only ﬁnite event models henceforth:
Theorem 63. The logic E-PDL is eﬀectively product-closed.
Proof. The argument involves two simultaneous inductions. First, ﬁx
some ﬁnite pointed event model E, e, and, without loss of generality,
enumerate its event domain as a ﬁnite set of numbers {1, . . . , n}.
Fact. For ϕ in EDL, ⟨E, e⟩ϕ is in EDL.
The steps for atomic formulas and Booleans are as for DEL. The
essential case ⟨E, e⟩⟨π⟩ϕ with a program π is analyzed as follows:
Deﬁnition 23.5.3. Given any EDL program π, and any two events
e, f in the given event model E, we deﬁne the EDL program T (e, f, π)
by the following induction on programs:
T (e, f, i)
=
 ?Pree ; i ; ?Pref
if e ∼f in E
?⊥
otherwise
T (e, f, π1 ∪π2) = T (e, f, π1) ∪T (e, f, π2)
T (e, f, π1; π2)
= S
g∈E(T (e, g, π1) ; T (g, f, π2))
T (e, f, ?ϕ)
=
 ?Pree ; ?⟨E, a⟩ϕ ; ?Pref
if e = f
?⊥
otherwise
T (e, f, π∗)
= P(e, f, n, π)
n largest in E

February 2, 2010
274 / Modal Logic for Open Minds
The auxiliary program P(e, f, i, π) is deﬁned by induction on i:
P(e, f, 0, π) =
 T(e, f, π) ∪?⊤
if e = f
T(e, f, π)
if e ̸= f
P(e, f, i + 1, π) = P(e, f, i, π) ∪





P(e, i, i, π) ; P(i, i, i, π)∗; P(i, f, i, π)
if i ̸= e, i ̸= f
P(e, i, i, π) ; P(i, i, i, π)∗
if i ̸= e, i = f
P(i, i, i, π)∗; P(i, f, i, π)
if i = e
All these programs are in EDL. Their meanings are in the next claim,
proved simultaneously with all other claims in the main proof:
Claim.
(a) (w, v) ∈JT (e, f, π)KM iﬀ((w, e), (v, f)) ∈JπKM×E
(b) (w, v) ∈JP(e, f, i, π)KM iﬀthere exists a ﬁnite sequence of tran-
sitions in M ×E of the form (w, e)JπKx1 · · · xkJπK(v, e) such that
no stage xj = (wj, ej) has an event ej with index j ≥i.
The inductive proof is obvious from the deﬁnition. In particular, the
complex clause for P(e, f, i + 1, π) says that a ﬁnite path from e to f
pass at worst through the event i some ﬁnite number of times – and
marking these, it decomposes into an initial part from e to i of lower
index i for intermediate stages, an iteration of trips from i to i with
lower index, and a ﬁnal part from i to f with lower index.
With this explanation, here is our desired equivalence:
Lemma.
⟨E, e⟩⟨π⟩ϕ ↔
_
i∈E
⟨T (e, i, π)⟩⟨E, i⟩ϕ
The proof follows easily from the explanation for the relations T (e, i, π).
This proof is also an eﬀective algorithm for writing correct recursion
axioms for common knowledge and other EDL-deﬁned notions.234
23.6
Games, update evolution, and long-term
temporal perspective
Like public announcement, product update can be repeated to model
successive assertions, observations, or other informational events. We
saw this with the puzzle of the Muddy Children in Chapter 15, where
the Father creates a model with two announcement events (with stan-
dard preconditions) that can be distinguished by all participants:
234The result generalizes to epistemic µ-calculus: van Benthem and Ikegami (2008).

Issues in information dynamics / 275
February 2, 2010
“Child i says that it knows (or: does not know) whether it is dirty”
This gets repeated until the epistemic model no longer changes. Sce-
narios like this generate trees or “forests” whose nodes are ﬁnite se-
quences of events (cf. Chapter 18), starting from worlds in an initial
epistemic model. As an illustration, consider games of imperfect infor-
mation (Chapter 17). Moves in a game have preconditions that restrict
what is playable at nodes of the game tree. Now collect all moves into
one event model E, while also recording the right information about
which players can observe which move. Then successive rounds of the
game correspond to forming successive update with this model E:
Deﬁnition 23.6.1 (Update evolution models). Consider an initial
epistemic model M, with event model E. Then Tree(M, E) is the pos-
sibly inﬁnite epistemic tree model whose successive layers are disjoint
copies of all successive product update models M ×E, (M ×E)×E, . . .
Example (Updates in play: propagating ignorance along a game tree).
Game tree
A
a
xppppppppppppp
b
c
%J
J
J
J
J
J
J
J
J
J
E
d

e
33333
E
e

f
33333
E
f
33333
Event model
a
E b
c
precondition: turnA
d
A e
f
precondition: turnB
Here are the successive updates creating the right uncertainty links:
stage 1
stage 2
E
stage 3
A
E
There is more to updates evolution. For instance, successive levels
may stabilize in that they become bisimilar to each other – as happens
in some games. But here we move on to our ﬁnal perspective:

February 2, 2010
276 / Modal Logic for Open Minds
23.7
Dynamic epistemic logic in temporal logic
While dynamic logics describe stepwise events and induced changes in
agents’ knowledge and belief, a global perspective also makes sense (as
in Chapter 18, though we will deviate in a moment), with tree pictures:
/ s
h′
h
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
Branching temporal models provide a “Grand Stage” view of agency,
with histories standing for runs of some information-driven process,
that can be described by languages with both epistemic and temporal
operators.235 As we already saw in an example, such trees may arise
as unfoldings of some initial epistemic model M via successive DEL
product updates M × E with event models E by “update evolution”.
We will see in a moment just how this works.
Basic epistemic-temporal logic Take a set A of agents and E of
events. This time, we change the perspective a bit from Chapter 18,
and take a history to be a ﬁnite sequence of events, that can be an
initial part of some longer history. E∗is the total set of histories. For a
history h, write he for h followed by the event e. Write h ≤h′ if h is a
preﬁx of h′, and h ≤e h′ if h′ = he for the event e.
Deﬁnition 23.7.1 (ETL Frames). A protocol is a set of histories H ⊆
E∗closed under preﬁxes. An ETL frame is a tuple (E, H, {∼i}i∈A) with
H a protocol, and the ∼i epistemic accessibility relations.
An ETL frame describes knowledge evolving over time in some pro-
cess. The protocol captures the admissible histories, with he the point
in time after e has happened in h. The relations ∼i represent uncer-
tainty of agents about how the current history has evolved, due to
their limited powers of observation. h ∼i h′ means that from agent i’s
perspective, history h′ looks the same as history h.
A temporal language LETL for these structures is generated by the
following grammar (AT is a set of atomic propositions):
p | ¬ϕ | ϕ ∨ψ | [i]ϕ | ⟨e⟩ϕ
where i ∈A, e ∈E, and p ∈AT.
Formulas are interpreted at ﬁnite histories in the following structure:
235Some well-known Grand Stage views are Interpreted Systems (Fagin et al.,
1995), Epistemic-Temporal Logic (Parikh and Ramanujam, 2003), STIT (Belnap et
al. 2001), Process Algebra/Game Semantics (Abramsky, 2008).

Issues in information dynamics / 277
February 2, 2010
Deﬁnition 23.7.2 (ETL Model).
An ETL model M is a tuple
(E, H, {∼i}i∈A, V ) with (E, H, {∼i}i∈A) an ETL frame, and V a valu-
ation map sending proposition letters to sets of histories in H.
Deﬁnition 23.7.3 (Truth of LETL formulas). Let M = (E, H, {∼i}
i∈A, V ) be an ETL model. Truth of a formula ϕ at a history h ∈H,
denoted M, h |= ϕ, is deﬁned inductively as follows:
(a)
M, h |= p
iﬀ
h ∈V (p)
(b)
Booleans are interpreted as usual
(c)
M, h |= [i]ϕ
iﬀ
for each h′ ∈H, if h ∼i h′, then M, h′ |= ϕ
(d)
M, h |= ⟨e⟩ϕ
iﬀ
there exists h′ = he ∈H with M, h′ |= ϕ
Modal correspondence for special agents Further constraints on
these models reﬂect special features of agents, or of the informational
process. Such constraints come either as conditions on epistemic and
action accessibility, or as epistemic-temporal axioms, with the two re-
lated by modal frame correspondences (Chapter 9):
Fact. The axiom K[e]ϕ →[e]Kϕ corresponds to Perfect Recall:
if he ∼k, then there is a history h′ with k = h′e and h ∼h′.236
This says that agents’ current uncertainties can only come from pre-
vious uncertainties: expressing a strong form of perfect memory. In
particular, this implies the following property:
Synchronicity: h ∼k only occurs between h, k at the same tree level.
In a similar fashion, we have a dual modal correspondence fact:
Fact. The axiom [e]Kϕ →K[e]ϕ corresponds to No Miracles:
for all ke with h ∼k, we also have he ∼ke.
This says that, although learning can take place by observing events,
there are no miracles: current uncertainties can only be resolved by
diﬀerential observation of diﬀerent events.
Representation theorems Now we can say how DEL and ETL relate:
Deﬁnition 23.7.4 (Induced ETL forests). An epistemic model M and
sequence of event models E have an induced ETL-model Forest(M, E)
whose histories are all sequences (w, e1, . . . , ek) produced by successive
product update, with epistemic accessibility and valuation as in DEL.
Induced models of this sort have three striking properties:
Fact. ETL-models H of the form Forest(M, E) satisfy these three prin-
ciples, where h, h′, k, . . . range only over histories present in M:
236The elementary proof is Sahlqvist substitution argument. Details simplify by
letting transition relations for events e in our trees be partial functions.

February 2, 2010
278 / Modal Logic for Open Minds
(a) Perfect Memory: if he ∼k, then for some f, k = h′f and h ∼h′.
(b) Uniform No Miracles: if h ∼k, and h′e ∼k′f, then he ∼kf.
(c) Deﬁnable Executability: The domain of any event e is deﬁnable
in the epistemic base language.
Clause (c) stipulates deﬁnability of preconditions for events e, i.e.,
the domains of the partial functions he in the tree model H. Chapter 3
has an alternative of bisimulation Invariance: closure of event domains
under epistemic bisimulations in the ETL-model H. Combining these
results yields a representation for “DEL inside ETL”:
Theorem 64. For ETL models H, the following are equivalent:
1. H is isomorphic to some model Forest(M, E),
2. H satisﬁes Perfect Memory, Uniform No Miracles,
and Bisimulation Invariance.
Using this, we can translate DEL into epistemic-temporal logic.
This tells us how special DEL is as an account of informational
processes over time. It takes idealized observing agents with perfect
memory, and its protocols have only local conditions on executability.
Current generalizations include more complex temporal preconditions,
other types of epistemic agent (say, with limited memory), and also:
revising beliefs instead of knowledge (cf. Chapters 13, 15).
Protocols To conclude, we show how, with links like this, frameworks
can share ideas. Recall the above protocols: constraints on runs of a
computational process. Human interaction, too, has conventions ruling
out some histories: think of conversation rules like “do not repeat your-
self”, “let others speak in turn”, “be honest”. Other protocols occur
in puzzles (the Muddy Children could only make limited assertions)
or physical experiments. All this immediately changes our logics. With
procedural information present, what is the logic of arbitrary proto-
cols?237 PAL itself no longer qualiﬁes: two of its axioms fail.
Example (Failures of PAL validities). PAL had a valid axiom ⟨!P ⟩q ↔
(P ∧q). As a special case, this implied the earlier ⟨!P ⟩⊤↔P. From left
to right, this holds with arbitrary protocols: !P can only be executed if
P holds. But the direction from right to left is no longer valid: P may
be true at the current world, but there is no reason why the protocol
would allow a public announcement of this fact at this stage. Next,
consider the crucial knowledge recursion law, in its existential version
⟨!P⟩⟨i⟩ϕ ↔(P ∧⟨i⟩⟨!P⟩ϕ)
237Think of epistemic models plus all models reachable via some protocol.

Issues in information dynamics / 279
February 2, 2010
This, too, will fail in general, again from right to left. Even when P
is true right now, and the agent thinks it possible that P can be an-
nounced to make ϕ true, she need not know the protocol – and indeed,
the protocol need not allow the action !P in the actual world.
The point is this: assertions ⟨!P⟩⊤now express genuine procedural
information about the informative process agents are in, and hence,
they no longer “reduce” to basic epistemic statements. PAL expressed
factual and epistemic information only. We now remedy this.
Deﬁnition 23.7.5 (The logic TPAL). The logic TPAL of arbitrary
protocols has the same language as PAL, and its axioms are (a) the
epistemic base logic, (b) the minimal modal logic for each announce-
ment modality, and (c) modiﬁed recursion axioms
⟨!P⟩q
↔⟨!P⟩⊤∧q
for atomic facts q
⟨!P⟩(ϕ ∨ψ) ↔⟨!P⟩ϕ ∧⟨!P⟩ψ
⟨!P⟩¬ϕ
↔⟨!P⟩⊤∧¬⟨!P⟩ϕ
⟨!P⟩Kiϕ
↔⟨!P⟩⊤→Ki(⟨!P⟩⊤→⟨!P ⟩ϕ)
Theorem 65. TPAL is complete for PAL protocol models.
Clearly, this is just a starting point for further dynamic logics of
agency, with knowledge, belief, but also preferences and other features.

February 2, 2010
280 / Modal Logic for Open Minds
Exercises Chapter 23
1. Consider the Three Card game in Chapters 12, 15. This time,
player 2 shows his card in public, but only to player 1. Draw the
update. Explain how this would work with event models.
2. Consider an epistemic model M with two worlds satisfying p, ¬ p,
between which agent 1 is uncertain, though 2 is not. The actual
world has p. Now a true announcement of p takes place, and agent
1 hears this. But agent 2 thinks it might just be a statement
“True” that could occur anywhere. Draw the initial model M
and the event model E. Next, compute the successive models
M × E, (M × E) × E, etc. At some stage, one “level” becomes
bisimilar to the next: where?
3. Prove that, if M and E are both transitive, then so is the product
model M ×E. Refute this implication for the property of linearity
of accessibility relations. What is the diﬀerence? Can you state a
general “preservation principle”?
4. In the proof of completeness for DEL with common knowledge,
do all the easy inductive steps involving program composition.
5. Show that Perfect Recall implies Synchronicity in our tree models.
6. Find principles in the epistemic-temporal language ET L that cor-
respond to the two implications in the crucial DEL recursion ax-
iom for knowledge.
7. Check the soundness of the logic TPAL on protocol models.
8. If we want to formalize the whole Muddy Children scenario, which
epistemic temporal notions do we need? Where would we require
the extensions in this chapter?

February 2, 2010
24
System combination and
undecidability
24.1
System combination and complexity
Modal logics usually isolate one particular modal notion, say of knowl-
edge or of time, and then study its properties in expressively weak
languages, often decidable. But what happens when we put these sepa-
rate modalities together – as we must do when painting all the strokes
needed for a full picture of agency, space-time, or other structures in
reality? When both component logics are simple, a “divide and con-
quer” view would suggest that the behaviour of the whole system will
be simple, too. But things are more delicate. One telling discovery in
the 1990s has been that modal system combination can lead to high
complexity, depending crucially on the way the separate modalities “in-
teract”. Here is a typical result, that illustrates a genre:
Theorem 66. The minimal modal logic of two modalities [1], [2] sat-
isfying the axiom [1][2]ϕ →[2][1]ϕ in a language with the universal
modality U over all worlds is undecidable.
Several features here deserve attention. The ﬁrst is the semantic
structure of the models for this logic, reﬂecting an important “param-
eter” that determines complexity: the mode of combination of the sep-
arate logics. What the axiom really says is easily seen through frame
correspondence (Chapter 9). It makes frames for the logic look like a
grid structure satisfying this ﬁrst-order convergence property:
∀xyz : (xR1y ∧yR2z) →∃u : (xR2u ∧uR1z).
The most typical example of such a structure is N × N, where we take
two relations: NORTH moving one step from (i, j) to (i, j + 1) and
281

February 2, 2010
282 / Modal Logic for Open Minds
EAST moving from (i, j) to (i + 1, j):
...
(0, 1)
/ (1, 1)
(0, 0)
/
O
(1, 0)
O
· · ·
While this structure looks geometrically simple and regular, it hides a
lot of complexity. The other major feature involved in the high complex-
ity over these geometrical structures is expressive power of the modal
language (cf. Chapter 7) – but we will get to that below.
24.2
Tiling problems
Here is a well-known undecidable computational benchmark problem,
the Tiling Problem. Let a ﬁnite set of “tiles” be given, with colours on
each side, that form patterns like this:
    
 
 
1
2
3
4
    
 
 
3
    
 
 
4
· · ·
Matching tiles must have the same colours on adjacent sides. Now
the geometrical Tiling Problem asks
Can we cover the whole plane with matching tiles from our set?
Do a few concrete examples, and you will see this is non-trivial.
Theorem 67. The Tiling Problem is undecidable.
Actually, the geometrical Tiling Problem has the same complexity
as the computational “Non-Halting Problem”: that is, determining if
a given Turing machine will keep computing forever on a given input.
Indeed, the two problems are equivalent, as one can show by mimicking
Turing computations over time with successive horizontal rows in a grid
as tape contents, and the vertical sequence as the “computation”. It is
essential in making this work that positions on successive rows can be
compared in the right way, and this is what the grid structure does.
Tilings are easier to visualize than Turing machines, and they have
gained popularity as a way of showing high complexity of logics.

System combination and undecidability / 283
February 2, 2010
Aside on complexity Upon reﬂection, you might ﬁnd the Tiling
Problem complex and second-order, since a tiling is really an inﬁnite
function deﬁned on N×N sending positions to suitable tiles. But this is
only apparent: such a global tiling of the whole grid exists if and only
if each ﬁnite left quadrant can be tiled.238 Given an initial ﬁnite set of
tiles, the latter property is decidable for each ﬁnite quadrant, and hence
the complexity of the Tiling Problem is of the so-called “Π0
1-form”: “all
natural numbers have some decidable property”. This syntactic shape
is just like that for the Non-Halting Problem.
The problem changes dramatically with an added constraint that
some given tile must occur inﬁnitely often on the bottom-most row.
The complexity of this Recurrent Tiling Problem goes up to non-
arithmetically deﬁnable. It is “Σ1
1-complete”: as diﬃcult as checking
the arithmetical properties that hold for some choice of sets of natural
numbers. This is often considered to be as bad as a logic can get.239
24.3
A key to undecidability in ﬁrst-order logic
One application of tiling problems is a celebrated result by Church:
Theorem 68. Satisﬁability for ﬁrst-order logic is undecidable.
Proof. We sketch the essence of the method. Consider a set T of square
tiles {t1, ..., tm}. The Tiling Problem asks us to put one tile on each
point in the grid N×N so that all adjacent edges have the same colour.
Now we reduce this problem eﬀectively to a satisﬁability problem in
ﬁrst-order logic. To achieve this, we take a language with enough vo-
cabulary to express the basic grid structure. That is, we have two binary
relations North xy (“y lies to the north of x”) and East xy (likewise)
to deﬁne the grid, as well as unary predicates Ti for each tile i. You
might think we also need predicates for colours, but we do not. Now
we write a number of ﬁrst-order formulas in this language:
Grid says that North and East are discrete linear orders with a begin-
ning but no end, lying intertwined by the above conﬂuence property.
To make the structure look more like N × N, you can add features like
disjointness of the two relations, etcetera. The ﬁrst-order formula Grid
can be written so that all its models look as follows: they start with a
238The latter implies the former by Koenig’s Lemma, and it takes a little insight.
239Perhaps surprisingly, complexity goes down again when we ask for existence
of a constructive recurrent tiling: a computable map from grid positions to tiles
satisfying the recurrence condition.

February 2, 2010
284 / Modal Logic for Open Minds
copy of N×N, and may have further points at “inﬁnity” beyond this.240
Next, write a ﬁrst-order formula
Tile: each point has exactly one tile, and colours must match.
The latter feature is simple. Given a concrete list of tiles, we know what
it means for them to match horizontally and vertically, and we can just
write a ﬁnite number of conjuncts like
∀x∀y((East xy ∧¬∃z(East xz ∧East zy) ∧Ti) →
S
j matches horizontally with i Tj).
Now the formula ϕT is the conjunction of Grid and Tile. Note that it
can be constructed eﬀectively from the given tiling.
Lemma. ϕT is satisﬁable iﬀthe given set T can tile the N × N-plane.
From right to left this is obvious, since a tiled plane is itself a model
for our formula. Conversely, if ϕT has a model M, we just look at the
initial part of that model that formed a copy of N × N, and use the
interpretation of the predicates Ti to read oﬀthe tiling.
So, ﬁrst-order satisﬁability is undecidable, since it can eﬀectively
encode the Tiling Problem. The same is then true for ﬁrst-order validity.
On the other hand, the completeness theorem for ﬁrst-order logic says
validity is eﬀectively axiomatizable, and that ﬁxes the complexity as
undecidable but “recursively enumerable”.241
24.4
But why are things sometimes decidable?
Syntax restriction and guards Against this background, we can
understand what happened in Chapters 3 and 10. One way of lowering
complexity is by restricting syntax, noting which patterns are crucial
in setting up the above formulas Grid and Tile. As it happens, many
of these formulas are already in the decidable Guarded Fragment of
Chapter 7, but the crucial exception is the quantiﬁer pattern in the con-
ﬂuence property deﬁning the grid. The latter is typically not guarded,
since the branching preﬁx in its quantiﬁcation
y
x
5l
l
l
l
l
l
l
)S
S
S
S
S
S
S
z
240Compare how one describes the natural numbers as a discrete linear order.
Models of its complete ﬁrst-order theory may also contain inﬁnite numbers living
in copies of the integers.
241A worry: can the same method encode Recurrent Tiling? See the Exercises.

System combination and undecidability / 285
February 2, 2010
does not relate all of x, y, z at the same time. It is not even “loosely
guarded” in our weaker sense that also guaranteed decidability, since
there is no atom guarding the pair y, z.
Thus, while the Guarded Fragment arose by working “from below”
keeping distinct features of basic modal syntax intact, we can also ap-
proach it now “from above”, seeing where ﬁrst-order logic has become
overly expressive – and what needs to be dropped.
Trees versus grids But our analysis seems to raise a problem. How
can it be that, despite all this bad news about grids and undecidability,
so many complex-looking ﬁrst-order and modal logics are decidable?
The reason is that, sometimes, the special structures one works with
help, making the complete logic simple and well-behaved. In particular,
many natural logics do not involve a grid-like pattern. Their models
rather behave like trees, perhaps with many successor relations – the
“normal form” for modal logics modulo bisimulation. And in that case,
the counterpart of our tiling troubles is a classical positive result, that
applies not just to ﬁrst-order logic but even to its extension MSOL
with second-order quantiﬁers over subsets of the domain:
Theorem 69 (Rabin’s Theorem). The complete monadic second-order
logic over a countable tree with ﬁnitely many unary successor functions
plus the binary relation of precedence between nodes is decidable.
This key result explains the decidability of many modal logics.242
Here is the crucial contrast between the two types of structure. Trees
are “loose”, with no interaction between successors of a point (“separa-
tion is forever”), whereas grids do: whence their complexity. What you
might just take away from this as a rule of thumb is:
Modal logics of trees are harmless, modal logics of grids are dangerous!
•
O
O
O
O
O
O
O
O
O
ooooooooo
•
?
?
?
?

•
?
?
?
?

•
•
•
•
•
?
?
?
?

•
?
?
?
?

•
?
?
?
?

•
•
•
Tree
Grid
Thus, ﬁnding the complexity of satisﬁability or validity for a com-
bined modal logic may require non-trivial “good sense” concerning its
242Still further sources of decidability arise in logics of geometrical structures like
the reals, that admit of so-called quantiﬁer elimination. In this case, it is strength,
rather than weakness of the theory that explains the decidability.

February 2, 2010
286 / Modal Logic for Open Minds
semantic modeling.243 There are some powerful methods of analysis
and design, but nothing like a complete classiﬁcation.
The contrast is often quite drastic: logics tend to be either decidable
or highly complex. Logics like ﬁrst-order logic are, if not decidable, at
least recursively axiomatizable, but once this property gets lost through
extension, they often tend to be Π1
1-complete. The same is true as a
rule of thumb for many modal logics, as we will see below.
24.5
Combined modal logics
Having understood all this, we now see how modal logics can get com-
plex. Consider the bimodal logic of Section 24.1 with two modalities
[1], [2] satisfying the axiom [1][2]ϕ →[2][1]ϕ plus a universal modality
U. One can mimic the argument for ﬁrst-order logic roughly as follows.
The Tiling Problem is now reduced eﬀectively to a satisﬁability problem
in the characteristic grid models for this modal logic, by constructing
a formula ϕT with the following property:
Lemma. ϕT is satisﬁable in a characteristic Grid model for our modal
logic iﬀthe given set T can tile the N × N-plane.
If we can prove this, then we are done: the satisﬁability problem for
the modal logic will be at least as hard as that of the Tiling Problem.
This is a lower bound, of course, and we may have to also supply an
upper bound. We will make some comments on this aspect later.
Proof. Here is a sketch of the argument for this undecidability result.
The formula ϕT is constructed as follows. We choose proposition letters
pt for each tile t, and write up what a tiling amounts to, using our
modalities. The “adjacent colours” condition is just a relation from
tiles to a ﬁnite set of “ﬁtting tiles”, in each direction. Each point must
then satisfy three properties:
(a) the ﬁnite disjunction T of all tiling propositions pt, while also
forbidding overlap (a Boolean formula),
(b) pt →[North]“disjunction of all pt′ with t′ ﬁtting to the north”,
pt →[East]“disjunction of all pt′ with t′ ﬁtting to the east”,
altogether a ﬁnite conjunction,
(c) ⟨North⟩⊤∧⟨East⟩⊤
Preﬁx a universal modality to make this hold in every point.
It will be clear how to satisfy this formula from a tiling. Conversely, if
this formula holds at some point s in a grid-like model, the denotations
243To show the subtlety, adding a relation “same-level” or “simultaneity” to the
Rabin Tree yields a sort of “grid”, and its logic jumps to Π1
1-complete.

System combination and undecidability / 287
February 2, 2010
of the proposition letters pt help tile the plane N × N. We ﬁrst use s
to read oﬀthe tiling for (0, 0), and then proceed inductively tiling in
triangles, using the grid property of the model to place the next edge
in a way that avoids conﬂicts in the placement pattern:
new tile
old tile
U
U
U
U
U
old tile
This type of argument only gives a lower bound on complexity. Sat-
isﬁability in the logic might still be worse than that for the encoded
tiling problem. Upper bounds may come from known complexities of
classical logics. Many modal logics are complete for some simply deﬁn-
able class of frames, and then complexity is at most that of monadic
second-order logic over that frame class.244
Finally, bimodal logics like the above are not artiﬁcial. Consider a
modal language combining action and knowledge, as in Chapters 15 and
23. One axiom that is used a lot here is the interchange of knowledge
and action, with the following intuitive interpretation:
K[a]ϕ →[a]Kϕ
This says that, if I know that after doing a result ϕ will hold, then
after doing a, I know that ϕ holds. This seemed a harmless assumption
of “perfect observation” and “perfect recall”. But modal logics of “well-
behaved agents” tend to be quite complex: undecidable, or worse. The
reason is the tiling pattern lurking behind them, and its geometrical
richness. Indeed, agents with perfect memory are complex objects of
study, and their complete logic is as rich as some standard mathemat-
ical theories. Similar points hold for logics of spatial patterns, comple-
menting our analysis in Chapter 19: complex two-dimensional spaces
quickly get very complex modal theories.
24.6
A case of balance: epistemic-temporal logics
To conclude, we brieﬂy discuss how the preceding issues play in the con-
crete study of rational agency of Part II and Chapter 23. This technical
section mainly gives pointers to what lies beyond.
244With more expressive power in the language, our method encodes Recurrent
Tiling, making complexity of satisﬁability explode. To achieve this, we must make
sure that the distinguished tile repeats inﬁnitely often on a horizontal line of suc-
cessors from the origin – which can be enforced, for instance, by using an iteration
modality [East∗] from dynamic logic (Chapter 15).

February 2, 2010
288 / Modal Logic for Open Minds
One important insight from the computational literature is that in-
creases in expressive power may lead to big upward jumps in complexity
of logics of knowledge and time. The ﬁrst systematic investigation of
these phenomena was made in Halpern and Vardi (1989). Here is a
Table with a few relevant observations from their work showing where
dangerous thresholds lie for the complexity of validity in this area:
K, P, F
K, CG, Fe
K, CG, Fe, Pe
K, CG, F
All ETL models
decidable
decidable
decidable
RE
Perfect Recall
RE
RE
RE
Π1
1-complete
No Miracles
RE
RE
RE
Π1
1-complete
Here complexities run from decidable through axiomatizable (RE)
to Π1
1-complete.245 As we see, general epistemic-temporal logic over ar-
bitrary ETL-models is simple even with rich vocabularies, but things
change with special assumptions on agents such as Perfect Recall. The
mathematical explanation is, of course, the grid encoding. Modulo some
technicalities, Perfect Recall246 forces epistemic accessibility and future
moves in time to behave like N × N, and given enough resources in the
logic, it can even express “Recurrent Tiling”. This requires a balance
between grid structure and expressive power. In order to really perform
a tiling argument, the language also needs suﬃcient expressive power,
say, a universal quantiﬁer ranging over all points in the grid. This is
precisely what is supplied by the combination of an unbounded future
modality ranging over the forward direction of the tree, plus a common
knowledge modality accessing every reachable point at the same “hori-
zontal” tree level. If one of these resources is not available, say we have
common knowledge but no unbounded future, complexity may drop, as
shown in the table.
We suppress many issues here. van Benthem and Pacuit (2006) ex-
plains in detail how Perfect Recall enforces tiling even though it merely
requires the basic cell structure “downward” in a tree. Also, there is a
subtle diﬀerence between the forest models of Chapter 23, where the
bottom-most level may have many points (say, the worlds in initial epis-
temic models M for update evolution), and trees with just one root.
245There is a huge a priori gap between the complexities RE and Π1
1-complete for
logical systems, but no epistemic-temporal logics that we know of fall “in between”.
This gap that we saw earlier also occurs with extensions of ﬁrst-order logic. Being
able to deﬁne a copy of the natural numbers N acts as a “watershed”. If you cannot,
like ﬁrst-order logic, then complexity stays low – whereas, if you can, like in ﬁrst-
order ﬁxed-point logics or second-order logic, then complexity jumps.
246Similar observations hold for the converse principle of No Miracles.

System combination and undecidability / 289
February 2, 2010
The results of Halpern and Vardi (1989) work immediately in forests.
To encode grid structure in tree models with single roots, and perhaps
ﬁnite horizontal levels, we need to create basic cells in another way,
looking “obliquely” at (part of) the tree as a grid:
s

 A
A
A
t
    ??
?
u
v
w
s

 A
A
A
t
??
?
u
~
w
247
DEL as an ETL-logic Against this background, we can now “place”
DEL and understand its earlier behaviour. Its language is the K, CG, Fe
slot in the earlier Table, over models satisfying both Perfect Recall and
No Miracles. Thus, there is grid structure, but the expressive resources
of the language stay away from exploiting it to the full, since we only
have one-step future operators ⟨!P ⟩or ⟨E, e⟩. If we add unbounded
future operators, however, the same complexity arises as for ETL. In-
deed, Chapter 15 mentioned a result in Miller and Moss (2005) that
the logic of public announcement with common knowledge and Kleene
iteration of assertions !P becomes Π1
1-complete.
Still, these observations leave loopholes for lower complexity – e.g.,
on ﬁnite models and their sub-models reached by announcements. Or,
consider temporal extensions beyond the above Table. Adding one-
step past does not endanger decidability.248 But DEL might even stay
decidable over ETL-models with an unbounded past modality, going
back ﬁnitely many steps to the root. This can deﬁne preconditions in
the earlier conversational protocols.
24.7
Conclusion
Altogether, we have seen that combining modal logics is a delicate
business, and since we must combine components when analyzing real
phenomena, the ways in which we do that are crucial. Even so, it also
has to be said that the high-complexity results mentioned here are often
247Here we reach the bottom corner of a cell by a “horizontal” epistemic move
plus a “vertical” event move, as shown to the right in the picture. To make use
of the latter, the language needs to iterate mixed epistemic and temporal moves
in patterns (∼i; e)∗. The most straightforward formalism for this is a propositional
dynamic logic PDLet with both epistemic accessibility and temporal event moves
as basic transition relations. The validity problem for PDLet is Π1
1-complete.
248A one-step past modality Y (“Yesterday”) also makes a lot of sense in the basic
dynamic logic PAL of Chapter 15: a public announcement !P achieves common
knowledge that P was true just before the event: [!ϕ]CGY ϕ.

February 2, 2010
290 / Modal Logic for Open Minds
just thunder in the distance. Modal logics that are theoretically complex
contain many nice principles that lend themselves to simple study. Why
this is so, is another matter. Maybe we need a more delicate style of
system combination249 – or maybe, a better understanding of which
parts of the total syntax of a system one is really using in practice.
249Cf. Dov Gabbay’s work on “ﬁbering logics”, and the resulting research program.

System combination and undecidability / 291
February 2, 2010
Exercises Chapter 24
1. Use Koenig’s Lemma to prove that the Tiling Problem is equiva-
lent to the existence of tilings for all ﬁnite quadrants of the plane.
2. Provide some details for the crucial steps in the undecidability
proof for ﬁrst-order logic via a tiling argument.
3. A subtlety about complexity:
(a) A worry in the preceding proof might be here that our coding
method could simply encode the inﬁnite repetition required
by Recurrent Tiling, by a simple quantiﬁer combination ∀∃.
Why does this not happen?
(b) But if this danger does not materialize in ﬁrst-order logic,
why can we encode recurrent tiling problems in some modal
logics? Are not they expressively weaker?
4. Prove that the temporal logic of the natural numbers with the
relations of immediate successor and general precedence ≤is de-
cidable using Rabin’s Theorem.
5. Consider memory-impaired epistemic agents who only remember
the last-observed event. Deﬁne their knowledge modality purely
in terms of temporal operators for past events. What does this
mean for the complexity of their epistemic-temporal logics?
6.
(a) Explain how Rabin’s Theorem fails when trees also have a si-
multaneity relation. Connect the key trick to the complexity
proof mentioned in the ﬁnal section for epistemic temporal
logics on trees with complex DEL-style agents.
(b) Given the stated “danger thresholds”, what epistemic tem-
poral logic on tree models might still have low complexity?

February 2, 2010

February 2, 2010
25
Abstract model theory
A logical system yields its secrets through mathematical analysis, and
there is more to what makes modal logic tick than what we have seen
so far. In particular, there is a good deal of model theory about modal
languages, and we saw glimpses in Part II. More can be found in the
Modal Logic textbook by Blackburn, de Rijke & Venema Blackburn
et al. (2001), and the chapters by van Benthem & Blackburn, and es-
pecially, Goranko & Otto in Blackburn et al. (2006). In this chapter, we
give a few basic results in the area, as well as a recent new perspective.
25.1
Bisimulation invariance and modal deﬁnability
We recall a basic fact from Chapter 3.
Proposition 25.1.1 (Bisimulation implies modal equivalence). Let ≡
be a bisimulation between two models M, N with s ≡t. Then, for all
modal formulas ϕ, M, s |= ϕ iﬀN, t |= ϕ.
There is no general converse, though, as we have seen, modal equiva-
lence does imply the existence of a bisimulation for ﬁnite models. Now
we will work toward a diﬀerent type of converse result, analyzing what
does follow from modal equivalence. For a start, here are two relevant
model-theoretic notions.
Deﬁnition 25.1.1 (Elementary extension). Model N is an elementary
extension of M if (a) M is a submodel of N, and (b) for each ﬁrst-order
formula ϕ and tuple of M-objects s, M, s |= ϕ iﬀN, s |= ϕ.
Deﬁnition 25.1.2 (ω-saturated model). A model is ω-saturated if,
for each set Σ of ﬁrst-order formulas (with ﬁnitely many names for
objects in M) with a ﬁnite set x of free variables occurring in them,
the following holds: if each ﬁnite subset of Σ has a satisfying tuple of
objects for x in M, then so does the whole set Σ.
This notion says that the model M is “full” with witnesses to the-
293

February 2, 2010
294 / Modal Logic for Open Minds
ories of objects that are consistent inside M . The natural numbers N
are typically not saturated: consider the inﬁnite set of formulas Σ(x)
saying that x lies at any ﬁnite distance from the origin. To satisfy
this, a linear order needs inﬁnite “supernatural” numbers. By standard
model-theoretic arguments, one has that
Fact. Each model has an ω-saturated elementary extension.
Proof. Consider a model M together with all sets of formulas Σ(xΣ)
that are ﬁnitely satisﬁable inside M. (Here we subscript the variables
to make them unique to each of these sets.) Now take the ﬁrst-order
theory of the expanded model (M, M) where we have added names for
each object in M to the language, and add this to Σ. Each ﬁnite subset
of this new set has a model, since it only involves a ﬁnite number of
sets Σ, and we can just “add” the given witnesses for their diﬀerent
variables xΣ – where the subscripting avoids clashes. Hence, by the
Compactness Theorem for ﬁrst-order logic, the whole set has a model
N. It is easy to see that (a) N is an elementary extension of M, and
(b) N witnesses every set of formulas that is ﬁnitely satisﬁable in M.
Now we repeat this process through countably many stages. The result
is a countable elementary chain of models under inclusion (we trust
the reader understands what this intuitive notion means) whose union
M + is an elementary extension of all its members. Moreover, this union
itself is an ω-saturated model. The reason is the usual one that, if a set
is satisﬁable using only ﬁnitely many objects from the union, it will in
fact use only ﬁnitely many objects from some large enough stage, and
then a witness had been added already at the next stage.250
Now we can prove a converse direction for the case of modal logic.
Recall that, under the Standard Translation, modal formulas were ﬁrst-
order formulas with one free variable.
Proposition 25.1.2 (From modal equivalence to bisimulation). Let
M, s |= ϕ iﬀN, t |= ϕ, for all modal formulas ϕ. Then there exist
Σ-saturated elementary extensions M +, N + of M, N, respectively,
and a bisimulation ≡between M +, N + such that s ≡t.
Proof. By the preceding fact, take two ω-saturated elementary exten-
sions M +, s and N +, t of M, s and N, t, respectively.Note that the
worlds s, t still satisfy the same modal formulas in these extended
models. Now we prove that, in such saturated models, this relation
of modal equivalence is a bisimulation. First, modal equivalence im-
plies the atomic clause of bisimulation, since proposition letters are
250This argument is not fully precise yet, but we leave the last details to the reader.

Abstract model theory / 295
February 2, 2010
included. Next, the key observation lies in the back-and-forth clauses.
If some world u in M + is modally equivalent with v in N +, and RMuw
holds, then the following set of formulas is ﬁnitely satisﬁable in N +:
{Rvx} plus the full modal theory of w in M + for the variable x.
But then, by ω-saturation, some world must exist satisfying all of these
formulas in N +: and that is precisely is the required match for bisim-
ulation. The converse is symmetric.
In particular, ﬁnite models M, N are ω-saturated, and this explains
our earlier observation, since elementary extensions of ﬁnite models
must be those models themselves.
Now comes our main result, stating that modal logic and bisimula-
tions are a perfect match in a ﬁrst-order perspective (cf. Chapter 7):
Theorem 70 (Modal invariance theorem). For formulas ϕ = ϕ(x) in
the ﬁrst-order language of modal models, the following two assertions
are equivalent: (a) ϕ is logically equivalent to a modal formula, (b) ϕ
is invariant for bisimulation.
Proof. From (a) to (b): that all modal formulas are invariant was shown
before. Conversely, suppose that ϕ = ϕ(x) is an invariant ﬁrst-order
formula. Let mod(ϕ) be the set of all modal ﬁrst-order consequences of
ϕ. We prove the following implication:
Claim. mod(ϕ) |= ϕ
From this, by an easy application of the Compactness Theorem, ϕ
will follow from some ﬁnite conjunction of its modal consequences –
and hence it will be equivalent to the latter.
It remains to prove the Claim. Let M, s be any model for mod(ϕ).
Take the complete set of all modal formulas true at s in M and add
{ϕ}. This set is easily seen to be ﬁnitely satisﬁable, using the fact
that mod(ϕ) holds at M, s. By Compactness, it then has a model N, t
modally equivalent to M, s. But then, the preceding observations give
us elementary extensions M +, N + of M, s and N, t, respectively, and
a bisimulation ≡between M +, N + with s ≡t:
M, s
modal equivalence
N, t
elem. ext.
elem. ext.
M +, s
bisimulation
N +, t
Now we can clinch the proof by “diagram chasing”. For a start, by our
construction we had that N, t |= ϕ, and hence N +, t |= ϕ (by elemen-

February 2, 2010
296 / Modal Logic for Open Minds
tary extension), whence M +, s |= ϕ (by bisimulation invariance), and
so M, s |= ϕ (passing to an elementary submodel).
This argument extends to many modal-like languages, modulating
the link between zigzag clauses and restricted quantiﬁer patterns.
25.2
Two excursions
Complexity of fragments The above result captures modal logic
inside ﬁrst-order logic by means of simple invariance. But it does so “up
to logical deﬁnability”. While it is easy to see if a ﬁrst-order formula has
explicit modal syntax, it is much harder to see whether it is equivalent
to such a formula. Indeed, in the latter sense, natural fragments of ﬁrst-
order logic may be undecidable. The modal formulas are a case in point,
because of the following eﬀective reduction of the undecidable validity
problem of ﬁrst-order logic. Let α = α(x) be any ﬁrst-order formula,
and P (unary), R (binary) new predicate letters outside of α.
Fact. The following two assertions are equivalent:
(a) α is universally valid,
(b) ∃yPy∧(¬α)ρ is bisimulation invariant, where (¬α)ρ is the formula
¬α syntactically relativized to the subdomain λz · (Rxz ∨x = z).
Proof. If α is universally valid, then ∃yPy ∧(¬α)ρ is equivalent to a
contradiction, and the latter is trivially bisimulation invariant. Con-
versely, if α is not universally valid, then ¬α(x) is true in some model
M at some world s. Now let R be the universal relation in M – and
then, add one unrelated point t where P holds to obtain a model N:
'
&
$
%
r
s
R
r t
P
 
 
  M
N
In the new model N, the point s satisﬁes ∃yPy ∧(¬α)ρ. But this
formula fails in the R-closed sub-model of N generated by s, thus
clearly violating invariance for bisimulation.
From invariance of formulas to safety of programs A few points
from Chapter 14 put the preceding in perspective. The Modal Invari-
ance Theorem also extends to other modal constructions. Consider the
programs of dynamic logic (Chapter 14) that denoted binary transition
relations between states in a model. These involved a special property:

Abstract model theory / 297
February 2, 2010
Deﬁnition 25.2.1 (Safety for bisimulation). An n-ary operation
O(R1, . . . , Rn) on programs is safe for bisimulation if every bisim-
ulation ≡between two models for their basic transition relations
R1, . . . , Rn is also a bisimulation for the relation O(R1, . . . , Rn).
Thus, safe operations on programs or actions “stay inside” the in-
variance level of basic modal logic. The three regular program opera-
tions ; ∪∗of PDL were safe for bisimulation, and so was the following
operation, related to the test operation of dynamic logic:
∼(R) = { (x, y) | x = y and for no z: xRz }
strong test negation
A non-regular program operation outside of standard PDL that
lacked safety was Boolean intersection of relations. These observations
suggest a more general characterization. Recall that program opera-
tions could be deﬁned in Relational Algebra, and hence, at least the
ﬁrst-order ones among these were deﬁnable in standard ﬁrst-order logic:
Theorem 71 (Modal safety theorem). A ﬁrst-order relational opera-
tion O(R1, . . . , Rn) is safe for bisimulation iﬀit can be deﬁned using
(a) atomic relations Raxy and atomic tests (q)? for propositional atoms
q, plus (b) the three relational operations ; , ∼and ∪.
The proof of this result involves somewhat laborious “tree surgery”,
but what it says is clear. The safe ﬁrst-order operations are precisely
three dynamic counterparts of the classical Booleans ∧, ¬ and ∨.
25.3
A modal Lindstr¨om theorem
Here is another, still more abstract way of analyzing a logic. It was initi-
ated in the 1960s by the “Lindstr¨om Theorem” that captured ﬁrst-order
logic (FOL) as the strongest extension of FOL satisfying abstract ver-
sions of the Compactness and L¨owenheim-Skolem properties. Another
important version combines a model-existence property (Compactness)
with one of semantic invariance (often called the “Karp Property”):
Theorem 72. An abstract logic L extending FOL equals FOL iﬀ
(a) all formulas of L are invariant for potential isomorphism,251
(b) L has the Compactness property.
Note that the invariance (a) is not part of the general deﬁnition of
abstract logics: these just satisfy invariance for isomorphism.252 The
same style of thinking applies to extended abstract logics.
251For the notion of “potential isomorphism”, see Chapter 7 and the Appendix.
252The version with Compactness and L¨owenheim-Skolem follows from the one
with isomorphism invariance, using the fact that potential isomorphisms between
countable models are true isomorphisms.

February 2, 2010
298 / Modal Logic for Open Minds
We will not go into the proof of this result, except to note that it
crucially involves the expressive power of a ﬁrst-order language. The
latter can typically encode how successive ﬁnite partial isomorphisms
behave that satisfy the basic back-and-forth properties in the deﬁnition
of a potential isomorphism.253 And perhaps not surprisingly, the ﬁrst-
order ∀∃quantiﬁer pattern that is needed here turns out to be just the
conﬂuence diagram behind the grid properties of Chapter 24.
But now, when we want to do a similar analysis for modal logic, we
have a problem. Encoding the notion of bisimulation would also involve
such a grid pattern.254 As we have seen repeatedly, this is about the
anti-thesis of modal expressive power, and so we must follow another
road, much closer to basics of the modal language.
To be wholly precise, we should ﬁrst deﬁne an abstract modal logic
L like in abstract model theory, with truth referring to pointed models
M, w. But we trust that the reader will understand what follows with-
out being exposed to these somewhat boring details. Of all such core
conditions on what we call a “logic”, we do high-light one:
Deﬁnition 25.3.1 (Relativization). A logic L has relativization if, for
any L-formula ϕ and new unary proposition letter p, there is an L-
formula Rel(ϕ, p) true at a model M, w iﬀϕ is true at M|p, w: the
submodel of M with just the points in M satisfying p for its domain.
Most good logics satisfy Relativization (compare PAL and DEL in
Chapters 15, 23), and it is also crucial to the above proof of the Lind-
str¨om Theorem for ﬁrst-order logic. Now we state our result, a so-called
“maximality characterization” of the basic modal language:
Theorem 73. An abstract modal logic L extending the basic modal
language equals the latter iﬀL satisﬁes (a) Invariance for Bisimulation,
and (b) Compactness.
Proof. The direction from left to right is well-known to you. Next,
assume that L has the stated two properties, and consider any formula
ϕ in it. We start by proving a striking semantic property for L that the
basic modal logic had, as we have seen in Parts I and II:
Finite Depth Property For any formula ϕ, there is a natural number k
such that, for all models, M, s |= ϕ iﬀM|k, s |= ϕ, where M|k is the
submodel of M with its domain restricted to points reachable from s
in k or fewer successive R-steps.
253See van Benthem et al. (2007) for a modern exposition.
254This is a bit weird: a strong bi-modal logic of bisimulation is undecidable!

Abstract model theory / 299
February 2, 2010
Lemma. In a compact abstract modal logic L that is invariant for
bisimulation, any formula has the Finite Depth Property.
Proof. Let ϕ be any formula in L. Suppose, for the sake of reductio ad
absurdum, that it lacks the Finite Depth Property. Then for any natural
number k, there exists a model Mk, s and a cut-oﬀversion Mk|k, s that
disagree on the truth value of ϕ. Without loss of generality, assume that
the following happens for arbitrarily large k:
Mk|k, s |= ϕ while Mk, s |= ¬ϕ.255
Now, take a new proposition letter p, and consider the following inﬁnite
set Σ of L-formulas:
¬ϕ, Rel(ϕ, p), {
2np | n is a natural number }.
Given our assumptions, this set is clearly ﬁnitely satisﬁable: we
choose k suﬃciently large, and make p true in the k-reachable part
of one of the above sequence of models. But then, by Compactness
for our abstract modal logic L, there must be a model N, v for the
whole set Σ at once. But this leads to a contradiction. We focus on
the generated sub-model Nv, v consisting of v and all points ﬁnitely
reachable from it. Clearly, the identity relation is a bisimulation be-
tween any pointed model and its unique generated sub-model. Hence
by the invariance for bisimulation of our logic, formulas of L have the
same truth value in any pointed model and its generated sub-model.
Now, given the ﬁrst formula in Σ, ¬ϕ holds in N, v and hence also in
Nv, v (i). On the other hand, since N, v |= Rel(ϕ, p), also N|p, v |= ϕ.
But by the truth of the inﬁnite third set of formulas, p holds in the
whole generated sub-model Nv, v. Therefore, it is easy to see that the
generated submodel of N|p, v is also just Nv, v, and so we have that ϕ
holds in Nv, v (ii). This is a contradiction.
Now we move on to a crucial next property:
Lemma. If L-formula ϕ has the Finite Depth Property for distance k,
then ϕ is preserved under modal equivalence up to operator depth k.
Proof. Let two models M, w, N, v agree on all modal formulas up
to depth k, while M, w |= ϕ. By a standard technique from Chap-
ter 3, these models are bisimilar to their tree unraveling: Tree(M, w),
Tree(N, v). Now, since the latter tree models have the same modal
theory up to depth k in their roots, we can deﬁne an obvious “cut-oﬀ”
bisimulation between them up to the ﬁrst k tree levels starting from
255Here we use the fact that abstract modal logics are closed under negations.

February 2, 2010
300 / Modal Logic for Open Minds
the root. More precisely, the relevant relation is, for nodes lying at the
same distance i from the respective roots w, v:
satisfying the same modal formulas up to depth k −i.
It is easy to see that this relation between nodes in the two trees satisﬁes
the back-and-forth clauses of bisimulation up to at most k times. And
what is more, it is a full bisimulation between the “cut-oﬀmodels”
Tree(M, w)|k and Tree(N, v)|k. By the Finite Depth Property plus
invariance for bisimulation, ϕ then holds, successively, in
(M, w), Tree(M, w), (Tree(M, w)|k, w), (Tree(N, v)|k, v) and (N, v).
The proof of the theorem is clinched by a well-known observation:
Lemma. If an L-formula ϕ is preserved under modal equivalence up
to some ﬁnite operator depth k, it is deﬁnable by a modal formula of
operator depth k.
Proof. Here we ﬁrst observe the fact that formulas of the logic L depend
on only ﬁnitely many proposition letters.256 Next, we use that the basic
modal language is logically ﬁnite: on ﬁnitely many proposition letters,
it has only ﬁnitely many non-equivalent formulas.257 Finally, it is easy
to see from our closure assumption that
Any class K of pointed models that is closed under modal k-equivalence
is deﬁned by the disjunction of all ﬁnite complete modal depth-k the-
ories satisﬁed in K.
This disjunction is a modal formula deﬁning our L-formula ϕ.
25.4
Further perspectives and omitted topics
The modal Lindstr¨om theorem is the beginning of a broader set of
questions. Traditional abstract model theory has looked at extensions
of ﬁrst-order logic. In line with the “small is beautiful” slogan of modal
logic, however, it is of equal interest to analyze weaker ﬁrst-order lan-
guages in this way. This area includes the study of many extended
modal logics from Part II, and it has revealed lots of surprises: see
the dissertation Model Theory of Extended Modal Languages of Balder
ten Cate (ten Cate, 2005) or the cited paper on “weak abstract model
theory” by van Benthem, ten Cate & V¨a¨an¨anen (van Benthem et al.,
256We can either stipulate that any L-formula ϕ depends on only ﬁnitely many
proposition letters, or use Compactness to derive it from “renaming properties”.
257We used this fact when proving adequacy of bisimulation games in Chapter 3.

Abstract model theory / 301
February 2, 2010
2007). One major challenge right now is generalizing this style of Lind-
str¨om analysis to the modal ﬁxed-point logics of Chapter 22. It seems
we still lack the right basic properties here.258
Frame theory While all this is about theory of models, there is also a
ﬂourishing literature on modal logics as describing frames in the second-
order sense of Chapter 9, where a modal formula is true if it holds under
all valuations for its proposition letters. Modal correspondence theory
has many results not mentioned in these lectures. Just as a teaser, we
recall one fundamental result stated in Chapter 9, due to Goldblatt &
Thomason, which explains modal deﬁnability in terms of a few elegant
model-theoretic closure properties:
Theorem 74. A ﬁrst-order deﬁnable class of frames is deﬁned by a
set of modal formulas iﬀit is closed under the formation of (a) gener-
ated subframes, (b) disjoint unions, (c) p-morphic images, and (d) its
complement is closed under ultraﬁlter extensions.
If you want to know what these frame-theoretic notions mean, and
how a characterization result like this might be proved, please refer to
the Modal Logic book by Blackburn, de Rijke & Venema cited through-
out these lectures (Blackburn et al., 2001), or the chapters by Goranko
& Otto and by Venema in the Handbook of Modal Logic: Blackburn
et al. (2006). There are algebraic proofs linking modal frames with
structures in Universal Algebra, but also model-theoretic ones more in
the spirit of this chapter, employing saturated models.
Modal algebra Perhaps the most glaring omission in these lectures are
the important algebraic methods in contemporary modal logic. While I
would typically teach these in an advanced course, including the rep-
resentation theory of modal algebras and their duality with so-called
“general frames”, I have not included them in this book, since most of
my topics do not require them.259
258One can step up the abstraction level even further, and make the choice of the
invariance relations like bisimulation itself a “parameter”: for results along those
lines, cf. van Benthem and Bonnay (2008).
259But to my many friends working with algebraic methods, I say: the omission
weighs heavily on my conscience, and I may change my mind in a next edition.

February 2, 2010
302 / Modal Logic for Open Minds
Exercises Chapter 25
1. State a Modal Invariance Theorem for the modal language with
an added universal modality. What needs to change in the proof
that we have given for the basic language?
2. Invariance and interpolation:
(a) Prove the following fact: If ϕ, ψ are ﬁrst-order formulas, and
α is a modal formula such that ϕ |= α |= ψ (such a formula
a is called a “modal interpolant”), then “ ϕ entails ψ along
bisimulation”, that is, whenever M, s |= ϕ, and there is a
bisimulation between M, s and N, t, then N, t |= ψ.
(b) Formulate a converse of this result, as a “Modal Interpo-
lation Theorem”. Show that this result implies the Modal
Invariance Theorem.
3. There is no modal Lindstr¨om theorem when we replace invariance
for bisimulation by the L¨owenheim-Skolem property. Why not?
4. Derive the Modal Invariance Theorem from the Modal Lindstr¨om
Theorem by an argument about abstract logics.
5. Try to extend the proof of the Modal Lindstr¨om Theorem to the
modal language with an added universal modality. Which step
typically breaks down?

February 2, 2010
26
Deductive incompleteness
26.1
Modal deduction and proof theory
I admitted at the start of these lectures that I have no great aﬃnity with
drill in formal modal deduction. Interesting formal proofs are scarce in
logic (if you except the Russell Paradox), and also in modal logic – even
though we have seen a few good examples in provability logic (Chapter
21). So why drill students in things that we hardly touch ourselves?
Also, it has often been observed that there is no well-developed subject
of modal proof theory, though the Handbook of Modal Logic does have a
chapter where you can see much of what exists. Indeed, many results in
this area seem routine colonization from standard proof theory: things
would get livelier if there were something proof-theoretically intrinsic to
the restricted notations of the modal language.260 261 But having said
this, modal logic has turned out to be an interesting area of tension
between what seem natural semantics and “matching” proof systems
that do not quite match up in the ﬁnal analysis. We discuss a few of
these incompleteness phenomena in this ﬁnal chapter.
26.2
Another balance: semantics and deductive power
First-order logic may be undecidable, but it does have a complete-
ness theorem telling us that it can capture all its valid reasoning in a
perspicuous proof system. This feature is not automatic. Second-order
logic, too, seems semantically natural, but it has no complete proof sys-
tem, and its complexity is beyond the wildest imagination. But these
well-known observations are just the start of a thought process. For
260One intriguing sui generis perspective is in the dissertation Coming to Terms
with Modal Logic (Borghuis, 1994) where modal boxes and diamonds are a sort of
“ﬁle management system” for deductions in type theory.
261Interesting proof theory occurs also in hybrid logics, with Cut Elimination the-
orems linked to the choice of expressively well-balanced fragments.
303

February 2, 2010
304 / Modal Logic for Open Minds
instance, with second-order logic, the mismatch between validity and
deduction has raised the issue whether the usual “standard models” (a
popular question-begging phrase) of second-order logic are the really
natural ones. Famously, Leon Henkin introduced his “general models”
where second-order quantiﬁers range over restricted families of predi-
cates, extending the class of models far beyond the original one, restor-
ing axiomatizability. While Henkin’s models are generally seen as a
mere technical tool or even trick – quite unjustly – they do point at a
ubiquitous and serious phenomenon: rethinking existing semantics for
proof-theoretic reasons. Let us look at modal logic in the same vein.
26.3
Incompleteness in propositional modal logic
Originally, it seemed as if completeness was the norm in modal logic
when relational models arrived in force around 1960. This even worked
in two ways. Existing syntactic proof calculi for modal logics like K, S4
or S5 turned out to have complete semantics, often via frame classes
with properties that corresponded to these axioms in the technical sense
of Chapter 9. And also conversely, when modal logicians looked at natu-
ral classes of models, sometimes even single ones, they found complete
axiomatic logics.262 Against this background, the following result by
Steve Thomason in 1973 came as a complete surprise:
Theorem 75. The tense logic axiomatized by the two axioms (a)
H(Hϕ →ϕ) →Hϕ (L¨o’s Axiom for the past) and (b) GFϕ →FGϕ
(McKinsey Axiom for the future) is not complete with respect to any
class of relational frames.263
Proof. Suppose there is a class of frames K whose modal theory is this
logic. This means that both axioms (a) and (b) hold in each frame in K.
And we know what they say, from Chapters 9, 21. The L¨ob Axiom says
that the relation is well-founded: there are no downward inﬁnite chains
– while it is also transitive.264 But on transitive frames, the McKinsey
Axiom said that there exist end-points: ∀x∃y(Rxy∧∀z(Ryz →z = y)).
In particular, these end-points have successors, too, and so they must
be reﬂexive. But now note that the combination of these two properties
is inconsistent: any reﬂexive point is an inﬁnite sequence sRsRsR · · ·
of the sort forbidden by well-foundedness. Thus, the class K is empty.
262The latter success is limited by a cardinality count: there are 2ℵ0 possible modal
logics, but many more model classes. Still, we have seen that the modal logic of any
ﬁrst-order deﬁnable class of frames is axiomatizable.
263We stated this result brieﬂy in Chapter 18, but we provide more details now.
264To be precise, if the converse of a relation is transitive, so is that relation itself.

Deductive incompleteness / 305
February 2, 2010
But the modal theory of the empty class of frames is the inconsistent
set of all formulas, and this cannot be. For the logic that we just deﬁned
is consistent! We can see this as follows. Consider the frame F of the
natural numbers (N, <) but give it only the special family of the ﬁnite
and coﬁnite subsets (these have a ﬁnite complement). It is easy to
see that, in this structure, all principles of the form (a) and (b) are
true, no matter how we evaluate proposition letters in ﬁnite or coﬁnite
sets.265 The L¨ob Axiom holds because the frame is in fact transitive
and well-founded. Of course, (N, <) has no reﬂexive end-points, but
the crux is that, with formulas denoting ﬁnite and coﬁnite sets only,
the McKinsey Axiom must hold: its antecedent says that the formula
ϕ denotes a coﬁnite set, and this deﬁnitely has a future stage where it
will contain all greater natural numbers.
So what does this mean? Thomason went on to show that modal
frame consequence ϕ |= ψ deﬁned as “truth of ϕ in any frame F implies
truth of ψ in F ” has the same complexity as valid consequence in all
of second-order logic. The second-order nature of frame truth reared
its head. There is no way that simple modal deduction can capture
this, and the success of modal logic so far rested perhaps on thin ice.
Now there is much more to be said here. For instance, the Sahlqvist
Theorem of Chapter 9 also has a proof-theoretic version saying that
modal logics with axioms of the special shape that we described are
frame-complete. The ice is quite thick in some places.
What we are really seeing is a mismatch between two styles of de-
duction. After all, the argument we just gave for the semantic frame
inconsistency of the Thomason logic is clearly a formal proof. But the
issue is where it lives. If you spell out details, the proof uses obvious
steps in ﬁrst-order logic, but also, in its assertion about the McKinsey
Axiom and atomicity on transitive frames, an appeal to a second-order
Axiom of Choice. So, is the mismatch just that some second-order de-
ductions cannot be mimicked in modal deduction? (van Benthem, 1979)
showed that things are much worse. It presents a modal logic (no tense
logic needed) that has a modal frame consequence obtainable by a
trivial ﬁrst-order proof, and yet there is no modal deduction available
yielding this modal consequence.
This result still leaves many roads open. One is to employ stronger
proof systems for the basic modal language, adding some ﬁrst-order,
and perhaps even second-order features. Another road increases the
265It is also easy to show that, based on such special valuations, all modal formulas,
atomic or complex, come to denote ﬁnite or coﬁnite sets.

February 2, 2010
306 / Modal Logic for Open Minds
expressive power of the modal language, thereby endowing its exist-
ing proof principles with greater strength, and trying again. This has
removed some incompleteness phenomena – though by Thomason’s re-
sult, we know that there is no cure that restores complete harmony
between frame semantics and eﬀective modal deduction.
A ﬁnal and diﬀerent road might lead toward rethinking the very
semantics of modal logic. In particular, we can replace frames by general
frames in Henkin’s sense, that can impose restrictions on the available
sets that can be denotations of modal formulas. The above structure
(N, <) with just the ﬁnite and coﬁnite sets was in fact an appealing
example. This move leads us to algebraic semantics for modal logic, a
topic beyond these lectures – but see the chapters by Yde Venema and
by Marcus Kracht in the Handbook of Modal Logic. And it will make
the minimal modal proof calculus complete again.
While the incompleteness phenomena of propositional modal logic
seem to have largely lost their sting, the way former dreaded epidemics
turn into household diseases like a common cold, such phenomena con-
tinue to disturb the area of modal predicate logic (Chapter 11).
26.4
Incompleteness in modal predicate logic
In the 1960s, both Lindstroem and Scott observed that, on natural
semantic structures, the success of completeness theorems in proposi-
tional tense logic may fail to extend to their predicate-logical compan-
ions. For instance, the propositional tense logic of the natural numbers
(cf. Chapter 18) had been axiomatized by Segerberg, but the complete
tense logic over even constant domains of objects on the natural num-
bers is not axiomatizable at all.
Unreliable companions Even so, starting with Kripke in 1959, com-
pleteness theorems had been found for many predicate-logical versions
of existing modal logics such as K, S4 and S5. These seemed so straight-
forward that the theory of modal predicate logic might just be an un-
eventful lift from the propositional case. Indeed, the following conjec-
ture appeared in a 1984 textbook (Hughes and Cresswell, 1984)):
Whenever a modal propositional logic is complete with respect to some
class of frames, its modal predicate-logical version is complete with
respect to this same frame class allowing arbitrary cumulative domains.
Here the “companion” is a logic with the former propositional
schemata now allowing all substitution instances in the modal predicate-
logical language, plus all the usual principles of ﬁrst-order logic.266
266This innocuous-looking merge is not harmless: using old schemata with substi-

Deductive incompleteness / 307
February 2, 2010
This statement was refuted independently by Ono and Shehtman &
Skvortsov in the 1980s, showing how natural complete propositional
modal logics may fail to have frame-complete predicate-logical com-
panions. An example is the modal predicate logical companion for the
propositional logic S4.1 of transitive atomic orders. In the 1990s, Ghi-
lardi267 analyzed the general situation, and proved results like this:
Theorem 76. Among the propositional extensions of S4, the modal
logics L whose predicate companion LQ is frame-complete have either
L ⊇S5 or L ⊆S4.3.
Here S4.z is the complete modal logic of linear orders. As we just
said, a natural modal logic like S4.1, the complete logic of atomic re-
ﬂexive transitive orders in which each point sees an end-point, neither
contains S5 nor is contained in S4.3, and hence its predicate companion
S4.1Q is deeply incomplete. Thus, the “obvious” standard semantics
for modal predicate logic seems to have mathematical problems – an
echo of Quine’s original problems with the framework.
“Unrealizable” frame correspondences Incompleteness abounds
with modal predicate-logical axioms beyond the minimal companion.
As we noted in Chapter 11, such axioms impose semantic constraints
on models that can be determined by correspondence arguments, as in
propositional modal logic.
Example (Frame correspondence in modal predicate logic). Corre-
spondences now constrain world ordering and object occurrence to-
gether. The following list gives examples:
∃x 2P x →
2∃xP x
∀w : ∀v(Rwv →∀x(Exw →Exv))
Domain Cumulation
3∃xP x →∃x 3P x
∀w : ∀v(Rwv →∀x(Exv →Exw))
Anti-Cumulation
We also observed that behind these observations, there is a gener-
alized Sahlqvist theorem. But here was a principle beyond the method
of minimal substitution analysis of Chapter 9:
Theorem 77.
2∃xPx →∃x2Px has no ﬁrst-order correspondent.
We did note a positive correspondence fact on special frames:
Fact. On frames satisfying Domain Cumulation, the modal predicate-
logical axiom
2∃xPx →∃x2Px is ﬁrst-order deﬁnable.
Proof. The equivalent is the conjunction of two ﬁrst-order properties:
(a) domain anti-cumulation, (b) “partial function”: each world whose
domain has more than one object has at most one world successor.
tutions in the much richer combined language can be very strong.
267A co-author on modal predicate logic in the Handbook of Modal Logic.

February 2, 2010
308 / Modal Logic for Open Minds
First, if these two ﬁrst-order properties hold, then so does
2∃xPx →
∃x2Px. If a world has just one object d, with domain cumulation and
anti-cumulation, all successors have just that d, and the antecedent
implies that this object has property P throughout. And if a world
has at most one accessible successor, then truth of
2∃xPx implies that
of ∃x2Px, either trivially, or because some object d in the unique
successor world satisﬁes P, and that same d will satisfy
2Px in w.
Next, we show that frame truth of
2∃xPx →∃x2Px implies the
two stated ﬁrst-order conditions. First consider domain anti-cumulation
(a). Suppose that wRv where v has an object d not occurring in w. We
can use any such situation to refute our modal axiom:
In world v, make the predicate P true for d only, and in all
other successor worlds of w, make P true for all the objects.
By domain inclusion, the stipulation about world v alone refutes
the consequent ∃x2Px at w, while the two stipulations together make
2∃xPx true at w. Next, take condition (b). Let world w have at least
two objects 1, 2 and more than one successor, say v1, v2 and perhaps
others. Now deﬁne a valuation for the predicate P as follows:
P holds of 1 and of no other object in v1, P holds of 2 and no other
object in v2, and P holds of all objects in all other successor worlds.
This makes
2∃xPx true at w while no object at w has P in all
successor worlds. Contradiction: w has at most one successor.
The preceding proof, though elementary, cannot work in the sub-
stitution style of Chapter 9. To see this, consider the following model
where
2∃xPx →∃x2Px fails at w:
v1 {1, 2}, P1
w {1, 2}
?






?
?
?
?
?
?
?
v2 {1, 2}, P2
Given the symmetry between v1, v2, there is no uniform deﬁnition for
the predicate P purely within the language Lcorr that witnesses this
failure. Moreover, since a version of the semantic property (b) can be
expressed in modal predicate logic (we forego details), we can turn this
into a case of non-derivability in the modal base language.

Deductive incompleteness / 309
February 2, 2010
Natural examples of incompleteness occur in intuitionistic predicate
logic (cf. Chapter 20) when analyzing the frame content of intuitionis-
tically invalid classical principles such as “Plato’s Law”:
∃x(∃yPy →Px)
268
26.5
An alternative: semantic re-analysis
Again, one can respond to this situation in many ways, proof-theoretic
or more semantic. One interesting proposed remedy has been to go back
to the drawing board, and rethink the semantics of modal predicate
logic. In particular, we can now change to functional models
M = (W, F , V )
with W a set of individual object domains, and F a family of maps
between such domains, including all identity maps and closed under
compositions,269 while V is a valuation as before. There is no explicit
accessibility relation, but the maps in F encode one in a sense. The
truth deﬁnition now inductively describes the notion
M, w, a |= ϕ
of a formula ϕ being true at a world w in a model M under assignment
a of objects to variables. Here is the key new clause:
M, w, a |=
2ϕ iﬀfor all maps f ∈F with domain Dw and range Dv,
M, v, f ◦a |= ϕ – with f ◦a the composition of map f with map a.
To see the power of this semantics compared with standard possible-
worlds models, consider just a simple one-world reﬂexive frame:
Example (Divergences from modal propositional logic.). In standard
semantics, this validates propositional p →
2p, and no matter which
domain of objects we attach, we also get
ϕ(x) →
2ϕ(x)
But in the new semantics, one-world frames can refute the latter prin-
ciple!270 Take a model M with one world w carrying an object domain
{1, 2}, and a function set F = {f1, f2} with f1 the identity map, and
f2 the constant map sending both objects to 2. We have P(1) true at
w in M, but not P(f1(1)).
268On intuitionistic frames, Plato’s Law deﬁnes the conjunction of a surprising
bunch of properties: (a) There is a constant domain D for each world, (b) Accessi-
bility is a linear order if that domain D has at least two objects, (c) If D is inﬁnite,
then the accessibility relation is also well-founded.
269These two conditions ensure that the logic validates a least modal S4.
270This shows again how old schemata in new languages can be extremely strong.

February 2, 2010
310 / Modal Logic for Open Minds
Interestingly, this technical semantics is closer to Lewis’ “counterpart
semantics” for modal predication across worlds from the 1960s, which
at the time had a purely philosophical motivation. Further remodeling
approaches to modal predicate logic are the algebraic semantics of Ono
(1999), and the general frames of Goldblatt and Mares (2006).
26.6
Modern perspectives
We repeat a point from Chapter 11. The technical reason for the com-
plications with modal predicate logic is that this system is not straight-
forward at all – though it seems just a simple merge of two notations.
We are merging two diﬀerent logics, each with its own semantics: the
modal propositional realm of worlds and accessibility, and ﬁrst-order
predicate logic over domains of individual objects. Now, as we will see
soon in Chapter 27, ﬁrst-order logic itself is a modal logic over spaces
of variable assignments, with accessibility relations Rx corresponding
to moving from one assignment to another by changing the value for
the variable x. Modal predicate logic is then a product of two modal
logics, and we have seen in Chapter 24 that product logics can be very
unlike their components.271
Finally we mention that natural language semantics involves much
more complex modal logics, adding the operators
2,
3 to second-order
logic or even type theory. This raises many further issues about the
nature of objects and properties – but for further details, we refer to
the chapter by Reinhard Muskens in the Handbook of Modal Logic.
271In particular, modal predicate logic requires a merge between two model-
theoretic invariances: bisimulation for worlds, and potential isomorphism, or some
Ehrenfeucht-game version thereof, for the objects.

February 2, 2010
Part V
Coda

February 2, 2010

/ 313
February 2, 2010
This ﬁnal chapter is mainly an after-thought, to show you that noth-
ing is quite what it seems in logic. In these lectures, we have mostly
presented modal logic as a sort of ﬁne-structure laboratory for clas-
sical systems, in particular, ﬁrst-order logic. And the main tool here
was the “standard translation” of Chapter 7, making modal logic a
weak “fragment” of ﬁrst-order logic. But things are more delicate. The
analogies between modal and classical logic in terms of basic invari-
ances and meta-theory are so striking that they continue to invite new
research.272 The chapter “Modal Logic, A Semantic Perspective” in the
Handbook of Modal Logic (Blackburn et al., 2006) surveys some kinds of
explanation, while recent studies have found new connections between
bisimulation and the classical invariance relation of potential isomor-
phism (ﬁrst introduced in Chapter 7) at the level of abstract model
theory. The upshot of all this is that ﬁrst-order logic and modal logic
are close in many respects. We are now going to demonstrate this very
concretely, by turning the tables, and showing how ﬁrst-order logic itself
can be viewed as a special case of modal logic. In taking that unusual
perspective, we also learn something new about ﬁrst-order logic, viz. the
fact that its undecidability is largely the eﬀect of imposing a particular
sort of models on top of a decidable core mechanism of interpretation.
This shows that modal techniques can be used to “deconstruct” clas-
sical systems into what one might call “core” versus “wrappings”. We
will develop some further consequences of this as we go.
This chapter may shake up cherished convictions, so take a breath!
272Of course, modal logic also improves on ﬁrst-order logic: its complexity is de-
cidable, it has stronger interpolation theorems, etcetera.

February 2, 2010

February 2, 2010
27
Modal foundations for classical logic
27.1
The modal core of predicate logic
The standard semantics for predicate logic has this key clause
M, α |= ∃xϕ iﬀfor some d ∈|M|: M, αx
d |= ϕ
The key is the use of variable assignments α that decompose quanti-
ﬁed statements ∃xϕ with possibly free variables in their matrix ϕ. But
looking more closely at this deﬁnition, a compositional semantics for
ﬁrst-order quantiﬁcation really only needs this abstract core pattern:
M, α |= ∃xϕ iﬀfor some β : Rxαβ and M, β |= ϕ
Here, assignments α, β become abstract states, and the concrete re-
lation α =x β between α and αx
d becomes just any binary relation
Rx. This involves poly-modal models M = (S, {Rx}x∈VAR, I) with S
a set of states, Rx a binary update relation for each variable x, and
I an interpretation function giving a truth value to atomic formulas
Px, Rxy, . . . in each state α. Then, existential quantiﬁers ∃x become
unary existential modalities ⟨x⟩. This modal semantics has an inde-
pendent appeal: ﬁrst-order evaluation is an informational process that
changes computational states. The ﬁrst-order language then becomes
a dynamic logic, with a special choice of atoms and without explicit
compound programs – as in the “dynamic semantics” of Chapter 14.
Looking in the opposite direction, from this modal point of view,
standard semantics arises by insisting on three additional mathematical
choices, not enforced by the core semantics:
(a) States are identiﬁed with variable assignments,
(b) update between states must use the speciﬁc relation =x, and
(c) all assignments in the space DVAR are available to evaluation.
The former are issues of implementation, the latter a strong existence
315

February 2, 2010
316 / Modal Logic for Open Minds
assumption.273 Henceforth, we regard these choices as negotiable. This
view lends further support to the abstract modal approach. E.g., it is
often felt that the usual set-theoretic tricks making predicates sets of
tuples should be orthogonal to the nature of logical validity.
Our modal semantics validates the minimal poly-modal logic, whose
principles consist of (reading a universal quantiﬁer ∀x on the analogy
of a modal box [x]):
. all classical Boolean propositional laws
. Modal Distribution: ∀x(ϕ →ψ) →(∀xϕ →∀xψ)
. Modal Necessitation: if ⊢ϕ, then ⊢∀xϕ
. a deﬁnition of ∃xϕ as ¬∀x¬ϕ
This logic is complete, and it has the usual properties of ﬁrst-order
logic, such as Craig Interpolation or Los-Tarski Preservation. One can
now usefully pursue standard ﬁrst-order model theory in tandem with
its modal counterpart. For instance, consider modal bisimulations for
these models, relating states making the same atoms true, with back-
and-forth conditions for the relations Rx. Specializing these to standard
models leads to the standard notion of potential isomorphism. And in
all this, this minimal modal logic of evaluation is decidable.
The modal perspective suggests a whole landscape below stan-
dard predicate logic, with a minimal modal logic at the base, as-
cending to standard semantics via frame constraints. This landscape
contains decidable sub-logics of predicate logic, sharing its desirable
meta-properties. Thus, the “undecidability of predicate logic” largely
reﬂects accidents of its Tarskian modeling, encoding set-theoretic facts
about mathematical function spaces DVAR – rather than the core logic
of quantiﬁcation and variable assignment.
We shall explore the resulting view of ﬁrst-order semantics, including
richer languages. In particular, abstract core models support interesting
distinctions between various forms of quantiﬁcation (“monadic” and
“polyadic”) that get collapsed in standard predicate logic.
27.2
Dependency models
There are natural inhabitants of the landscape between standard logic
and its modal core. One may retain the general mechanism of Tarski
semantics (the above (a), (b)), while giving up its existence assumption
(c). The result are general assignment models (M, V ) with V some
273Actually, standard predicate logic can get by with the set of partial assignments
on all ﬁnite sets of variables – but even that is a strong existence requirement.

Modal foundations for classical logic / 317
February 2, 2010
family of assignments in the usual sense – not necessarily the full space
DVAR – and the Rx the standard relations =x.
Example (General assignment models). With two variables x, y, an
object domain {1, 2} supports 24 assignment sets. One is the standard
model with all four maps from variables to objects. Another has just
assignments α, β with α(x) = 1, α(y) = 2 and β(x) = 2, β(y) = 1.




1
2
present
x
y
absent
x
y
1
2
1
1
2
1
2
2
“Assignment gaps” model the intuitive phenomenon of dependencies
between variables: when changes in value for one variable x may induce,
or be correlated with, changes in value for another variable y. This
phenomenon, well-known from probability theory and the semantics of
natural language, cannot be modeled in standard ﬁrst-order semantics,
where we can change values for variables completely independently.
Starting from any state α, one can move to any αx
d. But in a model
with assignment gaps, the only way to change values for x, starting
from some assignment, may be by incurring a change in y. In the above
two-assignment model, any shift in value for x produces one for y.
In general assignment models (M, V ), a “modal” existential quan-
tiﬁer ∃xϕ says that some x-variant of the current state exists inside
V satisfying ϕ. Standard ﬁrst-order models are the degenerate cases
where all dependencies between variables have been suppressed. This
shows clearly in the standard quantiﬁer exchange principle
∃x∃yϕ ↔∃y∃xϕ
that is typically invalid on our general models. Dependence is a popular
topic these days in various areas of logic.274
27.3
What do ﬁrst-order axioms say?
The above picture has ﬁne-structure through constraints on modal
frames or assignment models, reﬂecting aspects of dependence. But
one can also analyze candidate axioms via frame correspondences. In
this light, what is expressed by the laws of predicate logic? Usually,
274Cf. van Benthem (1996), for sources of this chapter, plus an extended analysis
of dependency using sets of assignments, inspired by work in linguistic semantics of
plural expressions. New sophisticated dependence logics with more computational
and mathematical motivations are in V¨a¨an¨anen (2007).

February 2, 2010
318 / Modal Logic for Open Minds
these are all in one big bag. But now, they express diﬀerent facts about
states and accessibility, with a computational slant.
For a concrete illustration, we use modal correspondence to decon-
struct the axioms for ﬁrst-order logic in the textbook (Enderton, 1971).
We stated these already in our account of the minimal modal logic in
Chapter 5. The system has all universal closures of the Boolean propo-
sitional laws plus the three quantiﬁer axioms
(1)
∀x(ϕ →ψ) →(∀xϕ →∀xψ)
(2)
ϕ →∀xϕ
provided that x does not occur free in ϕ
(3)
∀xϕ →[t/x]ϕ
provided that t is free for x in ϕ
There is one inference rule, Modus Ponens. From a modal perspec-
tive, the propositional part is valid. The ﬁrst quantiﬁer axiom is Modal
Distribution. Universal closure of axioms is a technique which amounts
to having a rule of Necessitation for universal quantiﬁers. Indeed, the
ﬁrst part of the Enderton axiomatization by itself is a complete cal-
culus for the minimal modal logic!275 This sub-system of ﬁrst-order
logic is of interest by itself, since it captures many forms of syllogistic
monotonicity-based inference, of which linguists and philosophers have
claimed that they make up the bulk of ﬁrst-order reasoning in practice.
Now to the other axioms. We start with the least conspicuous one:
ϕ →∀xϕ.
We analyze this principle inductively, in a syntax with literals,
∧, ∨, ∃, ∀. Our argument is heuristic, looking at various instances inde-
pendently. The ﬁrst instance is the atomic pair:
(2.1) Atomic Py →∀xPy, ¬Py →∀x¬Py. This makes truth values
for x-free atoms invariant for Rx-transitions: Rx implies =x. Thus, we
have a Heredity Principle for abstract interpretation functions I:
if I(α, Py), then I(β, Py) for all states β with Rxαβ.276
(2.2) Boolean cases ϕ1 ∧ϕ2, ϕ1 ∨ϕ2. Let ⊢ϕ1 →∀xϕ1 and ⊢ϕ2 →
∀xϕ2. The base logic automatically yields ⊢(ϕ1 ∧ϕ2) →∀x(ϕ1 ∧ϕ2).
The case for disjunction is analogous.
(2.3) Quantiﬁers ∃xϕ, ∀xϕ. Subcase (2.3.1). The quantiﬁed variable
y is x itself. Then we have that
∃xϕ →∀x∃xϕ,
∀xϕ →∀x∀xϕ
These are S5-axioms: ⟨x⟩ϕ →[x]⟨x⟩ϕ, and [x] →[x][x]ϕ. Their frame
content makes the relation Rx is transitive and euclidean.
275It is tempting to see the Hand of Providence at work here.
276Compare the Heredity constraint on intuitionistic models in Chapter 20.

Modal foundations for classical logic / 319
February 2, 2010
If we add the simplest instance of Enderton’s axiom (3), viz. ∀xϕ →
ϕ (expressing reﬂexivity of the Rx), we get full S5, where all Rx, like the
=x, are equivalence relations. Henceforth, we assume the S5-principles,
that hold anyway in all general assignment models.
Subcase (2.3.2). The variables x, y are distinct. Heuristically, we as-
sume that ⊢ϕ →∀xϕ, and then we need the implications
∃yϕ →∀x∃yϕ,
∀yϕ →∀x∀yϕ
Modulo S4, these express well-known ﬁrst-order quantiﬁer shifts. The
rule “⊢ϕ →∀xϕ implies ⊢∃yϕ →∀x∃yϕ” is equivalent with the axiom
∃y∀xϕ →∀x∃yϕ. The rule “⊢ϕ →∀xϕ implies ⊢∀yϕ →∀x∀yϕ” is
equivalent with the axiom ∀y∀xϕ →∀x∀yϕ. Both resulting axioms are
Sahlqvist forms (cf. Chapter 9):
Fact.
(a) ∀y∀xϕ →∀x∀yϕ expresses Path Reversal:
∀αβγ((Rxαβ ∧Ryβγ) →∃δ(Ryαδ ∧Rxδγ))
(b) ∃y∀xϕ →∀x∃yϕ expresses Conﬂuence:
∀αβγ((Ryαβ ∧Rxαγ) →∃δ(Rxβδ ∧Ryγδ))
We recognize earlier “diamond pictures” from Chapters 7 and 24:
β
#G
G
G
G
G
α
;w
w
w
w
w
$I
I
I
I
I
δ
γ
:v
v
v
v
v
Next comes Enderton’s last axiom: “∀xϕ →[t/x]ϕ provided t is free
for x in ϕ”. Here, we extend our modal language:
27.4
Quantiﬁers and substitutions
One can view a substitution [t/x] as a modal operator in its own
right,277 referring to the controlled value assignment x := t that is
the natural semantic companion to the random assignment for the ex-
istential quantiﬁer ∃x. So we enrich our modal models with abstract
relations Ax,y, whose concrete standard interpretation is as follows:
Ax,yαβ iﬀβ(x) = α(y) and α(z) = β(z) for all z distinct from x.278
Here is the obvious truth deﬁnition:
M, α |= [y/x]ϕ
iﬀ
for all β with Ax,yαβ : M, β |= ϕ
277Maybe the standard box notation for substitution was pre-ordained.
278We only consider substitutions of variables for variables.

February 2, 2010
320 / Modal Logic for Open Minds
Again there is a minimal logic, and further axioms put constraints.
The usual syntactic deﬁnition of substitution now gets semantic import:
(a) Atomic Cases
[y/x]Px ↔Py,
[y/x]Pz ↔Pz (z distinct from x)
These express heredity constraints on admissible propositional valu-
ations. On concrete assignment frames, they express that the relations
Ax,y are to behave as in the usual concrete clauses.
(b) Boolean Cases
[y/x](ϕ ∧ψ) ↔([y/x]ϕ ∧[y/x]ψ),
[y/x]¬ϕ ↔¬[y/x]ϕ
The ﬁrst is valid in the minimal modal logic. The second axiom
makes the relation Ax,y into a function (cf. the PAL negation axiom in
Chapter 15). For convenience, we make this assumption henceforth.
(c) Quantiﬁed Cases
[y/x]∃xϕ
↔
∃xϕ,
[y/x]∀xϕ
↔
∀xϕ,
[y/x]∃zϕ ↔∃z[y/x]ϕ (z distinct from x, y),
[y/x]∀zϕ ↔∀z[y/x]ϕ (z distinct from x, y)
These are simple interactions between Ax,y and Rx, that we do not
spell out. We leave the remaining [z/x]∃zϕ, [z/x]∀zϕ to the reader.
Finally, “∀xϕ →[y/x]ϕ, with y free for x in ϕ” says
Ax,y is contained in Rx.
27.5
Landscape of deductive strength
The upshot of the preceding re-analysis of “standard ﬁrst-order se-
mantics” is this. First-order predicate logic is really a dynamic logic
for variable-to-value assignment, whose atomic processes shift values in
registers x, y, z, . . .. This view opens up a hierarchy of ﬁne-structure,
and ﬁrst-order logic becomes the special (undecidable) theory of a par-
ticular mathematical class of “rich assignment models”. We get a broad
semantic landscape with a minimal modal logic at the bottom, where
intermediate systems arise by imposing some, though not all of the
usual requirements on assignments and their Rx (and Ax,y) structure:
∗standard predicate logic
TERRA INCOGNITA
∗logic of general assignment models
• minimal “modal” predicate logic
?????????????????????????


























Modal foundations for classical logic / 321
February 2, 2010
One important intermediate system is the logic of all general assign-
ment models. It is axiomatized by the axioms of poly-modal S5 plus
the earlier Heredity principles for atoms. The system is decidable, and
it has been investigated extensively in algebraic logic.279
The reason for the potential undecidability of systems higher-up will
be clear to the reader. Many non-minimal principles of ﬁrst-order logic
have existential eﬀects, requiring the existence of “enough” states in
our computation space of assignments. In particular, the preceding “di-
amond principles” impose grid structure on these computation spaces
that was the root of the high complexity results in Chapter 24.
27.6
Extending the language: polyadic quantiﬁers
The present language suggests extensions. A standard tuple notation
∃xy.ϕ is just shorthand for either ∃x∃yϕ or ∃y∃xϕ. But in general
assignment models, ∃xy.ϕ says there is an assignment agreeing with
the current one up to {x, y} values where ϕ holds. Such transitions
encode a form of concurrency for the single relations Rx and Ry. This
does not reduce to either iterated version, as these require existence of
intermediate states.
Abstract state models admit general polyadic quantiﬁers ∃x1· · ·xk
.ϕ stating that some R⟨x1,...,xk⟩-accessible state exists where ϕ holds.
In standard ﬁrst-order logic, this is equivalent to any linearized version
∃x1 · · · ∃xkϕ. But with possible gaps in our models, it is not. Polyadic
quantiﬁcation has linguistic interest: in natural reasoning, one may
treat sequences of variables as dependent or independent. Technically,
adding polyadic quantiﬁers leaves general assignment logic decidable –
even when we add simultaneous substitutions.
27.7
Conclusion: two perspectives in tandem
There is much more to this modal analysis of ﬁrst-order logic. First,
generalized models are not a trick: they highlight the fundamental no-
tion of dependence. The analysis of this phenomenon is by no means
over, and we mentioned sophisticated extensions of our modal seman-
tics using sets of assignments as indices of evaluation. Thus, despite the
sacred nature of ﬁrst-order logic as the holiest of holies, there may be
room for rethinking. For instance, our state-based models for shifting
assignments provide concrete geometrical content to the system that
may eventually be more appealing than set-theoretic models.
279It is also the logic of general assignment models satisfying all universal proper-
ties of standard ﬁrst-order models, preserved to smaller assignment sets.

February 2, 2010
322 / Modal Logic for Open Minds
To conclude, we state what we see as a broader thrust of our “decon-
structionist” study. One is simply this: it is fun to use the techniques
you have learnt for the special area of modal logic, and then see how,
surprisingly, they apply also in the very heartland of logic.
The next point is the duality of two perspectives. These lectures have
presented modal languages as fragments of ﬁrst-order logic, interpreted
over standard models, allowing us to study ﬁne-structure. On the other
hand, we can now also see ﬁrst-order logic itself as a modal language,
but then interpreted over generalized models. The two viewpoints are
not in conﬂict. For instance, it is possible to embed the logic of general
assignment models faithfully into the Guarded Fragment (cf. Chapter
7), using guards to constrain the tuples of values the variables can take
simultaneously. And vice versa, it is possible to embed the Guarded
Fragment into a ﬁrst-order logic over general assignment models.280
And this is not an isolated observation: the same duality extends to
non-ﬁrst-order systems. For instance, we can view the modal µ-calculus
of Chapter 22 as a modal fragment of the full ﬁxed-point extension
of ﬁrst-order logic LFP(FO) over standard models, but we can also
see it, under the same Gestalt Switch as here, as the full language of
LFP(FO) itself, but now interpreted over general assignment models.
Both perspectives are natural and useful.
A ﬁnal point emerging from this chapter is as follows: What, re-
ally, is ﬁrst-order logic? It is amazing how this familiar system con-
tinues to generate new fundamental questions. In particular, if modal
models are a natural semantics for ﬁrst-order logic, received dogmas
must be challenged. In textbooks, or treatises on the philosophy of
logic, “predicate-logical validity” is a unique notion, locked in place
by G¨odel’s Completeness Theorem. Moreover, it is inherently complex,
being undecidable by Church’s Theorem: Leibniz’s ideal Calculus Ra-
tiocinator just will not work. On the present view, however, standard
predicate logic arose historically from decisions that could have gone
diﬀerently. The genuine logical core of ﬁrst-order reasoning may well be
decidable after all. And the real interest then lies not in one unique com-
pleteness theorem, but in the joint model-theoretic and proof-theoretic
analysis of a rich family of options for reasoning with quantiﬁers.
280Detailed proofs are in the survey of the Guarded Fragment in van Benthem
(2005).

February 2, 2010
A
First-order predicate logic
Here is a quick tour of basic notions in ﬁrst-order logic, as background
to these lectures. Of the many excellent introductions to this area, we
mention Enderton (1971) and Hodges (1983). Please note that this
Appendix is not a ﬁrst course, but a reminder!
A.1
Syntax and semantics
Alphabet First-order languages refer to objects having properties and
standing in relations, from abstract mathematical spaces to real-life
situations. They do so with an alphabet of individual variables x, y, . . .,
individual constants c, d, . . ., predicate symbols P, Q, . . . (with arities
indicated), an identity predicate =, Boolean connectives ¬, ∧, ∨, →, ↔,
quantiﬁers ∀, ∃, and brackets ), (. Using these, one writes terms and
formulas in the usual way.
Example (First-order languages over modal graph models). First-
order languages whose vocabulary ﬁts the modal models of these lec-
tures can express various properties of computation or process graphs
by means of quantiﬁcation over states:
Action a is deterministic ∀xyz((Raxy ∧Raxz) →y = z)
Action a is conﬂuent
∀xyz((Raxy ∧Raxz) →∃u(Rayu ∧Razu))
Action a enables b
∀xy(Raxy →∃zRbyz)
One can also take a second domain of actions, with matching quantiﬁers
and variables, and a ternary predicate
a−→(action a takes state x to
state y). Modal models are also models for this “two-sorted” ﬁrst-order
language, and one can express new computational properties:
Endpoints exist
∃x¬∃y x
a−→y
Every action has a converse
∀a∃b∀xy(x
a−→y ↔y
b−→x)
Actions are extensional
∀ab(∀xy(x
a−→y ↔x
b−→y) →a = b)
323

February 2, 2010
324 / Modal Logic for Open Minds
Syntax Terms are individual variables and constants. (We disregard
function symbols here.) Atomic formulas are of the form Pt1· · ·tk with
P of arity k with terms t1, . . . , tk. Formulas are deﬁned inductively
as usual, either by inductive clauses, or the much sparser computer
science syntax used in these lecture notes. We have the standard gram-
mar of predicate logic, with scope, binding, free and bound occurrence,
substitution, substitutability, alphabetic variants, positive and negative
occurrence. A useful measure of semantic expressive power over pat-
terns of objects is the quantiﬁer depth of a formula: i.e., the maximum
length of a nest of quantiﬁers occurring in it. Recursively,
(a) qd(ϕ) = 0, for atomic formulas ϕ,
(b) qd(¬ϕ) = qd(ϕ),
(c) qd(ϕ#ψ) = max(qd(ϕ), qd(ψ)), for all connectives #, and
(d) qd(Qxϕ) = qd(ϕ) + 1, for both quantiﬁers Q.
Semantics Evaluation uses structures D = (D, O, P), with D a non-
empty domain of objects, O a set of distinguished objects, and P a set
of predicates. (Many texts use ad-hoc notation for structures of spe-
cial interest – like we did for modal logic.) An interpretation function
I maps individual constants c to objects I(c) ∈O, and k-ary predi-
cate symbols Q to k-place predicates I(Q) ∈P. Finally, auxiliary (but
nevertheless, important) functions a called assignments map individual
variables x to objects a(x) ∈D. By contrast, the interpretation func-
tion I is a more permanent linkage between language and model and a
a more local “dynamic” one. Next we deﬁne term values:
value(x, D, I, a) = a(x),
value(c, D, I, a) = I(c)
The truth deﬁnition deﬁnes the notion “ϕ is true in D under I and a”:
D, I, a |= ϕ
through inductive clauses (the atomic case is done here by example):
D, I, a |= Rt1t2
iﬀ
I(R)(value(t1, D, I, a), value(t2, D, I, a))
D, I, a |= t1 = t2
iﬀ
value(t1, D, I, a) equals value(t2, D, I, a)
D, I, a |= ¬ϕ
iﬀ
not D, I, a |= ϕ
D, I, a |= ϕ ∨ψ
iﬀ
D, I, a |= ϕ or D, I, a |= ψ
and likewise for the other Boolean propositional connectives,
D, I, a |= ∃xϕ
iﬀ
there exists some d ∈D with D, I, ax
d |= ϕ
and likewise for the universal quantiﬁer.
Here ax
d (sometimes written a[x := d]) is the assignment b that is
a except for the possible diﬀerence of assigning object d to variable x.
(The resulting relation is also written as a =x b).

First-order predicate logic / 325
February 2, 2010
Usually, the interpretation function I is taken for granted, and
“hard-wired”. We then write M, a |= ϕ, where a model M is a pair
(D, I) of a structure and an interpretation function.
Basic semantic properties Here are some useful basic features:
Lemma (Finiteness Lemma). Given a ﬁxed domain D and interpre-
tation function I, if two assignments agree on all free variables of a
formula, then they give the same truth value to that formula.
Hence, for truth of “sentences” without free variables in a model,
assignments may be disregarded.
Lemma (Substitution Lemma). Assume that term t is freely substi-
tutable for x in formula ϕ. Then we have the equivalence
M, a |= [t/x]ϕ
iﬀ
M, ax
value(t,M,a) |= ϕ
Finally, here is one more elementary syntax-semantics connection.
The formula (ϕ)A arises from ϕ by replacing every quantiﬁer ∃x, ∀x by
relativized ∃x(Ax ∧· · · , ∀x(Ax →· · · . M|A arises from M by taking
domain IM(A) and restricting predicate interpretations to it:
Lemma (Relativization Lemma). For all variable assignments a taking
their values in I(A),
M, a |= (ϕ)A
iﬀ
M|A, a |= ϕ
Extended logics These notions set a pattern for other formal lan-
guages that surface in these lectures. Inﬁnitary ﬁrst-order logic allows
conjunctions and disjunctions over arbitrary sets of formulas. For more
information, see Keisler (1971), Barwise (1975), Ebbinghaus and Flum
(1995). Second-order languages add quantiﬁcation over sets, standing
for properties and predicates. See van Benthem and Doets (1983) for
such systems, including connections to type theories. A still wider array
of logical systems, including generalized quantiﬁers and other expres-
sive extensions, is studied in “Abstract Model Theory”.
A.2
Expressive power, invariance and games
Isomorphism Independently from any language, structures have
mathematical relations. Most basically, two models M = (D, O, P, I),
M ′ = (D′, O′, P′, I′) are isomorphic if there exists an isomorphism
between them, i.e., a bijection F between D and D′ that respects dis-
tinguished objects in O, O′ (and operations, if any) and also respects
matching predicates in P, P′:
F(I(c)) = I′(c), for all individual constants c,
I(Q)(d) iﬀI′(Q)(F(d)), for all tuples of objects d in D.

February 2, 2010
326 / Modal Logic for Open Minds
Invariance A fundamental measure of the expressive power of a lan-
guage are its characteristic invariances across models, via such struc-
tural relations. Here is a typical illustration:
Lemma (Isomorphism Lemma). Tuples related by an isomorphism
satisfy the same ﬁrst-order formulas:
M, a |= ϕ iﬀM ′, F◦a |= ϕ
Thus isomorphic models are elementarily equivalent: they verify the
same ﬁrst-order sentences. The converse fails, though on ﬁnite models,
isomorphism and elementary equivalence coincide.
Potential isomorphism Closer to elementary equivalence, models
M, M ′ are potentially isomorphic if there is a non-empty family PI of
ﬁnite partial isomorphisms (isomorphisms between ﬁnite sub-models of
M, M ′) satisfying two back-and-forth clauses:
(a) for any partial isomorphism F ∈PI and any d in the domain of
M, there is an object e in the domain of M ′ with F ∪{(d, e)} ∈PI ,
(b) analogously in the opposite direction.
The Isomorphism Lemma generalizes to partial isomorphisms in such
families PI . Sill, no converse holds for ﬁrst-order logic – but we do have
the following important equivalence with the earlier-mentioned inﬁni-
tary language allowing arbitrary set conjunctions and disjunctions, for
tuples of objects in any two models M, M ′:
M, d and M ′, e satisfy the same formulas of inﬁnitary ﬁrst-order logic
iﬀthere is a potential isomorphism PI between M, M ′ with some F
sending d (in that order) to e.
Comparison games To add ﬁne-structure to structural comparisons,
one uses Ehrenfeucht-Fra¨ıss´e Games. The “n-round comparison game”
between two models M, N has two players A and E in n successive
rounds, each consisting of (a) selection of a model and an object in its
domain by player A, (b) selection of an object in the other model by
player E that gets matched to the one chosen by A. After n rounds, the
partial map between M, N created by all matches is inspected. If it is
a partial isomorphism for all predicates, then E has won – otherwise,
the win is for A. Here is an illustration.
Example (Integer versus rational order). The integers Z and the ra-
tionals Q have diﬀerent ﬁrst-order properties: the latter is dense, the
former discrete. Here is how soon this will surface in the game:

First-order predicate logic / 327
February 2, 2010
· · ·
◦
◦
◦
· · ·
Z
−1
0
1
Q
0
1
5
1
3
Q
By choosing objects well, player E has a winning strategy in the
game over two rounds. But A can always win the game in three rounds:
Round 1
A chooses 0 in Z
E chooses 0 in Q
Round 2
A chooses 1 in Z
E chooses 1
3 in Q
Round 3
A chooses 1
5 in q
any response for E is losing.
Write WIN (M, N, n, E) if player E has a winning strategy in the
game. The following basic result links this to our ﬁrst-order language:
Theorem 78 (Adequacy Theorem). The following are equivalent:
(a) WIN (M, N, n, E),
(b) M, N verify the same sentences up to quantiﬁer depth n.
This rests on a more general version with assignments, proved by in-
duction on formulas. (Cf. Doets (1996), an excellent game-based course
in mathematical logic.) Equivalently, one can state an equivalence be-
tween the existence of a ﬁrst-order “diﬀerence formula” up to depth n
distinguishing the models and the existence of a winning strategy for
the opposite player A. That one player must always have a winning
strategy in a game like this follows from a general result about ﬁnite
depth two-player zero-sum games called “Zermelo’s Theorem”.
There is more to the link. Consider again Integers versus Rationals.
Example (Deﬁnable diﬀerences and winning strategies). Player A can
use the syntactic deﬁnition of density: ∀x∀y(x < y →∃z(x < z∧z < y))
to win the game, by maintaining a diﬀerence between the models of
stepwise decreasing syntactic depth. A starts by noting that ∃x∃y(x <
y∧¬∃z(x < z∧z < y)) is true in Z, but false in Q (#). He then chooses
an integer witness d for ∃x, making ∃y(d < y∧¬∃z(d < z∧z < y)) true
in Z. Player E can take any d′ in Q: ∃y(d′ < y ∧¬∃z(d′ < z ∧z < y))
is always false for it, by #: Z |= ∃y(d < y ∧¬∃z(d < z ∧z < y)), and
not Q |= ∃y(d′ < y ∧¬∃z(d′ < z ∧z < y)). In the second round, A
continues with a witness e for the new outermost quantiﬁer ∃y in the
true existential formula in Z: making d < e ∧¬∃z(d < z ∧z < e) true
there. Again, whatever object e′ E now picks in Q, d′ < e′ ∧¬∃z(d′ <
z ∧z < e′) is false there. In the third round, A analyses the mismatch

February 2, 2010
328 / Modal Logic for Open Minds
in truth value. If E kept d′ < e′ true in Q, then, as ¬∃z(d < z ∧z < e)
held in Z, ∃z(d′ < z ∧z < e′) holds in Q. A then switches to Q, chooses
a witness for the existential formula, and wins.
Thus, even model switches for A are encoded in the diﬀerence for-
mulas. These are mandatory when there is a syntactic switch in “polar-
ity” from one outermost quantiﬁer to a lower one. The following result
makes the match between logical language and strategies explicit:
Theorem 79. There is an explicit correspondence between
(a) winning strategies for A in the n-round game for M, N
(b) sentences ϕ of quantiﬁer depth n with M |= ϕ, not N |= ϕ
For player E, winning strategies in inﬁnite comparison games match
the potential isomorphisms between the given models.
Comparison games exist for many logical languages, including frag-
ments of ﬁrst-order logic. The analysis can be reﬁned by measuring the
number of variables used in the formulas (free or bound) in terms of
some ﬁnite set {x1, . . . , xk}. Comparison games then use sets of pebbles
to select objects for inspection.
Other logic games There are logic games for many other tasks, in-
cluding semantic evaluation, where a Veriﬁer and a Falsiﬁer dispute the
truth of a formula in some model, drawing objects from the domain
that can be tested for atomic facts. Logic games also exist for ﬁnding
proofs (after all, argumentation is a game), or constructing models. van
Benthem (1999), van Benthem (2007b) are broad surveys of the area.
Other invariances: ultraproducts There are also other structural
characterizations of ﬁrst-order predicate logic, mathematically deeper
than the game analysis. Keisler’s Theorem says that a class of models
is elementary: deﬁnable as {M | M |= ϕ} for some ﬁrst-order sentence
ϕ, iﬀit is closed under the formation of ultraproducts and potential
isomorphisms. Here, ultraproducts are a sophisticated construction of
new models out of given families {Mi}i∈I of models plus some ultraﬁlter
on the index set I. We refer to the literature for details.
A.3
Model Constructions
Key meta-properties Here are two central results:
Theorem 80 (Compactness Theorem). If each ﬁnite subset of a set
of ﬁrst-order formulas Σ has a model plus assignment verifying it, then
so does the whole Σ simultaneously.

First-order predicate logic / 329
February 2, 2010
Theorem 81 (L¨owenheim-Skolem Theorem ). If a set of formulas Σ
is veriﬁed in some model plus assignment, then it is already veriﬁed in
some countable model.
Applications These theorems are often used to show undeﬁnability
of mathematical properties in ﬁrst-order logic: a standard example is
ﬁniteness of the domain. They also have positive applications in ﬁnding
new models with “transfer” of ﬁrst-order properties. By way of illustra-
tion, here is a typical compactness technique, involving the following
ubiquitous model relation:
N is an elementary extension of M if (a) M is a sub-model of N, and
(b) M, N agree on the truth value of all ﬁrst-order formulas (whether
atomic or complex) over objects in M.
Now call a model M ω-saturated if, for each set Σ of ﬁrst-order formu-
las in a ﬁnite set of free variables x1, . . . , xk and involving only ﬁnitely
many objects from M ′s domain as ﬁxed parameters (named by individ-
ual constants), the following holds: “if each ﬁnite subset of Σ has some
k-tuple of objects satisfying it in M, then there exists some k-tuple of
objects satisfying the whole set Σ in M”.
Fact. Each model has an ω-saturated elementary extension.
For a proof, cf. Chang and Keisler (1973), Doets (1996).
Abstract model theory The two stated properties are characteristic
of ﬁrst-order logic. The following important result says how:
Theorem 82 (Lindstr¨om’s Theorem). First-order predicate logic is
maximal with respect to containing the ﬁrst-order language and satis-
fying both the Compactness and L¨owenheim-Skolem properties.
Other model constructions Other important model relations and
constructions need not preserve the whole ﬁrst-order language. Two
typical example are sub-models and direct products of models. Such
constructions may still capture useful fragments, as stated in so-called
“preservation theorems”. Here are two classical examples:
Theorem 83 (Los-Tarski Theorem). A ﬁrst-order sentence is truth-
preserved under going to sub-models iﬀit is logically equivalent to
a syntactically universal formula, constructed from a quantiﬁer-free
formula by preﬁxing universal quantiﬁers.
Theorem 84 (Lyndon’s Theorem). A ﬁrst-order sentence is semanti-
cally monotone in Q (i.e., its truth in a model is preserved whenever
the extension of the predicate Q is enlarged) iﬀit is logically equivalent
to a formula with only positive syntactic occurrences of Q.

February 2, 2010
330 / Modal Logic for Open Minds
Intertwined semantic behaviour and syntactic form is typical in logic.
Interpolation There are more deep properties of ﬁrst-order logic:
Theorem 85 (Interpolation Theorem). For all ﬁrst-order formulas
ϕ, ψ, if ϕ |= ψ, then there is a ﬁrst-order formula α with Voc(α) ⊆
(Voc(ϕ) ∩Voc(ψ)) and ϕ |= α |= ψ.
This implies, for instance, Beth’s Theorem that two natural notions
of “deﬁnability” coincide for ﬁrst-order logic: semantic implicit deﬁn-
ability as “ﬁxing denotations” and explicit syntactic deﬁnability. Bar-
wise and van Benthem (1999) use interpolation to analyze entailment
along any model relation R: If M |= ϕ and MRN, then N |= ψ.
Theorem 86. The following are equivalent for ﬁrst-order ϕ, ψ:
(a) ϕ entails ψ along sub-models,
(b) there is a universal formula α such that ϕ |= α |= ψ.
Mason (1985) shows that the full meta-theory of ﬁrst-order logic is as
complex as true ﬁrst-order Arithmetic, and so, by G¨odel’s Theorem it is
undecidable, non-axiomatizable, and very complex. We may therefore
reasonably hope for the discovery of exciting new meta-theorems.
A.4
Validity and syntactic axiomatization
Semantic consequence Consequence in predicate logic is deﬁned as
“transmission of truth”:
Σ |= ψ if for all models M and assignments a, if M, a |= ϕ for all
ϕ ∈Σ, then M, a |= ψ.
On this notion, statements in the following pairs are mutual conse-
quences, and hence logical synonyms: ϕ∨ψ/¬(¬ϕ∧¬ψ), ϕ →ψ/¬ϕ∨ψ,
∀xϕ/¬∃x¬ϕ. Thus, attention may be restricted to subsets of logical
constants, whenever convenient. (This is diﬀerent with other notions
of validity for a ﬁrst-order language, like that of intuitionistic logic,
which we do not discuss here.) The quantiﬁcation over the totality of
all models makes validity a quite abstract notion. But, there exist more
concrete methods of testing it, such as Beth’s semantic tableaux.
Inference and derivation More concrete is the deductive approach,
with a long historical pedigree in the ﬁeld, proceeding from combina-
torial systems of inferential steps forming proofs:
Σ ⊢ψ if there exists a derivation for ψ from assumptions in Σ using
only permissible rules of some logical proof calculus.
A good example is the axiom system for predicate logic in Ender-
ton (1971). It consists of all universal closures of arbitrary Boolean
propositional laws plus the three quantiﬁer axioms

First-order predicate logic / 331
February 2, 2010
∀x(ϕ →ψ) →(∀xϕ →∀xψ)
ϕ →∀xϕ
provided that x does not occur free in ϕ
∀xϕ →[t/x]ϕ
provided that t is free for x in ϕ
Pragmatic validity in argumentation Some authors revive the ori-
gins of logic as a debating game, and propose a third notion:
Σ |≡ψ if a defender of claim ψ has a guaranteed winning strategy
against an opponent granting Σ in a logical game of argumentation.
Completeness theorem While semantic validity serves as a touch-
stone of adequacy, proof-theoretic or game-theoretic views embody
vivid ideas about structuring arguments and procedures for reasoning.
Arguably the main meta-result in modern logic (for suitable axiom
systems and languages) is this result of G¨odel’s
Theorem 87 (Completeness Theorem). Σ |= ψ iﬀΣ ⊢ψ, for all Σ, ψ
in ﬁrst-order logic.
A well-known proof method uses “Henkin models”. This result is so
inﬂuential, that it has set standards for getting a logic paper published.
A.5
Decidability and undecidability
Undecidability Expressive power always comes at a price. First-order
logic is much less expressive than, say, second-order logic, but in con-
trast, its validities are axiomatizable. However, some complexity re-
mains: there is no eﬀective machine algorithm that can infallibly test
validity of given input formulas.
Theorem 88 (Church’s Theorem ). First-order validity is undecidable.
This can be proved in many ways (cf. Chapter 24). One quick road is
to ﬁrst show the undecidability of some natural computational problem,
such as the Halting Problem for Turing Machines, or geometrical Tiling
Problems. Then one shows how to reduce such problems eﬀectively
to satisﬁability or validity problems for ﬁrst-order formulas describing
them. Then validity must be undecidable, too.
Fragments and complexity Undecidability says something about
ﬁrst-order logic as a whole. But there is ﬁne-structure inside. In these
lectures, we have emphasized how modal logic is a weak decidable frag-
ment of ﬁrst-order logic. Many such fragments exist B¨orger et al. (1997),
including monadic ﬁrst-order logic (only one-place predicates), the two-
variable fragment of ﬁrst-order logic (its three-variable fragment is un-
decidable), the Guarded Fragment in Chapter 7 of these notes, and
more may yet be discovered.

February 2, 2010
332 / Modal Logic for Open Minds
Decidability calls for analysis of the precise computational complex-
ity of satisﬁability or validity problems. In Chapter 6, we have looked at
complexity of other basic tasks associated with a logic, such as model-
checking or model comparison. Papadimitriou (1994) is an excellent
introduction to Complexity Theory with a lucid explanation of the
many links to logic.

February 2, 2010
B
Modal algebra
B.1
Universal algebra
An algebra is a tuple A = (A, F ) with A a set of objects, and F a set
of operations on A, with the f ∈F taking speciﬁed ﬁnite numbers of
arguments. Here the 0-ary operations are the “distinguished objects”
of the algebra. For instance, a “Boolean algebra” has two distinguished
objects 0, 1, one unary operation −, and two binary operations +, • .
Logicians can think of general algebras as structures for a ﬁrst-order
language that has function symbols for building complex terms and just
one atomic identity predicate = for building formulas.281 Such an equa-
tional language has object variables and function symbols with arities
indicated, and terms are created from variables and 0-place function
symbols (names for distinguished objects) by the rule
“if t1, . . . , tk are terms, then so is f k t1 . . . tk”
Formulas of the language are equations t = t′ for all terms t, t′ (no
Boolean operators or ﬁrst-order quantiﬁers are used). The semantics
works recursively for terms t and algebras A. More precisely, we need an
interpretation I of function symbols as operations in A of the matching
arity, and an assignment a of objects to variables. Usually, the map I
is absorbed into the structure A, and one just deals with the variable
assignment a. Then, the denotation tA
a of terms t in A under I, a has
the key recursive clause
f k t1A
a , . . . , tkA
a = I(f)(t1A
a , tkA
a )
An equation t = t′ is true in A under a if its two terms t, t′ denote the
same object. An equation is “globally true” in an algebra if it is true
under all assignments: this is the “schematic” universal sense in which
one usually takes algebraic axioms of a mathematical theory.
281But one can also reformulate all of ﬁrst-order logic in an algebraic manner, in-
cluding Booleans and quantiﬁers (cf. the “cylindric algebra” of Henkin et al. (1985)).
333

February 2, 2010
334 / Modal Logic for Open Minds
A set of equations X implies an equation t = t′ (or, t = t′ follows
from X) if each A, a that makes each equation in X true, also makes
t = t′ true. The equational calculus is the proof system consisting of re-
ﬂexivity, symmetry, and transitivity for terms, plus the rule of substitu-
tion of identicals: “t1 = t′
1, . . . , tk = t′
k implies f k t1 . . . tk = f k t′
1 . . . t′
k.
Completeness theorem: an equation follows from a set of equations X
if it is derivable using equations from X with only principles of the
equational calculus. There are simple modiﬁcations when we take the
equations of a theory X as schemata, allowing for arbitrary instances
via an additional substitution rule. The completeness proof is via a sim-
ple “term algebra” whose objects are the equivalence classes of terms
under the relation of provable identity given the equations in X as addi-
tional axioms.282 In this algebra, under the obvious assignment sending
syntactic variables to their equivalence classes under provability viewed
as objects in the algebra, the semantic object denoted by any term t is
just the equivalence class of t under provability.283
Model-theoretically, algebras support three major operations. A sub-
algebra is a sub-model in the usual sense, closed under the operations.
A homomorphic image of an algebra is the range of a homomorphism,
a structure-preserving map h from an algebra A to an algebra B satis-
fying the commutation law h(f A(a1, . . . , ak)) = f B(h(a1), . . . , h(ak)).
Finally, the direct product Πi∈IAi of a family of algebras { Ai | i ∈I }
consists of all objects in the Cartesian product Πi∈IAi with opera-
tions deﬁned component-wise: e.g., f Πi∈IAi((ai)i∈I) = (f Ai(ai))i∈I. It
is easy to prove that all these operations preserve global truth of alge-
braic equations – for instance, if an equation holds in all components of
a direct product, it holds in the whole product. Moreover, this preserva-
tion behaviour captures deﬁnability in equational logic precisely in the
sense of Birkhoﬀ’s Theorem: A class K of algebras is deﬁnable in the
form Alg(X) for some set of equations X 284 iﬀK is closed under tak-
ing sub-algebras, homomorphic images, and direct products. 285 There
are algebraic proofs, but the result can also be derived purely model-
theoretically. Other model-theoretic themes concern the existence of
special algebras with nice properties that sometimes have no counter-
282This is the origin of the syntactic “Lindenbaum algebra’s” in algebraic logic.
283In terms of our main text, this is a simple but elegant “Truth Lemma”.
284Alg(X) consists of all algebras satisfying all of the equations in X in the sense
of global truth; such classes of algebras are called “equational varieties”.
285More precisely, one can show that, for any class K, an algebra A satisﬁes
the equational theory of K (all equations true globally in all algebras of K) iﬀ
A ∈HSP(K), the class of algebras that are homomorphic images of some sub-
algebra of some direct product of algebras from K.

Modal algebra / 335
February 2, 2010
part in ﬁrst-order logic. An example are algebras A that are freely
generated from some set of objects C, in the sense that any map from
C into any algebra B can be extended uniquely to a homomorphism
from all of A to B. The earlier syntax algebra in the completeness
proof is an example, with the objects corresponding to the variables
serving as the generating set.
B.2
Boolean algebra
Many further issues become visible with special classes of algebras.
In particular, Boolean algebras are tuples (A, 0, 1, −, +, • ), where the
following equations have to be true:
x + (y + z) = (x + y) + z
x • (y • z) = (x • y) • z
x + y
= y + x
x • y
= y • x
x + x
= x
x • x
= x
x + (y • z) = (x + y) • (x + z)
x • (y + z) = (x • y) + (x • z)
x + (x • y) = x
x • (x + y) = x
−(x + y)
= −x • −y
−(x • y)
= −x + −y
x + 0
= x
x • 0
= 0
x + 1
= 1
x • 1
= x
x + −x
= 1
x • −x
= 0
−−x = x
This is a selection of principles that are valid when you read them
in an obvious way as equivalences in propositional logic. The term lan-
guage of Boolean algebra is still close to formulas of propositional logic:
each term becomes a formula by reading variables as proposition let-
ters, and Boolean algebraic operations as logical ¬, ∨and ∧.286 The
same principles are valid as laws of binary arithmetic, computed in the
usual truth tables: or stated diﬀerently, the truth value algebra 2 with
just two objects, −as ﬂipping 0 and 1, + as maximum, and • as mini-
mum, is a concrete Boolean algebra. But there are many other Boolean
algebras, more abstract and more concrete. Typical concrete examples
are families of subsets of some domain X, containing both ∅and X,
and closed under set-theoretic complement, unions, and intersections.
In this setting, the point of the ordinary completeness theorem for
propositional logic is this – where we use the form that the syntactically
consistent formulas are the ones having a satisfying semantic valuation.
By general equational logic, each consistent formula can be made true
for some assignment in an abstract Boolean term algebra, but we can
286There is also a converse translation, that forms the basis for the wellknown
“algebraization” of propositional logic.

February 2, 2010
336 / Modal Logic for Open Minds
even take that satisfying algebra to be the truth value algebra 2. This
fact is related to two general algebraic results. The ﬁrst is the Stone
Representation Theorem: each Boolean algebra is isomorphic with a
family of sets over some domain with the usual set-theoretic operations.
The proof introduces the set of all ultraﬁlters U on the algebra A,
families of sets containing the distinguished object 1 and not the 0, and
satisfying the properties a + b ∈U iﬀa ∈U or b ∈U, and a • b ∈U iﬀ
a ∈U and b ∈U.287 The ultraﬁlters are the domain of the set algebra,
and objects a in the algebra A are mapped to the set { U | a ∈U }.
Representation results are important in algebra, since they tie abstract
algebras to “concrete” ones that may be easier to grasp.
The further fact that equations satisﬁed by objects in some Boolean
set algebra are also satisﬁable in the special algebra 2 can be seen by
an ad-hoc argument. But it is also related to another general theorem
of Birkhoﬀ. First, a sub-direct product is a sub-algebra of some direct
product of algebras Ai all of whose set-theoretic projections to factors
Ai are onto. Now, each algebra is isomorphic to a sub-direct product
of subdirectly irreducible algebras satisfying the same equations. Subdi-
rectly irreducible algebras are deﬁned to be “minimal” in the following
sense: if they are a sub-direct product of a family of algebras, they
are already isomorphic to one of the factors. 2 is the only sub-directly
irreducible Boolean algebra. Knowing the sub-directly irreducible al-
gebras in a class often tells us all about it. A famous tool for this is
J´onsson’s Lemma: In an equational variety K where the lattice of con-
gruence relations on the algebras is distributive,288 each algebra is iso-
morphic to a homomorphic image of a sub-algebra of some ultraproduct
of sub-directly irreducible algebras in K. J´onsson’s Lemma improves
the Birkhoﬀcharacterization of equational varieties from direct prod-
ucts to ultraproducts, a construction that does not just preserve true
algebraic equations, but sentences of the full ﬁrst-order language (cf.
our Appendix on ﬁrst-order logic).
B.3
Modal algebra
A modal algebra is a Boolean algebra with an added unary operation m
(for the existential modality) satisfying the two equations (i) m0 = 0,
(ii) m(x+y) = mx+my.289 Again the connection with basic modal logic
is a simple “Gestalt switch”, with algebraic identities corresponding to
equivalence formulas, and conversely, modal formulas denoting terms.
287Alternatively, these areo homomorphisms from A to the algebra 2.
288We do not explain this special condition, but it is often satisﬁed in modal logics.
289These assumptions correspond to the postulates of the minimal modal logic.

Modal algebra / 337
February 2, 2010
A particular concrete type of modal algebras arises by taking a Boolean
algebra of subsets of some relational frame (W, R), that is also closed
under the set-theoretic operation m(X) = { y ∈W|∃x ∈X : Ryx }.
The whole structure consisting of the frame plus this algebra is called a
general frame, that can be thought of as a frame plus some prescribed
range of “admissible propositions”. Most earlier deﬁnitions apply as is
to modal algebras, though it may be harder to determine basic items
such as the sub-directly irreducible algebras in a modal variety. In par-
ticular, the Stone representation extends, as observed by J´onsson and
Tarski (1951): every modal algebra is isomorphic to an algebra on the
frame whose worlds are the ultraﬁlters, with the relation RUV de-
ﬁned by ∀a ∈V : ma ∈U.290 We can view this as a general opera-
tion Frame taking modal algebras A to isomorphic algebras on a gen-
eral frame Frame(A), while under a converse operation, general frames
G directly induce algebras Alg(G). What is more, under this duality,
structure-preserving operations in the two areas correspond precisely.
For instance, any homomorphism from an algebra A onto an algebra B
induces a map from Frame(B) into Frame(A) that is a bijection onto
a generated sub-frame. We omit details, but these links can be worked
into a complete duality in the sense of mathematical category theory.
Many results in modal logic have been proved through this link with
algebraic methods. General frames were discovered in this way, and
they were important in the study of deductive “frame-incompleteness”
for simple modal logics, as explained in Chapter 26.291 Another famous
example is the Goldblatt & Thomason Theorem saying that a ﬁrst-order
deﬁnable class of frames K is deﬁnable by a set of modal formulas iﬀK
is closed under generated subframes, disjoint unions, p-morphic images,
while the complement class −K is closed under ultraﬁlter extensions.
We do not deﬁne these operations on (general) frames here, but the ﬁrst
three have to do with sub-algebras, homomorphic images and direct
products within the realm of algebras, while the fourth notion comes
from the above map Frame that took modal algebras to general frames.
Goldblatt and Thomason’s model-theoretic result was ﬁrst proved by
translating from frames to modal algebras, then applying the Birkhoﬀ
characterization of equational varieties, and ﬁnally moving back using
the J´onsson-Tarski version of the Stone representation.
Digression. We sketch the proof, for a glimpse of how algebraic and
modal methods interact. First, the four stated closure properties hold
by known preservation properties of modal formulas. E.g., for ultraﬁlter
290This is like accessibility in basic modal completeness proofs; cf. Chapter 5.
291An extensive algebraic study of modal incompleteness was made in Blok (1980).

February 2, 2010
338 / Modal Logic for Open Minds
extensions, if ue(F ) |= ϕ, then F |= ϕ. Conversely, start with any
frame F satisfying the modal theory Thmod(K) of the class K (all
modal formulas true in every frame in K): this will be our desired
modal deﬁnition. Equivalently, this can be written in algebraic terms
as follows: Alg(F ) |= Thidentities(Alg(K)). By the earlier-mentioned
HSP version of the BirkhoﬀTheorem, this gives us a line
Alg(F ) homomorphic image of A sub-algebra of product Πi∈IAlg(Fi)
with all the frames Fi ∈K
Using the above-mentioned duality connecting algebras and (general)
frames under the Stone representation Frame, we see successively that
Πi∈IAlg(Fi)
is isomorphic with Alg(+i∈IFi)
(+ is disjoint union)
Frame(Alg(+i∈IFi)) maps p-morphically onto Frame(A)
Frame(Alg(F ))
is isomorphic to a generated sub-frame of Frame(A)
with Frame(Alg(F ))just the ultraﬁlter extension ue(F ). In a picture:
Alg(F)
homomorphic image of
A
sub-algebra of
Alg(+i∈IFi)
ue(F)
generated sub-frame
Frame(A)
p-morphic image
ue(+i∈IFi)
To walk from right to left in the diagram, all the way to the initial frame
F , we use all four closure conditions on K and its complement. But
we must close one gap. We need the ultraﬁlter extension ue(+i∈IFi) in
K. This requires one separate model-theoretic observation:
For every frame F , ue(F ) is a p-morphic image of some frame F ′
that is elementarily equivalent to F .292
Now, since the class K is ﬁrst-order deﬁnable, it is clearly closed under
elementarily equivalent models, and by closure under p-morphic images,
it is closed under ultraﬁlter extensions.
B.4
Algebra and logic in general
Algebraic methods are used in many areas related to modal logic.
Cf. the Handbook of Process Algebra (Bergstra et al., 2007) for one
impressive example in computer science. Also, there are many fur-
ther entanglements between algebraic and logical methods. N´emeti
292Proof. Expand F to a model for a ﬁrst-order language with new unary predicates
PX for each X ⊆W . Take an ω-saturated elementary extension F ′ of the expanded
F (see Appendix A for this notion), and map its objects w to the ultraﬁlter of all
sets X for which w satisﬁes PX. This is a p-morphism onto ue(F).

Modal algebra / 339
February 2, 2010
(1991) is an wide and deep survey of algebraic logics and their con-
nections with other systems. The interplay, or rivalry, between alge-
braic and model-theoretic methods has proved highly useful to modal
logic, and far beyond. For instance, some of the key algebraic results
mentioned above extend to larger universal fragments of the ﬁrst-order
language.293 Indeed, basic algebraic results may sometimes be proved
in model-theoretic terms: cf. the proof of J´onsson’s Lemma in van
Benthem (1988b). Also, concrete algebraic proofs may suggest new
model-theoretic ones (and also vice versa): an example is the purely
model-theoretic proof of the Goldblatt-Thomason theorem in van Ben-
them (1993). On the other hand, right now, there is a surge in alge-
braic theory about non-Boolean algebras such as distributive lattices, or
just lattices with monotone operations, where standard model-theoretic
methods seem to be lagging behind (Venema, 2006). This is the usual
interplay of natural stances in mathematics.
293E.g., a class of models K is deﬁnable by a set of universal ﬁrst-order formulas
iﬀK is closed under forming isomorphic images, sub-models and ultraproducts.

February 2, 2010

February 2, 2010
Answers and hints to selected
exercises
Chapter 2
1(a) The most remarkable point in the model is 3: an end-point, that
satisﬁes
2⊥. Points 1, 2 and 4 diﬀer in their access to it: 2 uniquely
satisﬁes
3⊤∧
22⊥. The “dirty solution” for world 1: it is the only
world to see world 2:
3(3⊤∧
22⊥). The still dirtier solution for world
4: conjoin the negations of the deﬁnitions for 1, 2 and 3.
1(b) You can still deﬁne the points 3 and 1 uniquely, using
2⊥,
33⊤
respectively. You can prove by induction that 2, 4 satisfy the same
modal formulas. The other option is to see that interchanging 2, 4 is
a bisimulation (see Chapter 3) for this model with itself, and then use
the Invariance Lemma that is proved there.
2(a) Compute a table for truth of all sub-formulas in all worlds:
p :
1, 2
3p:
2, 3
23p :
3, 4
323p:
1, 3, 4
Such tabulations will be the basis for a fast model-checking algorithm
in Chapter 6.
2(b) This is more physical than mental labour, and never gives stu-
dents problems.
2(c) In this game, V has a winning strategy. She should stick to true
formulas as follows: she could choose world 3 in the ﬁrst step making
23p true. Then, F can choose either world 3 or 2, in both of which
3p
is true, and so V has a ﬁnal winning move.
341

February 2, 2010
342 / Modal Logic for Open Minds
Chapter 3
1(a) The indicated dotted lines between the given models do the job:
•
/
%
◦p

• d

◦
T
e
◦p
T
1(b) In this situation, only the black dot to the left satisﬁes the for-
mula
2(2⊥∨
32⊥).
1(c) Spoiler starts with a world where
2(2⊥∨
32⊥) is false (i.e.,
on the right), as this gives him a successor to keep a false formula
2⊥∨
32⊥: i.e., the left-most dot. Duplicator must respond on the
left, and can take either the black dot, or the white one: in either case,
2⊥∨
32⊥is true, so Spoiler has “maintained” a diﬀerence: either
2⊥
or
32⊥. Depending on which one, he picks his next successor, still in
the model on the right, and arrives at a situation where an endpoint is
matched with a non-endpoint, allowing him to win against Duplicator
in one more move.
The general rule: (a) maintain a modal diﬀerence formula of depth
k in the game with k rounds to go at the current link (w, v), (b) always
select the model where the leading
3-formula is true (or, the
2-formula
is false) – and pick an appropriate successor there, (c) use Boolean
decomposition to ﬁnd the new diﬀerence formula.
2 Here is the contracted model for the modiﬁed Treasure Island:
1
/

2
/

3, 7p

4, p
/
4h
h
h
h
h
h
h
h
h
h
h
h
h
h
5
/ 6, 8
/ 9, t
No further bisimulation contractions are possible, as worlds for these
diﬀerent cases satisﬁed diﬀerent modal formulas in the original model.
3 The proof of the Adequacy Lemma is by induction on the depth of
modal formulas, both ways. Here are some highlights.
Depth 0: we are talking about a 0-length game, that just consists in
inspection of the initial link (s, t): if s, t satisfy the same atoms, then
D wins, otherwise S. Note that two worlds satisfy the same atoms iﬀ
they satisfy the same formulas without modal operators, i.e., all modal
formulas of depth 0.

Answers and hints to selected exercises / 343
February 2, 2010
Depth k + 1: each modal formula of this depth can be viewed as a
Boolean combination of formulas of depth ≤k and (at worst) formulas
3ψ – where ψ has depth k. So we can concentrate on the latter. Suppose
that D has a winning strategy over k+1 rounds. Let M, s |=
3ψ. Then
there exists some u with Rsu and M, u |= ψ. Consider a game where S
starts with this choice of u. Since D has a winning strategy, it must cope
with this eventuality, and produce a corresponding choice Rtv in the
other model N such that, playing from the new link (u, v) according to
the remainder of the strategy, D can win the remaining k-round game.
Inductive hypothesis: u, v satisfy the same modal formulas up to depth
k. In particular, then, N, v |= ψ – and so N, t |=
3ψ: which is what
we needed to show.
Now consider the opposite direction, where s, t satisfy the same
modal formulas up to depth k+1. How to produce a winning strategy
for D? The ﬁrst move requires the
Lemma (Finiteness Lemma). There are only ﬁnitely many non-
equivalent modal formulas up to any ﬁxed ﬁnite depth.
This is a simple induction, presupposing that our set of atoms p, q, . . .
is ﬁnite. Take any opening move by S: say, Rsu in M. How should D
respond? We take a ﬁnite (!) conjunction α of all formulas of depth k
true in M, u, which implies that M, s |=
3α – and so N, t |=
3α, be-
cause this formula is of depth k+1. But then let player D take any Rtv
with N, v |= α. Clearly, u, v agree on all modal formulas of depth ≤k,
and hence, by the inductive hypothesis, D has a winning strategy in the
k-round game starting from (u, v). What we have described altogether
then is a winning strategy over k + 1 rounds for D, starting from the
initial mach (s, t).
Chapter 4
1(a) Here is one example of a rule. Consider the implication going from
Σ, A ⇒B to Σ ⇒A →B. The consequent says that Σ ⇒¬(A ∧¬B),
which follows from Σ, A∧¬B ⇒, which follows from Σ, A, ¬B ⇒, which
indeed follows from Σ, A ⇒B.
1(b) Only the ﬁrst stated principle is valid. Take any successor t of
the current world s where p holds. By the antecedent
2(p →q), the
implication p →q also holds at t, and then so does q, making t a
witness for the truth of
3q in s.
The second implication is invalid, and one concrete counter-example
is the left-most world of the following model, where the formula
3p →
3q holds, but
2(p →q) does not:

February 2, 2010
344 / Modal Logic for Open Minds
p •
(
/ • q
2(a) Here is the crux. In the joint rooting construction, we need to
make sure that truth of modal formulas does not change when com-
puted in those models by themselves, or when lying as sub-models in
the new tree model. Intuition: no new successors are added in the con-
struction. Precise reason: the identity relation is a bisimulation between
the separate models and their counterparts in the rooted tree model.
2(b) A modal sequent of the form p,
2ϕ1, . . . ,
2ϕk ⇒
2ψ1, . . .
2ψm, q
holds iﬀeither (a) p, q overlap, or (b) for some i (1 ≤i ≤m) the sequent
ϕ1, . . . ϕk ⇒ψi is valid.
You can see this is equivalent by unpacking
3 as ¬2¬ and refer-
ring to the special “conjunction to disjunction” deﬁnition of validity of
modal sequents.
2(c) Here is a closed tableau refuting existence of a counter-example:
•
•
•
•
•
•
2(p ∨q) →(3p ∨
2q), 1
2(p ∨q)
3p ∨
2q, 1
2(p ∨q)
3p,
2q, 1
p ∨q
p, q, 1
p
p, q, 2
q
p, q, 2
closed
closed
3 We prove by induction that for all sub-formulas α of ϕ:
M, s |= α iﬀα holds at s∼in the ﬁltrated model M ∼.
Here is the salient case. (a) Suppose M, s |=
3β. By the truth
deﬁnition, there is a world t with sRt and M, t |= β. By the deﬁnition
of R∼it follows that s∼R∼t∼. And so by the inductive hypothesis,
M ∼, t∼|= β. By the truth deﬁnition again, M ∼, s∼|=
3β.
(b) Next, suppose that M ∼, s∼|=
3β. There is some t∼with s∼R∼t∼
and M ∼, t∼|= β. By the inductive hypothesis then M, t |= β. This
time, we have no direct information about s, t: in particular, we do
not know if sRt. What we do know by deﬁnition of R∼: there are
u ∼s, v ∼t with uRv. But then M, v |= β (as v, t agree on all relevant

Answers and hints to selected exercises / 345
February 2, 2010
formulas), so M, u |=
3β (by the truth deﬁnition), and M, s |=
3β
(because s, u agree).
4 This is a simple modiﬁcation of the standard translation, dropping
the syntactic restriction with the R-atom. There is also a converse
translation, by ﬁrst bringing monadic ﬁrst-order formulas into an equiv-
alent normal form where they only say the following: “some speciﬁed ex-
haustive combinations of (negated) atomic properties (¬)Px∧(¬)Qx∧
· · · occur in the model, while all others do not”.
Chapter 5
1 The trick in modal deduction is usually ﬁnding an underlying propo-
sitional tautology, and then modalizing this. From left to right, use:
(ϕ ∧ψ) →ϕ, (ϕ ∧ψ) →ψ. From right to left, modalize ϕ →(ψ →
(ϕ ∧ψ)) and use Distribution twice.
2 In ﬁnding formal modal deductions, it often helps to ﬁrst do a se-
mantic argument. In this particular case, you will repeatedly need tran-
sitivity of the model plus the existence of successors at any reachable
point. To match this syntactically, use the K4 axiom to extend modal
2-sequences – while the minimal modal logic K allows you auxiliary
implications like
22ϕ ∧
23⊤→
23ϕ.
3 Suppose that neither ⊢α nor ⊢β. By the completeness theorem,
there are models plus worlds verifying ¬α and ¬β. Put these models
together disjointly under a joint new root connected only to the two re-
futing worlds, and observe that at that root,
2α∨
2β is false. Therefore,
this formula cannot have been provable.
4 These are standard facts from logic textbooks.
5 See the Manual of Intensional Logic (van Benthem, 1988a) for this
simple argument, and a reference to a paper by Tore Langholm, who
attended an early version of this course, where this logic is developed
in more detail.
Chapter 6
1(a) Each round of checking can take |M| steps, and we have a number
of nested rounds equal to the modal operator depth of ϕ: so in total,
order of |M||ϕ| steps.

February 2, 2010
346 / Modal Logic for Open Minds
1(b) The algorithm in the text ﬁnds the truth values of sub-formulas
once and for all at each world in a round, and need not “re-compute”
them in nested settings. This is because the modal language has no
deeper polyadic dependencies between choices.
1(c) For ﬁrst-order logic, what would correspond to worlds are variable
assignments. But the number of these is exponential, if we give arbitrary
formulas as input. By taking a bit more care, though, reusing memory
locations when cycling through assignments, this problem may be seen
to be PSPACE. The general observation: if we ﬁx a ﬁnite number of
variables, and only feed formulas of that fragment to the model, then
the modal-style algorithm works, and it runs again in PTIME.
2(b) Counting very roughly, with n the maximum of the sizes of the
two models, each stage of the bisimulation algorithm requires compar-
ing all still available pairs of worlds, looking at all their successors:
n2 ∗n2 = n4 steps. There are n2 rounds, since one pair disappears in
each round: total order n6. Actually, this hugely over-counts!
3 Being a celebrity is deﬁnable by the ﬁrst-order formula ∀y̸=x(¬Kxy∧
Kyx). Existence of a celebrity is then ∃x∀y̸=x(¬Kxy ∧Kyx), of quan-
tiﬁer depth 2. So you would expect a quadratic-time algorithm for
testing this, but in fact it can be done in linear time! Give each person
a red ball. Now repeat the following until no longer possible: Take any
two persons x, y from the group you have not eliminated yet, and check
if Kxy. If YES, then take away the red ball from x; if NO, then take
it away from y. It is easy to prove that the last person whose still has
a red ball is a celebrity. The moral: general complexity is sometimes
circumvented by clever special programs.
Chapter 7
1(a) ∃y(Rbxy ∧(∃x(Rayx ∧Px) ∧∀x(Rbyx →∃y(Raxy ∧Qy))).
1(b) The formula SINCE pq is not invariant for bisimulation. It is
true in the black world in the model to the left, but not in that of the
bisimilar model to the right:
p ◦
% •p
e
• p
1(c) This simple translation goes again into monadic ﬁrst-order logic.
1(d) This dependence formalism translates into the Guarded Frag-
ment in an obvious way using a family of atomic predicates for the
independence relations of each arity.

Answers and hints to selected exercises / 347
February 2, 2010
2(a) The 2-variable translation for the basic modal language in our
main text does not need additional variables to deal with the two new
inductive cases for E and U.
2(b) In the following diagram, the dotted line is a standard modal
bisimulation: but Ep holds to the left, and not to the right.




•
•
•p
2(c) To match modal logic with the universal modality, take ordinary
modal bisimulations, and add a further condition of “totality”: each
point in each model must be connected to a point in the other model.
2(d) By the same reasoning as with the algorithm for the basic modal
language, model-checking stays PTIME.
2(e) The total { 3, E}-bisimulation between a 2-cycle and a reﬂexive
1-cycle refutes this.
3(a) We already saw how to deﬁne this property: ∃y(y < x ∧Py ∧
∀z((y < z ∧z < x) →Qz)).
3(b) The solution favoured by most students uses the following prin-
ciple. If I have a translation of ϕ with a free variable x using (possibly)
bound variables x, y, z only, then there is an equivalent formula (in a
suitable sense) with y as its only free variable, again using x, y, z as
bound variables. Better: do a simultaneous version: show that every
formula has three analogous {x, y, z} 3-variable translations, with free
variables x, y, z respectively. Then the induction will work smoothly.
4(a) The translation takes any hybrid formula ϕ and variable x, and
writes an equivalent ﬁrst-order formula ST x(ϕ) with the free variable x.
The clauses for proposition letters and Booleans are as in the standard
translation. Here are the rest:
ST x(3ϕ)
:=
∃y(Rxy ∧ST y(ϕ)
for some fresh variable y
ST x(@yϕ)
:=
ST y(ϕ)
ST x(↓y · ϕ)
:=
[y/x]ST x(ϕ)
5(b) First ﬁnd a suitable notion of “guarded bisimulation” (or look
this up in Andr´eka et al. (1998)). Then use two very simple ﬁnite mod-
els with a guarded bisimulation between them to establish the non-
invariance of the formula Ex¬Px.

February 2, 2010
348 / Modal Logic for Open Minds
6 The most relevant properties are linear order for both relations, their
discreteness (if a point has a successor, it has an immediate successor),
and the existence of a beginning, but no end point. To relate the two
orders, the crucial property is “conﬂuence”: going “North East” leads
to the same spot as going “East North”. You can try to write this up
for yourself now, or look at Chapter 24 for more hints.
Chapter 8
1 One can prove this Depth One feature semantically, or via the earlier
translation into monadic ﬁrst-order logic, which has the same Quantiﬁer
Depth One property. An explicit syntactic algorithm uses a bunch of
valid equivalences, where the S4-laws compress sequences
22 and
33.
Next, modalities
2 can be distributed over conjunctions and
3 over
disjunctions, moving ever further inside. To overcome the remaining
barriers, one uses the following principles, valid and provable in S5:
2(A ∧
2B) ↔(2A ∨
2B),
2(A ∧
3B) ↔(2A ∨
3B)
Another method (actually, a bit nicer) works by observing that, over
S5-models, inside occurrences of modalities can be removed by the
following valid schema:
ϕ(. . .
3B . . .) ↔(3B ∧ϕ(. . . ⊤. . .)) ∨(¬3B ∨ϕ(. . . ⊥. . .))
4 Along the ﬁnite “spines”, we show that GL holds on each ﬁnite strict
linear order, by induction on the length. Let
2(2p →p) hold anywhere
along the spine. Then
2p →p holds everywhere to the right. Look at
the endpoint:
2p holds there.
2(2p →p)
2p →p
2p →p
2p →p
•
•
•
•
2p
2p
p
p
p
But then we have p there, which makes
2p true at the one-but last
point: which makes p true there, which makes
2p true at . . . etcetera,
until you get a “round-trip” ending in the conclusion that
2p was true
at the original point.
For the root, show that if L¨ob’s Axiom fails there, it would also
fail on one of the spines. If
2(2p →p) is true in the root, and
2p is
not, then there is a successor (on a spine!) where ¬p holds, as well as
2p →p, and hence ¬2p. Moreover,
2(2p →p) still holds in this point
(since, by transitivity,
22(2p →p) holds in the root).
5 This is a standard argument in completeness theorems for special
modal logics. For instance, to prove reﬂexivity, assume that
2ϕ be-

Answers and hints to selected exercises / 349
February 2, 2010
longs to a maximally consistent set Σ. Since we have the T-axiom, and
maximally consistent sets are closed under deductive consequences, we
must also have ϕ in Σ. By deﬁnition of the order in Henkin models,
this means that RΣΣ. (Arguments are not always as easy as this!)
6 No: the modal logic becomes richer. On ﬁnite trees the McKinsey
Axiom
23ϕ →
32ϕ is valid, due to the existence of end-points. But
this principle is not derivable in S4, and it fails, for instance, on the
inﬁnite reﬂexive and transitive frame of the natural numbers (N, ≤),
setting V (p) equal to the even numbers.
Chapter 9
1 To practice, you should do a few examples in detail, and then acquire
the facility of reading oﬀthe correspondents directly from the modal
forms. This is easy – but many professional modal logicians are bad at
it! Here are the two correspondents:
∀y(Rxy →∃z(Rxz ∧∀u(Rzu →u = y))),
∀y(Rbxy →∀z(Rayz →∃u(Raxu ∧Rbuz))).
2 The axioms give precisely the two inclusions for the relation RP to
be the converse of RF .
3 Here are the key points in the proof of the Sahlqvist Theorem for
frame correspondence, ignoring manipulations up to logical equivalence
in the method. First, any universal second-order formula implies all
its (ﬁrst-order) substitution instances, and so the second-order frame
form of the modal axiom implies the computed ﬁrst-order correspon-
dent. Conversely, let that correspondent hold in a frame. Consider any
valuation V making the antecedent of the modal axiom true. V con-
tains a ﬁrst-order deﬁnable minimal valuation Vmin still making the
antecedent true. By construction, this means that the antecedent of
the computed correspondent holds, and hence also its consequent. But
since that consequent is syntactically positive, it will continue to hold
for the valuation V extending Vmin.
4 This is a tricky correspondence. In one direction, it is easy to see that
atomic pre-orders validate the McKinsey Axiom. But the converse is a
non-routine argument involving the Axiom of Choice to ﬁnd a subset
V (p) in a non-atomic preorder with
23p,
23¬p both true.
Chapter 10
1(a)
3pq translates into ∃yz(Rxyz ∧Py ∧Qz); 3 variables suﬃce for
the fragment. Incidentally, it is of some interest to determine what you

February 2, 2010
350 / Modal Logic for Open Minds
take to be the move for this dyadic modality in a natural evaluation
game for the language.
1(b) Bisimulation arguments for polyadic modal logic are simple once
you have the right zigzag clauses. Here is one direction: if xEx′ and
Rx, yz, then there exist y′, z′ with Rx′, y′z′ and yEy′, zEz′.
1(c) The correspondence for Associativity is a simple Sahlqvist sub-
stitution case, and it yields (draw a picture to see what happens) the
ﬁrst-order “re-composition” principle
∀yzus((Rx, yz ∧Ry, us) →∃t(Rx, ut ∧Rt, sz)).
2 The triangle to the right has all points uniquely deﬁnable. E.g., the
two p-points diﬀer since only one satisﬁes
3qr. The three q-points can
be distinguished likewise by their environments. The left-hand triangle
contracts to one with just one r-point. Comment: if you picture the
result, you will ﬁnd that (betweenness-) bisimulation contractions of
ﬁgures in the plane need not themselves be planar ﬁgures!
3(a) It is easy to draw counter-examples to both distribution laws, but
the reason behind them should be clear: the neighbourhood semantics
treats modalities as quantiﬁer combinations ∃∀, and this blocks both
forms of distribution holding for the separate quantiﬁers.
3(b) The notion of bisimulation here is basically the “topo-bisimula-
tion” of Chapter 19. The converse result for ﬁnite models is like the
basic modal argument in Chapter 3, but you need some more “book-
keeping” for two reasons: (a) we are relating worlds to sets of worlds,
and (b) the zigzag clause involves a 2-quantiﬁer combination.
3(c) This is a patent (though surprisingly widespread) fallacy. For in-
stance, intuitionistic propositional logic (PSPACE-complete) is weaker
than classical logic (NP-complete)! Or even better: classical logic is
weaker than the inconsistent logic (with all formulas “valid”), but the
complexity of membership for the latter is trivial.
3(d) Here is an example of the semantic construction behind the de-
composition fact. Suppose that formula A1 does not imply either B1 or
B2. Take neighbourhood models M11, s11 for A1 ∧¬B1 and M21, s12
for A1 ∧¬B2. Do the same for A2: this gives 4 models in total. Now put
all these models together disjointly with one new world s that has only
two neighbourhoods {s11, s12} and {s21, s22}. These suﬃce for mak-
ing
2A1,
2A2 true at s, without making
2B1 or
2B2 true. Note: this

Answers and hints to selected exercises / 351
February 2, 2010
“glueing” of models is simpler than the earlier joint-rooting construc-
tion in relational models, since neighbourhood models are so “loose”.
The complexity of deciding validity is simpler now, as the next rounds
of attempts at validity with the outer
2 “peeled oﬀ” do not repeat sub-
formulas across cases. We leave it to the reader to see why the resulting
process can be done in NP-time.
Chapter 11
1 To refute the modal Distribution Axiom on these general models,
take a world 1 with domain {d} which has an accessible world 2 with
domain {e}. Let P(d) hold in 1, and nowhere else. Consider a variable
assignment sending x to d and y to e. Then
2Px and
2(Px →Py) are
both true in world 1 (note that no world has both the objects needed
for the second formula), but
2Py is false.
2 This is a simple exercise. We give an explicit answer for the more
complex next question.
3 The key step in the correspondence proof is this. Suppose that wRv,
but Dv has an object d that is not in Dw. Now make the predicate
P true for all objects from Dw in any world where they occur. This
valuation makes the formula ∀x2Px true at w, but
2∀xPx fails, since
the domain of the accessible world v has an object d which lacks P.
Actually, this correspondence can also be found “automatically” by
an easy extension of the substitution method of Chapter 9 to mod-
els with domains at worlds: syntactically, the Barcan Axiom then has
“generalized Sahlqvist form”.
4 This is somewhat tricky, though you can see some special cases:
for instance, the principle will hold in a frame if all worlds have just
one object. Computing frame correspondences for non-ﬁrst-order modal
predicate-logical axioms is a nice sport!
5 Here is a sketch of the undeﬁnability proof (you will agree that this
is really too hard for an exercise). Take a family of frames Fn having
a root w plus n successors v1, . . . , vn. The domain of w is the natural
numbers, and each vi only has two objects: v1 has {1, 2}, v2 {2, 3},
. . ., vn {n, n + 1}. On each such frame,
3∃xPx →∃x3Px is true. It is
clearly true in all vi, as these have no successors. Next, suppose
3∃xPx
holds at w, under any valuation. Either object 1 has P in v1, and we
get
2P1, since v1 is the only world where 1 occurs, or it does not. Then
2 has the property P in v1, and either it also has P in v2, and w has

February 2, 2010
352 / Modal Logic for Open Minds
2P2, or we go on. If we never get ∃x3Px in this way, the ﬁnal point
n + 1 in vn is a witness for
2P(n + 1) at w.
Next, assume that our modal
3∃xPx →∃x3Px has a ﬁrst-order
frame equivalent α in Lcorr: we shall derive a contradiction. First, using
Compactness for ﬁrst-order logic, we can describe the union of {α} and
the theory of these models in such a way that there exists a model M
for them of the following form. M consist of a root w, and an inﬁnite
set of successor worlds v lying in a discrete linear order with a unique
beginning and endpoint and no “limit points”. Thus, the ordering of the
v’s is like the natural numbers followed by copies of the integers, and
ending in a copy of the negative integers. Here each successor world v
has two objects, while each object occurs in exactly two worlds, except
for the endpoints, at each of which an isolated object occurs. But then,
we can refute our modal predicate-logical principle
3∃xPx →∃x3Px:
Let P be false of the isolated objects at the beginning and end world
v, and, using the special ordering of the v’s described, make P true
for just one object in each world so as to avoid ever making the same
object P across worlds.
As a result, the antecedent
3∃xPx holds in model M at the initial
world w, but the consequent ∃x3Px does not. But the ﬁrst-order sen-
tence α was true in M by construction, and it was to be equivalent to
our modal axiom: a contradiction.
6 Instead of a prove, note that the key to this modiﬁed translation
is a binary “existence” predicate Ewx saying that object x exists in
world w. The clauses for the quantiﬁers use E-restricted quantiﬁcation,
and those for the modalities may use E to restrict attention to worlds
containing the relevant objects.
Chapter 12
Note: Models are always supposed to have equivalence relations, but
just the minimal set of their “uncertainty lines” is displayed in the
pictures that follow.
1(a) Only one p-world has ⟨1⟩¬p, only one has K1p ∧⟨2⟩⟨1⟩¬p.
1(b) The bisimulation contraction has only two worlds:
p ◦
1
◦¬p
2

Answers and hints to selected exercises / 353
February 2, 2010
2 The ﬁrst is valid, just using reﬂexivity. Counter-example for the sec-
ond: take the following two worlds indistinguishable for 1 but distin-
guishable for 2:
p
1
¬p
3(b) The main point of the ﬁxed-point axiom is that having ϕ true at
the end of every ﬁnite sequence of accessibility links means the same
as (a) having ϕ true right now, and (b) at the end of every single link,
having ϕ true at the end of every ﬁnite sequence of accessibility links.
The induction axiom follows from an application of standard induction
on the natural numbers, though abstractly, it expresses that common
knowledge is a greatest ﬁxed-point in the sense of Chapter 22.
3(c) Consider an inﬁnite alternation 1 ∼A 2 ∼E 3 ∼A 4 ∼E · · · .
Common knowledge of p in the group {A, E} says that each world in
this sequence satisﬁes p. But it is easy to prove that each formula ϕ
of operator depth k without common knowledge has its truth value at
world n determined by the worlds reachable from n in at most k steps.
Therefore, outside of that, we can make p false without any change in
truth value for ϕ.
3(d) The implication from left to right fails: just think of groups 1, 2:
knowledge of the single agents does not guarantee common knowledge.
The converse is valid: by the semantic deﬁnition of common knowledge,
it is inherited by subgroups.
Chapter 13
1 To check the axiom, consider any closest A ∨B world. This is either
A or B. Without loss of generality, suppose the former. Then it is also
a closest A-world: for, if there were still closer A-worlds, then there
would also be closer A ∨B-worlds. But our premise A ⇒C says that
it is then also a C-world, and we are done.
2 This argument is a bit technical, though it becomes easy once you
analyze just why this axiom is valid on connected orders. The exercise
is useful to see that frame correspondence techniques work just as well
for more complex modal operators.
3 If my most plausible worlds do not satisfy p, then any conditional
p →q is true there, and by our truth deﬁnition, I believe it. But this
says nothing whatsoever about my conditional beliefs Bpq were I to
move to the area of the p-worlds.

February 2, 2010
354 / Modal Logic for Open Minds
4 Assume the deﬁning modal formula U(A →⟨≤⟩(A ∧[≤](A →B))).
Consider a minimal A-world x. Given the condition, there is an A-world
y at least as close (so, equally close as x) such that all A-worlds at least
as close as that satisfy B. This implies that x satisﬁes B. Conversely,
suppose that all minimal A-worlds satisfy B. Consider any A-world: it
must have some minimal A-world s below it, since the model is ﬁnite
(and given the other conditions on our ordering). But that s satisﬁes
A ∧[≤](A →B): any still lower A-world is equally close, and hence it
is minimal, too, and hence it satisﬁes B by assumption.
5 The intuitive reason for the failure of weakening of knowledge is this.
Suppose that I Nozick-know that A: then (a) A is true, (b) I believe that
A, and (c) I would have believed that ¬A, had ¬A been true: which
refers to the closest worlds to the actual one where ¬A holds. Now
consider knowledge of A ∨B. In particular, were this to be false, that
is, ¬A ∧¬B holds, I would have to believe that. But the closest worlds
where ¬A ∧¬B holds need not be closest worlds where ¬A holds, so
our premise of knowledge about A gives us no information about what
holds in ¬A ∧¬B-worlds. It is easy to turn this into a concrete model
as a counter-example. The more technical reason is that the logical
form of Nozick’s epistemic explanation has both positive and negative
occurrences of the proposition B, blocking either upward or downward
semantic monotonicity.
Chapter 14
1 The ﬁrst principle is valid, the second is not: for obvious reasons.
2 For instance, semantically, the second principle says that arbitrary
ﬁnite sequences of a and b transitions can also be viewed as arbitrary se-
quences of segments arising from ﬁrst taking zero or more a transitions
and then zero or more b transitions. Formal proofs are complicated:
you have to use the Induction Axiom repeatedly.
3 A successful execution of the program WHILE E DO S, or (?E; S)∗
; (¬E)?, is a ﬁnite sequence of states satisfying the condition E with
completed S-transitions between them, and ending with an S-transition
to a state where ¬E holds. We start with a state where I holds, and
thanks to the global truth of {I}S{I}, we know that each S-transition
in the given sequence leads to an I-state. Therefore, the ﬁnal state
reached has both I and ¬E. We can also proceed formally, with a
PDL-proof for the valid formula I →[(?E; S)∗; (¬E)?](I ∧¬E). This is
equivalent to the formula I →[(?E; S)∗](¬E →(I ∧¬E)), that follows
in the minimal modal logic from I →[(?E; S)∗]I. The latter can be

Answers and hints to selected exercises / 355
February 2, 2010
proved with the Induction Axiom, using a globally given implication
I →[S]I to which the Necessitation Rule can be applied.
4(a) Valid: items 2, 3, 5 only. The answers are simple modal logic.
4(b)
{A}S{B}, {B}S{C} ⇒{A}S; S{C}
{A}S{B} ⇒{¬B}converse(S){¬A}
5 The ﬁrst axiom is a Sahlqvist form, both ways. The two directions
say that (a) Rb ⊆Id ∪(Ra; Rb), and (b) Id ⊆Rb, (Ra; Rb) ⊆Rb. The
Induction Axiom is not a Sahlqvist form, but given the other principles,
we do get that Rb ⊆(Ra)∗.
6 In the inductive step of invariance for formulas ⟨π⟩ϕ, we want to
proceed as in the modal case ⟨a⟩ϕ in Chapter 2, but this step requires
the same zigzag behaviour for complex deﬁned transition relations Rπ
as for the given atomic relations Ra.
8(a) ⟨¬(R)⟩ϕ ↔(ϕ ∧¬⟨R⟩⊤)
8(b)
⟨¬(R; ¬¬S)⟩p ↔p ∧¬⟨R; ¬¬S⟩⊤
↔p ∧¬⟨R⟩⟨¬¬S⟩⊤
↔p ∧¬⟨R⟩(⊤∧¬⟨¬S⟩⊤)
↔p ∧¬⟨R⟩(⊤∧¬(⊤∧¬⟨S⟩⊤))
↔p ∧¬⟨R⟩¬¬⟨S⟩⊤
↔p ∧¬⟨R⟩⟨S⟩⊤
↔p ∧¬⟨R; S⟩⊤
↔⟨¬(R; S)⟩p
Chapter 15
1 The question does not change the diagram. The answer goes to
rwb
1
3
444444444444444
rbw
2
F
F
F
F
F
F
F
F
wbr
wrb
1
x
x
x
x
x
x
x
x

February 2, 2010
356 / Modal Logic for Open Minds
Here only 2 knows the cards, the others do not, but for instance, agent
3 knows that 2 knows.
2(a) The point is that the sequence does not terminate in common
knowledge any more. Referring to the diagram in the text: When the
ﬁrst dirty child says she does not know her status, only world DCC is
ruled out. So 2 now knows her status, and can say so. This rules out all
worlds except CDC and DDC. 3 also knows her status now, and can
say that next, but this was already common knowledge by this stage,
and the model does not change. But in this model, 1 still does not
know his status, and repeating the procedure gets stuck at this model,
instead of just the actual DDC.
3(a) The information model is as follows:
wrw
3
2,3
wwr
3
rww
1,2,3
www
3(b) True, and the update goes to
wrw
3
wwr
3(c) The man in the middle knows his colour now, but announcing
that fact does not help the man at the bottom.
4(a) Here is one example of a valid diamond conversion: ⟨!P⟩⟨i⟩ϕ ↔
P ∧⟨i⟩⟨!P⟩ϕ.
4(b) In removing dynamic modalities from PAL-formulas in the com-
pleteness proof, it suﬃces to start from their innermost occurrences.
The given axioms deal with that, and make the innermost dynamic
modality eventually disappear when it hits atomic formulas. After that,
the formula is less complex, and we repeat this procedure.
5 This Sahlqvist form has a ﬁrst-order meaning describing a “com-
muting diagram” between action and indistinguishability:
∀y(Raxy →∀z(Riyz →∃u(Rixu ∧Rauz))).
6(a) The ﬁrst event is just announcement via world elimination.

Answers and hints to selected exercises / 357
February 2, 2010
6(b) The second event requires, not world elimination but “link cut-
ting” (cf. Chapter 23): all of 2’s uncertainties between worlds where 1
has diﬀerent cards disappear.
6(c) This cuts the uncertainty links between 1’s card positions for the
other players.
8(a) In a model with just a p-world and a ¬p-world, mutually epis-
temically accessible and equiplausible, [!p]Kp holds, and hence, in our
semantics, also [!p]BKp. But the conditional belief formula BpKp is
not true, since even in just the p-world, I do not know that p, because
I still have epistemic access to the ¬p-world outside.
8(b) Here are the most striking laws of belief change to be checked.
First consider changes in conditional belief under hard information:
[!P]Bψϕ ↔(P →BP ∧[!P ]ψ[!P]ϕ). On the left hand side, this says that
in the new model M|P, s, ϕ is true in the most plausible ψ-worlds. With
the usual precondition for true announcement, the right-hand side says
that in M, s, the most plausible worlds that are P now and will become
ψ after announcing P, will also become ϕ after announcing P. This is
indeed equivalent. Next consider belief change after soft information
changing the plausibility order:
[⇑P]Bψϕ ↔
(3(P ∧[⇑P]ψ) ∧BP ∧[⇑P ]ψ[⇑P]ϕ) ∨
(¬3(P ∧[⇑P]ψ) ∧B[⇑P ]ψ[⇑P]ϕ)
The left-hand side says that, after the P-upgrade, all most plausible
ψ-worlds satisfy ϕ. On the right-hand side, there is a case distinction.
Case (1): there are accessible P-worlds in the original model M that
become ψ after the upgrade. Then lexicographic reordering ⇑P makes
the “best” of these worlds in M the best ones over-all in M⇑P to
satisfy ψ. Now, in the original model M – viz. its epistemic component
visible from the current world s – the worlds of Case 1 are just those sat-
isfying the formula P ∧[⇑P]ψ. Therefore, the formula BP ∧[⇑P ]ψ[⇑P]ϕ
says that the best among these in M will indeed satisfy ϕ after the up-
grade. And these best worlds are the same as those described earlier, as
lexicographic reordering does not change the ordering of worlds inside
the P-area. Case (2): no P-worlds in the original M become ψ after
upgrade. Then the lexicographic reordering ⇑P makes the best worlds
satisfying ψ after the upgrade just the same best worlds over-all as
before that satisﬁed [⇑P]ψ. Here, the relevant formula B[⇑P ]ψ[⇑P]ϕ in
the reduction axiom says that the best worlds become ϕ after upgrade.

February 2, 2010
358 / Modal Logic for Open Minds
8(e)
[⇑P]B+ϕ ↔
(P ∧B+(P →[⇑P]ϕ)) ∨
(¬P ∧B+(¬P →[⇑P]ϕ) ∧K(P →[⇑P]ϕ))
Chapter 16
1 Here is perhaps the most striking axiom linking ⟨≤⟩and ⟨<⟩:
ϕ ∧⟨≤⟩ψ →⟨<⟩ψ ∨⟨≤⟩(ψ ∧⟨≤⟩ϕ)
To see that this is valid, suppose that ϕ ∧⟨≤⟩ψ is true in a world x.
So we have a ≤-successor y of x where ψ holds. Now either y ≤x, and
so we have ⟨≤⟩ϕ true in y, and hence ⟨≤⟩(ψ ∧⟨≤⟩ϕ) true at x, or not
y ≤x, so x < y, and then ⟨<⟩ψ is true at x.
2 The antecedent talks about a successor world that agrees with the
current world on the truth value of the formula α. But then we can
just as well include α in the set Γ of formulas for which there was no
diﬀerence in truth value.
3 The equivalence
[#ϕ]⟨≤⟩ψ ↔(¬ϕ ∧⟨≤⟩[#ϕ]ψ) ∨(ϕ ∧⟨≤⟩(ϕ ∧[#ϕ]ψ))
closely follows the three options in the deﬁnition of the preference re-
lation following our “taking” of the suggestion #ϕ The only old pref-
erence arrows that do not pass are those running from ϕ-world to a
“better” ¬ϕ-world. For the latter worlds, this leaves all preference ar-
rows in the new model, for the former, only those toward ϕ-worlds.
4 The lifted set order is easily seen to be reﬂexive and transitive on
non-empty sets. It is also linear, if the underlying order was: for, if
some object in X has no preferred object in Y , then each object in Y
will be majorized by that X-object. Moreover, the set order will have
new properties, such as downward monotonicity in its ﬁrst argument: If
P XY and Z ⊆X, then P ZY . Likewise there is upward monotonicity
in the second argument, etcetera.
5(a) These properties of the induced object ordering follow directly
from those of linear priority sequences. E.g., consider the connected-
ness of object ordering: the smallest index where the objects diﬀer in
a property determines which one is “better”. Conversely, every ﬁnite
connected order can be obtained from some P in this way. Take the
“properties” to be the equivalence classes of the relation x ≤y ≤x
(“mutually connected”), and order these properties in the order of

Answers and hints to selected exercises / 359
February 2, 2010
proper precedence. It is easy to show that x ≤y holds iﬀthe objects
x, y satisfy the above criterion.
5(b) Associate each property P in the priority sequence with an ob-
ject ordering x ≤P y iﬀPx →Py. Then, on ﬁnite sequences, the
“compensation criterion” given for the graphs reduces to the one given
earlier by an easy argument. In this manner also, the induced ordering
for the disjoint union of two priority graphs will be the intersection of
the induced orders for the separate graphs.
Chapter 17
1 Let moveII be the union of all moves for player II. The formula
describing ﬁnal outcomes is [((turnII ; moveII )∪(turnI ; σ))∗](end →p).
2 In ﬁnite game models of this “distinguishing” kind, by a simple ar-
gument, each state s has a unique deﬁning formula DEF s. Then we
can deﬁne every pair (s, t) in the given strategy σ as the program
?DEF s; T ; ?DEF t, where T is the universal relation. A ﬁnite union of
such pairs then deﬁnes the strategy relation σ.
3 This game law is like earlier Perfect Recall principles in Chapter
15, expressing commuting diagrams between moves and epistemic in-
distinguishability – now specialized to speciﬁc players at speciﬁc turns.
Uncertainties that a player has after playing move a must come from
uncertainties she had before playing that move: no new uncertainties
are created by her own actions. In such games, uncertainty can only
grow through actions of other players, owing to defective observation.
4 The formula [bi ∗](end →ϕ) →[move]⟨bi∗⟩(end ∧⟨≤⟩ϕ) says the
following. Let playing the Backward Induction move a lead to ﬁnal
outcomes that all satisfy ϕ. No other available move b can have all its
outcomes better than all those of a, since then we should not have cho-
sen a. Therefore, there is at least one outcome from b through further
Backward Induction play for which some a-outcome is at least as good,
and this veriﬁes the formula ⟨≤⟩ϕ. The method of “minimal substitu-
tion” of Chapter 9 turns this into a real correspondence argument.
5 For instance, the axiom [!P]{σ}ϕ ↔(P →{σ|P}[!P]ϕ) says that
the eﬀect of playing strategy σ in the game having only its former P-
nodes remaining is ϕ in that pruned game iﬀthe totally P-restricted
strategy σ|P arising from σ by making sure that only moves are played
inside the P-area, and tests are made relativized to A leads to states
that will become after the update, i.e., satisfying not ϕ, but [!P]ϕ.

February 2, 2010
360 / Modal Logic for Open Minds
6 From each node in the game tree, there can be only ﬁnite upward
sequences in the move relation that is the union of all moves for all
players. This is a case of well-foundedness on a transitive relation, and
therefore, L¨ob’s Axiom holds for the corresponding modality.
7 Here is an illustration. Consider a sequence of Backward Induction
steps as creating expectations, changing plausibility among branches of
game trees viewed as worlds:
A
rrrr
D
D
A
rrrr
D
D
A
rrrr
rrrr
99
1, 0
E
{{
CC
1, 0
E
{{
{{
CC
1, 0
E


888
0, 100
99, 99
0, 100
99, 99
h1
h2
h3
h1
h2
>
h3
h1
> h2 > h3
Start with the empty plausibility relation. At a turn for player i, suc-
cessor node x “strictly dominates” node y for i if all currently most
plausible end nodes following x are worse for i than all currently most
plausible end nodes following y. The BI procedure then essentially con-
sists in iterated soft updates using the rationality assertion that “No
player plays a strictly dominated move at her turns”.
Chapter 18
1 (Hp∧Pq) →P(p∧q) is valid, and so is its mirror image (Gp∧Fq) →
F(p ∧q). Also, p →GPp is valid, and so is its mirror image p →HFp.
The idea should be clear.
2 This is standard: the corresponding ﬁrst-order formula of this tense-
logical axiom is so-called “forward discreteness” of temporal order:
∀x∃y(x < y ∧∀z(z < y →(z = x ∨z < x))).
3 Visualize this on a line. For instance, the complement of the ﬁnite
union of convex intervals (0, 1]∪(2, + inf) is the ﬁnite union (−inf, 0]∪
(1, 2]. And the operation F(X) = { s | ∃x ∈X : s < x } takes any
non-empty set to a downward-closed inﬁnite convex one.
5 A typical connection in an interval setting is that i < j iﬀp(i) < p(j)
where a set interval X precedes Y if all members of X precede all
members of Y . The following observations are crucial here: (a) i ∈F
for each ﬁlter F in p(i), (b) p(i) < p(j) implies that Fi < Fj for the
special ﬁlters Fi of the form {j | i ≤j}, and (c) Fi < Fj implies that
i′ < j′ for some extensions of i, j, respectively, and this implies i < j
by Monotonicity for intervals.

Answers and hints to selected exercises / 361
February 2, 2010
6(a) The only valid modal-temporal principle here is F
3ϕ →
3Fϕ:
if a branch forks oﬀfrom the actual history later, then it is a possible
history right here already. Simple counter-examples may be drawn for
all other stated principles in branching trees. For instance,
3Fϕ →
F
3ϕ is refuted to the left in the following tree with 3 nodes, where the
double line marks the actual history:
ϕ
3Fϕ, ¬F
3ϕ
k
k
k
k
k
k
k
k
k
k
k
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
T
6(b) The previous answer does part of this, but we can make the
matching principle more agent- and action-speciﬁc in the following
form: Fa⟨i⟩ϕ ↔(Fa⊤∧⟨i⟩Faϕ). The meaning of this is that branches
that are epistemically accessible for an agent at some later stage t than
the present s are also accessible right now, since their course from s
to t was like the current history. Similar extensions may be given for
our dynamic-doxastic principles concerning belief change after updates,
again along histories in trees.
Chapter 19
1(a) The main inductive clause in the proof of the Locality Lemma is
for the modality M, s |=
2ϕ. If ϕ is true in some open neighbourhood
of s, then it is also true in the intersection of that neighbourhood with
the given open set U, which is open again. If ϕ is true in some open set
inside the model M|U, then the latter is also an open neighbourhood
in the whole model.
1(b) A topo-bisimulation leaves modal formulas invariant. Here is the
crucial case. Suppose that sEt, while M, s |=
2ϕ. That is, in M, all
points in some open set O containing s satisfy ϕ. The topo-bisimulation
E then gives us an open set U in N containing t all of whose members
are E-linked to some point in O. So, take any point u in U: by the
inductive hypothesis, it will satisfy ϕ, and thus t satisﬁes
2ϕ. Finally,
the identity relation from the sub-model M|U is a topo-bisimulation
with the full model M: this derives the Locality Lemma.
2(a) The “two-fork” model indeed satisﬁes the axiom displayed. Con-
sider the implication (¬ϕ∧
3ϕ) →
32ϕ, where ϕ denotes a ﬁnite union
of convex sets.
3ϕ says that the current point s is inﬁnitely approached
by points in ϕ, i.e., by representatives of intervals (diﬀerent from s be-
cause of the ¬ϕ) from the ﬁnite union denoted by ϕ. Therefore, one

February 2, 2010
362 / Modal Logic for Open Minds
of these intervals must occur inﬁnitely often converging toward s. But
that can only happen when s has that interval all the way toward its
left or right, making the apparently stronger statement
32ϕ true.
3(a) For “ﬁlling” a tetrahedron, you might think you get the edges
with Cp, the faces with CCp, and the complete interior only with
CCCp. But once you have all edges, each point in the interior is on
a segment between points on two “cross edges”.
3(b) The real numbers satisfy Cϕ ↔CCϕ since the C-operator al-
ready turns a set into its convex closure on this linear ordering.
4(a) In addition to the triangle inequality stated for distance xy <
distance xz, the list also includes valid principles for distance xy ≥
distance xz and distance xy = distance xz. In the plane, you can even
ﬁnd further valid principles of this sort, expressing its low dimensional-
ity. For instance, it is easy to deﬁne equidistance from our comparative
distance order Nxyz. Then you can state the fact that any circle has
precisely 6 points equidistant with the origin and themselves.
4(b) It is actually an interesting open problem what further valid
principles we would get here.
5 In mathematical morphology, we deﬁned X ◦S as (S →X) + S, or
in vector notation for sets, as: (X −S) + S. Now consider the stated
equation (X ◦S) ◦S = X ◦S. The corresponding logical law is (S →
X) + S ⇔(S →((S →X) + S) + S), and this can be proved from the
valid laws for “resource implication” (both in linear logic and in arrow
logic) that (both ways:) S →X ⇔S →((S →X) + S).
Chapter 20
1 The only intuitionistically invalid De Morgan law is ¬(ϕ ∧ψ) →
(¬ϕ ∨¬ψ). You can give a simple and illuminating counter-example
in a 3-world model with two incomparable successors from the root,
one verifying ϕ only and the other verifying ψ only. The converse im-
plication is intuitionistically valid. A proof of the disjunction ¬ϕ ∨¬ψ
is a proof of one disjunct, say of ¬ϕ. But then from any proof of the
conjunction ϕ ∧ψ, I can manufacture a contradiction by ﬁrst deriving
ϕ, and then feeding this into the proof for ¬ϕ, which will produce a
proof for an absurdity.
2 Intuitionistic propositional logic has the Disjunction Property. This
works by “joint rooting” of counter-examples like the similar splitting

Answers and hints to selected exercises / 363
February 2, 2010
of valid disjunctions of necessity formulas that held for the minimal
modal logic (cf. Chapter 5).
6(a) There is a winning strategy in a dialogue game for the Proponent
in defending the two formulas p ∧¬(p ∧q) →¬q, ((p →q) ∧r) →(p →
(q∧r)). Here is a typical play for the second law (A stands for “attack”,
D for “defense”):
1
P
((p →q) ∧r) →(p →(q ∧r))
2
O
(p →q) ∧r
[A,1]
3
P
p →(q ∧r)
[D,2]
4
O
p
[A,3]
5
P
q ∧r
[D,4]
6
O
?L
[A,5]
7
P
?L
[A,2]
8
O
p →q
[D,7]
9
P
p
[A,8]
10
O
q
[D,9]
11
P
q
[D,6]
12
O
?R
[A,5]
13
P
?R
[A,2]
14
O
r
[D,13]
15
P
r
[D,14]
O has nothing legitimate left to say, and loses.
6(b) For Proponent, winning strategies in a dialogue game are proofs
for the implication from premises to conclusion. For Opponent, winning
strategies are intuitionistic counter-models verifying the premises but
not the conclusion.
7 Intuitionistic predicate logic also has the Heredity property. To make
sure that this holds, the existential quantiﬁer gets the same reading as
the one in modal predicate logic (Chapter 11), stating existence of a
witness in the domain of the current world. The universal quantiﬁer
needs stronger force since object domains may grow – and it now says
that each object in each domain of an accessible world has the property.
Chapter 21
1(a) Analyzing the L¨ob variant
2(2p ↔p) →
2p semantically, you
get exactly the same properties as for L¨ob’s Axiom: transitivity and

February 2, 2010
364 / Modal Logic for Open Minds
upward well-foundedness. This is surprising, and this variant provabil-
ity logic axiomatizes a deductively weaker logic with the same frames,
a case of “frame incompleteness” (cf. Chapter 26).
1(b) The modal formula [1]([2]p →p) →[3]p is equivalent on tri-
modal frames F = (W, R1, R2, R3) to the conjunction of the following
two relational conditions: (a) R3; (R2)∗⊆R1 (with (R2)∗the reﬂexive-
transitive closure of R2), (b) “preﬁx upward well-foundedness” in the
following sense: no world x starts an inﬁnite upward sequence of worlds
xR3y1R2y2R2y3 · · · .
2 Hint: use a ﬁnite universe of relevant formulas for the whole construc-
tion, and in that setting, show that maximally consistent successor sets
that witness existential modalities can be chosen so that the number of
relevant true universal modalities increases. The reason is the following
equivalent form of the L¨ob’s Axiom:
3ϕ →
3(ϕ ∧
2¬ϕ). This special
witnessing procedure enforces ﬁnite depth.
3 First use the transitive closure modality [∗] instead of the regular
2
(this gives the same eﬀect as requiring transitivity of the models for
the basic
2 language). Then restrict attention to well-founded models
inside the modal µ-calculus by noting that the latter property is deﬁned
by the smallest ﬁxed-point formula µp ·
2p.
Chapter 22
1 To understand the meaning of the µ-calculus formula µp ·
2p, con-
sider ﬁrst what the successive approximations do in the well-founded
structure (N, >): you get the empty set, {0}, {0, 1}, etcetera. In gen-
eral, any ordinal α will only be “admitted” in α stages. In general,
the sub-model deﬁned here is its “well-founded part”: the set of worlds
from which there are no inﬁnite downward R-sequences.
2 The soundness of the laws for reasoning with the µ-operator arises as
follows. The equation immediately expresses the ﬁxed-point character.
The rule say that, as in the proof of the Tarski-Knaster Theorem, the
smallest ﬁxed-point is a smallest “preﬁxed point”: i.e., a set closed
under applying the approximation map Fϕ.
3 The operator [π]ϕ of PDL is deﬁnable as a greatest ﬁxed point by
using the deﬁnition [π]ϕ = ¬⟨π⟩¬ϕ, plus the deﬁnition of formulas
νq · ϕ(q). Or argue directly about the approximation sequence for a
greatest ﬁxed-point. This starts allowing all points, and then stepwise
removes all points with some obvious “defect”. This leaves the largest

Answers and hints to selected exercises / 365
February 2, 2010
set of points satisfying the ﬁxed-point equation, and in the case of the
universal modality, it removes all points that can reach some ¬ϕ-point
via the program transition relation (which takes ﬁnitely many steps).
4 All formulas of the µ-calculus are invariant for bisimulation. For
any model M, its cardinality is an upper bound to the length of
“unfolding” any ﬁxed-point in the language. Each step of the ap-
proximation procedure for, say, µq · ϕ(q) leads to a deﬁnable set:
⊥, ϕ(⊥/q), ϕ(ϕ(⊥/q)/q), . . . taking inﬁnite disjunctions at limit steps.
Thus, we can write any µ-calculus formula in inﬁnitary modal logic,
replacing (working inside out) ﬁxed-point formulas by inﬁnitary coun-
terparts. So, given two models M, N with a bisimulation between
them, all formulas are equivalent to their unfolded counterparts up to
the maximum of the model sizes, and we can use the known invariance
for bisimulation of the inﬁnitary modal language.
5 Deriving (2ϕ ∧[∗](ϕ →
2ϕ)) →[∗]ϕ from L¨ob’s Axiom plus the
Fixed-Point Axiom [∗]ϕ ↔(2ϕ ∧
2[∗]ϕ) requires a relatively routine
unpacking of deﬁnitions.
6 Programs are what makes PDL so versatile and attractive. But they
seem to ﬁt best with an emphasis on ﬁnite reachability via some tran-
sition relation π. Can we also add programs to the π-calculus after
all? Suggestively, a non-PDL µ-calculus formula like νq · ⟨a⟩q, which
says that there exists some inﬁnite sequence of a-transitions from the
current point (“the program never breaks down”) is also naturally as-
sociated with a non-terminating program like WHILE ⊤DO a. The
proper formulation of this broader view seems an open problem.
7 The existence of a smallest ﬁxed-point really depends on the exis-
tence of sequences of approximations where each next stage includes
the preceding one(s). For, given the ﬁxed cardinality of the speciﬁc
model that we are computing on, such a sequence cannot keep in-
creasing forever. Monotonicity of the approximation maps Fϕ. guar-
antees this cumulation property, but it is not necessary. The format
Fϕ(X) = { s ∈W | M, p := X, s |= ϕ } ∪X of the inﬂationary
µ-calculus also guarantees it, and moreover, for monotonic maps, it
produces the same results as before.
8 You must show that simultaneous ﬁxed-point equations of the form
µpqr · · · · ⃗ϕ(p, q, r, . . . ) in the µ-calculus yield unique minimal solutions
for all predicates p, q, r, . . . that can be deﬁned explicitly with standard
formulas using only iterated single µ-operators. This is not diﬃcult per

February 2, 2010
366 / Modal Logic for Open Minds
se, but the combinatorial details are hard, unless you really study some
hands-on computations with ﬁxed-points from a textbook.
Chapter 23
1 If player 2 shows his card only to player 1, the resulting model is
rwb
3
444444444444444
rbw
2
F
F
F
F
F
F
F
F
bwr
2
x
x
x
x
x
x
x
x
3
wbr
brw
2
3 














wrb
In terms of event models, player 3 remains uncertain between two
events: “showing white” and “showing red”. This results in the link-
cutting outcome displayed here.
2 The successive levels of the tree look as follows. Start with the fol-
lowing epistemic model:




P •
1
◦¬P
M
The event model for the given scenario is this:
P! (precondition: P )
2
Id (precondition: ⊤)
E
The next two product levels of Tree(M, E) then become as follows:




(P, P!)
2
(P, Id)
1
(¬P, Id)
M × E




(P, P!, P!)
2 (P, P, Id)
2 (P, Id, P !)
2 (P, Id, Id)
1 (¬P, Id, Id)
M × E × E
There is an epistemic bisimulation between these two levels, con-
necting the lower three worlds to the left with the single world (P , P !)
in M × E. Thus, M × E × E is bisimilar with M × E, and the tree
iteration is ﬁnite modulo bisimulation.

Answers and hints to selected exercises / 367
February 2, 2010
3 If M and E are both transitive, then so is the product model M×E.
For, if (s, e) ∼(t, f) ∼(u, g), then by the deﬁnition of product update,
we have s ∼t ∼u, and hence s ∼u by transitivity in M, and also
e ∼f ∼g, which implies e ∼g by transitivity in E. By product update
once more, (s, e) ∼(u, g). This argument fails with linear order. Say, to
have that (s, e) ≤(t, f) we need that both s ≤f and e ≤f, but even
when M and E are both linear, why would the ordering in both cases
go the same way? It is easy to also draw concrete counter-examples.
One general principle is this: at least those relational conditions on
models are preserved that are deﬁnable by so-called universal Horn
clauses ∀x1 · · · ∀xk(A →B), where A, B are conjunctions of atoms.
5 Perfect Recall implies Synchronicity by a simple induction. First,
it immediately rules out that the empty sequence could be ∼-related
to any longer sequence. Next, if two non-empty histories X, Y are ∼-
related, then so are the sub-sequences X−, Y −of length one less. But
by the inductive hypothesis, these already had the same length.
6 A simple principle in the epistemic-temporal language that corre-
sponds to the DEL recursion axiom for knowledge is Fa
3ϕ ↔(Fa⊤∧
3Faϕ). You can also try to ﬁnd more sophisticated ones.
7 For TPAL on protocol models, the axiom ⟨!P⟩q ↔(⟨!P⟩⊤∧q)
always holds from left to right. And from right to left, if !P is exe-
cutable according to the protocol, then it will not change truth values
of atomic statements. As for the key knowledge axiom ⟨!P⟩Kiϕ ↔
(⟨!P⟩⊤∧Ki(⟨!P ⟩⊤∧⟨!P⟩ϕ)), it is a similar adaptation of the PAL
knowledge axiom, putting executability assertions in the right places.
8 In particular, to formalize the Muddy Children, we need a common
knowledge modality CG, and as it stands, we have no TPAL analysis
for this. More ambitiously, Muddy Children involves a process where
implicit distributed knowledge DG of agents eventually gets turned
into common knowledge, so we would need extensions of our temporal
languages that can deal with distributed knowledge.
Chapter 24
1 If we can tile the whole plane, then we can obviously tile each ﬁnite
quadrant. Conversely, given some ﬁnite set of tiles, consider a tree whose
nodes are tilings for quadrants of successive increasing sizes. Note that
this tree is ﬁnitely branching, as there are only ﬁnitely possible tilings
for a quadrant. Note also that the tree has inﬁnitely many nodes. By

February 2, 2010
368 / Modal Logic for Open Minds
Koenig’s Lemma, there must be some inﬁnite branch through the tree.
But such a branch is a tiling of the whole plane!
2 We have discussed this issue in Chapter 7 already: the crucial point
in the proof for the ﬁrst-order case is the assertion that the models of
the ﬁrst-order formula Grid start with a copy of N × N. This requires
close scrutiny of the ordering properties that you have written down. In
the modal version of the result, the tricky step is this. Suppose that the
modal formula describing the tiling holds in some abstract grid model
M, whose precise nature we do not know. How do we read oﬀa correct
tiling from M for the concrete structure N×N in a consistent manner?
This requires some care with the function matching worlds in M and
pairs (m, n). You may want to check Blackburn et al. (2001).
3(a) We can indeed write in the ﬁrst-order language that for each
position, there is one to the East where the given tile occurs, and this
makes sure that there are inﬁnitely many occurrences of that tile on
the horizontal row in any model for our formula. However, this does
not enforce that this inﬁnite repetition already occurs on the initial
segment N of that row (#). And the latter is what we need to solve the
real Recurrent Tiling problem. In fact, given that the high complexity
of the latter does not occur with ﬁrst-order logic, we may conclude that
# is not ﬁrst-order deﬁnable!
3(b) Modal logics can have this high complexity, for instance, when
we give them non-ﬁrst-order operators like the PDL-modality [ ∗] that
run over just the reachable row positions that correspond to standard
natural numbers.
4 The temporal logic of the natural numbers with the relations of
immediate successor and ≤is decidable using Rabin’s Theorem. To see
this, observe that (a) that order can be viewed as a very simple tree
in the Rabin sense, and (b) the temporal language can be deﬁned in
that of the monadic second-order logic with the relevant relations of
subsequence and immediate successor.
5 Memory-free epistemic agents only remember the last-observed
event. At least if there are only ﬁnitely many events, their knowl-
edge modality Kϕ is then deﬁnable as W
e(Pe⊤∧U(Pe⊤→ϕ)), where
Pe is the past modality saying that the last event was e, and U is the
universal modality. But this means that the epistemic-temporal logic
of such agents can be embedded in the pure temporal logic of the tree
models, which is usually of much lower complexity.

Answers and hints to selected exercises / 369
February 2, 2010
6(a) Rabin’s Theorem fails when trees also have a simultaneity re-
lation. We can now describe a grid pattern inside these models using
ﬁrst-order formulas in much the same way as suggested by our “rhom-
boid” pictures for epistemic temporal logics on tree models with com-
plex DEL-style agents. (With more coding acumen, much more unlikely
countable structures can be seen to be embedded in the Rabin tree.)
6(b) Against this background, epistemic-temporal logics on trees that
might still have low complexity are those that lack modal operators
referring to the mixed transitions (∼i; e)∗mentioned in the text. A
good example of the latter: our standard epistemic-temporal language
itself, with common knowledge and future modalities.
Chapter 25
1 We need the “total bisimulations” of Chapter 7 whose domain and
range are the whole relevant models. Then the Invariance Theorem has
essentially the same formulation as before. In the whole proof, there
is only one change (except for checking the invariance): when two ω-
saturated models satisfy the same formulas in this extended language,
they also have a bisimulation of this stronger sort.
2(a) If ϕ, ψ are ﬁrst-order formulas, and α a modal “interpolant” with
ϕ |= α |= ψ, then, if M, s |= ϕ, and there is a bisimulation between
M, s and N, t, then N, t |= ψ. This looks impressive, but it follows
immediately from the deﬁnition of valid consequence plus invariance of
modal formulas for bisimulation.
2(b) The converse is this: if a ﬁrst-order formula ϕ entails a ﬁrst-order
formula ψ along bisimulation, then there exists a modal interpolant
α with ϕ |= α |= ψ. This can be proved with essentially the same
argument as that given for the Modal Invariance Theorem. Now, if a
ﬁrst-order ϕ is invariant for bisimulation, this says that ϕ entails ϕ
itself along bisimulation. So, there is a modal interpolant α, and that
is immediately the required modal equivalent.
3 There is no modal Lindstr¨om theorem when we replace invariance for
bisimulation by the L¨owenheim-Skolem property. For, ﬁrst-order logic
itself is a proper extension of the basic modal language that has both
Compactness and the L¨owenheim-Skolem property. So, we need to be
careful about traditional characterization results for weaker languages.
But the observation also suggests new types of theorems, talking about
strongest proper extensions of logics satisfying certain properties: see
the cited paper by van Benthem, ten Cate & V¨a¨an¨anen.

February 2, 2010
370 / Modal Logic for Open Minds
4 To derive the Modal Invariance Theorem from the Modal Lindstr¨om
Theorem, start with any ﬁrst-order formula ϕ that is invariant for
bisimulation. Add ϕ as a new sentence to the basic modal language, and
then close up under Boolean operations and relativizations to unary
proposition letters. It is easy to show that the result is an abstract
modal logic L extending the basic language, satisfying (a) Compact-
ness (since L is a fragment of ﬁrst-order logic), and (b) Bisimulation
Invariance (ϕ has this property by assumption, Boolean operations and
relativizations preserve it). Therefore, by the modal Lindstr¨om Theo-
rem, L is contained in the basic modal logic, and in particular, ϕ was
modally deﬁnable.
5 The proof of the Modal Lindstr¨om Theorem to the modal language
with an added universal modality breaks down, because the Finite
Depth Lemma fails. For instance, in a tree, the modal formula U
3⊤
says that each node has successors, and this cannot be enforced at
any ﬁxed ﬁnite depth. This failure seems signiﬁcant, and no alternative
proof is known for this language, since it is also too weak to mimic the
original proof of the Lindstr¨om Theorem for ﬁrst-order logic.

February 2, 2010
Guide to further literature
The literature on modal logic is vast, and it comes in various forms.
We mention a few relevant items, with no attempt at completeness:
Handbooks While handbooks may not be an ideal medium for learn-
ing details, they do provide a good sense of a ﬁeld, as well as credits
and extensive strategic references. We have mentioned the Handbook
of Modal Logic (Blackburn et al., 2006) several times, and its chapters
cover much of what has been introduced in these lectures. In addition,
much valuable material can be found in the Handbook of Philosophical
Logic (Gabbay and G¨unthner, 1983-1989), the Handbook of Logic in Ar-
tiﬁcial Intelligence and Logic Programming (Gabbay et al., 1994), the
Handbook of Spatial Logics (Aiello et al., 2007), and other handbooks
that include modal logic in areas like philosophy, computer science, and
game theory. Many of these resources are now available on-line.
Textbooks There are many textbooks in modal logic, with many dif-
ferent slants. You can ﬁnd them geared to just about every audience,
from philosophers to computer scientists, and also, emphasizing dif-
ferent methods, such as formal proof, or algebraic techniques. Of the
textbooks congenial to these lectures, Goldblatt (1987) and especially,
Blackburn et al. (2001) provide more technical detail, especially on
methods for proving completeness. Other attractive textbooks on more
specialized topics include Meyer and van Der Hoek (1995), Fagin et al.
(1995) (epistemic logic), Huth and Ryan (2000) (logic and computa-
tion), and Boolos (1993) (provability logic).
In addition, separate chapters of this book presuppose knowledge
of further areas of logic and mathematics. First-order logic is well-
explained in many textbooks, with Enderton (1971) as an evergreen,
and Doets (1996) as a neat model-theoretic version including games.
Higher-order logic is explained in the chapter by van Benthem &
371

February 2, 2010
372 / Modal Logic for Open Minds
Doets in Gabbay and G¨unthner (1983-1989). For ﬁxed-point logics,
see Ebbinghaus and Flum (1995). Decidable fragments of ﬁrst-order
logic are found in B¨orger et al. (1997), and a logic-friendly introduc-
tion to complexity theory is Papadimitriou (1994). A good source on
universal algebra is (Burris and Sankappanavar, 1981), and a classic
on topology is Dugundji (1966). Osborne and Rubinstein (1994) is an
excellent introduction to game theory.
Special monographs The next level is that of heavier-duty mono-
graphs with special mathematical perspectives, such as Chagrov and
Zakharyaschev (1997), Kracht (1999), Marx and Venema (1997), or
many publications from the “London School” of Gabbay and others:
cf. Gabbay et al. (2003), Gabbay et al. (2009).
Further sources There are also many internet resources for topics
in these lectures, with home pages of special communities like Hybrid
Logic, or conferences like
Advances in Modal Logic, http://www.aiml.net/
TARK, http://www.tark.org/
LOFT, http://www.econ.ucdavis.edu/faculty/bonanno/loft.html
The electronic Stanford Encyclopedia of Philosophy,
http://plato.stanford.edu/
has also been mentioned many times. The website supporting this book,
http://www.illc.uva.nl/lgc/MLoM/
will provide more systematic links.

February 2, 2010
References
Abramsky, Samson. 2008. Information, processes and games. In Adriaans
and van Benthem (2008), pages 483–549.
Adriaans, Peter and Johan van Benthem, eds. 2008. Handbook of the Philos-
ophy of Information, Amsterdam. Elsevier Science Publishers.
Aiello, Marco, Ian Pratt-Hartmann, and Johan van Benthem, eds. 2007.
Handbook of Spatial Logics. Dordrecht: Springer. ISBN 978-1-4020-5586-7.
Andr´eka, Hajnal, Istv´an N´emeti, and Johan van Benthem. 1998. Modal lan-
guages and bounded fragments of predicate logic. Journal of Philosophical
Logic 27(3):217–274.
Artemov, Sergei. 2008. Modal logic and mathematics. In Adriaans and van
Benthem (2008), pages 927–969.
Aumann, Robert J. 1976. Agreeing to disagree. The Annals of Statistics
4(6):1236–1239.
Ballarin,
Roberta.
2008.
Modern
origins
of
modal
logic.
http://plato.stanford.edu/entries/logic-modal/.
Baltag, Alexandru, Lawrence S. Moss, and Hans van Ditmarsch. 2008. Epis-
temic logic and information update. In Adriaans and van Benthem (2008),
pages 361–455.
Barwise, Jon. 1975. Admissible Sets and Structures. Berlin: Springer Verlag.
Barwise, Jon and Lawrence S. Moss. 1996. Vicious Circles: on the mathemat-
ics of non-wellfounded phenomena. Stanford, USA: CSLI Publications.
Barwise, Jon and Johan van Benthem. 1999. Interpolation, preservation, and
pebble games. Journal of Symbolic Logic 64(2):881–903.
Bergstra, Jan A., Alban Ponse, and Scott A. Smolka, eds. 2007. Handbook
of Process Algebra. Amsterdam: North-Holland.
Blackburn, Patrick, Maarten de Rijke, and Yde Venema. 2001. Modal logic.
No. 53 in Cambridge Tracts in Theoretical Computer Science. New York,
USA: Cambridge University Press. ISBN 0-521-80200-8.
Blackburn, Patrick, Johan van Benthem, and Frank Wolter, eds. 2006. Hand-
book of Modal Logic. Amsterdam: Elsevier.
373

February 2, 2010
374 / Modal Logic for Open Minds
Blok, Wim. 1980.
On the degree of incompleteness in modal logics and
the covering relation in the lattice of modal logics.
Tech. Rep. 78–07,
Department of Mathematics, University of Amsterdam.
Boolos, George. 1993. The Logic of Provability. Cambridge University Press.
B¨orger, Egon, Erich Gr¨adel, and Yuri Gurevich. 1997. The Classical Decision
Problem.
Perspectives of Mathematical Logic. Berlin: Springer-Verlag.
Second printing (Universitext) 2001.
Borghuis, Tijn. 1994. Coming to Terms with Modal Logic. Ph.D. thesis, In-
formatics Department, University of Eindhoven, Eindhoven, The Nether-
lands.
Burris, Stanley and Hanamantagouda P. Sankappanavar. 1981. A course in
universal algebra, vol. 78 of Graduate Texts in Mathematics. New York:
Springer-Verlag. ISBN 0-387-90578-2.
Chagrov, Alexander V. and Michael Zakharyaschev. 1997. Modal Logic. Ox-
ford: Clarendon Press.
Chang, Chen Chung and H. Jerome Keisler. 1973. Model Theory. Amster-
dam: North-Holland.
Doets, Kees. 1996. Basic Model Theory. Studies In Logic, Language and
Information. Stanford: CSLI Publications.
Dugundji, James. 1966. Topology. Allyn and Bacon Inc.
Ebbinghaus, Heinz-Dieter and J¨org Flum. 1995. Finite Model Theory. Berlin:
Springer.
Enderton, Herbert. 1971. A Mathematical Introduction to Logic. New York:
Academic Press.
Fagin, Ronald, Joseph Y. Halpern, Yoram Moses, and Moshe Y. Vardi. 1995.
Reasoning about knowledge. Cambridge, Mass.: The MIT Press.
Freudenthal, Hans. 1960. LINCOS: Design of a Language for Cosmic Inter-
course. Amsterdam: North-Holland.
Gabbay, Dov M. and Franz G¨unthner, eds. 1983-1989. Handbook of Philo-
sophical Logic. Dordrecht: Kluwer.
Gabbay, Dov M., Christopher J. Hogger, John Alan Robinson, and J¨org H.
Siekmann, eds. 1994. Handbook of Logic in Artiﬁcial Intelligence and Logic
Programming. Oxford University Press.
Gabbay, Dov M., Agi Kurucz, Frank Wolter, and Michael Zakharyaschev.
2003. Many-dimensional modal logics: theory and applications. No. 148 in
Studies in Logic and the Foundations of Mathematics. Elsevier.
Gabbay, Dov M., Valentin B. Shehtman, and Dimitrij Skvortsov. 2009. Quan-
tiﬁcation in Nonclassical Logic, Volume I . No. 153 in Studies in Logic and
the Foundations of Mathematics. Amsterdam: Elsevier. ISBN 0-444-52012-
0.
Geanakoplos, John D. 1992. Common knowledge. The Journal of Economic
Perspectives 6(4):53–82.
Geanakoplos, John D. and Heraklis M. Polemarchakis. 1982. We can’t dis-
agree forever. Journal of Economic Theory 28(1):192–200.

References / 375
February 2, 2010
Girard, Patrick. 2008. Modal Logic for Belief and Preference Change. Ph.D.
thesis, Department of Philosophy, Stanford University, Stanford, CA, USA.
ILLC Dissertation Series DS-2008-04.
Goldblatt, Robert. 1987. Logics of Time and Computation. Stanford: CSLI
Publications. ISBN 0-937073-12-1.
Goldblatt, Robert and Edwin D. Mares. 2006. A general semantics for quan-
tiﬁed modal logic. In G. Governatori, I. M. Hodkinson, and Y. Venema,
eds., Advances in Modal Logic, pages 227–246. College Publications. ISBN
1-904987-20-6.
Halpern, Joseph Y. and Moshe Y. Vardi. 1989. The complexity of reasoning
about knowledge and time, I: lower bounds.
Journal of Computer and
System Sciences 38(1):195–237.
Harel, David. 1987. Algorithmics, the Spirit of Computing. Reading MA:
Addison-Wesley.
Harel, David, Dexter Kozen, and Jerzy Tiuryn. 2000. Dynamic Logic. Cam-
bridge, MA: MIT Press. ISBN 0-262-08289-6.
Henkin, Leon, James Donald Monk, and Alfred Tarski. 1985. Cylindric Al-
gebras, Part II . North Holland.
Hodges, Wilfrid. 1983. Elementary predicate logic. In D. M. Gabbay and
F. G¨unthner, eds., Handbook of Philosophical Logic: Volume I: Elements of
Classical Logic, pages 1–131. Dordrecht: Reidel. Reprint, Springer Science
Publishers, 2001.
Hughes, George Edward and Max J. Cresswell. 1984. A Companion to Modal
Logic. London: Methuen.
Huth, Michael and Mark Ryan. 2000. Logic in Computer Science: Modelling
and Reasoning about Systems. Cambridge, United Kingdom: Cambridge
University Press, 2nd edn.
Jacquette, Dale, ed. 2007. Handbook of the Philosophy of Logic. Amsterdam:
Elsevier.
J´onsson, Bjarni and Alfred Tarski. 1951. Boolean algebras with operators,
part I. American Journal of Mathematics 73:891–939.
Kaldeway, Anne. 1990. Programming: the Derivation of Algorithms. Engle-
wood Cliﬀs NJ: Prentice Hall.
Keisler, H. Jerome. 1971. Model Theory for Inﬁnitary Logic. Amsterdam:
North-Holland.
Kracht, Marcus. 1999.
Tools and Techniques in Modal Logic. No. 142 in
Studies in Logic and the Foundations of Mathematics. Amsterdam: Else-
vier.
Lenzen, Wolfgan. 1979. Glauben, Wissen und Wahrscheinlichkeit. Berlin:
Springer.
Liu, Fenrong. 2008. Changing for the Better. Preference Dynamics and Agent
Diversity. Ph.D. thesis, Institute for Logic, Language and Computation,
Universiteit van Amsterdam, Amsterdam, The Netherlands. ILLC Disser-
tation series DS-2008-02.

February 2, 2010
376 / Modal Logic for Open Minds
Marx, Maarten and Yde Venema. 1997.
Multi-Dimensional Modal Logic,
vol. 4 of Applied Logic Series. Kluwer Academic Press.
Mason, Ian A. 1985. The metatheory of the classical propositional calculus
is not axiomatizable. Journal of Symbolic Logic 50(2):451–457.
Meyer, John-Jules Ch. and Wiebe van Der Hoek. 1995. Epistemic Logic for
AI and Computer Science. New York, NY, USA: Cambridge University
Press. ISBN 0 521 46014 7.
Miller, Joseph S. and Lawrence S. Moss. 2005. The undecidability of iterated
modal relativization. Studia Logica 79(3):373–407.
Monk, James Donald. 1976. Mathematical Logic. New York: Springer.
N´emeti, Istv´an. 1991. Algebraizations of quantiﬁer logics: An introductory
overview. Studia Logica 50(3-4):485–569. Later extended versions, Math-
ematical Institute, Hungarian Academy of Sciences, Budapest.
Ono, Hiroakira. 1999.
Algebraic semantics for predicate logics and their
completeness.
In E. Orlowska, ed., Logic at Work. To the Memory of
Elena Rasiowa. Heidelberg: Physica Verlag.
Osborne, Martin J. and Ariel Rubinstein. 1994. A Course in Game Theory.
Cambridge, Massachusetts: The MIT Press. ISBN 0262650401.
Papadimitriou, Christos M. 1994. Computational complexity. Massachusetts:
Addison-Wesley. ISBN 0201530821.
Parikh, Rohit and Ramaswamy Ramanujam. 2003.
A knowledge based
semantics of messages.
Journal of Logic, Language and Information
12(4):453–467.
Plantinga, Alvin. 1978. The Nature of Necessity. Oxford: Clarendon.
Pratt, Vaughan R. 1976.
Semantical considerations on ﬂoyd-hoare logic.
In 17th Annual Symposium on Foundations of Computer Science, 25-27
October 1976, Houston, Texas, USA, pages 109–121. IEEE.
Quine, Willard Van Orman. 1966. Selected Logic Papers. New York: Random
House.
Roy, Olivier. 2008.
Thinking Before Acting. Intentions, Logic, Rational
Choice.
Ph.D. thesis, Institute for Logic, Language and Computation,
Universiteit van Amsterdam, Amsterdam, The Netherlands. ILLC Disser-
tation series DS-2008-03.
Steltzner, Werner. 1996.
Gottlob Frege. Jena und die Geburt der moder-
nen Logik. Verein zur Regional-f¨orderung von Forschung, Innovation und
Technologie.
ten Cate, Balder. 2005. Model theory for extended modal languages. Ph.D.
thesis, Institute for Logic, Language and Computation, Universiteit van
Amsterdam, Amsterdam, The Netherlands. ILLC Dissertation Series DS-
2005-01.
Troelstra, Anne S. and Dirk van Dalen. 1988. Constructivism in Mathemat-
ics. Amsterdam: North-Holland Publishing.
V¨a¨an¨anen, Jouko. 2007. Dependence Logic. Cambridge: Cambridge Univer-
sity Press.

References / 377
February 2, 2010
van Benthem, Johan. 1979. Syntactic aspects of modal incompleteness the-
orems. Theoria 45(2):63–77.
van Benthem, Johan. 1985. Modal Logic and Classical Logic. Napoli: Bib-
liopolis.
van Benthem, Johan. 1988a. A Manual of Intensional Logic. Stanford, CA:
CSLI, 2nd edn.
van Benthem, Johan. 1988b. A note on j´onsson’s theorem. Algebra Univer-
salis (25):391–393.
van Benthem, Johan. 1993.
Modal frame classes revisited.
Fundamenta
Informaticae 18(2/3/4):307–317.
van Benthem, Johan. 1996.
Exploring Logical Dynamics. Stanford: CSLI
Publications.
van Benthem, Johan. 1999. Logic in games, lecture notes. ILLC Amsterdam
& Department of Philosophy, Stanford University.
van Benthem, Johan. 2005. Guards, bounds, and generalized semantics. Jour-
nal of Logic, Language and Information 14(3):263–279.
van Benthem, Johan. 2007a. Computation as conversation. In B. Cooper,
B. L¨owe, and A. Sorbi, eds., New Computational Paradigms: Changing
Conceptions of What is Computable, pages 35–58. New York: Springer.
van Benthem, Johan. 2007b. Logic games, from tools to models of interaction.
In A. Gupta, R. Parikh, and J. van Benthem, eds., Logic at the Crossroads,
pages 283–317. Mumbai: Allied Publishers.
van Benthem, Johan and Guram Bezhanishvili. 2007. Modal logics of space.
In Aiello et al. (2007), pages 217–298. ISBN 978-1-4020-5586-7.
van Benthem, Johan and Denis Bonnay. 2008. Modal logic and invariance.
Journal of Applied Non-Classical Logics 18(2-3):153–173.
van Benthem, Johan and Kees Doets. 1983. Higher-order logic. In D. M.
Gabbay and F. G¨unthner, eds., Handbook of Philosophical Logic: Volume
I: Elements of Classical Logic, pages 275–329. Dordrecht: Reidel. Reprint,
Springer Science Publishers, 2001.
van Benthem, Johan and Daisuke Ikegami. 2008.
Modal ﬁxed-point logic
and changing models. In A. Avron, N. Dershowitz, and A. Rabinovich,
eds., Pillars of Computer Science, vol. 4800 of Lecture Notes in Computer
Science, pages 146–165. Springer. ISBN 978-3-540-78126-4.
van Benthem, Johan and Eric Pacuit. 2006. The tree of knowledge in action.
In G. Governatori, I. M. Hodkinson, and Y. Venema, eds., Proceedings of
Advances in Modal Logic, 2006 (AiML 2006). King’s College Press.
van Benthem, Johan, Balder ten Cate, and Jouko V¨a¨an¨anen. 2007. Lindstr¨om
theorems for fragments of ﬁrst-order logic. In LICS ’07: Proceedings of the
22nd Annual IEEE Symposium on Logic in Computer Science, pages 280–
292. Washington, DC, USA: IEEE Computer Society. ISBN 0-7695-2908-9.
van Benthem, Johan, Jan van Eijck, and Barteld Kooi. 2006.
Logics of
communication and change. Information and Computation 204(11):1620–
1662.

February 2, 2010
378 / Modal Logic for Open Minds
van Ditmarsch, Hans, Wiebe van der Hoek, and Barteld Kooi. 2007. Dynamic
Epistemic Logic, vol. 337 of Synthese Library Series. Springer.
van Otterloo, Sieuwert. 2005. A Strategic Analysis of Multi-agent Protocols.
Ph.D. thesis, Department of Computer Science, University of Liverpool,
Liverpool, United Kingdom. ILLC Dissertation series DS-2005-05.
Venema, Yde. 2006. Algebras and coalgebras. In Blackburn et al. (2006),
pages 331–426.

February 2, 2010
Index
2 modality, 11
3 modality, 12
arrow logic
semantic interpretation, 113
associativity axiom, 117, 228
axiom
associativity, 117, 228
Barcan, 122
ceteris paribus, 195
composition, 164
converse 4, 208
converse McKinsey, 98
Dedekind continuity, 211
ﬁxed-point, 140, 259
Geach, 98, 105
Hamblin’s, 208
induction, 140, 159, 169
K4, 101, 104
knowledge gain, 177
L¨ob’s, 99, 211, 244, 248, 304
McKinsey, 12, 106, 108, 211,
304
modal distribution, 13
no miracles, 277
Pasch’s, 228
perfect recall, 277
poly-modal Geach, 107
positive introspection, 53
S5, 101, 104
T, 101, 104
veridicality, 53
Barcan axiom, 122
belief, 150
conditional, 151
betweenness modality, 227
binder modality, 81
bisimulation, 26
safety for, 162, 297
bisimulation game, 31
adequacy, 32
strong adequacy, 34
bounded fragment, 84
canonical model, 56
ceteris paribus axiom, 195
common knowledge, 135
common knowledge modality, 140
Compactness Theorem, 78
completeness, 54
complexity class
2EXPTIME, 62
EXPTIME, 61
NP, 61
P, 61
PSPACE, 61
composition axiom, 164
conditional common knowledge,
177
consistency, 54
continuous fragment, 261
converse 4 axiom, 208
converse McKinsey axiom, 98
convexity modality, 226
379

February 2, 2010
380 / Modal Logic for Open Minds
Craig’s Interpolation Theorem,
78
de dicto, 13
de re, 13
Dedekind continuity axiom, 211
deﬁnable sub-model, 172
diﬀerence modality, 79
distributed knowledge, 138
dynamic epistemic logic
language, 270
semantic interpretation, 270
dynamic logic
axiom system, 158
ﬁrst-order translation, 160
language, 157
semantic interpretation, 158
standard translation, 163
elementary extension, 293
epistemic doxastic model, 149
epistemic dynamic logic
language, 272
semantic interpretation, 272
epistemic logic
language, 135
model, 136
semantic interpretation, 137
ETL frame, 276
ETM model, 277
ETL semantic interpretation, 277
existential dyadic modality, 110
existential modality, 79
ﬁltrated model, 39
ﬁnite depth property, 39
ﬁnite model property, 38
eﬀective, 38
Finiteness Lemma, 32
ﬁxed-point axiom, 140, 259
forcing modality, 199
frame, 101
truth, 101
Geach axiom, 98, 105
guarded fragment, 83
Hamblin’s axiom, 208
Henkin model, 56
hybrid logic, 80
hybrid standard translation, 81
Induced ETL forest models, 277
induction axiom, 140, 159, 169
intersection property, 248
interval model, 212
Invariance Lemma, 28
isomorphism, 25
K4 axiom, 101, 104
knowledge gain axiom, 177
L¨ob’s axiom, 99, 211, 244, 248,
304
L¨owenheim-Skolem Theorem, 78
maximally consistent set, 55
McKinsey axiom, 12, 106, 108,
211, 304
minimal modal logic, 50
modal decomposition fact, 41
modal depth, 14
modal diﬀerence logic, 79
modal distribution axiom, 13
modal fragment, 76
Modal Invariance Theorem, 77
modal logic
basic language, 11
evaluation game, 19
adequacy, 22
Id, 93
K4.3, 93
poly-modal languages, 15
possible worlds model, 15
S4, 53, 91
S5, 53, 91
semantic interpretation, 16
T, 53, 91
T4, 93
Un, 94
modal predicate logic
frame satisﬁability, 122
model, 120

Index / 381
February 2, 2010
modal sequent, 40
modality
2, 11
3, 12
betweenness, 227
binder, 81
common knowledge, 140
convexity, 226
diﬀerence, 79
existential, 79
existential dyadic, 110
forcing, 199
reset, 80
safe belief, 182
since, 80
universal, 79
universal dyadic, 111
until, 80
upgrade, 183
model contraction, 27
model equivalence, 63
model-checking, 63
neighbourhood semantics, 114
no miracles axiom, 277
nominal, 80
object order, 194
ω-saturated model, 293
Pasch’s axiom, 228
perfect recall axiom, 277
PIA format, 248
poly-modal Geach axiom, 107
positive introspection axiom, 53
possible worlds model, 15
product closure, 273
product update, 267
provability logic, 96, 244
public announcement logic
language, 174
semantic interpretation, 174
relational algebra, 160
relativization, 298
reset modality, 80
S5 axiom, 101, 104
safe belief, 182
safe belief modality, 182
satisﬁability, 63
semantics
branching temporal, 215
ﬁxed point, 257
since modality, 80
soundness, 54
standard translation, 75, 123
strong completeness, 56
switch lemma, 76
T axiom, 101, 104
ternary modal semantics, 110
TPAL, 279
tree unraveling, 27
Truth Lemma, 56
universal dyadic modality, 111
universal modality, 79
until modality, 80
update evolution model, 275
upgrade
lexicographic, 183
radical, 183
upgrade modality, 183
validity, 17
veridicalidity axiom, 53
weak completeness, 56
world-object bisimulation, 123

