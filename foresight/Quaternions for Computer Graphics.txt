
Quaternions for Computer Graphics


John Vince
Quaternions
for Computer
Graphics

Professor John Vince, MTech, PhD, DSc,
CEng, FBCS
Bournemouth University, Bournemouth, UK
url: www.johnvince.co.uk
ISBN 978-0-85729-759-4
e-ISBN 978-0-85729-760-0
DOI 10.1007/978-0-85729-760-0
Springer London Dordrecht Heidelberg New York
British Library Cataloguing in Publication Data
A catalogue record for this book is available from the British Library
Library of Congress Control Number: 2011931282
© Springer-Verlag London Limited 2011
Apart from any fair dealing for the purposes of research or private study, or criticism or review, as per-
mitted under the Copyright, Designs and Patents Act 1988, this publication may only be reproduced,
stored or transmitted, in any form or by any means, with the prior permission in writing of the publish-
ers, or in the case of reprographic reproduction in accordance with the terms of licenses issued by the
Copyright Licensing Agency. Enquiries concerning reproduction outside those terms should be sent to
the publishers.
The use of registered names, trademarks, etc., in this publication does not imply, even in the absence of a
speciﬁc statement, that such names are exempt from the relevant laws and regulations and therefore free
for general use.
The publisher makes no representation, express or implied, with regard to the accuracy of the information
contained in this book and cannot accept any legal responsibility or liability for any errors or omissions
that may be made.
Cover design: VTeX UAB, Lithuania
Printed on acid-free paper
Springer is part of Springer Science+Business Media (www.springer.com)

This book is dedicated to Heidi


Preface
More than 50 years ago when I was studying to become an electrical engineer,
I came across complex numbers, which were used to represent out-of-phase volt-
ages and currents using the j operator. I believe that the letter j was used, rather
than i, because the latter stood for electrical current. So from the very start of my
studies I had a clear mental picture of the imaginary unit as a rotational operator
which could advance or retard electrical quantities in time.
When events dictated that I would pursue a career in computer programming—
rather than electrical engineering—I had no need for complex numbers, until Man-
dlebrot’s work on fractals emerged. But that was a temporary phase, and I never
needed to employ complex numbers in any of my computer graphics software. How-
ever in 1986, when I joined the ﬂight simulation industry, I came across an internal
report on quaternions, which were being used to control the rotational orientation of
a simulated aircraft.
I can still remember being completely bemused by quaternions, simply because
they involved so many imaginary terms. However, after much research I started to
understand what they were, but not how they worked. Simultaneously, I was becom-
ing interested in the philosophical side of mathematics, and trying to come to terms
with the ‘real meaning’ of mathematics through the writing of Bertrand Russell.
Consequently, concepts such as i were an intellectual challenge.
I am now comfortable with the idea that imaginary i is nothing more than a
symbol, and in the context of algebra permits i2 = −1 to be deﬁned. And I believe
it is futile trying to discover any deeper meaning to its existence. Nevertheless, it is
an amazing object within mathematics, and I often wonder whether there could be
similar objects waiting to be invented.
When I started writing books on mathematics for computer graphics, I studied
complex analysis in order to write with some conﬁdence about complex quantities.
It was then that I discovered the historical events behind the invention of vectors and
quaternions, mainly through Michael Crowe’s excellent book “A History of Vector
Analysis”. This book brought home to me the importance of understanding how and
why mathematical invention takes place.
Recently, I came across Simon Altmann’s book “Rotations, Quaternions, and
Double Groups” which provided further information concerning the demise of
vii

viii
Preface
quaternions in the 19th century. Altmann is very passionate about securing recogni-
tion for the mathematical work of Olinde Rodrigues, who published a formula that
is very similar to that generated by Hamilton’s quaternions. The important aspect of
Rodrigues’ publication was that it was made three years before Hamilton’s invention
of quaternions in 1843. However, Rodrigues did not invent quaternion algebra—that
prize must go to Hamilton—but he did understand the importance of half-angles in
the trigonometric functions used to rotate points about an arbitrary axis.
Anyone who has used Euler transforms will be aware of their shortcomings, espe-
cially their Achilles’ heel: gimbal lock. Therefore, any device that can rotate points
about an arbitrary axis is a welcome addition to a programmer’s toolkit. There are
many techniques for rotating points and frames in the plane and space, which I
covered in some detail in my book “Rotation Transforms for Computer Graphics”.
That book also covered the Euler–Rodrigues parameterisation and quaternions, but
it was only after submitting the manuscript for publication, that I decided to write
this book dedicated to quaternions and how and why they were invented, and their
application to computer graphics.
Whilst researching this book, it was extremely instructive to read some of the
early books and papers by William Rowan Hamilton and his friend P.G. Tait. I now
understand how difﬁcult it must have been to fully comprehend the signiﬁcance
of quaternions, and how they could be harnessed. At the time, there was no major
demand to rotate points about an arbitrary axis; however, a mathematical system was
required to handle vectorial quantities. In the end, quaternions were not the ﬂavour
of the month, and slowly faded from the scene. Nevertheless, the ability to represent
vectors and manipulate them arithmetically was a major achievement for Hamilton,
even though it was the foresight of Josiah Gibbs to create a simple and workable
algebraic framework.
In this book I have tried to describe some of the history surrounding the invention
of quaternions, as well as a description of quaternion algebra. In no way would I
consider myself an authority on quaternions. I simply want to communicate how I
understand them, which hopefully will be useful for you. There are different ways
to represent a quaternion, but the one I like the best is an ordered pair, which I
discovered in Simon Altmann’s book.
This book divides into eight chapters. The ﬁrst and last chapters introduce and
conclude the book, with six chapters covering the following subjects. The second
chapter on number sets and algebra reviews the notation and language relevant to the
rest of the book. There are sections on number sets, axioms, ordered pairs, groups,
rings and ﬁelds. This prepares the reader for the non-commutative quaternion prod-
uct, and why quaternions are described as a division ring.
Chapter 3 reviews complex numbers and shows how they can be represented
as an ordered pair and a matrix. Chapter 4 continues this theme by introducing
the complex plane and showing the rotational features of complex numbers. It also
prepares the reader for the question that was asked in the early nineteenth century:
could there be a 3D equivalent of a complex number?
Chapter 5 answers this question by describing Hamilton’s invention: quaternions
and their associated algebra. I have included some historical information so that the

Preface
ix
reader appreciates the signiﬁcance of Hamilton’s work. Although ordered pairs are
the main form of notation, I have also included matrix notation.
To prepare the reader for the rotational qualities of quaternions, Chap. 6 reviews
3D rotation transforms, especially Euler angles, and gimbal lock. I also develop a
matrix for rotating a point about an arbitrary axis using vectors and matrix trans-
forms.
Chapter 7 is the focal point of the book and describes how quaternions rotate vec-
tors about an arbitrary axis. The chapter begins with some historical information and
explains how different quaternion products rotate points. Although quaternions are
readily implemented using their complex form or ordered-pair notation, they also
have a matrix form, which is developed from ﬁrst principles. The chapter continues
with sections on eigenvalues, eigenvectors, rotating about an offset-axis, rotating
frames of reference, interpolating quaternions, and converting between quaternions
and a rotation matrix.
Each chapter contains many practical examples to show how equations are eval-
uated, and where relevant, further worked examples are shown at the end of the
chapter.
Writing this book has been a very enjoyable experience, and I trust that you will
also enjoy reading it and discover something new from its pages.
I would like to thank Dr Tony Crilly, Reader Emeritus at Middlesex University,
for reading a draft manuscript and correcting and clarifying my notation and expla-
nations. Tony performed the same task on my book Rotation Transforms for Com-
puter Graphics. I trust implicitly his knowledge of mathematics and I am grateful
for his advice and expertise. However, I still take full responsibility for any algebraic
faux pas I might have made.
I would also like to thank Professor Patrick Riley, who read some early drafts of
the manuscript and posed some interesting technical questions about quaternions.
Such questions made me realise that some of my descriptions of quaternions re-
quired further clariﬁcation, which hopefully have been rectiﬁed.
I have now used LATEX 2ε for three of my books, and have become conﬁdent with
its notation. Nevertheless, I still had to call upon Springer’s technical support team,
and thank them for their help.
I am not sure whether this is my last book. If it is, I would like to thank Beverley
Ford, Editorial Director for Computer Science, and Helen Desmond, Associate Ed-
itor for Computer Science, Springer UK, for their professional support during the
past years. If it is not my last book, then I look forward to working with them again
on another project.
John Vince
Ringwood, UK


Contents
1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1
1.1
Rotation Transforms . . . . . . . . . . . . . . . . . . . . . . . . .
1
1.2
The Reader . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1
1.3
Aims and Objectives of This Book
. . . . . . . . . . . . . . . . .
1
1.4
Mathematical Techniques . . . . . . . . . . . . . . . . . . . . . .
2
1.5
Assumptions Made in This Book . . . . . . . . . . . . . . . . . .
2
2
Number Sets and Algebra . . . . . . . . . . . . . . . . . . . . . . . .
3
2.1
Introduction
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3
2.2
Number Sets . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3
2.2.1
Natural Numbers . . . . . . . . . . . . . . . . . . . . . . .
3
2.2.2
Real Numbers . . . . . . . . . . . . . . . . . . . . . . . .
3
2.2.3
Integers
. . . . . . . . . . . . . . . . . . . . . . . . . . .
4
2.2.4
Rational Numbers . . . . . . . . . . . . . . . . . . . . . .
4
2.3
Arithmetic Operations . . . . . . . . . . . . . . . . . . . . . . . .
4
2.4
Axioms . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
5
2.5
Expressions
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
6
2.6
Equations
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
7
2.7
Ordered Pairs
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
7
2.8
Groups, Rings and Fields
. . . . . . . . . . . . . . . . . . . . . .
8
2.8.1
Groups . . . . . . . . . . . . . . . . . . . . . . . . . . . .
8
2.8.2
Abelian Group . . . . . . . . . . . . . . . . . . . . . . . .
10
2.8.3
Rings . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
10
2.8.4
Fields . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
10
2.8.5
Division Ring
. . . . . . . . . . . . . . . . . . . . . . . .
11
2.9
Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
11
2.9.1
Summary of Deﬁnitions . . . . . . . . . . . . . . . . . . .
11
3
Complex Numbers . . . . . . . . . . . . . . . . . . . . . . . . . . . .
13
3.1
Introduction
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
13
3.2
Imaginary Numbers . . . . . . . . . . . . . . . . . . . . . . . . .
13
3.3
Powers of i . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
13
xi

xii
Contents
3.4
Complex Numbers . . . . . . . . . . . . . . . . . . . . . . . . . .
15
3.5
Adding and Subtracting Complex Numbers . . . . . . . . . . . . .
16
3.6
Multiplying a Complex Number by a Scalar
. . . . . . . . . . . .
16
3.7
Complex Number Products
. . . . . . . . . . . . . . . . . . . . .
16
3.7.1
Square of a Complex Number . . . . . . . . . . . . . . . .
17
3.8
Norm of a Complex Number
. . . . . . . . . . . . . . . . . . . .
17
3.9
Complex Conjugate . . . . . . . . . . . . . . . . . . . . . . . . .
18
3.10 Quotient of Two Complex Numbers . . . . . . . . . . . . . . . . .
18
3.11 Inverse of a Complex Number . . . . . . . . . . . . . . . . . . . .
19
3.12 Square-Root of i . . . . . . . . . . . . . . . . . . . . . . . . . . .
19
3.13 Field Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . .
21
3.14 Ordered Pairs
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
21
3.14.1 Multiplying by a Scalar . . . . . . . . . . . . . . . . . . .
22
3.14.2 Complex Conjugate . . . . . . . . . . . . . . . . . . . . .
23
3.14.3 Quotient . . . . . . . . . . . . . . . . . . . . . . . . . . .
23
3.14.4 Inverse . . . . . . . . . . . . . . . . . . . . . . . . . . . .
23
3.15 Matrix Representation of a Complex Number . . . . . . . . . . . .
24
3.15.1 Adding and Subtracting . . . . . . . . . . . . . . . . . . .
25
3.15.2 The Product . . . . . . . . . . . . . . . . . . . . . . . . .
25
3.15.3 The Square of the Norm . . . . . . . . . . . . . . . . . . .
25
3.15.4 The Complex Conjugate . . . . . . . . . . . . . . . . . . .
25
3.15.5 The Inverse . . . . . . . . . . . . . . . . . . . . . . . . . .
26
3.15.6 Quotient . . . . . . . . . . . . . . . . . . . . . . . . . . .
26
3.16 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
27
3.16.1 Summary of Operations . . . . . . . . . . . . . . . . . . .
27
3.17 Worked Examples . . . . . . . . . . . . . . . . . . . . . . . . . .
29
4
The Complex Plane . . . . . . . . . . . . . . . . . . . . . . . . . . . .
33
4.1
Introduction
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
33
4.2
Some History
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
33
4.3
The Complex Plane
. . . . . . . . . . . . . . . . . . . . . . . . .
34
4.4
Polar Representation . . . . . . . . . . . . . . . . . . . . . . . . .
37
4.5
Rotors
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
41
4.6
Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
42
4.6.1
Summary of Operations . . . . . . . . . . . . . . . . . . .
42
4.7
Worked Examples . . . . . . . . . . . . . . . . . . . . . . . . . .
43
5
Quaternion Algebra
. . . . . . . . . . . . . . . . . . . . . . . . . . .
47
5.1
Introduction
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
47
5.2
Some History
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
49
5.3
Deﬁning a Quaternion . . . . . . . . . . . . . . . . . . . . . . . .
53
5.3.1
The Quaternion Units . . . . . . . . . . . . . . . . . . . .
55
5.3.2
Example of Quaternion Products
. . . . . . . . . . . . . .
56
5.4
Algebraic Deﬁnition . . . . . . . . . . . . . . . . . . . . . . . . .
56
5.5
Adding and Subtracting Quaternions
. . . . . . . . . . . . . . . .
57
5.6
Real Quaternion . . . . . . . . . . . . . . . . . . . . . . . . . . .
57

Contents
xiii
5.7
Multiplying a Quaternion by a Scalar . . . . . . . . . . . . . . . .
57
5.8
Pure Quaternion . . . . . . . . . . . . . . . . . . . . . . . . . . .
58
5.9
Unit Quaternion . . . . . . . . . . . . . . . . . . . . . . . . . . .
59
5.10 Additive Form of a Quaternion
. . . . . . . . . . . . . . . . . . .
60
5.11 Binary Form of a Quaternion
. . . . . . . . . . . . . . . . . . . .
60
5.12 The Conjugate . . . . . . . . . . . . . . . . . . . . . . . . . . . .
61
5.13 Norm of a Quaternion . . . . . . . . . . . . . . . . . . . . . . . .
62
5.14 Normalised Quaternion
. . . . . . . . . . . . . . . . . . . . . . .
62
5.15 Quaternion Products . . . . . . . . . . . . . . . . . . . . . . . . .
63
5.15.1 Product of Pure Quaternions . . . . . . . . . . . . . . . . .
63
5.15.2 Product of Two Unit-Norm Quaternions
. . . . . . . . . .
63
5.15.3 Square of a Quaternion
. . . . . . . . . . . . . . . . . . .
64
5.15.4 Norm of the Quaternion Product
. . . . . . . . . . . . . .
65
5.16 Inverse Quaternion . . . . . . . . . . . . . . . . . . . . . . . . . .
65
5.17 Matrices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
67
5.17.1 Orthogonal Matrix . . . . . . . . . . . . . . . . . . . . . .
67
5.18 Quaternion Algebra . . . . . . . . . . . . . . . . . . . . . . . . .
68
5.19 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
68
5.19.1 Summary of Operations . . . . . . . . . . . . . . . . . . .
69
5.20 Worked Examples . . . . . . . . . . . . . . . . . . . . . . . . . .
70
6
3D Rotation Transforms . . . . . . . . . . . . . . . . . . . . . . . . .
73
6.1
Introduction
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
73
6.2
3D Rotation Transforms . . . . . . . . . . . . . . . . . . . . . . .
73
6.3
Rotating About a Cartesian Axis
. . . . . . . . . . . . . . . . . .
73
6.4
Rotate About an Off-Set Axis . . . . . . . . . . . . . . . . . . . .
74
6.5
Composite Rotations . . . . . . . . . . . . . . . . . . . . . . . . .
75
6.6
Rotating About an Arbitrary Axis . . . . . . . . . . . . . . . . . .
78
6.6.1
Matrices . . . . . . . . . . . . . . . . . . . . . . . . . . .
78
6.6.2
Vectors . . . . . . . . . . . . . . . . . . . . . . . . . . . .
80
6.7
Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
83
6.7.1
Summary of Transforms . . . . . . . . . . . . . . . . . . .
83
6.8
Worked Examples . . . . . . . . . . . . . . . . . . . . . . . . . .
84
7
Quaternions in Space . . . . . . . . . . . . . . . . . . . . . . . . . . .
89
7.1
Introduction
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
89
7.2
Some History
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
90
7.2.1
Composition Algebras . . . . . . . . . . . . . . . . . . . .
91
7.3
Quaternion Products . . . . . . . . . . . . . . . . . . . . . . . . .
93
7.3.1
Special Case . . . . . . . . . . . . . . . . . . . . . . . . .
93
7.3.2
General Case . . . . . . . . . . . . . . . . . . . . . . . . .
97
7.4
Quaternions in Matrix Form . . . . . . . . . . . . . . . . . . . . . 101
7.4.1
Vector Method . . . . . . . . . . . . . . . . . . . . . . . . 101
7.4.2
Matrix Method . . . . . . . . . . . . . . . . . . . . . . . . 103
7.4.3
Geometric Veriﬁcation . . . . . . . . . . . . . . . . . . . . 106
7.5
Multiple Rotations . . . . . . . . . . . . . . . . . . . . . . . . . . 108

xiv
Contents
7.6
Eigenvalue and Eigenvector . . . . . . . . . . . . . . . . . . . . . 110
7.7
Rotating About an Off-Set Axis . . . . . . . . . . . . . . . . . . . 111
7.8
Frames of Reference . . . . . . . . . . . . . . . . . . . . . . . . . 113
7.9
Interpolating Quaternions . . . . . . . . . . . . . . . . . . . . . . 114
7.10 Converting a Rotation Matrix to a Quaternion
. . . . . . . . . . . 118
7.11 Euler Angles to Quaternion . . . . . . . . . . . . . . . . . . . . . 120
7.12 Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 123
7.12.1 Summary of Operations . . . . . . . . . . . . . . . . . . . 123
7.13 Worked Examples . . . . . . . . . . . . . . . . . . . . . . . . . . 125
8
Conclusion
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 131
Appendix. Eigenvectors and Eigenvalues
. . . . . . . . . . . . . . . . . . 133
References
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 137
Index
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139

Chapter 1
Introduction
1.1 Rotation Transforms
In computer graphics we use transforms to modify the position and orientation of
an object or a virtual camera. Such transforms generally comprise: scale, translation
and rotation. The ﬁrst two transforms are straight forward, but rotations do cause
problems. This is because we normally construct a rotation transform from individ-
ual rotations about the x-, y- and z-axes. Although such transforms work, they are
far from perfect. What really is required, is a technique that is intuitive, simple and
accurate.
Over the years, rotation transforms have embraced direction cosines, Euler an-
gles, Euler–Rodrigues parameterisation, quaternions and multivectors. The last two
techniques are the most recent, and are historically related. However, the subject of
this book is quaternions, and how they can be used within computer graphics.
1.2 The Reader
This book is aimed at readers studying or working in computer graphics and require
an overview of quaternions. They are probably the same people I have encountered
asking questions on Internet forums about quaternions, how they work, and how
they can be coded. Hopefully, this book will answer most of these questions.
1.3 Aims and Objectives of This Book
The primary aim of this book is to introduce the reader to the subject of quater-
nions and how they can be used to rotate points about an arbitrary axis. A secondary
aim is to make the reader aware of the human dimension behind all mathematical
discovery. Personally, I believe that we must never lose sight of the fact that mathe-
maticians are human beings. And although they may be endowed with extraordinary
J. Vince, Quaternions for Computer Graphics,
DOI 10.1007/978-0-85729-760-0_1, © Springer-Verlag London Limited 2011
1

2
1
Introduction
mathematical skills, they fall in love, marry, raise families, die, and leave behind an
amazing ediﬁce of knowledge, from which we all beneﬁt.
Those readers interested in the human dimension of mathematics are encouraged
to read about the invention of quaternions and discover how love, intrigue, tenacity,
inspiration and dedication resulted in a major mathematical discovery. One book
that is essential reading is Michael Crowe’s A History of Vector Analysis [10]. This
provides a thorough analysis of the events leading up to the invention of quaternions,
and the emergence of vector analysis. A second book is Simon Altmann’s Rotations,
Quaternions, and Double Groups [1], which apart from providing a modern analy-
sis of quaternion algebra, introduces Olinde Rodrigues, who invented some of the
mathematics associated with quaternions three years before William Rowan Hamil-
ton, the man usually accepted as the father of quaternions.
Simon Altmann’s analysis of quaternion algebra has had a profound inﬂuence
upon my own views about quaternions, and I have tried to communicate this in the
following chapters. In particular, I have adopted the idea of using ordered pairs to
represent a quaternion.
The over-riding objective of this book is to enable the reader to design and code
quaternion algorithms. After reading the book, this should be a trivial exercise, in
spite of the fact that we are dealing with a four-dimensional mathematical object.
1.4 Mathematical Techniques
Once the reader has understood quaternions they will be regarded as easy. However,
if this is the ﬁrst time you have encountered them, they could appear strange. But
like all things, familiarity brings understanding and conﬁdence.
In order to describe quaternions I need to call upon a little trigonometry, some
vector theory and matrix algebra. And as quaternions are described as ‘hyper-
complex numbers’ a chapter is included on complex numbers.
1.5 Assumptions Made in This Book
Very often, people working in computer graphics—like myself—did not have the
opportunity to study mathematics to a level often employed in technical literature.
Consequently, I have deliberately written the book with a gentle introduction to for-
mal mathematical notation that progresses through complex algebra towards quater-
nion algebra.

Chapter 2
Number Sets and Algebra
2.1 Introduction
In this chapter we review some basic ideas of number sets, and how they are manipu-
lated arithmetically and algebraically. We look brieﬂy, at expressions and equations
and the rules used for their construction and evaluation. These, in turn, reveal the
need to extend every-day numbers with so called complex numbers.
The second part of the chapter is used to deﬁne groups, rings and ﬁelds.
2.2 Number Sets
2.2.1 Natural Numbers
Natural numbers are the whole numbers 1, 2, 3, 4, etc., and by deﬁnition (DIN
5473), the set of natural numbers and zero {0,1,2,3,4,...} are represented by the
symbol N and we express this assignment using:
N = {0,1,2,3,4,...}.
The statement
k ∈N
implies that k belongs to the set N, where ∈means belongs to, or in other words,
k is a natural number. We employ this notation throughout this book to ensure that
there is no confusion about the type of numerical quantity being used.
N∗is used to represent the set {1,2,3,4,...}.
2.2.2 Real Numbers
Scientiﬁc calculations employ a wide range of mathematical objects such as scalars,
vectors and matrices. A scalar has a single numerical value, whereas a vector has
J. Vince, Quaternions for Computer Graphics,
DOI 10.1007/978-0-85729-760-0_2, © Springer-Verlag London Limited 2011
3

4
2
Number Sets and Algebra
two or more numbers that encode the vector’s magnitude and direction. A matrix is
a rectangular array of numbers that may have all sorts of attributes.
Decimal numbers form the set of reals identiﬁed by R. Such numbers are signed
and can be organised as a line which stretches towards −inﬁnity and + inﬁnity and
includes zero. The concept of inﬁnity is a strange one, and was investigated by the
German mathematician, Georg Cantor (1845–1918). Cantor also invented set theory
and proved that real numbers are more numerous than natural numbers. Fortunately,
we don’t need to employ such concepts within this book.
2.2.3 Integers
The set of integers Z embrace the natural numbers and their negatives:
Z = {...,−3,−2,−1,0,1,2,3,...}.
Z stands for Zahlen—the German for ‘numbers’.
2.2.4 Rational Numbers
The set of rational numbers is Q, and contains numbers of the form:
a
b
where a,b ∈Z and b ̸= 0.
2.3 Arithmetic Operations
We manipulate numbers using the arithmetic operations addition, subtraction, mul-
tiplication and division, whose result is closed or not, or undeﬁned, depending on
the underlying set. For example, when we add two natural numbers together, the
result is always another natural number and therefore, the operation is closed:
3 + 4 = 7.
However, when we subtract two natural numbers, the result may not necessarily be
a natural number. For instance, although
6 −2 = 4
is a closed operation,
2 −6 = −4
is not closed, because −4 is not a member of the set of natural numbers.

2.4
Axioms
5
The product of two natural numbers is always a closed operation, however, divi-
sion causes some problems. To begin with, dividing an even natural number by 2 is
a closed operation:
16/2 = 8.
Whereas, dividing an odd natural number by an even natural number gives rise to a
decimal quantity:
7/2 = 3.5
and does not close because 3.5 does not belong to the set of natural numbers. In the
language of sets, this is written
3.5 /∈N
where /∈means does not belong to.
Multiplying any number by zero results in zero—which is a closed operation;
however, dividing any number by zero is undeﬁned, and has to be excluded.
Real numbers do not have any of the problems associated with natural numbers,
and there is closure on addition, multiplication and division:
a + b = c
a,b,c ∈R
ab = c
a,b,c ∈R
a/b = c
a,b,c ∈R and b ̸= 0.
Note that ab is shorthand for a × b.
2.4 Axioms
When we construct algebraic expressions we employ speciﬁc laws called axioms.
For addition and multiplication, we know that the grouping of numbers makes no
difference to the end result: e.g. 2 + (4 + 6) = (2 + 4) + 6 and 2 × (3 × 4) =
(2 × 3) × 4. This is the associative axiom and is expressed as:
a + (b + c) = (a + b) + c
a(bc) = (ab)c.
We also know that order makes no difference to the end result when adding or
multiplying: e.g. 2 + 6 = 6 + 2 and 2 × 6 = 6 × 2. This is the commutative axiom
and is expressed as:
a + b = b + a
ab = ba.
Algebraic expressions contain all sorts of products involving a single real number
and a string of reals that obey the distributive axiom:

6
2
Number Sets and Algebra
a(b + c) = ab + ac
(a + b)(c + d) = ac + ad + bc + bd.
The reason why we have reviewed these axioms is that they should not be regarded
as carved in mathematical stone, and apply to everything that is invented. For when
we come to quaternions we will discover that they do not obey the commutative
axiom, which is not that strange. If you have used matrices you will know that
matrix multiplication is also non-commutative, but is associative.
2.5 Expressions
Using the above axioms we are able to construct all sorts of expressions such as:
a(2 + c) −d/e + a −10
g/(ac −bd) + h/(de −fg).
We also employ notation for raising a quantity to some power such as n2. This
notation introduces another set of observations:
anam = an+m
an
am = an−m
(an)m = anm
an
an = a0 = 1
1
an = a−1
a1/n =
n√a.
Next, we have to include all sorts of functions such as square-roots, sines and
cosines, which may seem rather innocent. But we must be wary of them. For ex-
ample,
√
16 = 4 by convention. However, x2 = 16 has two solutions: ±
√
16 = ±4.
Whereas, there is no natural or real number solution for
√
−16. Consequently, the
expression √a has no real roots if a < 0.
Similarly, when working with trigonometric functions such as sine and cosine,
we must remember that these take on a range of values between −1 and +1, includ-
ing 0, which means that if they are employed as a denominator, the result could be
undeﬁned. For example, this expression is undeﬁned if sinα = 0
a
sinα .

2.6
Equations
7
2.6 Equations
Next, we come to equations where we assign the value of an expression to a variable.
In most situations the assignment is straightforward and leads to a real result such
as
x2 −16 = 0
where x = ±4. But what is interesting is that just by reversing the sign to
x2 + 16 = 0
we create an equation for which there is no real solution. However, there is a complex
solution, which is the subject of Chap. 3.
2.7 Ordered Pairs
An ordered pair or couple (a,b) is an object having two entries, coordinates or
projections, where the ﬁrst or left entry, is distinguishable from the second or right
entry. For example, (a, b) is distinguishable from (b,a) unless a = b. Perhaps the
best example of an ordered pair is (x,y) that represents a point on the plane, where
the order of the entries is always the x-coordinate followed by the y-coordinate.
Ordered pairs and ordered triples are widely used in computer graphics to rep-
resent points on the plane (x,y), points in space (x,y,z), and colour values such
as (r,g,b) and (h,s,v). In these examples, the ﬁelds are all real values. There is
nothing to stop us from developing an algebra using ordered pairs that behaves like
another algebra, and we will do this for complex numbers in Chap. 3 and quater-
nions in Chap. 5. For the moment, let’s explore some ways ordered pairs can be
manipulated.
Say we choose to describe a generic ordered pair as
a = (a1,a2)
a1,a2 ∈R.
We will deﬁne the addition of two such objects as
a = (a1,a2)
b = (b1,b2)
a + b = (a1 + b1,a2 + b2).
For example:
a = (2,3)
b = (4,5)
a + b = (6,8).
We will deﬁne the product as
ab = (a1b1, a2b2)

8
2
Number Sets and Algebra
which, using the above values, results in
ab = (8,15).
Remember, we are in charge, and we deﬁne the rules.
Another rule will control how an ordered pair responds to scalar multiplication.
For example:
λ(a1,a2) = (λa1,λa2)
λ ∈R
3(2,3) = (6,9).
With the above rules, we are in a position to write
(a1, a2) = (a1,0) + (0,a2)
= a1(1,0) + a2(0,1)
and if we square these unit ordered pairs (1,0) and (0,1) using the product rule, we
obtain
(1,0)2 = (1,0)
(0,1)2 = (0,1)
which suggests that they behave like real numbers, and is not unexpected.
This does not appear to be very useful, but wait and see what happens in the
context of complex numbers and quaternions.
2.8 Groups, Rings and Fields
Mathematicians employ a bewildering range of names to identify their inventions,
which seemingly, appear on a daily basis. Even the name ‘quaternion’ is not original,
and appears throughout history often in the context of “a quaternion of soldiers”:
“The Romans detached a quaternion or four men for a night guard ...” [19].
Without becoming too formal, let’s explore some more mathematical structures that
are relevant to the ideas contained in this book.
2.8.1 Groups
We have already covered the idea of a set, and what it means to belong to a set. We
have also discovered that when we apply certain arithmetic operations to members
of a set we can secure closure, non-closure, or the result is undeﬁned.
When combining sets with arithmetic operations, it is convenient to create an-
other entity: a group, which is a set, together with the axioms describing how ele-
ments of the set are combined. The set might contain numbers, matrices, vectors,
quaternions, polynomials, etc., and are represented below as a, b and c.

2.8
Groups, Rings and Fields
9
The axioms employ the ‘◦’ symbol to represent any binary operation such as
+,−,×. And a group is formed from a set and a binary operation. For example,
we may wish to form a group of integers under addition: (Z,+), or we may wish
to examine whether quaternions form a group under the operation of multiplication:
(H,×).
To be a group, all the following axioms must hold for the set S. In particular,
there must be a special identity element e ∈S, and for each a ∈S there must exist
an inverse element a−1 ∈S, so that the following axioms are satisﬁed:
Closure:
a ◦b ∈S
a,b ∈S.
Associativity:
(a ◦b) ◦c = a ◦(b ◦c)
a,b,c ∈S.
Identity element:
a ◦e = e ◦a = a
a,e ∈S.
Inverse element:
a ◦a−1 = a−1 ◦a = e
a,a−1,e ∈S.
We describe a group as (S,◦), where S is the set and ‘◦’ the operation. For
instance, (Z,+) is the group of integers under the operation of addition, and (R,×)
is the group of reals under the operation of multiplication.
Let’s bring these axioms to life with three examples.
(Z,+): The integers Z form a group under the operation of addition:
Closure:
−23 + 24 = 1
Associativity:
(2 + 3) + 4 = 2 + (3 + 4) = 9
Identity:
2 + 0 = 0 + 2 = 2
Inverse:
2 + (−2) = (−2) + 2 = 0.
(Z,×): The integers Z do not form a group under multiplication:
Closure:
−2 × 4 = −8
Associativity:
(2 × 3) × 4 = 2 × (3 × 4) = 24
Identity:
2 × 1 = 1 × 2 = 2
Inverse:
2−1 = 0.5
(0.5 /∈Z).
Also, the integer 0 has no inverse.
(Q,×): The group of non-zero rational numbers form a group under multiplication:
Closure:
2
5 × 2
3 = 4
15
Associativity:
2
5 × 2
3

× 1
2 = 2
5 ×
2
3 × 1
2

= 2
15
Identity:
2
3 × 1
1 = 1
1 × 2
3 = 2
3
Inverse:
2
3 × 3
2 = 1
1

where 3
2 =
2
3
−1
.

10
2
Number Sets and Algebra
2.8.2 Abelian Group
Lastly, an abelian group, named after the Norwegian mathematician, Neils Henrik
Abel (1802–1829), is a group where the order of elements does not inﬂuence the re-
sult, i.e. the group is commutative. Thus there are ﬁve axioms: closure, associativity,
identity element, inverse element, and commutativity:
Commutativity:
a ◦b = b ◦a
a,b ∈S.
For example, the set of integers forms an abelian group under ordinary addition
(Z,+). However, because 3D rotations do not generally commute, the set of all
rotations in 3D space forms a non-commutative group.
2.8.3 Rings
A ring is an extended group, where we have a set of objects which can be added
and multiplied together, subject to some precise axioms. There are rings of real
numbers, complex numbers, integers, matrices, equations, polynomials, etc. A ring
is formally deﬁned as a system where (S,+) and (S,×) are abelian groups and the
distributive axioms:
Additive associativity:
a + (b + c) = (a + b) + c
a,b,c ∈S.
Multiplicative associativity: a × (b × c) = (a × b) × c
a,b,c ∈S.
Distributivity:
a × (b + c) = (a × b) + (a × c) and
(a + b) × c = (a × c) + (b × c) a,b,c ∈S.
For example, we already know that the integers Z form a group under the operation
of addition, but they also form a ring, as the set satisﬁes the above axioms:
2 × (3 × 4) = (2 × 3) × 4
2 × (3 + 4) = (2 × 3) + (2 × 4)
(2 + 3) × 4 = (2 × 4) + (3 × 4).
2.8.4 Fields
Although rings support addition and multiplication, they do not necessarily support
division. However, as division is such an important arithmetic operation, the ﬁeld
was created to support it, with one proviso: division by zero is not permitted. Thus
we have ﬁelds of real numbers R, rational numbers Q, and as we shall see, the
complex numbers C. However, we will discover that quaternions do not form a
ﬁeld, but they do form what is called a division ring.
It follows that every ﬁeld is a ring, but not every ring is a ﬁeld.

2.9
Summary
11
2.8.5 Division Ring
A division ring or division algebra, is a ring in which every element has an inverse
element, with the proviso that the element is non-zero. The algebra also supports
non-commutative multiplication. Here is a formal description of the division ring
(S,+,×):
Additive associativity:
(a + b) + c = a + (b + c)
a,b,c ∈S.
Additive commutativity:
a + b = b + a
a,b ∈S.
Additive identity 0:
0 + a = a + 0
a,0 ∈S.
Additive inverse:
a + (−a) = (−a) + a = 0
a,−a ∈S.
Multiplicative associativity: (a × b) × c = a × (b × c)
a,b,c ∈S.
Multiplicative identity 1:
1 × a = a × 1
a,1 ∈S.
Multiplicative inverse:
a × a−1 = a−1 × a = 1
a,a−1 ∈S, a ̸= 0.
Distributivity:
a × (b + c) = (a × b) + (a × c) and
(b + c) × a = (b × a) + (c × a) a,b,c ∈S.
In 1878 the German mathematician, Ferdinand Georg Frobenius (1849–1917),
proved that there are only three associative division algebras: real numbers R, com-
plex numbers C, and quaternions H.
2.9 Summary
The objective of this chapter was to remind you of the axiomatic systems underlying
algebra, and how the results of arithmetic operations can be open, closed, or unde-
ﬁned. Perhaps some of the ideas of ordered pairs, sets, groups, ﬁelds and rings are
new, and they have been included as this notation is often used in association with
quaternions.
All of these ideas emerge again when we consider the algebra of complex num-
bers and later on, quaternions.
2.9.1 Summary of Deﬁnitions
Ordered pair
An object with two distinguishable components: (a, b) such that (a,b) ̸= (b,a)
unless a = b.
Set
Deﬁnition: A set is a collection of objects.
Notation: k ∈Z means k belongs to the set Z.

12
2
Number Sets and Algebra
C: Set of complex numbers
H: Set of quaternions
N: Set of natural numbers
Q: Set of rational numbers
R: Set of real numbers
Z: Set of integers.
Group
Deﬁnition: A group (S,◦) is a set S and a binary operation ‘◦’ and the axioms
deﬁning closure, associativity, an identity element, and an inverse element.
Closure:
a ◦b ∈S
a,b ∈S.
Associativity:
(a ◦b) ◦c = a ◦(b ◦c)
a,b,c ∈S.
Identity element:
a ◦e = e ◦a = a
a,e ∈S.
Inverse element:
a ◦a−1 = a−1 ◦a = e.
a,a−1,e ∈S.
Ring
Deﬁnition: A ring is a group whose elements can be added/subtracted and mul-
tiplied, using some precise axioms:
Additive associativity:
a + (b + c) = (a + b) + c
a,b,c ∈S.
Multiplicative associativity: a × (b × c) = (a × b) × c
a,b,c ∈S.
Distributivity:
a × (b + c) = (a × b) + (a × c) and
(a + b) × c = (a × c) + (b × c) a,b,c ∈S.
Field
Deﬁnition: A ﬁeld is a ring that supports division.
Division ring
Every element of a division ring has an inverse element, with the proviso that the
element is non-zero. The algebra also supports non-commutative multiplication.
Additive associativity:
(a + b) + c = a + (b + c)
a,b,c ∈S.
Additive commutativity:
a + b = b + a
a,b ∈S.
Additive identity 0:
0 + a = a + 0
a,0 ∈S.
Additive inverse:
a + (−a) = (−a) + a = 0
a,−a ∈S.
Multiplicative associativity: (a × b) × c = a × (b × c)
a,b,c ∈S.
Multiplicative identity 1:
1 × a = a × 1
a,1 ∈S.
Multiplicative inverse:
a × a−1 = a−1 × a = 1
a,a−1 ∈S, a ̸= 0.
Distributivity:
a × (b + c) = (a × b) + (a × c) and
(b + c) × a = (b × a) + (c × a) a,b,c ∈S.

Chapter 3
Complex Numbers
3.1 Introduction
In this chapter we discover how equations that have no real roots give rise to imagi-
nary i which squares to −1. This, in turn, leads us to complex numbers and how they
are manipulated algebraically. Many of the qualities associated with quaternions are
found in complex numbers, which is why they are worthy of close examination.
3.2 Imaginary Numbers
Imaginary numbers were invented to resolve problems where an equation has no
real roots, such as x2 + 16 = 0. The simple idea of declaring the existence of a
quantity i, such that i2 = −1, permits us to express the solution to this equation as
x = ±4i.
It is pointless trying to discover what i really is—i really is just something that
squares to −1. Nevertheless, it does lend itself to a graphical interpretation, which
we investigate in the next chapter.
In 1637, the French mathematician, René Descartes (1596–1650), published
La Géométrie [11], in which he stated that numbers incorporating
√
−1 were “imag-
inary”, and for centuries this label has stuck. Unfortunately, it was a derogatory
remark, and there is nothing imaginary about i—it really is just something that
squares to −1, and when embedded within algebra creates some amazing patterns.
The set of imaginary numbers is represented by I, which permits us to deﬁne an
imaginary number as
ib ∈I,
b ∈R,
i2 = −1.
3.3 Powers of i
As i2 = −1 then it should be possible to raise i to other powers. For example,
J. Vince, Quaternions for Computer Graphics,
DOI 10.1007/978-0-85729-760-0_3, © Springer-Verlag London Limited 2011
13

14
3
Complex Numbers
i4 = i2i2 = 1
and
i5 = ii4 = i.
Therefore, we have the sequence:
i0
i1
i2
i3
i4
i5
i6
1
i
−1
−i
1
i
−1
The cyclic pattern (1,i,−1,−i,1,...) is quite striking, and reminds us of a sim-
ilar pattern (x,y,−x,−y,x,...) which is generated by rotating around the Carte-
sian axes in an counter-clockwise direction. Such a similarity cannot be ignored, for
when the real number line is combined with a vertical imaginary axis it gives rise to
what is called the complex plane. But more of that later.
The above sequence is summarised as:
i4n = 1
i4n+1 = i
i4n+2 = −1
i4n+3 = −i
where n ∈N.
But what about negative powers? Well, they, too, are also possible. Consider i−1,
which is evaluated as follows:
i−1 = 1
i = 1(−i)
i(−i) = −i
1 = −i.
Similarly,
i−2 = 1
i2 = 1
−1 = −1
and
i−3 = i−1i−2 = −i(−1) = i.
The sequence associated with increasing negative powers is:
i0
i−1
i−2
i−3
i−4
i−5
i−6
1
−i
−1
i
1
−i
−1

3.4
Complex Numbers
15
This time the cyclic pattern is reversed to (1,−i,−1,i,1,...) and is similar to the
pattern (x,−y,−x,y,x,...) which is generated by rotating around the Cartesian
axes in a clockwise direction.
Perhaps the strangest power of all is itself: ii, which happens to equal e−π/2 =
0.207879576... , and is explained in Chap. 4. Having reviewed certain features of
imaginary i, let’s discover what happens when it’s combined with real numbers.
3.4 Complex Numbers
By deﬁnition, a complex number is the sum of a real number and an imaginary
number, and is expressed formally as
z = a + c
a ∈R,
c ∈I.
We could also write
z = a + bi
a,b ∈R,
i2 = −1.
The set of complex numbers is labelled C, which permits us to write z ∈C. For
example, 3+4i is a complex number where 3 is the real part and 4i is the imaginary
part. The following are all complex numbers:
3,
3 + 4i,
−4 −6i,
7i,
5.5 + 6.7i.
A real number is also a complex number—it just has no imaginary part. This leads to
the idea that real numbers and imaginary numbers are subsets of complex numbers,
which is expressed as follows:
R ⊂C
I ⊂C
where ⊂means is a subset of.
Although some mathematicians place i before its multiplier: i4, others place it
after the multiplier: 4i, which is the convention used in this book. However, when i
is associated with trigonometric functions, it is good practise to place it before the
function to avoid any confusion with the function’s angle. For example, sinαi could
imply that the angle is imaginary, whereas i sinα implies that the value of sinα is
imaginary.
Therefore, a complex number can be constructed in all sorts of ways:
sinα + i cosβ,
2 −i tanα,
23 + x2i.
In general, we write a complex number as a + bi and subject it to the normal rules
of real algebra. All that we have to remember is that whenever we encounter i2 it is
replaced by −1. For example:

16
3
Complex Numbers
(2 + 3i)(3 + 4i) = 2 × 3 + 2 × 4i + 3i × 3 + 3i × 4i
= 6 + 8i + 9i + 12i2
= 6 + 17i −12
= −6 + 17i.
3.5 Adding and Subtracting Complex Numbers
Given two complex numbers
z1 = a1 + b1i
z2 = a2 + b2i
then
z1 ± z2 = (a1 ± a2) + (b1 ± b2)i
where the real and imaginary parts are added or subtracted, respectively. The oper-
ations are closed, so long as a1,b1,a2,b2 ∈R.
For example:
z1 = 2 + 3i
z2 = 4 + 2i
z1 + z2 = 6 + 5i
z1 −z2 = −2 + i.
3.6 Multiplying a Complex Number by a Scalar
A complex number is multiplied by a scalar using normal algebraic rules. For ex-
ample, the complex number a + bi is multiplied by the scalar λ as follows:
λ(a + bi) = λa + λbi
a speciﬁc example is
3(2 + 5i) = 6 + 15i.
3.7 Complex Number Products
Given two complex numbers
z1 = a1 + b1i
z2 = a2 + b2i

3.8
Norm of a Complex Number
17
their product is
z1z2 = (a1 + b1i)(a2 + b2i)
= a1a2 + a1b2i + b1a2i + b1b2i2
= (a1a2 −b1b2) + (a1b2 + b1a2)i
which is another complex number and conﬁrms that the operation is closed. For
example:
z1 = 3 + 4i
z2 = 3 −2i
z1z2 = (3 + 4i)(3 −2i)
= 9 −6i + 12i −8i2
= 9 + 6i + 8
= 17 + 6i.
Note that the addition, subtraction and multiplication of complex numbers obey the
normal axioms of algebra.
3.7.1 Square of a Complex Number
Given a complex number z, its square z2 is given by:
z = a + bi
z2 = (a + bi)(a + bi)
= (a2 −b2) + 2abi.
For example:
z = 4 + 3i
z2 = (4 + 3i)(4 + 3i)
= (42 −32) + 2 × 4 × 3i
= 7 + 24i.
3.8 Norm of a Complex Number
The norm, modulus or absolute value of a complex number z is written |z| and by
deﬁnition is
z = a + bi
|z| =

a2 + b2.

18
3
Complex Numbers
For example, the norm of 3 + 4i is 5. We’ll see why this is so when we cover the
polar representation of a complex number.
3.9 Complex Conjugate
The product of two complex numbers, where the only difference between them is
the sign of the imaginary part, gives rise to a special result:
(a + bi)(a −bi) = a2 −abi + abi −b2i2
= a2 + b2.
This type of product always results in a real quantity and is used to resolve the
quotient of two complex numbers. Because this real value is such an interesting
result, a −bi is called the complex conjugate of z = a + bi, and is written either
with a bar ¯z, or an asterisk z∗, and implies that
zz∗= a2 + b2 = |z|2.
For example:
z = 3 + 4i
z∗= 3 −4i
zz∗= 9 + 16 = 25.
3.10 Quotient of Two Complex Numbers
The complex conjugate provides us with a mechanism to divide one complex num-
ber by another. For instance, the quotient
a1 + b1i
a2 + b2i
is resolved by multiplying the numerator and denominator by the denominator’s
complex conjugate a2 −b2i to create a real denominator:
a1 + b1i
a2 + b2i = (a1 + b1i)(a2 −b2i)
(a2 + b2i)(a2 −b2i)
= a1a2 −a1b2i + b1a2i −b1b2i2
a2
2 + b2
2
= a1a2 + b1b2
a2
2 + b2
2
+ b1a2 −a1b2
a2
2 + b2
2
i.
For example, to evaluate
4 + 3i
3 + 4i

3.11
Inverse of a Complex Number
19
we multiply top and bottom by the complex conjugate 3 −4i:
4 + 3i
3 + 4i = (4 + 3i)(3 −4i)
(3 + 4i)(3 −4i)
= 12 −16i + 9i −12i2
25
= 24
25 −7
25i.
3.11 Inverse of a Complex Number
To compute the inverse of z = a + bi we start with
z−1 = 1
z .
Multiplying top and bottom by z∗we have
z−1 = z∗
zz∗.
But we have previously shown that zz∗= |z|2, therefore,
z−1 = z∗
|z|2
=

a
a2 + b2

−

b
a2 + b2

i.
As an illustration, the inverse of 3 + 4i is
(3 + 4i)−1 = 3
25 −4
25i.
Let’s test this result by multiplying 3 + 4i by its inverse:
(3 + 4i)
 3
25 −4
25i

= 9
25 −12
25i + 12
25i + 16
25 = 1
which conﬁrms the correctness of the result.
3.12 Square-Root of i
To ﬁnd
√
i we assume that the roots are complex. Therefore, we start with
i = (a + bi)(a + bi)
= a2 + 2abi −b2
= a2 −b2 + 2abi

20
3
Complex Numbers
and equating real and imaginary parts we have
a2 −b2 = 0
2ab = 1.
From this we deduce that
a = b =
√
2
2 .
Therefore, the roots are
√
i = ±
√
2
2 (1 + i).
Let’s test this result by squaring each root to ensure the answer is i:
√
2
2 (1 + i)
√
2
2 (1 + i)

= 1
22i = i

−
√
2
2 (1 + i)

−
√
2
2 (1 + i)

= 1
22i = i.
For completeness, let’s evaluate √−i:
−i = (a + bi)(a + bi)
= a2 + 2abi −b2
= a2 −b2 + 2abi
and equating real and imaginary parts we have
a2 −b2 = 0
2ab = −1.
From this we deduce that
a = b =
√
2
2 i.
Therefore, the roots are
√
−i = ±
√
2
2 (1 −i).
Again, let’s test this result by squaring each root to ensure the answer is −i:
√
2
2 (1 −i)
√
2
2 (1 −i)

= 1
2(−2i) = −i

−
√
2
2 (1 −i)

−
√
2
2 (1 −i)

= 1
2(−2i) = −i.
We use these roots in the next chapter to investigate the rotational properties of
complex numbers.

3.13
Field Structure
21
3.13 Field Structure
The set of complex numbers C is a ﬁeld, because they satisfy the previously deﬁned
rules for a ﬁeld.
3.14 Ordered Pairs
So far, we have chosen to express a complex number as a + bi where we can distin-
guish between the real and imaginary parts. However, one thing we cannot assume
is that the real part is always ﬁrst, and the imaginary part second, because bi + a is
still a complex number. Consequently, two functions can be employed to extract the
real and imaginary coefﬁcients as follows
Re(a + bi) = a
Im(a + bi) = b
and leads us to the idea of representing a complex number by an ordered pair where
order is guaranteed.
We are now in a position to deﬁne the set C of complex numbers as the set R2
of ordered pairs (a, b) of real numbers, and rewrite the axioms for addition and
multiplication as:
z1 = (a1, b1)
z2 = (a2, b2)
z1 + z2 = (a1 + a2,b1 + b2)
(3.1)
z1z2 = (a1a2 −b1b2,b1a2 + a1b2).
(3.2)
Writing a complex number as an ordered pair was a great contribution, and ﬁrst
made by Hamilton in 1833. Such notation is very succinct and free from any imag-
inary term, which can be added whenever required.
We will now use (3.1) and (3.2) to multiply two complex numbers together. To
begin with, we will evaluate the product using the conventional notation, and then
using ordered pairs.
z1 = 6 + 2i
z2 = 4 + 3i
z1z2 = (6 + 2i)(4 + 3i)
= 24 + 18i + 8i −6
= 18 + 26i.
Next, using ordered pairs and (3.1) and (3.2):

22
3
Complex Numbers
z1 = (6,2)
z2 = (4,3)
z1z2 = (6,2)(4,3)
= (24 −6,18 + 8)
= (18,26)
which is correct.
Let’s continue to develop an algebra based upon ordered pairs that is identical to
the algebra of complex numbers. We start by writing
z = (a,b)
= (a,0) + (0,b)
= a(1,0) + b(0,1)
which creates the unit ordered pairs (1,0) and (0,1).
Now let’s compute the product (1,0)(1,0):
(1,0)(1,0) = (1 −0,0)
= (1,0)
which shows that (1,0) behaves like the real number 1, i.e. (1,0) = 1.
Next, let’s compute the product (0,1)(0,1):
(0,1)(0,1) = (0 −1,0)
= (−1,0)
which is the real number −1:
(0,1)2 = −1
or
(0,1) =
√
−1
and is imaginary.
This means that the ordered pair (a,b), together with its associated rules, represents
a complex number, i.e. (a,b) ≡a + bi.
3.14.1 Multiplying by a Scalar
We are already familiar with the rule
λ(a,b) = (λa,λb)
which is compatible with the algebra of complex numbers.

3.14
Ordered Pairs
23
3.14.2 Complex Conjugate
The conjugate of z = a + bi is deﬁned as z∗= a −bi, which in terms of an ordered
pair is z∗= (a,−b). Using (3.2) we have
z = (a,b)
z∗= (a,−b)
zz∗= (a,b)(a,−b)
= (a2 + b2,ba −ab)
= (a2 + b2,0)
= a2 + b2
which is correct.
3.14.3 Quotient
The technique for resolving z1/z2 is to multiply the expression by z∗
2/z∗
2, which
using ordered pairs is
z1
z2
= (a1,b1)
(a2,b2)
= (a1,b1)
(a2,b2)
(a2,−b2)
(a2,−b2)
= (a1a2 + b1b2,b1a2 −a1b2)
(a2
2 + b2
2,0)
=
a1a2 + b1b2
a2
2 + b2
2
, b1a2 −a1b2
a2
2 + b2
2

.
3.14.4 Inverse
We have previously shown that z−1 is
z−1 = z∗
zz∗
which using ordered pairs is
z = (a,b)
z−1 =
(a,−b)
(a,b)(a,−b)

24
3
Complex Numbers
=
(a,−b)
(a2 + b2,0)
=

a
a2 + b2 ,
−b
a2 + b2

.
It is obvious from the above deﬁnitions that ordered pairs provide an alternative
notation for expressing complex numbers, where the imaginary feature is embedded
within the product axiom. We will also use ordered pairs to deﬁne a quaternion with
three imaginary terms, which when incorporated within the product axiom remain
hidden.
3.15 Matrix Representation of a Complex Number
As quaternions have a matrix representation, perhaps we should investigate the ma-
trix representation for a complex number. We can reason that the matrix C for a
complex number is the sum of two other matrices representing the real R, and imag-
inary I parts:
C = R + I
which, in turn, can be written as
C = a ˆR + bˆI
a,b ∈R
where ˆR ≡1 and ˆI ≡i.
The matrix equivalent of 1 is the 2 × 2 identity matrix:
1
0
0
1

.
Although I have only hinted that i can be regarded as some sort of rotational op-
erator, this is the perfect way of visualising it. In Chap. 4 we will discover that
multiplying a complex number by i effectively rotates the number 90°. So for the
moment, it can be represented by a rotation matrix of 90°:
cos90°
−sin90°
sin90°
cos90°

=
0
−1
1
0

which permits us to write:
a
−b
b
a

= a
1
0
0
1

+ b
0
−1
1
0

.
Note that the matrix representing i squares to −1:
0
−1
1
0
0
−1
1
0

= −1
1
0
0
1

.
Now let’s employ matrix notation for all the arithmetic operations used for complex
numbers.

3.15
Matrix Representation of a Complex Number
25
3.15.1 Adding and Subtracting
Two complex numbers are added or subtracted as follows:
z1 = a1 + b1i
z2 = a2 + b2i
z1 =
a1
−b1
b1
a1

z2 =
a2
−b2
b2
a2

z1 ± z2 =
a1
−b1
b1
a1

±
a2
−b2
b2
a2

=
a1 ± a2
−(b1 ± b2)
b1 ± b2
a1 ± a2

.
3.15.2 The Product
The product of two complex numbers is computed as follows
z1 = a1 + b1i
z2 = a2 + b2i
z1z2 =
a1
−b1
b1
a1
a2
−b2
b2
a2

=
a1a2 −b1b2
−(a1b2 + b1a2)
a1b2 + b1a2
a1a2 −b1b2

.
3.15.3 The Square of the Norm
The square of the norm emerges as the determinant of the matrix:
z = a + bi
|z|2 =

a
−b
b
a
 = a2 + b2.
3.15.4 The Complex Conjugate
The complex conjugate of a complex number z is represented by

26
3
Complex Numbers
z = a + bi
z∗= a −bi
=
 a
b
−b
a

and the product zz∗= a2 + b2:
zz∗=
a
−b
b
a
 a
b
−b
a

=
a2 + b2
0
0
a2 + b2

.
3.15.5 The Inverse
The inverse of 2 × 2 matrix A is given by
A =
a11
a12
a21
a22

A−1 =
1
a11a22 −a12a21
 a22
−a12
−a21
a12

therefore, the inverse of z is given by
z = a + bi
z =
a
−b
b
a

z−1 =
1
a2 + b2
 a
b
−b
a

=
a
a2 + b2 −
b
a2 + b2 i.
3.15.6 Quotient
The quotient of two complex numbers is computed as follows:
z1 = a1 + b1i
z2 = a2 + b2i
z1
z2
= z1z−1
2
=
a1
−b1
b1
a1

1
a2
2 + b2
2
 a2
b2
−b2
a2

=
1
a2
2 + b2
2
a1a2 + b1b2
−(b1a2 −a1b2)
b1a2 −a1b2
a1a2 + b1b2

.

3.16
Summary
27
3.16 Summary
We have shown in this chapter that the set of complex numbers is a ﬁeld, as they sat-
isfy the requirement for closure, associativity, distributivity, an identity element, and
an inverse. We have also shown that there is a one-to-one correspondence between a
complex number and an ordered pair, and that a complex number can be represented
as a matrix, which permits us to compute all complex number operations as matrix
operations.
If this the ﬁrst time you have come across complex numbers you probably will
have found them strange on the one hand, and amazing on the other. Simply by
declaring the existence of i that squares to −1, opens up a new number system that
uniﬁes large areas of mathematics.
3.16.1 Summary of Operations
Deﬁnitions
I is the set of imaginary numbers: bi ∈I, b ∈R, i2 = −1.
C is the set of complex numbers and is a ﬁeld.
z = a + bi
a ∈R,
bi ∈I,
z ∈C
=

a
−b
b
a
	
Ordered pair
a + bi ≡(a,b)
Addition and subtraction
z1 = a1 + b1i
z2 = a2 + b2i
z1 ± z2 = a1 ± a2 + (b1 ± b2)i
=

a1 ± a2
−(b1 ± b2)
b1 ± b2
a1 ± a2
	
Product
z1z2 = (a1 + b1i)(a2 + b2i)
= (a1a2 −b1b2) + (a1b2 + b1a2)i
=

a1a2 −b1b2
−(a1b2 + b1a2)
a1b2 + b1a2
a1a2 −b1b2
	

28
3
Complex Numbers
Square
z2 = (a + bi)2
= (a2 −b2) + 2abi
=
a2 −b2
−2ab
2ab
a2 −b2

Norm
z = a + bi
|z| =

a2 + b2
|z|2 =

a
−b
b
a

Complex conjugate
z = a + bi
z∗= a −bi
=
 a
b
−b
a

Quotient
z1
z2
= a1 + b1i
a2 + b2i
= a1a2 + b1b2
a2
2 + b2
2
+ b1a2 −a1b2
a2
2 + b2
2
i
= z1z−1
2
=
a1
−b1
b1
a1

1
a2
2 + b2
2
 a2
b2
−b2
a2

=
1
a2
2 + b2
2
a1a2 + b1b2
−(b1a2 −a1b2)
b1a2 −a1b2
a1a2 + b1b2

Inverse
z = a + bi
1
z = z∗
|z|2
=

a
a2 + b2

−

b
a2 + b2

i
=
1
a2 + b2
 a
b
−b
a


3.17
Worked Examples
29
Square root of ±i
√
i = ±
√
2
2 (1 + i)
= ±
√
2
2
1
−1
1
1

√
−i = ±
√
2
2 (1 −i)
= ±
√
2
2
 1
1
−1
1

3.17 Worked Examples
Here are some further worked examples that employ the ideas described above. In
some cases, a test is included to conﬁrm the result.
Example 1 Add and subtract z1 and z2:
z1 = 12 + 6i
z2 = 10 −4i
z1 + z2 = 22 + 2i
z1 −z2 = 2 + 10i.
Example 2 Compute the product z1z2:
z1z2 = (12 + 6i)(10 −4i)
= 144 + 12i.
Example 3 Multiply z1 by i:
z1i = (12 + 6i)i
= −6 + 12i.
Example 4 Compute the norms of the following:
|5 + 12i| =

52 + 122 = 13
| ± 1| = 1
| ± i| = 1
|1 ± i| =
√
2.

30
3
Complex Numbers
Example 5 Compute the complex conjugates of the following:
(2 + 3i)∗= 2 −3i
1∗= 1
i∗= −i
(−i)∗= i.
Example 6 Compute the quotient (2 + 3i)/(3 + 4i).
2 + 3i
3 + 4i = (2 + 3i)
(3 + 4i)
(3 −4i)
(3 −4i)
= 6 −8i + 9i + 12
25
= 18
25 + 1
25i.
Test:
(3 + 4i)
18
25 + 1
25i

= 54
25 + 3
25i + 72
25i −4
25
= 2 + 3i.
Example 7 Divide 2 + 3i by i.
2 + 3i
i
= (2 + 3i)
i
(−i)
(−i)
= −2i + 3
1
= 3 −2i.
Test:
i(3 −2i) = 2 + 3i.
Example 8 Divide 2 + 3i by −i.
2 + 3i
−i
= (2 + 3i)
−i
(i)
(i)
= 2i −3
1
= −3 + 2i.
Test:
−i(−3 + 2i) = 2 + 3i.

3.17
Worked Examples
31
Example 9 Compute the inverse of 2 + 3i.
1
2 + 3i =
1
(2 + 3i)
(2 −3i)
(2 −3i)
= 2 −3i
13
= 2
13 −3
13i.
Test:
(2 + 3i)
 2
13 −3
13i

= 4
13 −6
13i + 6
13i + 9
13 = 1.
Example 10 Compute the inverse of i.
1
i = 1
i
(−i)
(−i)
= −i
1 = −i.
Test:
i(−i) = 1.
Example 11 Compute the inverse of −i.
1
−i = 1
−i
(i)
(i)
= i
1 = i.
Test:
−ii = 1.


Chapter 4
The Complex Plane
4.1 Introduction
The history of some subjects often makes exciting reading, especially when there
is a dispute over dates or prior art. Clarifying who did something before someone
else is the work of historians, who can help unravel whom should be blamed for an
event, and who should take the credit. Untangling events from journals, books and
private letters, and placing them in an unbiased, temporal sequence requires subject
knowledge, tenacity and objective analysis.
For most research disciplines, two dates are very important in establishing prior-
ity: the date a paper is submitted for publication, and the date an accepted paper is
published. Such a protocol appears to be a fair scheme, but nevertheless, assumes
an efﬁcient postal system, an unbiased peer review system, and much else.
In mathematics and the sciences, some researchers are not always conﬁdent about
releasing an embryonic idea for publication, and if not published, the idea either
remains in their head, or on their desk in a notebook, which may or may not be
discovered after the researcher’s death. Unfortunately for the researcher, a human
head is not a convenient depository of information for the historian!
Sometimes, mathematical papers appear in journals associated with other dis-
ciplines, which, understandably, are not necessarily monitored by the mathematics
community. Again, clever detective work on the part of historians or inquisitive
academics, bring to the surface complex issues of priority, attribution, and in some
cases, the unsavoury suspicion of plagiarism.
The invention of the complex plane is a perfect example of how things can go
seriously wrong for the inventor when ofﬁcial channels for publishing mathematical
ideas are bipassed. Let’s see what happened.
4.2 Some History
It all started in 1813, when the amateur, Swiss mathematician Jean-Robert Argand
(1768–1822), published his idea on the geometric interpretation of complex
J. Vince, Quaternions for Computer Graphics,
DOI 10.1007/978-0-85729-760-0_4, © Springer-Verlag London Limited 2011
33

34
4
The Complex Plane
numbers in a ‘brochure’ he privately funded: Essai sur une manière de représenter
les quantités imaginaires dans les constructions géométriques [6].
The brochure was not widely distributed, and to make matters worse, it did not
carry Argand’s name! In a very roundabout way, the brochure’s contents were even-
tually discovered, and in 1813 Jacques Français republished the idea of the complex
plane in a paper, and requested the anonymous author of the original idea to reveal
his identity. Argand came forward and was given credit for his invention, and today
the complex plane is known as the Argand diagram. A second edition of Argand’s
work was published in 1874 by the publishers Gauthier-Villars [7].
Unbeknown to Argand—and everyone else at the time—a Norwegian surveyor,
Caspar Wessel (1745–1818), had been triangulating Denmark and developing math-
ematical techniques to simplify his work. One of these ideas was the original idea
of adding vectorial quantities, the other was the geometric interpretation of complex
numbers.
Wessel presented his ﬁrst and only mathematical paper describing his complex
plane to a meeting of the Royal Danish Academy in 1797, and it was published in
the Academy’s Mémoires in 1799. Wessel’s paper remained hidden from the math-
ematical community for almost a century, when it was discovered in 1895 by the
Danish mathematician, Sophus Christian Juel (1855–1935). However, although ev-
eryone now agrees that Wessel was the ﬁrst person to invent the complex plane, it
still bears Argand’s name.
But it doesn’t end there! The Scottish mathematician, Peter Guthrie Tait (1831–
1901), wrote in his book An Elementary Treatise on Quaternions [21]:
“Wallis, in the end of the seventeenth century, proposed to represent the impossible roots,
of a quadratic equation by going out of the line on which, if real they would have been
laid off. His construction is equivalent to the consideration of
√−1 as a directed unit line
perpendicular to that on which real quantities are measured.”
John Wallis (1616–1703), was a gifted English mathematician [22], and it is be-
lieved that Argand, Warren, and others, extended the results of Wallis and De
Moivre, who had done some early work on the complex plane.
4.3 The Complex Plane
One of the people associated with the development of complex numbers was the
brilliant Swiss mathematician, Leonhard Euler (1707–1783). Euler proved the iden-
tity
eiθ = cosθ + i sinθ
and when θ = π, one of the most beautiful formulae in mathematics emerges:
eiπ = −1
or
eiπ + 1 = 0

4.3
The Complex Plane
35
Fig. 4.1 The complex plane
with a unit circle
which integrates ﬁve important constants: 0, 1, e, π and i, as well as the basic
arithmetic operations: addition, multiplication and exponentiation.
Another consequence of this formula arises when θ = π/2:
eiπ/2 = cos π
2 + i sin π
2 = i
therefore,
ii =

eiπ/2i
= ei2π/2
= e−π/2
= 0.207879576...
which shows that the imaginary unit raised to itself equals a real number!
In Chap. 3 we saw that the powers of imaginary i give rise to two sequences
(1,i,−1,−i,1,...) and (1,−i,−1,i,1,...) which bear a striking resemblance to
the patterns (x,y,−x,−y,x,...) and (x,−y,−x,y,x,...) that arise when rotat-
ing about the Cartesian axes in an counter-clockwise and clockwise direction, re-
spectively. This resemblance is no coincidence, as complex numbers belong to a
two-dimensional plane called the complex plane, which we will now describe.
The complex plane enables us to visualise complex numbers using the horizontal
axis to record the real part, and the vertical axis to record the imaginary part, as
shown in Fig. 4.1. The ﬁgure also shows a circle with unit radius passing through
the points 1, i, −1, −i, which is the sequence associated with increasing powers
of i. We can see the positions for i0 = 1, i1 = i, i2 = −1, i3 = −i and i4 = 1, which
suggest that multiplying by i is equivalent to rotating through 90°. To demonstrate
this rotational effect, Fig. 4.2 shows the complex plane with four complex numbers:
p = 2 + i,
q = −1 + 2i,
r = −2 −i,
s = 1 −2i
which are 90° apart.

36
4
The Complex Plane
Fig. 4.2 The complex plane
with four complex numbers
The point p is rotated 90° to q by multiplying it by i:
i(2 + i) = 2i + i2
= −1 + 2i.
The point q is rotated another 90° to r by multiplying it by i:
i(−1 + 2i) = −i + 2i2
= −2 −i.
The point r is rotated another 90° to s by multiplying it by i:
i(−2 −i) = −2i −i2
= 1 −2i.
Finally, the point s is rotated 90° back to p by multiplying it by i:
i(1 −2i) = i −2i2
= 2 + i.
We also discovered in Chap. 3 that the sequence associated with increasing negative
powers: (1,−i,−1,i,...) is a rotation in a clockwise direction, and implies that
dividing a complex number by i rotates it 90° clockwise. However, we showed that
i−1 = −i, and it is much easier to multiply a complex number by −i than divide it
by i. So let’s repeat the above exercise to prove this point.
The point p is rotated −90° to s by multiplying it by −i:
−i(2 + i) = −2i −i2
= 1 −2i.
The point s is rotated another −90° to r by multiplying it by −i:
−i(1 −2i) = −i + 2i2
= −2 −i.

4.4
Polar Representation
37
Fig. 4.3 The roots of √±i
The point r is rotated another 90° to q by multiplying it by −i:
−i(−2 −i) = 2i + i2
= −1 + 2i.
Finally, the point q is rotated 90° back to p by multiplying it by −i:
−i(−1 + 2i) = i −2i2
= 2 + i.
Thus a complex number is rotated ±90° by multiplying it by ±i.
In Chap. 3 we saw that the roots of √
±i are
√
+i = ±
√
2
2 (1 + i)
√
−i = ±
√
2
2 (1 −i)
and are shown in Fig. 4.3. Note that the individual roots are 180° apart, which sug-
gests that angles have something to do with their action. For example, the positive
root of √
+i is
√
2/2(1 + i) and is 45° from the real axis. Multiplying this root by
itself rotates it 45° to the i axis. Similarly, the negative root is −
√
2/2(1 + i) and is
225° from the real axis. Multiplying this root by itself rotates it 225° to the i axis.
The same is true for the roots of √−i.
These observations seem to suggest that we can construct a complex number
capable of rotating another complex number through any angle. Which is true and
is covered next.
4.4 Polar Representation
Placing a complex number on the complex plane leads us to polar representation
where we form a line from the origin to the complex number as shown in Fig. 4.4.

38
4
The Complex Plane
Fig. 4.4 Polar representation
of a complex number
The length of the line is r and equals
√
a2 + b2, which is why the norm of a complex
number is deﬁned using the Pythagorean formula:
r = |z| =

a2 + b2.
The angle θ between the line and the real axis is called the argument of z and written
arg(z) = θ
where
tanθ = b
a .
We compute arg(z) using
1st quadrant
a > 0, b > 0
θ = arctan(b/a)
2nd & 3rd quadrant
a < 0
θ = arctan(b/a) + π
4th quadrant
a > 0, b < 0
θ = arctan(b/a) + 2π.
We can see from Fig. 4.4 that the horizontal component of z is r cosθ and the vertical
component is r sinθ, which permits us to write
z = a + bi
= r cosθ + ri sinθ
= r(cosθ + i sinθ).
As mentioned above, one of Euler’s discoveries is the identity relating the power
series for eθ, sinθ and cosθ:
eiθ = cosθ + i sinθ
which permits us to write
z = reiθ.
Armed with this discovery, we are now in a position to revisit the product and quo-
tient of two complex numbers using polar representation. For example, given the

4.4
Polar Representation
39
following complex numbers
z = reiθ
w = seiφ
their product is
zw = rseiθeiφ
= rsei(θ+φ)
= rs

cos(θ + φ) + i sin(θ + φ)

.
So the product of two complex numbers creates a third one with norm
|zw| = rs
and argument
arg(zw) = θ + φ
where the angles are added.
Next, the quotient:
z
w = reiθ
seiφ
= r
s ei(θ−φ)
= r
s

cos(θ −φ) + i sin(θ −φ)

where the norm is

z
w
 = r
s
and the argument is
arg(z/w) = θ −φ
where the angles are subtracted.
Let’s employ these formulae with an example. Figure 4.5 shows two complex
numbers
z = 2 + 2i
w = −1 + i
which in polar form are
z = 2
√
2(cos45° + i sin45°) = 2
√
2eiπ/4
w =
√
2(cos135° + i sin135°) =
√
2ei3π/4.
Using normal complex algebra, the product zw is
zw = (2 + 2i)(−1 + i) = −4

40
4
The Complex Plane
Fig. 4.5 The product of two
complex numbers
and using polar form:
|zw| = 2
√
2
√
2 = 4
arg(zw) = 45° + 135° = 180°
which encode −4.
Now let’s compute the quotient z/w using normal complex algebra and then
polar form.
z
w = (2 + 2i)
(−1 + i)
(−1 −i)
(−1 −i)
= −2 −2i −2i −2i2
1 + 1
= −2i.
Next, using polar form:
|z/w| = 2
√
2
√
2
= 2
arg(z/w) = 45° −135° = −90°
which encode the complex number −2i. These results are shown in Fig. 4.5.
We can also use Euler’s formula to compute
√
i as follows
eiθ = cosθ + i sinθ
substituting θ = π/2 we have
eiπ/2 = cos π
2 + i sin π
2 = i
taking the square root of both sides, we have
eiπ/4 = ±
√
i
cos π
4 + i sin π
4 = ±
√
i
±
√
2
2 (1 + i) = ±
√
i.

4.5
Rotors
41
To ﬁnd √−i we substitute θ = −π/2:
e−iπ/2 = cos

−π
2
	
+ i sin

−π
2
	
= −i
= cos
π
2
	
−i sin
π
2
	
= −i
taking the square root of both sides, we have
e−iπ/4 = ±
√
−i
cos
π
4
	
−i sin
π
4
	
= ±
√
−i
±
√
2
2 (1 −i) = ±
√
−i.
Higher roots can be found using a similar technique.
4.5 Rotors
The polar form brings home the fact that multiplying z = reiθ with norm r, by
w = seiφ with norm s, creates a third complex number with norm rs. Therefore, to
avoid scaling z, w must have a norm of unity. Under such conditions, w acts as a
rotor. For example, multiplying 4 + 5i by 1 + 0i leaves it unscaled and unrotated.
However, multiplying 4 + 5i by 0 + i rotates it by 90° without any scaling.
Therefore, to rotate 2 + 2i by 45°, we must multiply it by eiπ/4:
eiπ/4 = cos45° + i sin45° =
√
2
2 (1 + i)
√
2
2 (1 + i)(2 + 2i) =
√
2
2 4i
= 2
√
2i.
So eiθ rotates any complex number through an angle θ.
To rotate a complex number x + yi through an angle θ we can multiply it by the
rotor cosθ + i sinθ:
x′ + y′i = (cosθ + i sinθ)(x + yi)
= x cosθ −y sinθ + i(x sinθ + y cosθ)
which in matrix form is:

x′
−y′
y′
x′

=

cosθ
−sinθ
sinθ
cosθ

x
−y
y
x

.
Before moving on let’s consider the effect the complex conjugate of a rotor
has on rotational direction, and we can do this by multiplying x + yi by the rotor

42
4
The Complex Plane
cosθ −i sinθ:
x′ + y′i = (cosθ −i sinθ)(x + yi)
= x cosθ + y sinθ −i(x sinθ + y cosθ)
and in matrix form is
x′
−y′
y′
x′

=

 cosθ
sinθ
−sinθ
cosθ

x
−y
y
x

which is a rotation of −θ about the origin.
Therefore, we deﬁne a rotor Rθ and its conjugate R†
θ as
Rθ = cosθ + i sinθ
R†
θ = cosθ −i sinθ
where Rθ rotates +θ, and R†
θ rotates −θ. Note, the use of the dagger † symbol.
4.6 Summary
In this chapter we have discovered a graphical interpretation for complex numbers
using the complex plane. Euler’s formula eiθ = cosθ + i sinθ permits us to express
a complex number as an imaginary power of e, which in turn allows us to compute
products and quotients easily. Collectively, these ideas have lead us towards the idea
of a rotor, which will be developed using quaternions.
4.6.1 Summary of Operations
Complex number
z = a + bi
|z| =

a2 + b2
Polar form
z = reiθ
z = r(cosθ + i sinθ)
r = |z|
tanθ = b/a
θ = arg(z)
1st quadrant
a > 0, b > 0
θ = arctan(b/a)
2nd and 3rd quadrant
a < 0
θ = arctan(b/a) + π
4th quadrant
a > 0, b < 0
θ = arctan(b/a) + 2π

4.7
Worked Examples
43
Product
z = reiθ
w = seiφ
zw = rsei(θ+φ)
= rs

cos(θ + φ) + i sin(θ + φ)

Quotient
z
w = r
s ei(θ−φ)
= r
s

cos(θ −φ) + i sin(θ −φ)

Rotors
Rθ = cosθ + i sinθ
R†
θ = cosθ −i sinθ
4.7 Worked Examples
Here are some further worked examples that employ the ideas described above. In
some cases, a test is included to conﬁrm the result.
Example 1 Starting with 1 + 2i, multiply the resulting complex number by i four
times, and plot the result on the complex plane.
The point p is rotated 90° to q by multiplying it by i:
i(1 + 2i) = i + 2i2
= −2 + i.
The point q is rotated another 90° to r by multiplying it by i:
i(−2 + i) = −2i + i2
= −1 −2i.
The point r is rotated another 90° to s by multiplying it by i:
i(−1 −2i) = −i −2i2
= 2 −i.
Finally, the point s is rotated 90° back to p by multiplying it by i:
i(2 −i) = 2i −i2
= 2 + i.
Figure 4.6 shows the four complex numbers separated by 90°.

44
4
The Complex Plane
Fig. 4.6 The complex plane
with four complex numbers
Example 2 Compute the product zw and quotient z/w using polar form.
z = 3 + 3i
w = −1 −i.
Product:
z = 3
√
2(cos45° + i sin45°) = 3
√
2eiπ/4
w =
√
2(cos225° + i sin225°) =
√
2ei5π/4
|zw| = 3
√
2
√
2 = 6
arg(zw) = 45° + 225° = 270°
which encode the complex number −6i.
Test: Using normal complex algebra, the product zw is
zw = (3 + 3i)(−1 −i) = −6i.
Quotient:
|z| = 3
√
2
|w| =
√
2
|z/w| = 3
√
2/
√
2 = 3
arg(z/w) = 45° −225° = 180°
which encode the complex number −3.
Test: Using normal complex algebra, the quotient z/w is
z
w = (3 + 3i)
(−1 −i)
(−1 + i)
(−1 + i)
= −6
2
= −3
and agrees with the polar form.

4.7
Worked Examples
45
Example 3 Design a rotor to rotate a complex number through 30° without scaling.
Starting with
eiθ = cosθ + i sinθ
let θ = 30° = π/6
eiπ/6 = cos30° + i sin30°
=
√
3
2 + i 1
2
= 1
2
√
3 + i

.
Test: Let’s rotate 1 + 0i three times by this rotor to i.
1
2(
√
3 + i)1
2(
√
3 + i)1
2(
√
3 + i)1 = 1
8(
√
3 + i)(
√
3 + i)(
√
3 + i)
= 1
8(2 + 2
√
3i)(
√
3 + i)
= 1
8(2
√
3 −2
√
3 + 2i + 6i)
= i.
Example 4 Design a rotor to rotate a complex number through −60° without scal-
ing.
Starting with
eiθ = cosθ + i sinθ
let θ = −60° = −π/3
e−iπ/3 = cos(−60°) + i sin(−60°)
= 1
2 −
√
3
2 i
= 1
2(1 −
√
3i).


Chapter 5
Quaternion Algebra
5.1 Introduction
When a group of brilliant mathematicians is interested in the same subject, it is not
uncommon to discover two of them coming up with the same invention at the same
time. Even though two such individuals will have different mathematical strengths,
they should have access to the same ediﬁce of accumulated mathematical knowl-
edge, and be aware of problems that have been solved, and those waiting for a solu-
tion.
We saw in Chap. 4 how Wessel and Argand had both invented the complex plane,
and used it to visualise complex numbers. It was unfortunate for both men that they
didn’t have access to today’s ubiquitous publishing network, and the world-wide
web. Nevertheless, priority was—and still is—decided by who gets to the printing
presses ﬁrst. But as we saw with Wessel, even being ﬁrst into print didn’t guarantee
fame.
A similar story surrounds the invention of quaternions. Sir William Rowan
Hamilton is recognised as the inventor of quaternion algebra, which became the
ﬁrst non-commutative algebra to be discovered. One can imagine the elation he felt
when ﬁnding a solution to a problem he had been thinking about for a decade!
The invention provided the ﬁrst mathematical framework for manipulating vecto-
rial quantities, although this was to be reﬁned by the American theoretical physicist,
chemist, and mathematician, Josiah Willard Gibbs (1839–1903). Although Hamil-
ton had arrived at his invention through an algebraic route, it was obvious to him
that quaternions had signiﬁcant geometric potential, and he immediately started to
explore their vectorial and rotational properties.
Unbeknown to Hamilton—and virtually everyone else at the time—the French
social reformer, and brilliant recreational mathematician, Benjamin Olinde
Rodrigues (1795–1851), had already published a paper in 1840 describing how
to represent two successive rotations about different axes, by a single rotation about
a third axis [9]. What is more, Rodrigues expressed his solution using a scalar and
a 3D axis, which pre-empted Hamilton’s own approach using a scalar and a vector,
by three years!
J. Vince, Quaternions for Computer Graphics,
DOI 10.1007/978-0-85729-760-0_5, © Springer-Verlag London Limited 2011
47

48
5
Quaternion Algebra
Simon Altmann has probably done more than any other person to set this record
straight, and has published his views widely [1, 3–5]. However, for the moment,
let’s continue with Hamilton’s algebra and return to its rotational properties and Dr.
Rodrigues in Chap. 6.
The very existence of complex numbers presented a tantalising question for
mathematicians of the 18th and 19th centuries. Could there be a 3D equivalent? The
answer to this question was not obvious, and many gifted mathematicians, including
Gauss, Möbius, Grassmann, and Hamilton had been searching for the answer.
Hamilton’s research is well documented and covers a period from the early 1830s
to 1843, when he invented quaternions. And for a further 22 years, until his death
in 1865, he was preoccupied with the subject. By 1833 he had shown that complex
numbers form an algebra of couples, i.e. ordered pairs [14].
As a 2D complex number is represented by a + bi, Hamilton conjectured that a
3D complex number could be represented by the triple, a + bi + cj, where i and j
are imaginary quantities and square to −1. However, the product of two such triples
raises a problem with their algebraic expansion:
z1 = a1 + b1i + c1j
z2 = a2 + b2i + c2j
z1z2 = (a1 + b1i + c1j)(a2 + b2i + c2j)
= a1a2 + a1b2i + a1c2j
+ b1a2i + b1b2i2 + b1c2ij + c1a2j + c1b2ji + c1c2j2
= (a1a2 −b1b2 −c1c2) + (a1b2 + b1a2)i + (a1c2 + c1a2)j
+ b1c2ij + c1b2ji
the operation almost closes—apart from the terms involving ij and ji. Even if we
assume that ji = −ij, we are still left with
(b1c2 −c1b2)ij.
This presented a real problem for Hamilton and he toiled for over a decade trying
to resolve it. Then, on 16 October, 1843, whilst walking with his wife, Lady Hamil-
ton, along the Royal Canal in Ireland to preside at a meeting of the Royal Irish
Academy [15], a ﬂash of inspiration came to him where he saw the solution as a
quadruple, rather than a triple. Instead of using two imaginary terms, three terms
provided the extra permutations necessary to resolve products like ij.
The solution was z = a + bi + cj + dk where i, j, k all square to −1. And
because of the four terms, Hamilton gave the name quaternion. Hamilton took the
opportunity to record the event in stone, by carving the rules into the wall of Broome
bridge, which he was passing at the time. Although his original inscription has not
withstood years of Irish weather, a more permanent plaque now replaces it.
When Hamilton invented quaternions, he also created all sorts of names such as
tensor, versor and vector to describe their attributes. As the inventor, it was Hamil-
ton’s prerogative to choose whatever names he wanted, and at the time, such names

5.2
Some History
49
were associated with the notation of the period. For example, he called the quater-
nion’s real part a scalar, and the imaginary part a vector. However today, a vector
does not have any imaginary associations, which has slightly confused how quater-
nions are interpreted.
Simon Altmann has been very aware of these issues and helped clarify this confu-
sion by subjecting quaternion algebra to close scrutiny, that, hitherto, was lacking.
This algebraic rigour employs the idea of ordered pairs, which are easy to under-
stand, and reveal the close relationship between quaternions and complex numbers.
Let’s examine the algebra of quaternions which form the set H in recognition of
Hamilton’s achievement.
5.2 Some History
Hamilton deﬁned a quaternion q, and its associated rules as
q = s + ia + jb + kc
s,a,b,c ∈R
and
i2 = j2 = k2 = ijk = −1
ij = k,
jk = i,
ki = j
ji = −k,
kj = −i,
ik = −j
[16–18], but we tend to write quaternions
q = s + ai + bj + ck.
Observe from Hamilton’s rules how the occurrence of ij is replaced by k. The
extra imaginary k term is key to the cyclic patterns ij = k, jk = i, and ki = j, which
are very similar to the cross product of two unit Cartesian vectors:
i × j = k,
j × k = i,
k × i = j.
In fact, this similarity is no coincidence, as Hamilton also invented the scalar and
vector products. However, although quaternions provided an algebraic framework to
describe vectors, one must acknowledge that vectorial quantities had been studied
for many years prior to Hamilton.
Hamilton also saw that the i, j, k terms could represent three Cartesian unit
vectors i, j and k, which had to possess imaginary qualities. i.e. i2 = −1, etc., which
didn’t go down well with some mathematicians and scientists who were suspicious
of the need to involve so many imaginary terms.
Hamilton’s motivation to search for a 3D equivalent of complex numbers was
part algebraic, and part geometric. For if a complex number is represented by a cou-
ple and is capable of rotating points on the plane by 90°, then perhaps a triple rotates
points in space by 90°. In the end, a triple had to be replaced by a quadruple—a
quaternion.

50
5
Quaternion Algebra
Fig. 5.1 Interpreting the products ij, jk, ki
One can regard Hamilton’s rules from two perspectives. The ﬁrst, is that they are
an algebraic consequence of combining three imaginary terms. The second, is that
they reﬂect an underlying geometric structure of space. The latter interpretation was
adopted by P.G. Tait, and outlined in his book An Elementary Treatise on Quater-
nions [21]. Tait’s approach assumes three unit vectors i, j, k aligned with the x-, y-,
z-axes respectively:
“The result of the multiplication of i into j or ij is deﬁned to be the turning of j through
a right angle in the plane perpendicular to i in the positive direction, in other words, the
operation of i on j turns it round so as to make it coincide with k; and therefore brieﬂy
ij = k.
To be consistent it is requisite to admit that if i instead of operating on j had operated on
any other unit vector perpendicular to i in the plane yz, it would have turned it through a
right-angle in the same direction, so that ik can be nothing else than −j.
Extending to other unit vectors the deﬁnition which we have illustrated by referring to i, it
is evident that j operating on k must bring it round to i, or jk = i.”
Tait’s explanation is illustrated in Fig. 5.1 (a)–(d). Figure 5.1 (a) shows the origi-
nal alignment of i, j, k. Figure 5.1 (b) shows the effect of turning j into k. Figure 5.1
(c) shows the turning of k into i, and Fig. 5.1 (d) shows the turning of i in to j.
So far, there is no mention of imaginary quantities—we just have:
ij = k,
jk = i,
ki = j
ji = −k,
kj = −i,
ik = −j.

5.2
Some History
51
If we assume that these vectors obey the distributive and associative axioms of al-
gebra, their imaginary qualities are exposed. For example:
ij = k
and multiplying throughout by i:
iij = ik = −j
therefore,
ii = i2 = −1.
Similarly, we can show that j2 = k2 = −1.
Next:
ijk = i(jk) = ii = i2 = −1.
Thus, simply by declaring the action of the cross-product, Hamilton’s rules
emerge, with all of their imaginary features. Tait also made the following obser-
vation:
“A very curious speculation, due to Servois, and published in 1813 in Gergonne’s Annales
is the only one, so far has been discovered, in which the slightest trace of an anticipation
of Quaternions is contained. Endeavouring to extend to space the form a + b
√
−1 for the
plane, he is guided by analogy to write a directed unit-line in space the form
p cosα + q cosβ + r cosγ,
where α, β, γ are its inclinations to the three axes. He perceives easily that p, q, r
must be non-reals: but, he asks, “seraient-elles imaginaires réductibles à la forme générale
A + B
√−1?” This could not be the answer. In fact they are the i, j, k of the Quaternion
Calculus.”
So the French mathematician, François-Joseph Servois (1768–1847), was another
person who came very close to discovering quaternions. Furthermore, both Tait and
Hamilton were apparently unaware of the paper published by Rodrigues.
And it doesn’t stop there. The brilliant German mathematician, Carl Friedrich
Gauss (1777–1855), was extremely cautious, and nervous of publishing anything
too revolutionary, just in case he was ridiculed by fellow mathematicians. His diaries
reveal that he had anticipated non-euclidean geometry ahead of Nikolai Ivanovich
Lobachevsky. And in a short note from his diary in 1819 [13] he reveals that he
had identiﬁed a method of ﬁnding the product of two quadruples (a,b,c,d) and
(α,β,γ,δ) as:
(A,B,C,D) = (a,b,c,d)(α,β,γ,δ)
= (aα −bβ −cγ −dδ,aβ + bα −cδ + dγ,
aγ + bδ + cα −dβ,aδ −bγ + cβ + dα).
At ﬁrst glance, this result does not look like a quaternion product, but if we transpose
the second and third coordinates of the quadruples, and treat them as quaternions,

52
5
Quaternion Algebra
we have
(A,B,C,D) = (a + ci + bj + dk)(α + γ i + βj + δk)
= aα −cγ −bβ −dδ + a(γ i + βj + δk)
= +α(ci + bj + dk),(bδ −dβ)i + (dγ −cδ)j + (cβ −bγ )k
which is identical to Hamilton’s quaternion product! Furthermore, Gauss also re-
alised that the product was non-commutative. However, he did not publish his ﬁnd-
ings, and it was left to Hamilton to invent quaternions for himself, publish his results
and take the credit.
In 1881 and 1884, Josiah Willard Gibbs, at Yale University, printed his lecture
notes on vector analysis for his students. Gibbs had cut the ‘umbilical cord’ between
the real and vector parts of a quaternion and raised the 3D vector as an independent
object without any imaginary connotations. Gibbs also took on board the ideas of the
German mathematician, Hermann Günter Grassmann (1809–1877), who had been
developing his own ideas for a vectorial system since 1832. Gibbs also deﬁned the
scalar and vector products using the relevant parts of the quaternion product. Finally,
in 1901, a student of Gibbs, Edwin Bidwell Wilson, published Gibbs’ notes in book
form: Vector Analysis [23], which contains the notation in use today.
Quaternion algebra is deﬁnitely imaginary, yet simply by isolating the vector
part and ignoring the imaginary rules, Gibbs was able to reveal a new branch of
mathematics that exploded into vector analysis.
Hamilton and his supporters were unable to persuade their peers that quaternions
could represent vectorial quantities, and eventually, Gibbs’ notation won the day,
and quaternions faded from the scene.
In recent years, quaternions have been rediscovered by the ﬂight simulation in-
dustry, and more recently by the computer graphics community, where they are used
to rotate vectors about an arbitrary axis. In the intervening years, various people have
had the opportunity to investigate the algebra, and propose new ways of harnessing
its qualities.
So let’s look at three ways of annotating a quaternion q:
q = s + xi + yj + zk
(5.1)
q = s + v
(5.2)
q = [s,v]
(5.3)
where s,x,y,z ∈R,
v ∈R3
and i2 = j 2 = k2 = −1.
The difference is rather subtle. In (5.1) we have Hamilton’s original deﬁnition
with its imaginary terms and associated rules. In (5.2) a ‘+’ sign is used to add a
scalar to a vector, which seems strange, yet works. In (5.3) we have an ordered pair
comprising a scalar and a vector.
Now you may be thinking: How is it possible to have three different deﬁnitions
for the same object? Well, I would argue that you can call an object whatever you
like, so long as they are algebraically identical. For example, matrix notation is used

5.3
Deﬁning a Quaternion
53
to represent a set of linear equations, and leads to the same results as every-day
equations. Therefore, both systems of notation are equally valid.
Although I have employed the notation in (5.1) and (5.2) in other publications,
in this book I have used ordered pairs. So what we need to show is that Hamilton’s
original deﬁnition of a quaternion (5.1), with its scalar and three imaginary terms,
can be replaced by an ordered pair (5.3) comprising a scalar and a ‘modern’ vector.
5.3 Deﬁning a Quaternion
Let’s start with two quaternions qa and qb à la Hamilton:
qa = sa + xai + yaj + zak
qb = sb + xbi + ybj + zbk
and the obligatory rules:
i2 = j2 = k2 = ijk = −1
ij = k,
jk = i,
ki = j
ji = −k,
kj = −i,
ik = −j.
Our objective is to show that qa and qb can also be represented by the ordered pairs
qa = [sa,a]
qb = [sb,b]
sa,sb ∈R,
a,b ∈R3.
I have employed square brackets as part of the deﬁnition as parentheses are often
used to delimit expressions within a quaternion.
The quaternion product qaqb expands to
qaqb = [sa,a][sb,b] = (sa + xai + yaj + zak)(sb + xbi + ybj + zbk)
= (sasb −xaxb −yayb −zazb)
+ (saxb + sbxa + yazb −ybza)i
+ (sayb + sbya + zaxb −zbxa)j
+ (sazb + sbza + xayb −xbya)k.
(5.4)
Equation (5.4) takes the form of another quaternion, and conﬁrms that the quater-
nion product is closed.
At this stage, Hamilton turned the imaginary terms i, j, k into unit Cartesian
vectors i, j, k and transformed (5.4) into a vector form. The problem with this ap-
proach is that the vectors retain their imaginary roots. Simon Altmann’s suggestion
is to replace the imaginaries by the ordered pairs:
i = [0,i]
j = [0,j]
k = [0,k]
which are themselves quaternions, and called quaternion units.

54
5
Quaternion Algebra
The idea of deﬁning a quaternion in terms of quaternion units is exactly the same
as deﬁning a vector in terms of its unit Cartesian vectors. Furthermore, it permits
vectors to exist without any imaginary associations.
Let’s substitute these quaternion units in (5.4) together with [1,0] = 1:
[sa,a][sb,b] = (sasb −xaxb −yayb −zazb)[1,0]
+ (saxb + sbxa + yazb −ybza)[0,i]
+ (sayb + sbya + zaxb −zbxa)[0,j]
+ (sazb + sbza + xayb −xbya)[0,k].
(5.5)
Next, we expand (5.5) using previously deﬁned rules:
[sa,a][sb,b] = [sasb −xaxb −yayb −zazb,0]
+

0,(saxb + sbxa + yazb −ybza)i

+

0,(sayb + sbya + zaxb −zbxa)j

+

0,(sazb + sbza + xayb −xbya)k

.
(5.6)
A vertical scan of (5.6) reveals some hidden vectors:
[sa,a][sb,b] = [sasb −xaxb −yayb −zazb,0]
+

0,sa(xbi + ybj + zbk) + sb(xai + yaj + zak)
+ (yazb −ybza)i + (zaxb −zbxa)j + (xayb −xbya)k

.
(5.7)
Equation (5.7) contains two ordered pairs which can now be combined:
[sa,a][sb,b] =

sasb −xaxb −yayb −zazb,
sa(xbi + ybj + zbk) + sb(xai + yaj + zak)
+ (yazb −ybza)i + (zaxb −zbxa)j + (xayb −xbya)k

.
(5.8)
If we make
a = xai + yaj + zak
b = xbi + ybj + zbk
and substitute them in (5.8) we get:
[sa,a][sb,b] = [sasb −a · b,sab + sba + a × b]
(5.9)
which deﬁnes the quaternion product.
From now on, we don’t have to worry about Hamilton’s rules as they are embed-
ded within (5.9). Furthermore, our vectors have no imaginary associations.
Although Rodrigues did not have access to Gibbs’ vector notation used in (5.9),
he managed to calculate the equivalent algebraic expression, which was some
achievement.

5.3
Deﬁning a Quaternion
55
5.3.1 The Quaternion Units
Using (5.9) we can check to see if the quaternion units are imaginary by squaring
them:
i = [0,i]
i2 = [0,i][0,i]
= [i · i,i × i]
= [−1,0]
which is a real quaternion and equivalent to −1, conﬁrming that [0,i] is imagi-
nary. Using a similar expansion we can shown that [0,j] and [0,k] have the same
property.
Now let’s compute the products ij,jk and ki:
ij = [0,i][0,j]
= [−i · j,i × j]
= [0,k]
which is the quaternion unit k.
jk = [0,j][0,k]
= [−j · k,j × k]
= [0,i]
which is the quaternion unit i.
ki = [0,k][0,i]
= [−k · i,k × i]
= [0,j]
which is the quaternion unit j.
Next, let’s conﬁrm that ijk = −1:
ijk = [0,i][0,j][0,k]
= [0,k][0,k]
= [−k · k,k × k]
= [−1,0]
which is a real quaternion equivalent to −1, conﬁrming that ijk = −1.
Thus the notation of ordered pairs upholds all of Hamilton’s rules. However, the
last double product assumes that quaternions are associative. So let’s double check

56
5
Quaternion Algebra
to show that (ij)k = i(jk):
i(jk) = [0,i][0,j][0,k]
= [0,i][0,i]
= [−i · i,i × i]
= [−1,0]
which is correct.
5.3.2 Example of Quaternion Products
Although we have yet to discover how quaternions are used to rotate vectors, let’s
concentrate on their algebraic traits by evaluating an example.
qa = [1,2i + 3j + 4k]
qb = [2,3i + 4j + 5k]
the product qaqb is
qaqb = [1,2i + 3j + 4k][2,3i + 4j + 5k]
=

1 × 2 −(2 × 3 + 3 × 4 + 4 × 5),
1(3i + 4j + 5k) + 2(2i + 3j + 4k)
+ (3 × 5 −4 × 4)i −(2 × 5 −4 × 3)j + (2 × 4 −3 × 3)k

= [−36,7i + 10j + 13k −i + 2j −k]
= [−36,6i + 12j + 12k]
which is another ordered pair representing a quaternion.
Having shown that Hamilton’s imaginary notation has a vector equivalent, and
can be represented as an ordered pair, we continue with this notation and describe
other features of quaternions. Note that we can abandon Hamilton’s rules as they
are embedded within the deﬁnition of the quaternion product, and will surface in
the following deﬁnitions.
5.4 Algebraic Deﬁnition
A quaternion is the ordered pair:
q = [s,v]
s ∈R, v ∈R3.
If we express v in terms of its components, we have
q = [s,xi + yj + zk]
s,x,y,z ∈R.

5.5
Adding and Subtracting Quaternions
57
5.5 Adding and Subtracting Quaternions
Addition and subtraction employ the following rule:
qa = [sa,a]
qb = [sb,b]
qa ± qb = [sa ± sb,a ± b].
For example:
qa = [0.5,2i + 3j −4k]
qb = [0.1,4i + 5j + 6k]
qa + qb = [0.6,6i + 8j + 2k]
qa −qb = [0.4,−2i −2j −10k].
5.6 Real Quaternion
A real quaternion has a zero vector term:
q = [s,0].
The product of two real quaternions is
qa = [sa,0]
qb = [sb,0]
qaqb = [sa,0][sb,0]
= [sasb,0]
which is another real quaternion, and shows that they behave just like real numbers:
[s,0] ≡s.
We have already come across this with complex numbers containing a zero imagi-
nary term:
a + bi = a
when b = 0.
5.7 Multiplying a Quaternion by a Scalar
Intuition suggests that multiplying a quaternion by a scalar should obey the rule:
q = [s,v]
λq = λ[s,v]
λ ∈R
= [λs,λv].

58
5
Quaternion Algebra
We can conﬁrm our intuition by multiplying a quaternion by a scalar in the form of
a real quaternion:
q = [s,v]
λ = [λ,0]
λq = [λ,0][s,v]
= [λs,λv]
which is excellent conﬁrmation.
5.8 Pure Quaternion
Hamilton deﬁned a pure quaternion as one having a zero scalar term:
q = xi + yj + zk
and was just a ‘vector’, with all its imaginary qualities. However, Simon Altmann
and others, believe that this was a serious mistake on Hamilton’s part to call a quater-
nion with a zero real term, a vector.
The main issue is that there are two types of vectors: polar and axial, also called
a pseudovector. Richard Feynman describes polar vectors as ‘honest’ vectors [12]
and represent the every-day vectors of directed lines. Whereas, axial vectors are
computed from polar vectors, such as in a vector product. However, these two types
of vector do not behave in the same way when transformed. For example, given
two ‘honest’, polar vectors a and b, we can compute the axial vector: c = a × b.
Next, if we subject a and b to an inversion transform through the origin, such that
a becomes −a, and b becomes −b, and compute their cross product (−a) × (−b),
we still get c! Which implies that the axial vector c must not be transformed along
with a and b.
It could be argued that the inversion transform is not a ‘proper’ transform as it
turns a right-handed set of axes into a left-handed set. But in physics, laws of nature
are expected to work in either system. Unfortunately, Hamilton was not aware of
this distinction, as he had only just invented vectors. However, in the intervening
years, it has become evident that Hamilton’s quaternion vector is an axial vector,
and not a polar vector.
As we will see, in 3D rotations quaternions take the form
q =

cos 1
2θ,sin 1
2θv

where θ is the angle of rotation and v is the axis of rotation, and when we set
θ = 180°, we get
q = [0,v]
which remains a quaternion, even though it only contains a vector part.

5.9
Unit Quaternion
59
Consequently, we deﬁne a pure quaternion as
q = [0,v].
The product of two pure quaternions is
qa = [0,a]
qb = [0,b]
qaqb = [0,a][0,b]
= [−a · b,a × b]
which is no longer ‘pure’, as some of the original vector information has ‘tunnelled’
across into the real part via the dot product.
5.9 Unit Quaternion
Let’s pursue this analysis further by introducing some familiar vector notation.
Give vector v, then
v = vˆv
where v = |v|, and |ˆv| = 1.
Combining this with the deﬁnition of a pure quaternion we get:
q = [0,v]
= [0,vˆv]
= v[0, ˆv]
and reveals the object [0, ˆv] which is called the unit quaternion and comprises a
zero scalar and a unit vector. It is convenient to identify this unit quaternion as ˆq:
ˆq = [0, ˆv].
So now we have a notation similar to that of vectors where a vector v is described
in terms of its unit form:
v = vˆv
and a quaternion q is also described in terms of its unit form:
q = v ˆq.
Note that ˆq is an imaginary object as it squares to −1:
ˆq2 = [0, ˆv][0, ˆv]
= [−ˆv · ˆv, ˆv × ˆv]
= [−1,0]
= −1
which is not too surprising, bearing in mind Hamilton’s original invention!

60
5
Quaternion Algebra
5.10 Additive Form of a Quaternion
We now come to the idea of splitting a quaternion into its constituent parts: a real
quaternion and a pure quaternion. Again, intuition suggests that we can write a
quaternion as
q = [s,v]
= [s,0] + [0,v]
and we can test this by forming the algebraic product of two quaternions represented
in this way:
qa = [sa,0] + [0,a]
qb = [sb,0] + [0,b]
qaqb =

[sa,0] + [0,a]

[sb,0] + [0,b]

= [sa,0][sb,0] + [sa,0][0,b] + [0,a][sb,0] + [0,a][0,b]
= [sasb,0] + [0,sab] + [0,sba] + [−a · b,a × b]
= [sasb −a · b,sab + sba + a × b]
which is correct, and conﬁrms that the additive form works.
5.11 Binary Form of a Quaternion
Having shown that the additive form of a quaternion works, and discovered the unit
quaternion, we can join the two objects together as follows:
q = [s,v]
= [s,0] + [0,v]
= [s,0] + v[0, ˆv]
= s + v ˆq.
Just to recap, s is a scalar, v is the length of the vector term, and ˆq is the unit
quaternion [0, ˆv].
Look how similar this notation is to a complex number:
z = a + bi
q = s + v ˆq
where a, b, s, v are scalars, i is the unit imaginary and ˆq is the unit quaternion.

5.12
The Conjugate
61
5.12 The Conjugate
We have already discovered that the conjugate of a complex number z = a + bi is
given by
z∗= a −bi
and is very useful in computing the inverse of z. The quaternion conjugate plays a
similar role in computing the inverse of a quaternion. Therefore, given
q = [s,v]
the quaternion conjugate is deﬁned as
q∗= [s,−v].
If we compute the product qq∗we obtain
qq∗= [s,v][s,−v]
=

s2 −v · (−v),−sv + sv + v × (−v)

=

s2 + v · v,0

=

s2 + v2,0

.
Let’s show that qq∗= q∗q:
q∗q = [s,−v][s,v]
=

s2 −(−v) · v,sv −sv + (−v) × v

=

s2 + v · v,0

=

s2 + v2,0

= qq∗.
Now let’s show that (qaqb)∗= q∗
bq∗
a .
qa = [sa,a]
qb = [sb,b]
qaqb = [sa,a][sb,b]
= [sasb −a · b,sab + sba + a × b]
(qaqb)∗= [sasb −a · b,−sab −sba −a × b].
(5.10)
Next, we compute q∗
bq∗
a
q∗
a = [sa,−a]
q∗
b = [sb,−b]
q∗
bq∗
a = [sb,−b][sa,−a]
= [sasb −a · b,−sab −sba −a × b].
(5.11)
And as (5.10) equals (5.11), (qaqb)∗= q∗
bq∗
a.

62
5
Quaternion Algebra
5.13 Norm of a Quaternion
The norm of a complex number z = a + bi is deﬁned as
|z| =

a2 + b2
which allows us to write
zz∗= |z|2.
Similarly, the norm of a quaternion q = [s,v] is deﬁned as
|q| =

s2 + v2
where v = |v| which allows us to write
qq∗= |q|2.
For example, given
q = [1,4i + 4j −4k]
|q| =

12 + 42 + 42 + (−4)2
=
√
49
= 7.
5.14 Normalised Quaternion
A quaternion with a unit norm is called a normalised quaternion. For example, the
quaternion q = [s,v] is normalised by dividing it by |q|:
q′ =
q
√
s2 + v2 .
We must be careful not to confuse the unit quaternion with a unit-norm quaternion.
The unit quaternion is [0, ˆv] with a unit-vector part, whereas a unit-norm quaternion
is normalised such that s2 + v2 = 1.
I will be careful to distinguish between these two terms as many authors—
including myself—use the term unit quaternion to describe a quaternion with a unit
norm. For example
q = [1,4i + 4j −4k]
has a norm of 7, and q is normalised by dividing by 7:
q′ = 1
7[1,4i + 4j −4k].
The type of unit-norm quaternion we will be using takes the form:
q =

cos 1
2θ,sin 1
2θ ˆv

because cos2 θ + sin2 θ = 1.

5.15
Quaternion Products
63
5.15 Quaternion Products
Having shown that ordered pairs can represent a quaternion and its various manifes-
tations, let’s summarise the products we will eventually encounter. To start, we have
the product of two normal quaternions:
qaqb = [sa,a][sb,b]
= [sasb −a · b,sab + sba + a × b].
5.15.1 Product of Pure Quaternions
Given two pure quaternions:
qa = [0,a]
qb = [0,b]
their product is
qaqb = [0,a][0,b]
= [−a · b,a × b].
5.15.2 Product of Two Unit-Norm Quaternions
Given two unit-norm quaternions:
qa = [sa,a]
qb = [sb,b]
where |qa| = |qb| = 1. Their product is another unit-norm quaternion, which is
proved as follows.
We assume qc = [sc,c] and show that |qc| = s2
c + c2 = 1 where
[sc,c] = [sa,a][sb,b]
= [sasb −a · b,sab + sba + a × b].
Let’s assume the angle between a and b is θ, which permits us to write
sc = sasb −ab cosθ
c = sabˆb + sbaˆa + ab sinθ(ˆa × ˆb).
Therefore,
s2
c = (sasb −ab cosθ)(sasb −ab cosθ)
= s2
as2
b −2sasbab cosθ + a2b2 cos2 θ.

64
5
Quaternion Algebra
Fig. 5.2 Geometry for
sabˆb + sbaˆa + ab sinθ(ˆa × ˆb)
Figure 5.2 shows the geometry representing c.
d2 = s2
ba2 + s2
ab2 −2sasbab cos(π −θ)
= s2
ba2 + s2
ab2 + 2sasbab cosθ
c2 = d2 + a2b2 sin2 θ
= s2
ba2 + s2
ab2 + 2sasbab cosθ + a2b2 sin2 θ
s2
c + c2 = s2
as2
b −2sasbab cosθ + a2b2 cos2 θ + s2
ba2 + s2
ab2 + 2sasbab cosθ
+ a2b2 sin2 θ
= s2
as2
b + a2b2 + s2
ba2 + s2
ab2
= s2
a

s2
b + b2
+ a2
s2
b + b2
= s2
a + a2
= 1.
Therefore, the product of two unit-norm quaternions is another unit-norm quater-
nion. Consequently, multiplying a quaternion by a unit-norm quaternion, does not
change its norm:
qa = [sa,a]
|qa| = 1
qb = [sb,b]
|qaqb| = |qb|.
5.15.3 Square of a Quaternion
The square of a quaternion is given by
q = [s,v]
q2 = [s,v][s,v]
=

s2 −v · v,2sv + v × v

=

s2 −v · v,2sv

=

s2 −x2 −y2 −z2,2s(xi + yj + zk)

.

5.16
Inverse Quaternion
65
For example:
q = [7,2i + 3j + 4k]
q2 =

72 −22 −32 −42,14(2i + 3j + 4k)

= [20,28i + 42j + 56k].
The square of a pure quaternion is
q = [0,v]
q2 = [0,v][0,v]
= [0 −v · v,v × v]
= [0 −v · v,0]
=

−

x2 + y2 + z2
,0

which makes the square of a pure, unit-norm quaternion equal to −1, and was one
of the results, to which some 19th-century mathematicians objected.
5.15.4 Norm of the Quaternion Product
In proving that the product of two unit-norm quaternions is another unit-norm
quaternion we saw that
qa = [sa,a]
qb = [sb,b]
qc = qaqb
|qc|2 = s2
a

s2
b + b2
+ a2
s2
b + b2
=

s2
a + a2
s2
b + b2
which, if we ignore the constraint of unit-norm quaternions, shows that the norm of
a quaternion product equals the product of the individual norms:
|qaqb|2 = |qa|2|qb|2
|qaqb| = |qa||qb|.
5.16 Inverse Quaternion
An important feature of quaternion algebra is the ability to divide two quaternions
qb/qa, as long as qa does not vanish.
By deﬁnition, the inverse q−1 of q satisﬁes
qq−1 = [1,0] = 1.
(5.12)

66
5
Quaternion Algebra
To isolate q−1, we multiply (5.12) by q∗
q∗qq−1 = q∗
|q|2q−1 = q∗
(5.13)
and from (5.13) we can write
q−1 = q∗
|q|2 .
If q is a unit-norm quaternion, then
q−1 = q∗
which is useful in the context of rotations.
Furthermore, as
(qaqb)∗= q∗
bq∗
a
then
(qaqb)−1 = q−1
b q−1
a .
Note that qq−1 = q−1q:
qq−1 = qq∗
|q|2 = 1
q−1q = q∗q
|q|2 = 1.
Thus, we represent the quotient qb/qa as
qc = qb
qa
= qbq−1
a
= qbq∗
a
|qa|2 .
For completeness let’s evaluate the inverse of q where
q =

1, 1
√
3
i + 1
√
3
j + 1
√
3
k

q∗=

1,−1
√
3
i −1
√
3
j −1
√
3
k

|q|2 = 1 + 1
3 + 1
3 + 1
3 = 2
q−1 = q∗
|q|2 = 1
2

1,−1
√
3
i −1
√
3
j −1
√
3
k

.
It should be clear that q−1q = 1:

5.17
Matrices
67
q−1q = 1
2

1,−1
√
3
i −1
√
3
j −1
√
3
k

1, 1
√
3
i + 1
√
3
j + 1
√
3
k

= 1
2

1 + 1
3 + 1
3 + 1
3,0

= 1.
5.17 Matrices
Matrices provide another way to express a quaternion product. For convenience,
let’s repeat (5.8) again and show it in matrix form:
[sa,a][sb,b] =

sasb −xaxb −yayb −zazb,
sa(xbi + ybj + zbk) + sb(xai + yaj + zak)
+ (yazb −ybza)i + (zaxb −zbxa)j + (xayb −xbya)k

=
⎡
⎢⎢⎣
sa
−xa
−ya
−za
xa
sa
−za
ya
ya
za
sa
−xa
za
−ya
xa
sa
⎤
⎥⎥⎦
⎡
⎢⎢⎣
sb
xb
yb
zb
⎤
⎥⎥⎦.
(5.14)
Let’s recompute the product qaqb using the above matrix:
qa = [1,2i + 3j + 4k]
qb = [2,3i + 4j + 5k]
qaqb =
⎡
⎢⎢⎣
1
−2
−3
−4
2
1
−4
3
3
4
1
−2
4
−3
2
1
⎤
⎥⎥⎦
⎡
⎢⎢⎣
2
3
4
5
⎤
⎥⎥⎦
=
⎡
⎢⎢⎣
−36
6
12
12
⎤
⎥⎥⎦
= [−36,6i + 12j + 12k].
5.17.1 Orthogonal Matrix
We can demonstrate that the unit-norm quaternion matrix is orthogonal by showing
that the product with its transpose equals the identity matrix. As we are dealing with
matrices, Q will represent the matrix for q:

68
5
Quaternion Algebra
q = [s,xi + yj + zk]
where 1 = s2 + x2 + y2 + z2
Q =
⎡
⎢⎢⎣
s
−x
−y
−z
x
s
−z
y
y
z
s
−x
z
−y
x
s
⎤
⎥⎥⎦
QT =
⎡
⎢⎢⎣
s
x
y
z
−x
s
z
−y
−y
−z
s
x
−z
y
−x
s
⎤
⎥⎥⎦
QQT =
⎡
⎢⎢⎣
s
−x
−y
−z
x
s
−z
y
y
z
s
−x
z
−y
x
s
⎤
⎥⎥⎦
⎡
⎢⎢⎣
s
x
y
z
−x
s
z
−y
−y
−z
s
x
−z
y
−x
s
⎤
⎥⎥⎦
=
⎡
⎢⎢⎣
1
0
0
0
0
1
0
0
0
0
1
0
0
0
0
1
⎤
⎥⎥⎦.
For this to occur, QT = Q−1.
5.18 Quaternion Algebra
Ordered pairs provide a simple notation for representing quaternions, and allow us
to represent the real unit 1 as [1,0], and the imaginaries i,j,k as [0,i],[0,j],[0,k]
respectively. A quaternion then becomes a linear combination of these elements with
associated real coefﬁcients. Under such conditions, the elements form the basis for
an algebra over the ﬁeld of reals.
Furthermore, because quaternion algebra supports division, and obeys the nor-
mal axioms of algebra, except that multiplication is non-commutative, it is called a
division algebra. Ferdinand Georg Frobenius proved in 1878 that only three such
real associative division algebras exist: real numbers, complex numbers and quater-
nions [1].
The “Cayley numbers” O, constitute a real division algebra, but the Cayley num-
bers are 8-dimensional and are not associative, i.e. a(bc) ̸= (ab)c for all a,b,c ∈O.
5.19 Summary
Quaternions are very similar to complex numbers, apart from the fact that they have
three imaginary terms, rather than one. Consequently, they inherit some of the prop-
erties associated with complex numbers, such as norm, conjugate, unit norm and

5.19
Summary
69
inverse. They can also be added, subtracted, multiplied and divided. However, un-
like complex numbers, they anti-commute when multiplied.
5.19.1 Summary of Operations
Quaternion
qa = [sa,a] = [sa,xai + yaj + zak]
qb = [sb,b] = [sb,xbi + ybj + zbk]
Adding and subtracting
qa ± qb = [sa ± sb,a ± b]
Product
qaqb = [sa,a][sb,b]
= [sasb −a · b,sab + sba + a × b]
=
⎡
⎢⎢⎣
sa
−xa
−ya
−za
xa
sa
−za
ya
ya
za
sa
−xa
za
−ya
xa
sa
⎤
⎥⎥⎦
⎡
⎢⎢⎣
sb
xb
yb
zb
⎤
⎥⎥⎦
Square
q2 = [s,v][s,v]
=

s2 −x2 −y2 −z2,2s(xi + yj + zk)

Pure
q2 = [0,v][0,v]
=

−

x2 + y2 + z2
,0

Norm
|q| =

s2 + v2
Unit norm
|q| =

s2 + v2 = 1
Conjugate
q∗= [s,−v]
(qaqb)∗= q∗
bq∗
a
Inverse
q−1 = q∗
|q|2
(qaqb)−1 = q−1
b q−1
a .

70
5
Quaternion Algebra
5.20 Worked Examples
Here are some further worked examples that employ the ideas described above. In
some cases, a test is included to conﬁrm the result.
Example 1 Add and subtract the following quaternions:
qa = [2,−2i + 3j −4k]
qb = [1,−2i + 5j −6k]
qa + qb = [3,−4i + 8j −10k]
qa −qb = [1,−2j + 2k].
Example 2 Find the norm of the following quaternions:
qa = [2,−2i + 3j −4k]
qb = [1,−2i + 5j −6k]
|qa| =

22 + (−2)2 + 32 + (−4)2 =
√
33
|qb| =

12 + (−2)2 + 52 + (−6)2 =
√
66.
Example 3 Convert these quaternions to their unit-norm form:
qa = [2,−2i + 3j −4k]
qb = [1,−2i + 5j −6k]
|qa| =
√
33
|qb| =
√
66
q′
a =
1
√
33
[2,−2i + 3j −4k]
q′
b =
1
√
66
[1,−2i + 5j −6k].
Example 4 Compute the product and reverse product of the following quaternions.
qa = [2,−2i + 3j −4k]
qb = [1,−2i + 5j −6k]
qaqb = [2,−2i + 3j −4k][1,−2i + 5j −6k]
=

2 × 1 −

(−2) × (−2) + 3 × 5 + (−4) × (−6)

,
2(−2i + 5j −6k) + 1(−2i + 3j −4k)
+

3 × (−6) −(−4) × 5

i −

(−2) × (−6) −(−4) × (−2)

j
+

(−2) × 5 −3 × (−2)

k

= [−41,−6i + 13j −16k + 2i −4j −4k]
= [−41,−4i + 9j −20k]

5.20
Worked Examples
71
qbqa = [1,−2i + 5j −6k][2 −2i + 3j −4k]
=

1 × 2 −

(−2) × (−2) + 5 × 3 + (−6) × (−4)

,
1(−2i + 3j −4k) + 2(−2i + 5j −6k)
+

5 × (−4) −(−6) × 3

i −

(−2) × (−4) −(−6) × (−2)

j
+

(−2) × 3 −5 × (−2)

k

= [−41,−6i + 13j −16k −2i + 4j + 4k]
= [−41,−8i + 17j −12k].
Note: The only thing that has changed in this computation is the sign of the cross-
product axial vector.
Example 5 Compute the square of this quaternion:
q = [2,−2i + 3j −4k]
q2 = [2,−2i + 3j −4k][2,−2i + 3j −4k]
=

2 × 2 −

(−2) × (−2) + 3 × 3 + (−4) × (−4)

,
2 × 2(−2i + 3j −4k)

= [−25,−8i + 12j −16k].
Example 6 Compute the inverse of this quaternion:
q = [2,−2i + 3j −4k]
q∗= [2,+2i −3j + 4k]
|q|2 = 22 + (−2)2 + 32 + (−4)2 = 33
q−1 = 1
33[2,2i −3j + 4k].


Chapter 6
3D Rotation Transforms
6.1 Introduction
In this chapter we review the 3D Euler rotation transforms employed in computer
graphics software. In particular, we identify their Achilles’ heel—gimbal lock—and
the need to be able to rotate about an arbitrary axis. To this end, we will develop
a matrix transform that achieves such a rotation, and in the next chapter develop a
similar transform using quaternions.
6.2 3D Rotation Transforms
The traditional technique for rotating points and frames of reference is based upon
Euler rotations, named after the Swiss mathematician, Leonhard Euler. They offer
three ways to effect a rotation. The ﬁrst is to rotate about one of the three Cartesian
axes. The second combines any two of these rotations about different axes, and the
third combines any three rotations.
Initially, this approach sounds appealing—and in many cases works well—
however, there are problems associated with the technique. The ﬁrst problem is that
when two or more rotations are combined, it is difﬁcult to visualise and predict how
the ﬁnal rotation will behave. The second is that it is complicated to effect a rotation
about a speciﬁc axis, and the third, is that under some conditions, one loses access
to one of the object’s rotational axes. This last problem is known as gimbal lock. To
appreciate these issues we will construct a 3D rotation transform that suffers from
gimbal lock.
6.3 Rotating About a Cartesian Axis
The transform for rotating a point about the origin in the plane is given by
Rβ =
cosβ
−sinβ
sinβ
cosβ

.
J. Vince, Quaternions for Computer Graphics,
DOI 10.1007/978-0-85729-760-0_6, © Springer-Verlag London Limited 2011
73

74
6
3D Rotation Transforms
Fig. 6.1 Rotating the point
P about the z-axis
This can be generalised into a 3D rotation about a Cartesian axis by adding a third
coordinate. For example, to rotate about the z-axis we add a z-coordinate as follows:
Rβ,z =
⎡
⎣
cosβ
−sinβ
0
sinβ
cosβ
0
0
0
1
⎤
⎦
which is illustrated in Fig. 6.1. To rotate a point about the x-axis, the x-coordinate
remains constant whilst the y- and z-coordinates are changed according to the 2D
rotation transform:
Rβ,x =
⎡
⎣
1
0
0
0
cosβ
−sinβ
0
sinβ
cosβ
⎤
⎦.
Finally, to rotate about the y-axis, the y-coordinate remains constant whilst the x-
and z-coordinates are changed:
Rβ,y =
⎡
⎣
cosβ
0
sinβ
0
1
0
−sinβ
0
cosβ
⎤
⎦.
6.4 Rotate About an Off-Set Axis
To rotate about an axis parallel with one of the Cartesian axes, it is normal to employ
homogeneous coordinates and translate the point to be rotated, such that it can be
rotated about the origin, and then translated back by an equal and opposite amount. It
is assumed that the reader is familiar with this strategy. However, for completeness,
we will construct a transform that rotates a point about an axis parallel with the
z-axis and intersects the point (tx,ty,0) as shown in Fig. 6.2:
⎡
⎢⎢⎣
x′
y′
z′
1
⎤
⎥⎥⎦= Ttx,ty,0Rβ,zT−tx,−ty,0
⎡
⎢⎢⎣
x
y
z
1
⎤
⎥⎥⎦

6.5
Composite Rotations
75
Fig. 6.2 Rotating a point
about an axis parallel with the
z-axis
where
T−tx,−ty,0
creates a temporary origin
Rβ,z
rotates β about the temporary z-axis
Ttx,ty,0
returns to the original position
and the matrix transform is
Rβ,z,(tx,ty,0) =
⎡
⎢⎢⎣
cosβ
−sinβ
0
tx(1 −cosβ) + ty sinβ
sinβ
cosβ
0
ty(1 −cosβ) −tx sinβ
0
0
1
0
0
0
0
1
⎤
⎥⎥⎦.
The matrices for rotating about an off-set axis parallel with the x-axis and parallel
with the y-axis are:
Rβ,x,(0,ty,tz) =
⎡
⎢⎢⎣
1
0
0
0
0
cosβ
−sinβ
ty(1 −cosβ) + tz sinβ
0
sinβ
cosβ
tz(1 −cosβ) −ty sinβ
0
0
0
1
⎤
⎥⎥⎦
Rβ,y,(tx,0,tz) =
⎡
⎢⎢⎣
cosβ
0
sinβ
tx(1 −cosβ) −tz sinβ
0
1
0
0
−sinβ
0
cosβ
tz(1 −cosβ) + tx sinβ
0
0
0
1
⎤
⎥⎥⎦.
6.5 Composite Rotations
Leaving aside the transforms for rotating about single and off-set axes, we have
three transforms for rotating about the Cartesian axes: Rα,x,Rβ,y and Rγ,z, which
can be combined to produce families of double and triple transforms. As mentioned

76
6
3D Rotation Transforms
Fig. 6.3 A unit cube located
at the origin
above, such rotations are called Euler rotations, and it is assumed that the reader is
familiar with their construction. The triple combinations are:
Rγ,xRβ,yRα,x
Rγ,xRβ,yRα,z
Rγ,xRβ,zRα,x
Rγ,xRβ,zRα,y
Rγ,yRβ,xRα,y
Rγ,yRβ,xRα,z
Rγ,yRβ,zRα,x
Rγ,yRβ,zRα,y
Rγ,zRβ,xRα,y
Rγ,zRβ,xRα,z
Rγ,zRβ,yRα,x
Rγ,zRβ,yRα,z.
In order to illustrate the problem of gimbal lock we will employ a cube whose
vertices are numbered 0 to 7 as shown in Fig. 6.3.
We can create a composite rotation transform by placing Rα,x, Rβ,y and Rγ,z
in any sequence—even repeating one of them twice, so long as they are separated
by a different transform. As an example of the latter, we could use the sequence
Fig. 6.4 Four views of the unit cube before and during the three rotations

6.5
Composite Rotations
77
Fig. 6.5 Four views of the unit cube using the rotation sequence Rα,xRβ,yRγ,z
Rα,zRβ,yRγ,z where we rotate about the z-axis twice. However, to illustrate gimbal
lock, let’s choose the sequence Rγ,zRβ,yRα,x and make α = β = γ = 90°, which is
equivalent to rotating a point 90° about the ﬁxed x-axis, followed by a rotation of
90° about the ﬁxed y-axis, followed by a rotation of 90° about the ﬁxed z-axis. This
rotation sequence is illustrated in Fig. 6.4.
Figure 6.4 (a) shows the starting position of the cube; (b) shows its position after
a 90° rotation about the x-axis; (c) shows its position after a further rotation of 90°
about the y-axis; and (d) the cube’s resting position after a rotation of 90° about the
z-axis.
However, in spite of employing three rotations about different axes, the cube has
effectively only been rotated 90° about the y-axis! The cube has been rotated twice
about the axis passing through vertices 0 and 4 and once about the axis passing
through vertices 0 and 1, but the axis passing through vertices 0 and 2 has been
ignored. This is known as gimbal lock, and arises through an unfortunate rotation
sequence combination and angles.
Reversing the composite rotation to Rα,xRβ,yRγ,z does not improve matters.
This composite transform is equivalent to rotating a point 90° about the ﬁxed z-
axis, followed by a rotation of 90° about the ﬁxed y-axis, followed by a rotation of
90° about the ﬁxed x-axis. This rotation sequence is illustrated in Fig. 6.5.
Inspection of Fig. 6.5 (d) shows that the unit cube has been rotated 180° about
the vector [1
0
1]T, i.e. an axis intersecting vertices 0 and 5. This time, the cube
is rotated twice about an axis intersecting vertices 0 and 1, once about an axis inter-
secting vertices 0 and 4, and once again, the axis intersecting vertices 0 and 2 has

78
6
3D Rotation Transforms
Fig. 6.6 The geometry
associated with rotating a
point about an arbitrary axis
been ignored. It is not difﬁcult to see why Euler rotations cause so many problems.
So let’s continue and see how we can rotate about an arbitrary axis.
6.6 Rotating About an Arbitrary Axis
There is nothing fundamentally wrong with individual Euler transforms—it is the
way they are combined to effect a rotation that is ﬂawed. Ideally, we require a rota-
tion transform that permits us to specify the axis and angle of rotation, which is what
we will compute. The ﬁrst technique uses matrices and trigonometry and is rather
laborious. The second approach employs vector analysis and is quite succinct.
6.6.1 Matrices
We begin by deﬁning an axis using a unit vector ˆn about which a point P is rotated
α to P ′ as shown in Fig. 6.6. And as we only have access to matrices that rotate
points about the Cartesian axes, this unit vector has to be temporarily aligned with a
Cartesian axis. In the following example we choose the x-axis. During the alignment
process, the point P is subjected to the transforms necessary to align the unit vector
with the x-axis. We then rotate P , α about the x-axis. To complete the operation, the
rotated point is subjected to the transforms that return the unit vector to its original
position.
Although matrices provide a powerful tool for undertaking this sort of work, it is,
nevertheless, extremely tedious, but a good exercise for improving one’s algebraic
skills!
Figure 6.6 shows a point P(x,y,z) to be rotated through an angle α to
P ′(x′,y′,z′) about an axis deﬁned by
ˆn = ai + bj + ck.

6.6
Rotating About an Arbitrary Axis
79
The transforms to achieve this operation is expressed as follows:
⎡
⎣
x′
y′
z′
⎤
⎦= R−φ,yRθ,zRα,xR−θ,zRφ,y
⎡
⎣
x
y
z
⎤
⎦
which aligns the axis of rotation with the x-axis, performs the rotation of P through
an angle α about the x-axis, and returns the axis of rotation back to its original
position. Therefore,
Rφ,y =
⎡
⎣
cosφ
0
sinφ
0
1
0
−sinφ
0
cosφ
⎤
⎦
R−θ,z =
⎡
⎣
cosθ
sinθ
0
−sinθ
cosθ
0
0
0
1
⎤
⎦
Rα,x =
⎡
⎣
1
0
0
0
cosα
−sinα
0
sinα
cosα
⎤
⎦
Rθ,z =
⎡
⎣
cosθ
−sinθ
0
sinθ
cosθ
0
0
0
1
⎤
⎦
R−φ,y =
⎡
⎣
cosφ
0
−sinφ
0
1
0
sinφ
0
cosφ
⎤
⎦.
Let
R−φ,yRθ,zRα,xR−θ,zRφ,y =
⎡
⎣
a11
a12
a13
a21
a22
a23
a31
a32
a33
⎤
⎦
where by multiplying the matrices together we ﬁnd that:
a11 = cos2 φ cos2 θ + cos2 φ sin2 θ cosα + sin2 φ cosα
a12 = cosφ cosθ sinθ −cosφ sinθ cosθ cosα −sinφ cosθ sinα
a13 = cosφ sinφ cos2 θ + cosφ sinφ sin2 θ cosα + sin2 φ sinθ sinα
+ cos2 φ sinθ sinα −cosφ sinφ cosα
a21 = sinθ cosθ cosφ −cosθ sinθ cosφ cosα + cosθ sinφ sinα
a22 = sin2 θ + cos2 θ cosα
a23 = sinθ cosθ sinφ −cosθ sinθ sinφ cosα −cosθ cosφ sinα
a31 = cosφ sinφ cos2 θ + cosφ sinφ sin2 θ cosα −cos2 φ sinθ sinα
= −cosφ sinφ cosα
a32 = sinφ cosθ sinθ −sinφ sinθ cosθ cosα + cosφ cosθ sinα
a33 = sin2 φ cos2 θ + sin2 φ sin2 θ cosα −cosφ sinφ sinθ sinα
+ cosφ sinφ sinθ sinα + cos2 φ cosα.
After much trigonometric substitution we arrive at the transform
⎡
⎢⎣
x′
p
y′
p
z′
p
⎤
⎥⎦=
⎡
⎣
a2K + cosα
abK −c sinα
acK + b sinα
abK + c sinα
b2K + cosα
bcK −a sinα
acK −b sinα
bcK + a sinα
c2K + cosα
⎤
⎦
⎡
⎣
xp
yp
zp
⎤
⎦

80
6
3D Rotation Transforms
Fig. 6.7 A view of the
geometry associated with
rotating a point about an
arbitrary axis
Fig. 6.8 A cross-section and
plan view of the geometry
associated with rotating a
point about an arbitrary axis
where
K = 1 −cosα.
6.6.2 Vectors
Now let’s solve the same problem using vectors. Figure 6.7 shows a view of the
geometry associated with the task at hand. For clariﬁcation, Fig. 6.8 shows a cross-
section and a plan view of the geometry.
The axis of rotation is given by the unit vector
ˆn = ai + bj + ck.
P(xp,ypzp) is the point to be rotated by angle α to P ′(x′
p,y′
p,z′
p).
O is the origin, whilst p and p′ are position vectors for P and P ′ respectively.
From Figs. 6.7 and 6.8:
p′ = −−→
ON + −−→
NQ + −−→
QP ′.
To ﬁnd −−→
ON:
|n| = |p|cosθ = ˆn · p

6.6
Rotating About an Arbitrary Axis
81
therefore,
−−→
ON = n = ˆn(ˆn · p).
To ﬁnd −−→
NQ:
−−→
NQ = NQ
NP r = NQ
NP ′ r = cosαr
but
p = n + r = ˆn(ˆn · p) + r
therefore,
r = p −ˆn(ˆn · p)
and
−−→
NQ =

p −ˆn(ˆn · p)

cosα.
To ﬁnd −−→
QP ′:
Let
ˆn × p = w
where
|w| = |ˆn| · |p|sinθ = |p|sinθ
but
|r| = |p|sinθ
therefore,
|w| = |r|.
Now
QP ′
NP ′ = QP ′
|r| = QP ′
|w| = sinα
therefore,
−−→
QP ′ = wsinα = (ˆn × p)sinα
then
p′ = ˆn(ˆn · p) +

p −ˆn(ˆn · p)

cosα + (ˆn × p)sinα
and
p′ = pcosα + ˆn(ˆn · p)(1 −cosα) + (ˆn × p)sinα.
Let
K = 1 −cosα

82
6
3D Rotation Transforms
Fig. 6.9 Rotating the point
P through 180° to P ′
then
p′ = pcosα + ˆn(ˆn · p)K + (ˆn × p)sinα
and
p′ = (xpi + ypj + zpk)cosα + (ai + bj + ck)(axp + byp + czp)K
+

(bzp −cyp)i + (cxp −azp)j + (ayp −bxp)k

sinα
p′ =

xp cosα + a(axp + byp + czp)K + (bzp −cyp)sinα

i
+

yp cosα + b(axp + byp + czp)K + (cxp −azp)sinα

j
+

zp cosα + c(axp + byp + czp)K + (ayp −bxp)sinα

k
p′ =

xp

a2K + cosα

+ yp(abK −c sinα) + zp(acK + b sinα)

i
+

xp(abK + c sinα) + yp

b2K + cosα

+ zp(bcK −a sinα)

j
+

xp(acK −b sinα) + yp(bcK + a sinα) + zp

c2K + cosα

k
which unpacks into the transform:
⎡
⎢⎣
x′
p
y′
p
z′
p
⎤
⎥⎦=
⎡
⎣
a2K + cosα
abK −c sinα
acK + b sinα
abK + c sinα
b2K + cosα
bcK −a sinα
acK −b sinα
bcK + a sinα
c2K + cosα
⎤
⎦
⎡
⎣
xp
yp
zp
⎤
⎦
where
K = 1 −cosα
and is identical to the transform derived using matrices.
Let’s test the transform with a simple example that can be easily veriﬁed. If we
rotate the point P(10,0,0), 180° about an axis deﬁned by ˆn = (1/
√
2)i + (1/
√
2)k,
it should be rotated to P ′(0,0,10) as shown in Fig. 6.9. Therefore,
α = 180°,
cosα = −1,
sinα = 0,
K = 2,
a = 1
√
2
,
b = 0,
c = 1
√
2

6.7
Summary
83
and
⎡
⎣
0
0
10
⎤
⎦=
⎡
⎣
0
0
1
0
−1
0
1
0
0
⎤
⎦
⎡
⎣
10
0
0
⎤
⎦
which conﬁrms our prediction.
6.7 Summary
In this chapter we have reviewed the matrix rotation transforms for rotating a point
about one of the three Cartesian axes. By employing homogeneous coordinates, the
translation transform can be integrated to rotate points about an off-set axis parallel
with one of the Cartesian axes.
Composite rotations are created by combining the matrices representing the indi-
vidual rotations about three successive axes. Such rotations are known as Euler rota-
tions, and there are twelve ways of combining these matrices. Unfortunately, one of
the problems with such transforms is that they suffer from gimbal lock, where one
degree of freedom is lost under certain angle combinations. Another problem, is that
it is difﬁcult to predict how a point moves in space when animated by a composite
transform, although they are widely used for positioning objects in world space.
Finally, matrices and vectors were used to develop a transform for rotating a point
about an arbitrary axis.
6.7.1 Summary of Transforms
Translate a point
Ttx,ty,tz =
⎡
⎢⎢⎣
1
0
0
tx
0
1
0
ty
0
0
1
tz
0
0
0
1
⎤
⎥⎥⎦
Rotate a point about the x-, y-, z-axes
Rβ,x =
⎡
⎣
1
0
0
0
cosβ
−sinβ
0
sinβ
cosβ
⎤
⎦
Rβ,y =
⎡
⎣
cosβ
0
sinβ
0
1
0
−sinβ
0
cosβ
⎤
⎦
Rβ,z =
⎡
⎣
cosβ
−sinβ
0
sinβ
cosβ
0
0
0
1
⎤
⎦

84
6
3D Rotation Transforms
Rotate a point about off-set x-, y-, z-axes
Rβ,x,(0,ty,tz) =
⎡
⎢⎢⎣
1
0
0
0
0
cosβ
−sinβ
ty(1 −cosβ) + tz sinβ
0
sinβ
cosβ
tz(1 −cosβ) −ty sinβ
0
0
0
1
⎤
⎥⎥⎦
Rβ,y,(tx,0,tz) =
⎡
⎢⎢⎣
cosβ
0
sinβ
tx(1 −cosβ) −tz sinβ
0
1
0
0
−sinβ
0
cosβ
tz(1 −cosβ) + tx sinβ
0
0
0
1
⎤
⎥⎥⎦
Rβ,z,(tx,ty,0) =
⎡
⎢⎢⎣
cosβ
−sinβ
0
tx(1 −cosβ) + ty sinβ
sinβ
cosβ
0
ty(1 −cosβ) −tx sinβ
0
0
1
0
0
0
0
1
⎤
⎥⎥⎦
Rotate a point about an arbitrary axis
Rα,ˆn =
⎡
⎣
a2K + cosα
abK −c sinα
acK + b sinα
abK + c sinα
b2K + cosα
bcK −a sinα
acK −b sinα
bcK + a sinα
c2K + cosα
⎤
⎦
K = 1 −cosα
ˆn = ai + bj + ck.
6.8 Worked Examples
Here are some further worked examples that employ the ideas described above. In
some cases, a test is included to conﬁrm the result.
Example 1 Develop a rotation transform to rotate a point about an axis off-set to the
y-axis.
Let the off-set axis intersect the point (tx,0,tz). Therefore, the homogeneous
transform for this rotation is
⎡
⎢⎢⎣
x′
y′
z′
1
⎤
⎥⎥⎦= Ttx,0,tzRβ,yT−tx,0,−tz
⎡
⎢⎢⎣
x
y
z
1
⎤
⎥⎥⎦
where
T−tx,0,−tz
creates a temporary origin
Rβ,y
rotates β about the temporary y-axis
Ttx,0,tz
returns to the original position
and

6.8
Worked Examples
85
Ttx,0,tz =
⎡
⎢⎢⎣
1
0
0
tx
0
1
0
0
0
0
1
tz
0
0
0
1
⎤
⎥⎥⎦
T−tx,0,−tz =
⎡
⎢⎢⎣
1
0
0
−tx
0
1
0
0
0
0
1
−tz
0
0
0
1
⎤
⎥⎥⎦
Rβ,y =
⎡
⎢⎢⎣
cosβ
0
sinβ
0
0
1
0
0
−sinβ
0
cosβ
0
0
0
0
1
⎤
⎥⎥⎦.
Therefore,
Ttx,0,tzRβ,yT−tx,0,−tz
=
⎡
⎢⎢⎣
1
0
0
tx
0
1
0
0
0
0
1
tz
0
0
0
1
⎤
⎥⎥⎦
⎡
⎢⎢⎣
cosβ
0
sinβ
0
0
1
0
0
−sinβ
0
cosβ
0
0
0
0
1
⎤
⎥⎥⎦
⎡
⎢⎢⎣
1
0
0
−tx
0
1
0
0
0
0
1
−tz
0
0
0
1
⎤
⎥⎥⎦
=
⎡
⎢⎢⎣
1
0
0
tx
0
1
0
0
0
0
1
tz
0
0
0
1
⎤
⎥⎥⎦
⎡
⎢⎢⎣
cosβ
0
sinβ
−tx cosβ −tz sinβ
0
1
0
0
−sinβ
0
cosβ
tx sinβ −tz cosβ
0
0
0
1
⎤
⎥⎥⎦
=
⎡
⎢⎢⎣
cosβ
0
sinβ
tx(1 −cosβ) −tz sinβ
0
1
0
0
−sinβ
0
cosβ
tz(1 −cosβ) + tx sinβ
0
0
0
1
⎤
⎥⎥⎦.
Example 2 Compute the rotation transform for Rγ,xRβ,yRα,x and see if it suffers
from gimbal lock when α = β = γ = 90°. What is the axis and angle of rotation?
Using the notation cβ = cosβ and sβ = sinβ, the composite transform is
Rγ,xRβ,yRα,x =
⎡
⎣
1
0
0
0
cγ
−sγ
0
sγ
cγ
⎤
⎦
⎡
⎣
cβ
0
sβ
0
1
0
−sβ
0
cβ
⎤
⎦
⎡
⎣
1
0
0
0
cα
−sα
0
sα
cα
⎤
⎦
=
⎡
⎣
cβ
sβsα
sβcα
sγ sβ
(cγ cα −sγ cβsα)
(−cγ sα −sγ cβcα)
−cγ sβ
(sγ cα + cγ cβsα)
(−sγ sα + cγ cβcα)
⎤
⎦
R90°,xR90°,yR90°,x =
⎡
⎣
0
1
0
1
0
0
0
0
−1
⎤
⎦.
Figure 6.10 shows a cube at each stage of rotation, and it is clear that gimbal lock
is not present as the cube is rotated through each of its orthogonal axes. The axis

86
6
3D Rotation Transforms
Fig. 6.10 Four views of the unit cube before and during the three rotations R90°,xR90°,yR90°,x
of rotation is through the vertices 0 and 6, i.e. [1 1 0]T and the angle of rotation is
180°.
Example 3 Show that the rotation matrix for rotating points about an arbitrary axis
works for the three Cartesian axes.
Starting with the matrix:
Rα,ˆn =
⎡
⎣
a2K + cosα
abK −c sinα
acK + b sinα
abK + c sinα
b2K + cosα
bcK −a sinα
acK −b sinα
bcK + a sinα
c2K + cosα
⎤
⎦
K = 1 −cosα
ˆn = ai + bj + ck.
Rotating about the x-axis:
ˆn = ai
therefore, a = 1 and b = c = 0:
Rα,x =
⎡
⎣
1
0
0
0
cosα
−sinα
0
sinα
cosα
⎤
⎦.
Rotating about the y-axis:
ˆn = bj

6.8
Worked Examples
87
therefore, b = 1 and a = c = 0:
Rα,y =
⎡
⎣
cosα
0
sinα
0
1
0
−sinα
0
cosα
⎤
⎦.
Rotating about the z-axis:
ˆn = ck
therefore, c = 1 and a = b = 0:
Rα,z =
⎡
⎣
cosα
−sinα
0
sinα
cosα
0
0
0
1
⎤
⎦
which are correct.
Example 4 Compute the rotation transform to rotate a point 180° about an axis
aligned with [1
1
1]T. Show by example, that rotating a point twice by this trans-
form returns it to its original position.
Starting with the matrix:
Rα,ˆn =
⎡
⎣
a2K + cosα
abK −c sinα
acK + b sinα
abK + c sinα
b2K + cosα
bcK −a sinα
acK −b sinα
bcK + a sinα
c2K + cosα
⎤
⎦
K = 1 −cosα
ˆn = ai + bj + ck.
Therefore, given n = i + j + k
ˆn = 1
√
3
i + 1
√
3
j + 1
√
3
k
and
a = b = c = 1
√
3
.
Given α = 180°, cosα = −1, sinα = 0 and K = 2, and the matrix becomes:
R180°,ˆn =
⎡
⎣
−1/3
2/3
2/3
2/3
−1/3
2/3
2/3
2/3
−1/3
⎤
⎦.
Multiplying this matrix by itself must result in the identity matrix:
R180°,ˆnR180°,ˆn =
⎡
⎣
−1/3
2/3
2/3
2/3
−1/3
2/3
2/3
2/3
−1/3
⎤
⎦
⎡
⎣
−1/3
2/3
2/3
2/3
−1/3
2/3
2/3
2/3
−1/3
⎤
⎦
=
⎡
⎣
1
0
0
0
1
0
0
0
1
⎤
⎦

88
6
3D Rotation Transforms
which conﬁrms that any point rotated twice by the rotation matrix returns to its
original point.

Chapter 7
Quaternions in Space
7.1 Introduction
In this chapter we show how quaternions are used to rotate vectors about an arbitrary
axis. We begin by reviewing some of the history associated with quaternions, in
particular, the role of Benjamin Olinde Rodrigues, who discovered the importance
of half-angles in rotation transforms.
For a particular quaternion product, when a quaternion is expressed as
q = [cosθ,sinθv]
a vector is rotated about the axis v by an angle θ. But, as we will discover, for a
triple quaternion product, when a quaternion is expressed as
q =

cos 1
2θ,sin 1
2θv

a vector is rotated about the axis v by an angle θ. This half-angle representation was
discovered by Rodrigues.
The short section on composition algebras reveals that quaternions are rather
special, and informs us why Hamilton could not identify an algebra based upon the
hyper-complex number z = s + ai + bj.
We then examine various quaternion products to discover their rotational prop-
erties. This begins with two orthogonal quaternions, and moves towards the general
case of using the triple qpq−1 where q is a unit-norm quaternion, and p is a pure
quaternion.
Two techniques are covered to express a quaternion product as a matrix, which in
turn encode the eigenvector and eigenvalue. Finally, we examine how quaternions
can be interpolated.
We continue to represent a quaternion as an ordered pair, with italic, lower-case
letters to represent quaternions, and bold lower-case letters to represent vectors.
J. Vince, Quaternions for Computer Graphics,
DOI 10.1007/978-0-85729-760-0_7, © Springer-Verlag London Limited 2011
89

90
7
Quaternions in Space
Fig. 7.1 Rodrigues’
spherical triangle showing l,
m and n
7.2 Some History
Benjamin Olinde Rodrigues (1795–1851) was born in Bordeaux, France. He studied
in Paris, and in 1816 was awarded his doctorate at the age of 21. The subject of his
thesis was solving Legendre polynomials, and Rodrigues proposed a solution which
is still known as the Rodrigues formula.
Although he pursued a career in politics and banking, his doctoral research con-
ﬁrms that he was more than just a ‘recreational’ mathematician, for in 1840 he
published a mathematical paper in the Annales de Mathématiques Pures et Ap-
pliquées on transformation groups [20]. The paper contains a formula describing
a geometric construction equating two successive rotations about different axes,
with a third rotation about another axis. Today, we know this correspondence as
the Euler-Rodrigues Parameterisation. Euler had already shown in 1775 that a sin-
gle rotation could represent two successive rotations about different axes, but did
not provide an algebraic solution.
If we represent a rotation α about an axial vector a as Rα,a, then Rodrigues
provided a solution to
Rγ,n = Rα,lRβ,m
in the form of
cos 1
2γ = cos 1
2α cos 1
2β −sin 1
2α sin 1
2βl · m
(7.1)
sin 1
2γ n = sin 1
2α cos 1
2βl + cos 1
2α sin 1
2βm + sin 1
2α sin 1
2βl × m.
(7.2)
Rodrigues did not use the vector notation employed in (7.1) and (7.2), as this
was yet to be deﬁned by Hamilton, but he did employ the algebraic equivalent of
these vector products. Figure 7.1 shows the spherical triangle formed by the axes
and angles of rotation used by Rodrigues.
Equations (7.1) and (7.2) contain some features familiar to the quaternion prod-
uct, which become obvious with the following analysis. We start by deﬁning the
quaternions

7.2
Some History
91
ql =

cos 1
2α,sin 1
2αl

qm =

cos 1
2β,sin 1
2βm

qn =

cos 1
2γ,sin 1
2γ n

and form the product
qn = qlqm
=

cos 1
2α,sin 1
2αl

cos 1
2β,sin 1
2βm

=

cos 1
2α cos 1
2β −sin 1
2α sin 1
2βl · m,
sin 1
2α cos 1
2βl + cos 1
2α sin 1
2βm + sin 1
2α sin 1
2βl × m

cos 1
2γ = cos 1
2α cos 1
2β −sin 1
2α sin 1
2βl · m
(7.3)
sin 1
2γ n = sin 1
2α cos 1
2βl + cos 1
2α sin 1
2βm + sin 1
2α sin 1
2βl × m
(7.4)
where (7.3) and (7.4) are identical to (7.1) and (7.2) respectively. Although Ro-
drigues had not invented quaternions in the form of
q = s + ai + bj + ck,
he had discovered the coefﬁcients of a quaternion product before Hamilton. C’est la
vie!
Hamilton invented quaternions in October 1843, and by December of the same
year, his friend, Irish mathematician, John Thomas Graves (1806–1870), had in-
vented octaves, which would eventually be called octonions. The British mathemati-
cian, Arthur Cayley (1821–1895), had also been intrigued by Hamilton’s quater-
nions, and independently invented octonions in 1845. Octonions eventually became
known as Cayley numbers rather than octaves, simply because Graves did not pub-
lish his results until 1848—three years after Cayley!
Just as quaternions can be deﬁned in terms of ordered pairs of complex numbers,
the octaves, or octonions, can be deﬁned as ordered pairs of quaternions.
7.2.1 Composition Algebras
When a speciﬁc law forms the basis of an algebra, it is called a composition algebra.
For example, we know that in ordinary arithmetic
a2b2 = (ab)2
a,b ∈R

92
7
Quaternions in Space
e.g.
3242 = 122
where a square law is the composition law.
We discovered in Chap. 4 that for two complex numbers:
|z1||z2| = |z1z2|
z1,z2 ∈C
|z1|2|z2|2 = |z1z2|2.
For example, given
z1 = a1 + b1i
z2 = a2 + b2i
then

a2
1 + b2
1

a2
2 + b2
2

= (a1a2 −b1b2)2 + (a1b2 + a2b1)2
which is a two-square law.
In Chap. 5 we noted that for two quaternions:
|qa|2|qb|2 = |qaqb|2
qa,qb ∈H.
For example, given
qa = [sa,xai + yaj + zak]
qb = [sb,xbi + ybj + zbk]
then

s2
a + x2
a + y2
a + z2
a

s2
b + x2
b + y2
b + z2
b

= (sasb −xaxb −yayb −zazb)2
+ (saxb + sbxa + yazb −ybza)2
+ (sayb + sbya + zaxb −zbxa)2
+ (sazb + sbza + xayb −xbya)2
which is a four-square law.
In addition to complex numbers, quaternions occupy a central place in mathemat-
ical systems, and today there are four such composition algebras: real R, complex C,
quaternion H, and octonion O that obey an n-square identity used to compute their
norms. In 1898 the German mathematician, Adolf Hurwitz (1859–1919), proved
that the product of the sum of n squares by the sum of n squares is the sum of n
squares only when n is equal to 1, 2, 4 and 8, which are represented by the reals,
complex numbers, quaternions and octonions. This is known as ‘Hurwitz’s Theo-
rem’ or the ‘1, 2, 4, 8 Theorem’. No other system is possible, which shows how im-
portant quaternions are within the realm of mathematics. Consequently, Hamilton’s
search for a system of triples was futile, because there is no three-square identity.
Now let’s investigate how quaternions are used to rotate vectors about an arbi-
trary axis.

7.3
Quaternion Products
93
7.3 Quaternion Products
A quaternion q is the union of a scalar s and a vector v:
q = [s,v]
s ∈R, v ∈R3.
If we express v in terms of its components, we have
q = [s,xi + yj + zk]
s,x,y,z ∈R.
Hamilton had hoped that a quaternion could be used like a complex rotor, where we
saw in Chap. 2 that
Rθ = cosθ + i sinθ
rotates a complex number by θ. Could a unit-norm quaternion q be used to rotate
a vector stored as a pure quaternion p? Well yes, but only in a restricted sense. To
understand this, let’s construct the product of a unit-norm quaternion q and a pure
quaternion p. The unit-norm quaternion q is deﬁned as
q = [s,λˆv]
s,λ ∈R, ˆv ∈R3
(7.5)
|ˆv| = 1
s2 + λ2 = 1
and the pure quaternion p stores the vector p to be rotated:
p = [0,p]
p ∈R3.
Let’s compute the product p′ = qp and examine the vector part of p′ to see if p is
rotated:
p′ = qp
= [s,λˆv][0,p]
= [−λˆv · p,sp + λˆv × p].
(7.6)
We can see from (7.6) that the result is a general quaternion with a scalar and a
vector component.
7.3.1 Special Case
The ‘restricted sense’ referred to above is that ˆv must be perpendicular to p, which
makes the dot product term −λˆv · p in (7.6) vanish, and we are left with the pure
quaternion
p′ = [0,sp + λˆv × p].
(7.7)
Figure 7.2 illustrates this scenario, where p is perpendicular to ˆv, and ˆv × p
is perpendicular to the plane containing p and ˆv. Now because ˆv is a unit vector,

94
7
Quaternions in Space
Fig. 7.2 Three orthogonal
vectors p, ˆv and ˆv × p
Fig. 7.3 The vector 2i is
rotated 45° by the quaternion
q = [
√
2
2 ,
√
2
2 k]
|p| = |ˆv × p|, which means that we have two orthogonal vectors, i.e. p and ˆv × p,
with the same length. Therefore, to rotate p about ˆv, all that we have to do is make
s = cosθ and λ = sinθ in (7.7):
p′ = [0,p′]
= [0,cosθp + sinθ ˆv × p].
For example, to rotate a vector about the z-axis, q’s vector ˆv must be aligned
with the z-axis as shown in Fig. 7.3. If we make the angle of rotation θ = 45° then
q = [s,λˆv]
= [cosθ,sinθk]
=
√
2
2 ,
√
2
2 k

and if the vector to be rotated is p = 2i, then
p = [0,p]
= [0,2i].
There are now four product combinations worth exploring: qp, pq, q−1p and pq−1.
It’s not worth considering qp−1 and p−1q as p−1 simply reverses the direction of p.

7.3
Quaternion Products
95
Let’s start with qp:
p′ = qp
=
√
2
2 ,
√
2
2 k

[0,2i]
=

0,2
√
2
2 i + 2
√
2
2 k × i

=

0,
√
2i +
√
2j

and p has been rotated 45° to p′ =
√
2i +
√
2j.
Next, pq:
p′ = pq
= [0,2i]
√
2
2 ,
√
2
2 k

=

0,2
√
2
2 i −2
√
2
2 k × i

=

0,
√
2i −
√
2j

and p has been rotated −45° to p′ =
√
2i −
√
2j.
Next, q−1p, and as q is a unit-norm quaternion, q−1 = q∗:
p′ = q−1p
=
√
2
2 ,−
√
2
2 k

[0,2i]
=

0,2
√
2
2 i −2
√
2
2 k × i

=

0,
√
2i −
√
2j

and p has been rotated −45° to p′ =
√
2i −
√
2j.
Finally, pq−1:
p′ = pq−1
= [0,2i]
√
2
2 ,−
√
2
2 k

=

0,2
√
2
2 i + 2
√
2
2 k × i

=

0,
√
2i +
√
2j

and p has been rotated 45° to p′ =
√
2i +
√
2j. Thus, for orthogonal quaternions, θ
is the angle of rotation, then
qp = pq−1
pq = q−1p.

96
7
Quaternions in Space
Fig. 7.4 Rotating the vector
p = 2i by the quaternion
q = [cosθ,sinθ ˆv]
Before moving on, let’s see what happens to the product qp when θ = 180°:
p′ = qp
= [−1,0][0,2i]
= [0,−2i]
and p has been rotated 180° to p′ = −2i.
Note that in all the above products, the vector has not been scaled during the
rotation. This is because q is a unit-norm quaternion. Now let’s see what happens if
we change the angle between ˆv and p. Let’s reduce the angle to 45° and retain q’s
unit vector, as shown in Fig. 7.4. Therefore,
ˆv = 1
√
2
i + 1
√
2
k
q = [cosθ,sinθ ˆv]
p = [0,p].
This time we must include the dot product term −sinθ ˆv · p, as it is no longer zero:
p′ = qp
= [cosθ,sinθ ˆv][0,p]
= [−sinθ ˆv · p,cosθp + sinθ ˆv × p].
(7.8)
Substituting ˆv, p and θ = 45° in (7.8), we have
p′ =

−
√
2
2
 1
√
2
i + 1
√
2
k
	
· (2i),
√
2
2 2i +
√
2
2
 1
√
2
i + 1
√
2
k
	
× 2i

=

−1,
√
2i + j

(7.9)
which, unfortunately, is no longer a pure quaternion. It has not been rotated 45°,
and the vector’s norm is reduced to
√
3! Multiplying the vector by a non-orthogonal
quaternion has converted some of the vector information into the quaternion’s scalar
component.

7.3
Quaternion Products
97
Fig. 7.5 The vector 2i is
rotated 90° to i +
√
2j + k
7.3.2 General Case
Not to worry. Could it be that an inverse quaternion reverses the operation? Let’s
see what happens if we post-multiply qp by q−1.
Given
q =

cosθ,sinθ
 1
√
2
i + 1
√
2
k
	
then
q−1 =

cosθ,−sinθ
 1
√
2
i + 1
√
2
k
	
=
√
2
2 ,
√
2
2
 1
√
2
i + 1
√
2
k
	
= 1
2
√
2,−i −k

.
Therefore, post-multiplying (7.9) by q−1 we have
qpq−1 =

−1,
√
2i + j
1
2
√
2,−i −k

= 1
2

−
√
2 −
√
2i + j

· (−i −k),i + k +
√
2
√
2i + j

−i +
√
2j + k

= 1
2

−
√
2 +
√
2,i + k + 2i +
√
2j −i +
√
2j + k

=

0,i +
√
2j + k

(7.10)
which is a pure quaternion. Furthermore, there’s no scaling as its norm is still 2, but
the vector has been rotated 90° rather than 45°, twice the desired angle, as shown in
Fig. 7.5.
If this ‘sandwiching’ of the vector in the form of a pure quaternion by q and q−1
is correct, it suggests that increasing θ to 90° should rotate p = 2i by 180° to 2k.
Let’s try this.

98
7
Quaternions in Space
Let θ = 90°, therefore,
qp =

0, 1
√
2
i + 1
√
2
k

[0,2i]
=

−2
√
2
, 2
√
2
j

.
Next, we post-multiply qp by q−1:
qpq−1 =

−2
√
2
, 2
√
2
j

0,−1
√
2
i −1
√
2
k

= [0,i + k −i + k]
= [0,2k]
which conﬁrms our prediction and suggests that qpq−1 works. Now let’s show how
this double angle arises. We begin by deﬁning a unit-norm quaternion q:
q = [s,λˆv]
where s2 + λ2 = 1. The vector p to be rotated is encoded as a pure quaternion:
p = [0,p]
and the inverse quaternion q−1 is
q−1 = [s,−λˆv].
Therefore, the product qpq−1 is
qpq−1 = [s,λˆv][0,p][s,−λˆv]
= [−λˆv · p,sp + λˆv × p][s,−λˆv]
=

−λsˆv · p + λsp · ˆv + λ2(ˆv × p) · ˆv,
λ2(ˆv · p)ˆv + s2p + λsˆv × p
−λsp × ˆv −λ2(ˆv × p) × ˆv

=

λ2(ˆv × p) · ˆv,λ2(ˆv · p)ˆv + s2p + 2λsˆv × p −λ2(ˆv × p) × ˆv

.
Note that
(ˆv × p) · ˆv = 0
and
(ˆv × p) × ˆv = (ˆv · ˆv)p −(p · ˆv)ˆv = p −(p · ˆv)ˆv.
Therefore,
qpq−1 =

0,λ2(ˆv · p)ˆv + s2p + 2λsˆv × p −λ2p + λ2(p · ˆv)ˆv

=

0,2λ2(ˆv · p)ˆv +

s2 −λ2
p + 2λsˆv × p

.
(7.11)

7.3
Quaternion Products
99
Obviously, this is a pure quaternion as the scalar component is zero. However, it is
not obvious where the angle doubling comes from. But look what happens when we
make s = cosθ and λ = sinθ:
qpq−1 =

0,2sin2 θ(ˆv · p)ˆv +

cos2 θ −sin2 θ

p + 2sinθ cosθ ˆv × p

=

0,(1 −cos2θ)(ˆv · p)ˆv + cos2θp + sin2θ ˆv × p

.
The double-angle trigonometric terms emerge! Now, if we want this product to ac-
tually rotate the vector by θ, then we must build this in from the outset by halving θ
in q:
q =

cos 1
2θ,sin 1
2θ ˆv

(7.12)
which makes
qpq−1 =

0,(1 −cosθ)(ˆv · p)ˆv + cosθp + sinθ ˆv × p

.
(7.13)
The product qpq−1 was discovered by Hamilton who failed to publish the result.
Cayley, also discovered the product and published the result in 1845 [8]. However,
Altmann notes that “in Cayley’s collected papers he concedes priority to Hamil-
ton” [2], which was a nice gesture. However, the person who had recognised the
importance of the half-angle parameters in (7.12) before Hamilton and Cayley was
Rodrigues—who published a solution that was not seen by Hamilton, but appar-
ently, was seen by Cayley.
Let’s test (7.13) using the previous example where we rotated a vector p = 2i,
θ = 90° about the quaternion’s vector ˆv = (1/
√
2)i + (1/
√
2)k.
qpq−1 =

0,(1 −cosθ)(ˆv · p)ˆv + cosθp + sinθ ˆv × p

=

0,(ˆv · p)ˆv + ˆv × p

=

0, 2
√
2
 1
√
2
i + 1
√
2
k
	
+
√
2j

=

0,i +
√
2j + k

which agrees with (7.10). Thus, when a unit-norm quaternion takes the form
q =

cos 1
2θ,sin 1
2θ ˆv

and a pure quaternion storing a vector to be rotated takes the form
p = [0,p]
the pure quaternion
p′ = qpq−1
stores the rotated vector p′. Let’s show why this product preserves the magnitude of
the rotated vector.

100
7
Quaternions in Space
|p′| = |qp|


q−1

= |q||p|


q−1

= |q|2|p|
and if q is a unit-norm quaternion, |q| = 1, then |p′| = |p|.
You may be wondering what happens if the product is reversed to q−1pq?
A guess would suggest that the rotation sequence is reversed, but let’s see what
an algebraic analysis conﬁrms.
q−1pq = [s,−λˆv][0,p][s,λˆv]
= [λˆv · p,sp −λˆv × p][s,λˆv]
=

λsˆv · p −λsp · ˆv,
λ2ˆv × p · ˆv + λ2ˆv · pˆv + s2p −λsˆv × p + λsp × ˆv −λ2ˆv × p × ˆv

=

λ2(ˆv × p) · ˆv,λ2(ˆv · p)ˆv + s2p −2λsˆv × p −λ2(ˆv × p) × ˆv

.
Once again
(ˆv × p) · ˆv = 0
and
(ˆv × p) × ˆv = p −(p · ˆv)ˆv.
Therefore,
q−1pq =

0,λ2(ˆv · p)ˆv + s2p −2λsˆv × p −λ2p + λ2(p · ˆv)ˆv

=

0,2λ2(ˆv · p)ˆv +

s2 −λ2
p −2λsˆv × p

.
Again, let’s make s = cosθ and λ = sinθ:
q−1pq =

0,(1 −cos2θ)(ˆv · p)ˆv + cos2θp −sin2θ ˆv × p

and the only thing that has changed from qpq−1 is the sign of the cross-product
term, which reverses the direction of its vector. However, we must remember to
compensate for the angle-doubling by halving θ:
q−1pq =

0,(1 −cosθ)(ˆv · p)ˆv + cosθp −sinθ ˆv × p

.
(7.14)
Let’s see what happens when we employ (7.14) to rotate p = 2i, 90° about the
quaternion’s vector ˆv = (1/
√
2)i + (1/
√
2)k:
q−1pq =

0, 2
√
2
 1
√
2
i + 1
√
2
k
	
−
√
2j

=

0,i −
√
2j + k

which has rotated p clockwise 90° about the quaternion’s vector. Therefore,
the rotor qpq−1 rotates a vector counter-clockwise, and q−1pq rotates a vector

7.4
Quaternions in Matrix Form
101
Fig. 7.6 The point P (0,1,1)
is rotated 90° to P ′(1,1,0)
about the y-axis
clockwise:
qpq−1 =

0,(1 −cosθ)(ˆv · p)ˆv + cosθp + sinθ ˆv × p

q−1pq =

0,(1 −cosθ)(ˆv · p)ˆv + cosθp −sinθ ˆv × p

.
Let’s compute another example. Consider the point P(0,1,1) in Fig. 7.6 which
is to be rotated 90° about the y-axis. We can see that the rotated point P ′ has the
coordinates (1,1,0) which we will conﬁrm algebraically. The point P is represented
by its position vector p in the pure quaternion
p = [0,p].
The axis of rotation is ˆv = j, and the vector to be rotated is p = j + k. Therefore,
qpq−1 =

0,(1 −cosθ)(ˆv · p)ˆv + cosθp + sinθ ˆv × p

=

0,j · (j + k)j + j × (j + k)

= [0,i + j]
and conﬁrms that P is indeed rotated to (1,1,0).
Now let’s explore how this product is represented in matrix form.
7.4 Quaternions in Matrix Form
Having discovered a vector equation to represent the triple qpq−1, let’s continue and
convert it into a matrix. We will explore two methods: the ﬁrst is a simple vectorial
method which translates the vector equation representing qpq−1 directly into matrix
form. The second method uses matrix algebra to develop a rather cunning solution.
7.4.1 Vector Method
For the vector method it is convenient to describe the unit-norm quaternion as
q = [s,v]
= [s,xi + yj + zk]

102
7
Quaternions in Space
where
s2 + |v|2 = 1
and the pure quaternion as
p = [0,p]
= [0,xpi + ypj + zpk].
A simple way to compute qpq−1 is to use (7.11) and substitute |v| for λ:
qpq−1 =

0,2λ2(ˆv · p)ˆv +

s2 −λ2
p + 2λsˆv × p

=

0,2|v|2(ˆv · p)ˆv +

s2 −|v|2
p + 2|v|sˆv × p

.
Next, we substitute v for |v|ˆv:
qpq−1 =

0,2(v · p)v +

s2 −|v|2
p + 2sv × p

.
Finally, as we are working with unit-norm quaternions to prevent scaling
s2 + |v|2 = 1
and
s2 −|v|2 = 2s2 −1
therefore,
qpq−1 =

0,2(v · p)v +

2s2 −1

p + 2sv × p

.
If we let p′ = qpq−1, which is a pure quaternion, we have
p′ = qpq−1
= [0,p′]
=

0,2(v · p)v +

2s2 −1

p + 2sv × p

p′ = 2(v · p)v +

2s2 −1

p + 2sv × p.
We are only interested in the rotated vector p′ comprising the three terms 2(v · p)v,
(2s2 −1)p and 2sv × p, which can be represented by three individual matrices and
summed together.
2(v · p)v = 2(xxp + yyp + zzp)(xi + yj + zk)
=
⎡
⎣
2x2
2xy
2xz
2xy
2y2
2yz
2xz
2yz
2z2
⎤
⎦
⎡
⎣
xp
yp
zp
⎤
⎦

2s2 −1

p =

2s2 −1

xpi +

2s2 −1

ypj +

2s2 −1

zpk
=
⎡
⎣
2s2 −1
0
0
0
2s2 −1
0
0
0
2s2 −1
⎤
⎦
⎡
⎣
xp
yp
zp
⎤
⎦

7.4
Quaternions in Matrix Form
103
2sv × p = 2s

(yzp −zyp)i + (zxp −xzp)j + (xyp −yxp)k

=
⎡
⎣
0
−2sz
2sy
2sz
0
−2sx
−2sy
2sx
0
⎤
⎦
⎡
⎣
xp
yp
zp
⎤
⎦.
Adding these matrices together:
p′ =
⎡
⎣
2(s2 + x2) −1
2(xy −sz)
2(xz + sy)
2(xy + sz)
2(s2 + y2) −1
2(yz −sx)
2(xz −sy)
2(yz + sx)
2(s2 + z2) −1
⎤
⎦
⎡
⎣
xp
yp
zp
⎤
⎦
(7.15)
or
p′ =
⎡
⎣
1 −2(y2 + z2)
2(xy −sz)
2(xz + sy)
2(xy + sz)
1 −2(x2 + z2)
2(yz −sx)
2(xz −sy)
2(yz + sx)
1 −2(x2 + y2)
⎤
⎦
⎡
⎣
xp
yp
zp
⎤
⎦
(7.16)
where
[0,p′] = qpq−1.
Now let’s reverse the product. To compute the vector part of q−1pq all that we have
to do is reverse the sign of 2sv × p:
p′ =
⎡
⎣
2(s2 + x2) −1
2(xy + sz)
2(xz −sy)
2(xy −sz)
2(s2 + y2) −1
2(yz + sx)
2(xz + sy)
2(yz −sx)
2(s2 + z2) −1
⎤
⎦
⎡
⎣
xp
yp
zp
⎤
⎦
(7.17)
or
p′ =
⎡
⎣
1 −2(y2 + z2)
2(xy + sz)
2(xz −sy)
2(xy −sz)
1 −2(x2 + z2)
2(yz + sx)
2(xz + sy)
2(yz −sx)
1 −2(x2 + y2)
⎤
⎦
⎡
⎣
xp
yp
zp
⎤
⎦
(7.18)
where
[0,p′] = q−1pq.
Observe that (7.17) is the transpose of (7.15), and (7.18) is the transpose of (7.16).
7.4.2 Matrix Method
The second method to derive (7.13) employs the matrix representing a quaternion
product (5.14):
qa = [sa,xai + yaj + zak]
qb = [sb,xbi + ybj + zbk]
and their product is

104
7
Quaternions in Space
qaqb = [sa,xai + yaj + zak][sb,xbi + ybj + zbk]
=

sasb −xaxb −yayb −zazb,
sa(xbi + ybj + zbk)
+ sb(xai + yaj + zak)
+ (yazb −ybza)i + (xbza −xazb)j + (xayb −xbya)k

=

sasb −xaxb −yayb −zazb,
(saxb + sbxa + yazb −ybza)i
+ (sayb + sbya + xbza −xazb)j
+ (sazb + sbza + xayb −xbya)k

=
⎡
⎢⎢⎣
sa
−xa
−ya
−za
xa
sa
−za
ya
ya
za
sa
−xa
za
−ya
xa
sa
⎤
⎥⎥⎦
⎡
⎢⎢⎣
sb
xb
yb
zb
⎤
⎥⎥⎦= Aqb.
At this stage we have quaternion qa represented by matrix A, and quaternion qb
represented as a column vector. Now let’s reverse the scenario without altering the
result by making qb the matrix and qa the column vector:
qaqb =
⎡
⎢⎢⎣
sb
−xb
−yb
−zb
xb
sb
zb
−yb
yb
−zb
sb
xb
zb
yb
−xb
sb
⎤
⎥⎥⎦
⎡
⎢⎢⎣
sa
xa
ya
za
⎤
⎥⎥⎦= Bqa.
So now we have two ways of computing qaqb and we need a way of distinguish-
ing between the two matrices. Let L be the matrix that preserves the left-to-right
quaternion sequence, and R be the matrix that reverses the sequence to right-to-left:
qaqb = L(qa)qb =
⎡
⎢⎢⎣
sa
−xa
−ya
−za
xa
sa
−za
ya
ya
za
sa
−xa
za
−ya
xa
sa
⎤
⎥⎥⎦
⎡
⎢⎢⎣
sb
xb
yb
zb
⎤
⎥⎥⎦
qaqb = R(qb)qa =
⎡
⎢⎢⎣
sb
−xb
−yb
−zb
xb
sb
zb
−yb
yb
−zb
sb
xb
zb
yb
−xb
sb
⎤
⎥⎥⎦
⎡
⎢⎢⎣
sa
xa
ya
za
⎤
⎥⎥⎦.
Remember that L(qa)qb = R(qb)qa, as this is central to understanding the next
stage. Furthermore, don’t be surprised if you can’t follow the argument in the ﬁrst
reading. It took the author many hours of anguish trying to decipher the original
algorithm, and this explanation has been expanded to ensure that you do not suffer
the same experience!
First, let’s employ the matrices L and R to rearrange the quaternion product
qaqcqb to qaqbqc, i.e. move qc from the middle to the right-hand-side. We start with

7.4
Quaternions in Matrix Form
105
the quaternion product qaqcqb and divide it into two parts, qaqc and qb. We can do
this because quaternion algebra is associative:
qaqcqb = (qaqc)qb.
We have already demonstrated above that the product qaqc can be replaced by
L(qa)qc:
qaqcqb = L(qa)qcqb.
We now have another two parts: L(qa)qc and qb which can be reversed using R
without disturbing the result:
qaqcqb = L(qa)qcqb = R(qb)L(qa)qc
which has achieved our objective to move qc to the right-hand-side. But the most
important result is that the matrices R(qb) and L(qa) can be multiplied together to
form a single matrix, which operates on qc.
Now let’s repeat the same process to rearrange the product qpq−1. The objective
is to move p from the middle of q and q−1, to the right-hand-side. The reason for
doing this is to bring together q and q−1 in the form of two matrices, which can be
multiplied together into a single matrix.
We start with the quaternion product qpq−1 and divide it into two parts, qp
and q−1:
qpq−1 = (qp)q−1.
The product qp can be replaced by L(q)p:
qpq−1 = L(q)pq−1.
We now have another two parts: L(q)p and q−1 which can be reversed using R
without disturbing the result:
qpq−1 = L(q)pq−1 = R

q−1
L(q)p
which has achieved our objective to move p to the right-hand-side.
The next step is to compute L(q) and R(q−1) using q = [s,xi + yj + zk].
L(q) is easy as it is the same as L(qa):
L(q) =
⎡
⎢⎢⎣
s
−x
−y
−z
x
s
−z
y
y
z
s
−x
z
−y
x
s
⎤
⎥⎥⎦.
R(q−1) is also easy, but requires converting qb in the original deﬁnition into q−1
which is effected by reversing the signs of the vector components:
R

q−1
=
⎡
⎢⎢⎣
s
x
y
z
−x
s
−z
y
−y
z
s
−x
−z
−y
x
s
⎤
⎥⎥⎦.

106
7
Quaternions in Space
Fig. 7.7 The point P (0,1,1)
is rotated 90° to P ′(1,1,0)
about the y-axis
So now we can write
qpq−1 = R

q−1
L(q)p
=
⎡
⎢⎢⎣
s
x
y
z
−x
s
−z
y
−y
z
s
−x
−z
−y
x
s
⎤
⎥⎥⎦
⎡
⎢⎢⎣
s
−x
−y
−z
x
s
−z
y
y
z
s
−x
z
−y
x
s
⎤
⎥⎥⎦
⎡
⎢⎢⎣
0
xp
yp
zp
⎤
⎥⎥⎦
=
⎡
⎢⎢⎣
1
0
0
0
0
1 −2(y2 + z2)
2(xy −sz)
2(xz + sy)
0
2(xy + sz)
1 −2(x2 + z2)
2(yz −sx)
0
2(xz −sy)
2(yz + sx)
1 −2(x2 + y2)
⎤
⎥⎥⎦
⎡
⎢⎢⎣
0
xp
yp
zp
⎤
⎥⎥⎦.
If we ignore the ﬁrst row and column, the matrix computes p′:
p′ =
⎡
⎢⎣
1 −2(y2 + z2)
2(xy −sz)
2(xz + sy)
2(xy + sz)
1 −2(x2 + z2)
2(yz −sx)
2(xz −sy)
2(yz + sx)
1 −2(x2 + y2)
⎤
⎥⎦
⎡
⎣
xp
yp
zp
⎤
⎦
which is identical to (7.16)!
7.4.3 Geometric Veriﬁcation
Let’s illustrate the action of (7.15) by rotating the point (0,1,1), 90° about the y-
axis, as shown in Fig. 7.7. The quaternion takes the form
q =

cos 1
2θ,sin 1
2θ ˆv

which means that θ = 90° and ˆv = j, therefore,
q = [cos45°,sin45°ˆj].
Consequently,
s =
√
2
2 ,
x = 0,
y =
√
2
2 ,
z = 0.

7.4
Quaternions in Matrix Form
107
Substituting these values in (7.15) gives
p′ =
⎡
⎢⎣
2(s2 + x2) −1
2(xy −sz)
2(xz + sy)
2(xy + sz)
2(s2 + y2) −1
2(yz −sx)
2(xz −sy)
2(yz + sx)
2(s2 + z2) −1
⎤
⎥⎦
⎡
⎣
xp
yp
zp
⎤
⎦
⎡
⎣
1
1
0
⎤
⎦=
⎡
⎣
0
0
1
0
1
0
−1
0
0
⎤
⎦
⎡
⎣
0
1
1
⎤
⎦
where (0,1,1) is rotated to (1,1,0), which is correct.
So now we have a transform that rotates a point about an arbitrary axis intersect-
ing the origin without the problems of gimbal lock associated with Euler transforms.
Before moving on, let’s evaluate one more example. Let’s perform a 180° ro-
tation about a vector v = i + k passing through the origin. To begin with, we will
deliberately forget to convert the vector into a unit vector, just to see what happens
to the ﬁnal matrix. The quaternion takes the form
q =

cos 1
2θ,sin 1
2θ ˆv

but we will use v as speciﬁed. Therefore, with θ = 180°
s = 0,
x = 1,
y = 0,
z = 1.
Substituting these values in (7.15) gives
p′ =
⎡
⎢⎣
2(s2 + x2) −1
2(xy −sz)
2(xz + sy)
2(xy + sz)
2(s2 + y2) −1
2(yz −sx)
2(xz −sy)
2(yz + sx)
2(s2 + z2) −1
⎤
⎥⎦
⎡
⎣
xp
yp
zp
⎤
⎦
=
⎡
⎣
1
0
2
0
−1
0
2
0
1
⎤
⎦
⎡
⎣
1
0
0
⎤
⎦
which looks nothing like a rotation matrix, and reminds us how important it is to
have a unit vector to represent the axis. Let’s repeat these calculations normalising
the vector to ˆv =
1
√
2i +
1
√
2k:
s = 0,
x = 1
√
2
,
y = 0,
z = 1
√
2
.
Substituting these values in (7.15) gives
p′ =
⎡
⎢⎣
2(s2 + x2) −1
2(xy −sz)
2(xz + sy)
2(xy + sz)
2(s2 + y2) −1
2(yz −sx)
2(xz −sy)
2(yz + sx)
2(s2 + z2) −1
⎤
⎥⎦
⎡
⎣
xp
yp
zp
⎤
⎦
⎡
⎣
0
0
1
⎤
⎦=
⎡
⎣
0
0
1
0
−1
0
1
0
0
⎤
⎦
⎡
⎣
1
0
0
⎤
⎦

108
7
Quaternions in Space
Fig. 7.8 The point (1,0,0) is
rotated 180° about the vector
ˆv to (0,0,1)
which not only looks like a rotation matrix, but has a determinant of 1 and rotates
the point (1,0,0) to (0,0,1) as shown in Fig. 7.8.
7.5 Multiple Rotations
Say a vector or frame of reference is subjected to two rotations speciﬁed by q1
followed by q2. There is a temptation to convert both quaternions to their respective
matrix and multiply the matrices together. However, this not the most efﬁcient way
of combining the rotations. It is best to accumulate the rotations as quaternions and
then convert to matrix notation, if required.
To illustrate this, consider the pure quaternion p subjected to the ﬁrst quaternion
q1:
q1pq−1
1
followed by a second quaternion q2
q2

q1pq−1
1

q−1
2
which can be expressed as
(q2q1)p(q2q1)−1.
Extra quaternions can be added accordingly. Let’s illustrate this with two examples.
To keep things simple, the ﬁrst quaternion q1 rotates 30° about the y-axis:
q1 = [cos15°,sin15°j].
The second quaternion q2 rotates 60° also about the y-axis:
q2 = [cos30°,sin30°j].
Together, the two quaternions rotate 90° about the y-axis. To accumulate these ro-
tations, we multiply them together:
q1q2 = [cos15°,sin15°j][cos30°,sin30°j]
= [cos15°cos30° −sin15°sin30°,cos15°sin30°j + cos30°sin15°j]
=
√
2
2 ,
√
2
2 j


7.5
Multiple Rotations
109
which is a quaternion that rotates 90° about the y-axis. Using the matrix (7.15) we
have
p′ =
⎡
⎢⎣
2(s2 + x2) −1
2(xy −sz)
2(xz + sy)
2(xy + sz)
2(s2 + y2) −1
2(yz −sx)
2(xz −sy)
2(yz + sx)
2(s2 + z2) −1
⎤
⎥⎦
⎡
⎣
xp
yp
zp
⎤
⎦
=
⎡
⎣
0
0
1
0
1
0
−1
0
0
⎤
⎦
⎡
⎣
xp
yp
zp
⎤
⎦
which rotates points about the y-axis by 90°.
For a second example, let’s just evaluate the quaternions. The ﬁrst quaternion q1
rotates 90° about the x-axis, and q2 rotates 90° about the y-axis:
q1 =
√
2
2 ,
√
2
2 i

q2 =
√
2
2 ,
√
2
2 j

p = [0,i + j]
therefore,
q2q1 =
√
2
2 ,
√
2
2 j
√
2
2 ,
√
2
2 i

=
1
2,
√
2
2
√
2
2 i +
√
2
2
√
2
2 j −1
2k

=
1
2, 1
2i + 1
2j −1
2k

(q2q1)−1 =
1
2,−1
2i −1
2j + 1
2k

(q2q1)p =
1
2, 1
2i + 1
2j −1
2k

[0,i + j]
=

−1
2 −1
2, 1
2(i + j) + 1
2i −1
2j

= [−1,i]
(q2q1)p(q2q1)−1 = [−1,i]
1
2,−1
2i −1
2j + 1
2k

=

−1
2 + 1
2, 1
2i + 1
2j −1
2k + 1
2i −1
2j −1
2k

= [0,i −k].
Thus the point (1,1,0) is rotated to (1,0,−1), which is correct.

110
7
Quaternions in Space
7.6 Eigenvalue and Eigenvector
Although there is no doubt that (7.15) is a rotation matrix, we can secure further
evidence by calculating its eigenvalue and eigenvector. The eigenvalue should be θ
where
Tr

qpq−1
= 1 + 2cosθ
and Tr is the trace function, which is the sum of the diagonal elements of a matrix.
The trace of (7.15) is
Tr

qpq−1
= 2

s2 + x2
−1 + 2

s2 + y2
−1 + 2

s2 + z2
−1
= 4s2 + 2

s2 + x2 + y2 + z2
−3
= 4s2 −1
= 4cos2 1
2θ −1
= 4cosθ + 4sin2 1
2θ −1
= 4cosθ + 2 −2cosθ −1
= 1 + 2cosθ
and
cosθ = 1
2

Tr

qpq−1
−1

.
To compute the eigenvector of (7.15) we use the three equations derived in
Appendix:
xv = (a22 −1)(a33 −1) −a23a32
yv = (a33 −1)(a11 −1) −a31a13
zv = (a11 −1)(a22 −1) −a12a21.
Therefore,
xv =

2

s2 + y2
−2

2

s2 + z2
−2

−2(yz −sx)2(yz + sx)
= 4

s2 + y2 −1

s2 + z2 −1

−4

y2z2 −s2x2
= 4

x2 + z2
x2 + y2
−y2z2 + s2x2
= 4

x4 + x2y2 + x2z2 + z2y2 −y2z2 + s2x2
= 4x2
s2 + x2 + y2 + z2
= 4x2.
Similarly, yv = 4y2 and zv = 4z2, which conﬁrm that the eigenvector has compo-
nents associated with the quaternion’s vector. The square terms should be no sur-
prise, as the triple qpq−1 includes the product of three quaternions.

7.7
Rotating About an Off-Set Axis
111
Let’s test these formulae with the matrix associated with Fig. 7.8, which rotates
a point 180° about the vector ˆv =
1
√
2i +
1
√
2k:
M =
⎡
⎣
a11
a12
a13
a21
a22
a23
a31
a32
a33
⎤
⎦=
⎡
⎣
0
0
1
0
−1
0
1
0
0
⎤
⎦
therefore,
xv = −2 × −1 −0 = 2
yv = −1 × −1 −1 × 1 = 0
zv = −1 × −2 −0 = 2
which conﬁrms that the eigenvector is 2i + 2k.
Next, Tr(M) = −1, therefore
cosθ = 1
2

Tr

qpq−1
−1

= 1
2

(−1) −1

= −1
θ = ±180°
which agrees with the previous results.
7.7 Rotating About an Off-Set Axis
Now that we have a matrix to represent a quaternion rotor, we can employ it to
resolve problems such as rotating a point about an off-set axis using the same tech-
niques associated with normal rotation transforms. For example, in Chap. 6 we used
the following notation
⎡
⎢⎢⎣
x′
y′
z′
1
⎤
⎥⎥⎦= Ttx,0,tzRβ,yT−tx,0,−tz
⎡
⎢⎢⎣
x
y
z
1
⎤
⎥⎥⎦
to rotate a point about a ﬁxed axis parallel with the y-axis. Therefore, by substituting
the matrix qpq−1 for Rβ,y we have
⎡
⎢⎢⎣
x′
y′
z′
1
⎤
⎥⎥⎦= Ttx,0,tz

qpq−1
T−tx,0,−tz
⎡
⎢⎢⎣
x
y
z
1
⎤
⎥⎥⎦.
Let’s test this by rotating our unit cube 90° about the vertical axis intersecting ver-
tices 4 and 6 as shown in Fig. 7.9.

112
7
Quaternions in Space
Fig. 7.9 The cube is rotated 90° about the axis intersecting vertices 4 and 6
The unit-norm quaternion to achieve this is
q = [cos45°,sin45°j]
with the pure quaternion
p = [0,p].
Consequently,
s =
√
2
2 ,
x = 0,
y =
√
2
2 ,
z = 0
and using (7.15) in a homogeneous form we have
p′ =
⎡
⎢⎢⎢⎣
2(s2 + x2) −1
2(xy −sz)
2(xz + sy)
0
2(xy + sz)
2(s2 + y2) −1
2(yz −sx)
0
2(xz −sy)
2(yz + sx)
2(s2 + z2) −1
0
0
0
0
1
⎤
⎥⎥⎥⎦
⎡
⎢⎢⎣
xp
yp
zp
1
⎤
⎥⎥⎦
=
⎡
⎢⎢⎣
0
0
1
0
0
1
0
0
−1
0
0
0
0
0
0
1
⎤
⎥⎥⎦
⎡
⎢⎢⎣
xp
yp
zp
1
⎤
⎥⎥⎦.
The other two matrices are
T−tx,0,0 =
⎡
⎢⎢⎣
1
0
0
−1
0
1
0
0
0
0
1
0
0
0
0
1
⎤
⎥⎥⎦
Ttx,0,0 =
⎡
⎢⎢⎣
1
0
0
1
0
1
0
0
0
0
1
0
0
0
0
1
⎤
⎥⎥⎦.
Multiplying these three matrices together creates

7.8
Frames of Reference
113
⎡
⎢⎢⎣
0
0
1
1
0
1
0
0
−1
0
0
1
0
0
0
1
⎤
⎥⎥⎦.
(7.19)
Although not mathematically correct, the following statement shows the matrix
(7.19) and the array of coordinates representing a unit cube, followed by the rotated
cube’s coordinates.
⎡
⎢⎢⎣
0
0
1
1
0
1
0
0
−1
0
0
1
0
0
0
1
⎤
⎥⎥⎦
⎡
⎢⎢⎣
0
0
0
0
1
1
1
1
0
0
1
1
0
0
1
1
0
1
0
1
0
1
0
1
1
1
1
1
1
1
1
1
⎤
⎥⎥⎦
=
⎡
⎢⎢⎣
1
2
1
2
1
2
1
2
0
0
1
1
0
0
1
1
1
1
1
1
0
0
0
0
1
1
1
1
1
1
1
1
⎤
⎥⎥⎦.
These coordinates are conﬁrmed by Fig. 7.9.
7.8 Frames of Reference
The product qpq−1 is used for rotating points about the vector associated with the
quaternion q, whereas the triple q−1pq can be used for rotating points about the
same vector in the opposite direction. But this reverse rotation is also equivalent
to a change of frame of reference. To demonstrate this, consider the problem of
rotating the frame of reference 180° about i + k as shown in Fig. 7.10. The unit-
norm quaternion for such a rotation is
q =

cos90°,sin90°
 1
√
2
i + 1
√
2
k
	
=

0,
√
2
2 i +
√
2
2 k

.
Consequently,
s = 0,
x =
√
2
2 ,
y = 0,
z =
√
2
2 .
Substituting these values in (7.17) we obtain
q−1pq =
⎡
⎢⎣
2(s2 + x2) −1
2(xy + sz)
2(xz −sy)
2(xy −sz)
2(s2 + y2) −1
2(yz + sx)
2(xz + sy)
2(yz −sx)
2(s2 + z2) −1
⎤
⎥⎦
⎡
⎣
xp
yp
zp
⎤
⎦
=
⎡
⎣
0
0
1
0
−1
0
1
0
0
⎤
⎦
⎡
⎣
xp
yp
zp
⎤
⎦

114
7
Quaternions in Space
Fig. 7.10 The frame is rotated 180° about the vector i + k
which, if used to process the coordinates of our unit cube, produces
⎡
⎣
0
0
1
0
−1
0
1
0
0
⎤
⎦
⎡
⎣
0
0
0
0
1
1
1
1
0
0
1
1
0
0
1
1
0
1
0
1
0
1
0
1
⎤
⎦
=
⎡
⎣
0
1
0
1
0
1
0
1
0
0
−1
−1
0
0
−1
−1
0
0
0
0
1
1
1
1
⎤
⎦.
This scenario is shown in Fig. 7.10.
7.9 Interpolating Quaternions
Like vectors, quaternions can be interpolated to compute an in-between quaternion.
However, whereas two interpolated vectors results in a third vector that is readily
visualised, two interpolated quaternions results in a third quaternion that acts as a
rotor, and is not immediately visualised.
The spherical interpolant for vectors is
v = sin(1 −t)θ
sinθ
v1 + sintθ
sinθ v2
where θ is the angle between the vectors, and requires no modiﬁcation for quater-
nions:
q = sin(1 −t)θ
sinθ
q1 + sintθ
sinθ q2.
(7.20)
So, given
q1 = [s1,x1i + y1j + z1k]
q2 = [s2,x2i + y2j + z2k]
θ is obtained by taking the 4D dot product of q1 and q2:

7.9
Interpolating Quaternions
115
Fig. 7.11 The point (0,1,1)
is rotated 90° about the vector
v1 to (1,1,0)
Fig. 7.12 The point (0,1,1)
is rotated 90° about the vector
v2 to (0,−1,1)
cosθ = q1 · q2
|q1||q2|
= s1s2 + x1x2 + y1y2 + z1z2
|q1||q2|
and if we are working with unit-norm quaternions, then
cosθ = s1s2 + x1x2 + y1y2 + z1z2.
(7.21)
Let’s use (7.20) in a scenario with two simple unit-norm quaternions.
Figure 7.11 shows one such scenario where the point (0,1,1) is rotated 90° about
v1, the axis of q1. Figure 7.12 shows another scenario where the same point (0,1,1)
is rotated 90° about v2, the axis of q2. The quaternions are
q1 = [cos45°,sin45°j] =
√
2
2 ,
√
2
2 j

q2 = [cos45°,sin45°i] =
√
2
2 ,
√
2
2 i

.
Therefore, using (7.21)
cosθ =
√
2
2
√
2
2 = 0.5
θ = 60°.
Before proceeding, let’s compute the matrices for the two quaternion products.

116
7
Quaternions in Space
For q1:
s =
√
2
2 ,
x = 0,
y =
√
2
2 ,
z = 0
which when substituted in (7.15) gives
p′
1 =
⎡
⎢⎣
2(s2 + x2) −1
2(xy −sz)
2(xz + sy)
2(xy + sz)
2(s2 + y2) −1
2(yz −sx)
2(xz −sy)
2(yz + sx)
2(s2 + z2) −1
⎤
⎥⎦
⎡
⎣
xp
yp
zp
⎤
⎦
=
⎡
⎣
0
0
1
0
1
0
−1
0
0
⎤
⎦
⎡
⎣
xp
yp
zp
⎤
⎦.
(7.22)
Substituting the coordinates (0,1,1) in (7.22) gives
⎡
⎣
1
1
0
⎤
⎦=
⎡
⎣
0
0
1
0
1
0
−1
0
0
⎤
⎦
⎡
⎣
0
1
1
⎤
⎦
which is correct.
For q2:
s =
√
2
2 ,
x =
√
2
2 ,
y = 0,
z = 0
which when substituted in (7.15) gives
p′
2 =
⎡
⎢⎣
2(s2 + x2) −1
2(xy −sz)
2(xz + sy)
2(xy + sz)
2(s2 + y2) −1
2(yz −sx)
2(xz −sy)
2(yz + sx)
2(s2 + z2) −1
⎤
⎥⎦
⎡
⎣
xp
yp
zp
⎤
⎦
=
⎡
⎣
1
0
0
0
0
−1
0
1
0
⎤
⎦
⎡
⎣
xp
yp
zp
⎤
⎦.
(7.23)
Substituting the coordinates (0,1,1) in (7.23) gives
⎡
⎣
0
−1
1
⎤
⎦=
⎡
⎣
1
0
0
0
0
−1
0
1
0
⎤
⎦
⎡
⎣
0
1
1
⎤
⎦
which is also correct.
Using (7.20) with t = 0.5 computes a mid-way position for an interpolated
quaternion, with its vector at 45° between the x- and y-axes, as shown in Fig. 7.13.
We already know that θ = 60°, therefore sinθ =
√
3/2:
q = sin(1 −t)θ
sinθ
q1 + sintθ
sinθ q2
= sin 1
260°
sin60°
√
2
2 ,
√
2
2 j

+ sin 1
260°
sin60°
√
2
2 ,
√
2
2 i


7.9
Interpolating Quaternions
117
Fig. 7.13 The point (0,1,1)
is rotated 90° about the vector
v to (1,0,1)
= 1
√
3
√
2
2 ,
√
2
2 j

+ 1
√
3
√
2
2 ,
√
2
2 i

=
√
2
√
3
, 1
√
6
i + 1
√
6
j

where
s =
√
2
√
3
,
x = 1
√
6
,
y = 1
√
6
,
z = 0
which when substituted in (7.15) gives
p′ =
⎡
⎢⎣
2(s2 + x2) −1
2(xy −sz)
2(xz + sy)
2(xy + sz)
2(s2 + y2) −1
2(yz −sx)
2(xz −sy)
2(yz + sx)
2(s2 + z2) −1
⎤
⎥⎦
⎡
⎣
xp
yp
zp
⎤
⎦
=
⎡
⎢⎣
2
3
1
3
2
3
1
3
2
3
−2
3
−2
3
2
3
1
3
⎤
⎥⎦
⎡
⎣
xp
yp
zp
⎤
⎦.
(7.24)
Substituting the coordinates (0,1,1) in (7.24) gives
⎡
⎣
1
0
1
⎤
⎦=
⎡
⎢⎣
2
3
1
3
2
3
1
3
2
3
−2
3
−2
3
2
3
1
3
⎤
⎥⎦
⎡
⎣
0
1
1
⎤
⎦
(7.25)
which gives the point (1,0,1).
One of the reasons for using a spherical interpolant is that it linearly interpolates
the angle between the two unit-norm quaternions, which creates a constant-angular
velocity between them. However, one of the problems with visualising quaternions
is that they reside in a four-dimensional space and create a hyper-sphere with a ra-
dius equal to the quaternion’s norm. With our 3D brains, this is difﬁcult to visualise.
Nevertheless, we can convince ourselves into thinking we see what is going on with
a simple sketch, as shown in Fig. 7.14, where we see part of the hyper-sphere and
two quaternions q1 and q2. In this example, the angle φ is a constant angle between
two values of the interpolant t. The spherical interpolant also ensures that the norm

118
7
Quaternions in Space
Fig. 7.14 Spherical
interpolation between q1 and
q2
Fig. 7.15 Sketch showing
the actions of the interpolated
quaternions
of the interpolated quaternion remains constant at unity, preventing any unwanted
scaling.
Figure 7.15 provides another sketch to help visualise what is going on. For exam-
ple, when t = 0, the interpolated quaternion is q1 which rotates the point (0,1,1) to
(1,1,0), and when t = 1, the interpolated quaternion is q2 which rotates the point
(0,1,1) to (0,−1,1). When t = 0.5, the interpolated quaternion rotates the point
(0,1,1) to (1,0,1) as computed above. Two other curves show what happens for
t = 0.25 and t = 0.75.
A natural consequence of the interpolant is that the angle of rotation is 90° for
t = 0 and t = 1, but for t = 0.5 the angle of rotation (eigenvalue) is approximately
70.5°. Corresponding angles arise for other values of t.
7.10 Converting a Rotation Matrix to a Quaternion
The matrix transform equivalent to qpq−1 is
qpq−1 =
⎡
⎢⎣
2(s2 + x2) −1
2(xy −sz)
2(xz + sy)
2(xy + sz)
2(s2 + y2) −1
2(yz −sx)
2(xz −sy)
2(yz + sx)
2(s2 + z2) −1
⎤
⎥⎦
⎡
⎣
xp
yp
zp
⎤
⎦
=
⎡
⎣
a11
a12
a13
a21
a22
a23
a31
a32
a33
⎤
⎦
⎡
⎣
xp
yp
zp
⎤
⎦.

7.10
Converting a Rotation Matrix to a Quaternion
119
Inspection of the matrix shows that by combining various elements we can isolate
the terms of a quaternion s, x, y, z. For example, by adding the terms a11 +a22 +a33
we obtain
a11 + a22 + a33 =

2

s2 + x2
−1

+

2

s2 + y2
−1

+

2

s2 + z2
−1

= 6s2 + 2

x2 + y2 + z2
−3
= 4s2 −1
therefore,
s = ±1
2

1 + a11 + a22 + a33.
To isolate x, y and z we employ
x = 1
4s (a32 −a23)
y = 1
4s (a13 −a31)
z = 1
4s (a21 −a12).
We can conﬁrm their correctness using the matrix (7.25):
⎡
⎣
a11
a12
a13
a21
a22
a23
a31
a32
a33
⎤
⎦=
⎡
⎢⎣
2
3
1
3
2
3
1
3
2
3
−2
3
−2
3
2
3
1
3
⎤
⎥⎦
s = ±1
2

1 + a11 + a22 + a33 = ±1
2

1 + 2
3 + 2
3 + 1
3 =
√
2
√
3
x = 1
4s (a32 −a23) =
√
3
4
√
2
2
3 + 2
3
	
= 1
√
6
y = 1
4s (a13 −a31) =
√
3
4
√
2
2
3 + 2
3
	
= 1
√
6
z = 1
4s (a21 −a12) =
√
3
4
√
2
1
3 −1
3
	
= 0
which agree with the original values.
Say, for example, the value of s had been close to zero, this could have made the
values of x, y, z unreliable. Consequently, other combinations are available:
x = ±1
2

1 + a11 −a22 −a33
y = 1
4x (a12 + a21)
z = 1
4x (a13 + a31)

120
7
Quaternions in Space
s = 1
4x (a32 −a23)
y = ±1
2

1 −a11 + a22 −a33
x = 1
4y (a12 + a21)
z = 1
4y (a23 + a32)
s = 1
4y (a13 −a31)
z = ±1
2

1 −a11 −a22 + a33
x = 1
4z(a13 + a31)
y = 1
4z(a23 + a32)
s = 1
4z(a21 −a12).
7.11 Euler Angles to Quaternion
In Chap. 6 we discovered that the rotation transforms Rα,x, Rβ,y and Rγ,z can be
combined to create twelve triple combinations to represent a composite rotation.
Now let’s see how such a transform is represented by a quaternion.
To demonstrate the technique we must choose one of the twelve combinations,
then the same technique can be used to convert other combinations. For example,
let’s choose the sequence Rγ,zRβ,yRα,x where the equivalent quaternions are
qx =

cos 1
2α,sin 1
2αi

qy =

cos 1
2β,sin 1
2βj

qz =

cos 1
2γ,sin 1
2γ k

and
q = qzqyqx.
(7.26)
Expanding (7.26):

7.11
Euler Angles to Quaternion
121
q =

cos 1
2γ,sin 1
2γ k

cos 1
2β,sin 1
2βj

cos 1
2α,sin 1
2αi

=

cos 1
2γ cos 1
2β,
cos 1
2γ sin 1
2βj + cos 1
2β sin 1
2γ k −sin 1
2γ sin 1
2βi

cos 1
2α,sin 1
2αi

=

cos 1
2γ cos 1
2β cos 1
2α + sin 1
2γ sin 1
2β sin 1
2α,
cos 1
2γ cos 1
2β sin 1
2αi + cos 1
2α cos 1
2γ sin 1
2βj + cos 1
2α cos 1
2β sin 1
2γ k
−cos 1
2α sin 1
2γ sin 1
2βi −cos 1
2γ sin 1
2β sin 1
2αk + cos 1
2β sin 1
2γ sin 1
2αj

=

cos 1
2γ cos 1
2β cos 1
2α + sin 1
2γ sin 1
2β sin 1
2α,

cos 1
2γ cos 1
2β sin 1
2α −cos 1
2α sin 1
2γ sin 1
2β
	
i

cos 1
2α cos 1
2γ sin 1
2β + cos 1
2β sin 1
2γ sin 1
2α
	
j

cos 1
2α cos 1
2β sin 1
2γ −cos 1
2γ sin 1
2β sin 1
2α
	
k

.
Now let’s place the angles in a consistent sequence:
s = cos 1
2γ cos 1
2β cos 1
2α + sin 1
2γ sin 1
2β sin 1
2α
xq = cos 1
2γ cos 1
2β sin 1
2α −sin 1
2γ sin 1
2β cos 1
2α
yq = cos 1
2γ sin 1
2β cos 1
2α + sin 1
2γ cos 1
2β sin 1
2α
zq = sin 1
2γ cos 1
2β cos 1
2α −cos 1
2γ sin 1
2β sin 1
2α
where
q = [s,xqi + yqj + zqk].
(7.27)
Let’s test (7.27). We start with the three rotation transforms
Rα,x =
⎡
⎣
1
0
0
0
cosα
−sinα
0
sinα
cosα
⎤
⎦
Rβ,y =
⎡
⎣
cosβ
0
sinβ
0
1
0
−sinβ
0
cosβ
⎤
⎦

122
7
Quaternions in Space
Rγ,z =
⎡
⎣
cosγ
−sinγ
0
sinγ
cosγ
0
0
0
1
⎤
⎦.
Then
Rγ,zRβ,yRα,x
=
cosγ cosβ
−sinγ cosα + cosγ sinβ sinα
sinγ sinα + cosγ sinβ cosα
sinγ cosβ
cosγ cosα + sinγ sinβ sinα
−cosγ sinα + sinγ sinβ cosα
−sinβ
cosβ sinα
cosβ cosα

.
Let’s make α = β = γ = 90°, then
R90°,zR90°,yR90°,x =
⎡
⎣
0
0
1
0
1
0
−1
0
0
⎤
⎦
which rotates points 90° about the y-axis:
⎡
⎣
1
1
0
⎤
⎦=
⎡
⎣
0
0
1
0
1
0
−1
0
0
⎤
⎦
⎡
⎣
0
1
1
⎤
⎦.
Now let’s evaluate (7.27):
s = cos 1
2γ cos 1
2β cos 1
2α + sin 1
2γ sin 1
2β sin 1
2α
=
√
2
2
√
2
2
√
2
2 +
√
2
2
√
2
2
√
2
2
=
√
2
2
xq = cos 1
2γ cos 1
2β sin 1
2α −sin 1
2γ sin 1
2β cos 1
2α
= 0
yq = cos 1
2γ sin 1
2β cos 1
2α + sin 1
2γ cos 1
2β sin 1
2α
=
√
2
2
√
2
2
√
2
2 +
√
2
2
√
2
2
√
2
2
=
√
2
2
zq = sin 1
2γ cos 1
2β cos 1
2α −cos 1
2γ sin 1
2β sin 1
2α
= 0
and
q =
√
2
2 ,
√
2
2 j

which is a quaternion that also rotates points 90° about the y-axis.

7.12
Summary
123
7.12 Summary
This chapter has been the focal point of the book where unit-norm quaternions have
been used to rotate a vector about a quaternion’s vector. It would have been useful
if this could have been achieved by the simple product qp, like complex numbers.
But as we saw, this only works when the quaternion is orthogonal to the vector. The
product qpq−1—discovered by Hamilton and Cayley—works for all orientations
between a quaternion and a vector. It is also relatively easy to compute. We also saw
that the product can be represented as a matrix, which can be integrated with other
matrices.
Perhaps one of the most interesting features of quaternions that has emerged in
this chapter, is that their imaginary qualities are not required in any calculations,
because they are embedded within the algebra.
The spherical interpolant provides a clever way to dynamically change a quater-
nion’s axis and angle of rotation, but can be difﬁcult to visualise as an animated
sequence without access to a real-time display system.
The reverse product q−1pq reverses the angle of rotation, and is equivalent to
changing the sign of the rotation angle in qpq−1. Consequently, it can be used to
rotate a frame of reference in the same direction as qpq−1.
7.12.1 Summary of Operations
Rotating a point about a vector
q = [s,v]
s2 + |v|2 = 1
p = [0,p]
qpq−1 =

0,2(v · p)v +

2s2 −1

p + 2sv × p

q =

cos 1
2θ,sin 1
2θ ˆv

p = [0,p]
qpq−1 =

0,(1 −cosθ)(ˆv · p)ˆv + cosθp + sinθ ˆv × p

Rotating a frame about a vector
q−1pq =

0,(1 −cosθ)(ˆv · p)ˆv + cosθp −sinθ ˆv × p

Matrix for rotating a point about a vector
p′ =
⎡
⎢⎣
1 −2(y2 + z2)
2(xy −sz)
2(xz + sy)
2(xy + sz)
1 −2(x2 + z2)
2(yz −sx)
2(xz −sy)
2(yz + sx)
1 −2(x2 + y2)
⎤
⎥⎦
⎡
⎣
xp
yp
zp
⎤
⎦

124
7
Quaternions in Space
Matrix for rotating a frame about a vector
p′ =
⎡
⎢⎣
1 −2(y2 + z2)
2(xy + sz)
2(xz −sy)
2(xy −sz)
1 −2(x2 + z2)
2(yz + sx)
2(xz + sy)
2(yz −sx)
1 −2(x2 + y2)
⎤
⎥⎦
⎡
⎣
xp
yp
zp
⎤
⎦
Matrix for a quaternion product
q1q2 = L(q1)q2 =
⎡
⎢⎢⎣
s1
−x1
−y1
−z1
x1
s1
−z1
y1
y1
z1
s1
−x1
z1
−y1
x1
s1
⎤
⎥⎥⎦
⎡
⎢⎢⎣
s2
x2
y2
z2
⎤
⎥⎥⎦
q1q2 = R(q2)q1 =
⎡
⎢⎢⎣
s2
−x2
−y2
−z2
x2
s2
z2
−y2
y2
−z2
s2
x2
z2
y2
−x2
s2
⎤
⎥⎥⎦
⎡
⎢⎢⎣
s1
x1
y1
z1
⎤
⎥⎥⎦
Interpolating two quaternions
q = sin(1 −t)θ
sinθ
q1 + sintθ
sinθ q2
where
cosθ = q1 · q2
|q1||q2|
= s1s2 + x1x2 + y1y2 + z1z2
|q1||q2|
Quaternion from a rotation matrix
s = ±1
2

1 + a11 + a22 + a33
x = 1
4s (a32 −a23)
y = 1
4s (a13 −a31)
z = 1
4s (a21 −a12)
x = ±1
2

1 + a11 −a22 −a33
y = 1
4x (a12 + a21)
z = 1
4x (a13 + a31)
s = 1
4x (a32 −a23)
y = ±1
2

1 −a11 + a22 −a33

7.13
Worked Examples
125
x = 1
4y (a12 + a21)
z = 1
4y (a23 + a32)
s = 1
4y (a13 −a31)
z = ±1
2

1 −a11 −a22 + a33
x = 1
4z(a13 + a31)
y = 1
4z(a23 + a32)
s = 1
4z(a21 −a12)
Eigenvector and eigenvalue
xv = (a22 −1)(a33 −1) −a23a32
yv = (a33 −1)(a11 −1) −a31a13
zv = (a11 −1)(a22 −1) −a12a21
cosθ = 1
2

Tr

qpq−1
−1

Euler angles to quaternion
Using the transform Rγ,zRβ,yRα,x:
s = cos 1
2γ cos 1
2β cos 1
2α + sin 1
2γ sin 1
2β sin 1
2α
xq = cos 1
2γ cos 1
2β sin 1
2α −sin 1
2γ sin 1
2β cos 1
2α
yq = cos 1
2γ sin 1
2β cos 1
2α + sin 1
2γ cos 1
2β sin 1
2α
zq = sin 1
2γ cos 1
2β cos 1
2α −cos 1
2γ sin 1
2β sin 1
2α
where
q = [s,xqi + yqj + zqk].
7.13 Worked Examples
Here are some further worked examples that employ the ideas described above.
Example 1 Use qp to rotate p = [0,j] 90° about the x-axis.
For this to work q must be orthogonal to p:

126
7
Quaternions in Space
q = [cosθ,sinθi]
= [0,i]
and
p′ = qp
= [0,i][0,j]
= [0,k].
Example 2 Use qpq−1 to rotate p = [0,j] 90° about the x-axis.
For this to work:
q =

cos 1
2θ,sin 1
2θi

=
√
2
2 ,
√
2
2 i

and
p′ = qpq−1
=
√
2
2 ,
√
2
2 i

[0,j]
√
2
2 ,−
√
2
2 i

=

0,
√
2
2 j +
√
2
2 k
√
2
2 ,−
√
2
2 i

=

0,
√
2
2
√
2
2 j +
√
2
2 k
	
+ 1
2j + 1
2k

=

0, 1
2j + 1
2k −1
2j + 1
2k

= [0,k]
which agrees with the answer for Example 1.
Example 3 Evaluate the triple qpq−1 for p = [0,p] and q = [cos 1
2θ,sin 1
2θv],
where θ = 360°.
q = [−1,0]
qpq−1 = [−1,0][0,p][−1,0]
= [0,−p][−1,0]
= [0,p]
which conﬁrms that the vector remains unmoved, as expected.
Example 4 Compute the matrix (7.15) for q = [ 1
2,
√
3
2 k], and ﬁnd its eigenvector
and eigenvalue.

7.13
Worked Examples
127
From q:
s = 1
2,
x = 0,
y = 0,
z =
√
3
2
p′ =
⎡
⎢⎣
2(s2 + x2) −1
2(xy −sz)
2(xz + sy)
2(xy + sz)
2(s2 + y2) −1
2(yz −sx)
2(xz −sy)
2(yz + sx)
2(s2 + z2) −1
⎤
⎥⎦
⎡
⎣
xp
yp
zp
⎤
⎦
=
⎡
⎢⎢⎣
−1
2
−
√
3
2
0
√
3
2
−1
2
0
0
0
1
⎤
⎥⎥⎦
⎡
⎣
xp
yp
zp
⎤
⎦.
If we plug in the point (1,0,0) it is rotated about the z-axis by 120°:
⎡
⎢⎣
−1
2
√
3
2
1
⎤
⎥⎦=
⎡
⎢⎢⎣
−1
2
−
√
3
2
0
√
3
2
−1
2
0
0
0
1
⎤
⎥⎥⎦
⎡
⎣
1
0
0
⎤
⎦.
Using
cosθ = 1
2

Tr

qpq−1
−1

= 1
2(0 −1)
θ = 120°.
Using
xv = (a22 −1)(a33 −1) −a23a32
=

−3
2
	
(0) −0
= 0
yv = (a33 −1)(a11 −1) −a31a13
= (0)

−3
2
	
−0
= 0
zv = (a11 −1)(a22 −1) −a12a21
=

−3
2
	
−3
2
	
+
√
3
2
√
3
2
= 3
which makes the eigenvector 3k and the eigenvalue 120°.

128
7
Quaternions in Space
Example 5 Find the half-way quaternion between q1 = [cos 1
2α,sin 1
2αk] and q2 =
[cos 1
2α,sin 1
2αi] when α = 90°. Show that it is a unit-norm quaternion, and ﬁnd its
angle of rotation.
The angle between q1 and q2 is θ where
cosθ = s1s2 + x1x2 + y1y2 + z1z2
|q1||q2|
= cos2 1
2α
= 0.5
θ = 60°.
Using
q = sin(1 −t)θ
sinθ
q1 + sintθ
sinθ q2
= sin30°
sin60°[cos45°,sin45°k] + sin30°
sin60°[cos45°,sin45 °i]
= 1
√
3
√
2
2 ,
√
2
2 k

+ 1
√
3
√
2
2 ,
√
2
2 i

=
√
2
√
3
,
√
2
2
√
3
i +
√
2
2
√
3
k

=
 2
√
6
, 1
√
6
i + 1
√
6
k

.
The norm of q is
|q| =
 2
√
6
	2
+
 1
√
6
	2
+
 1
√
6
	2
= 2
3 + 1
6 + 1
6
= 1.
Therefore, cos 1
2α =
√
2
√
3 and sin 1
2α =
1
√
3, and α ≈70.5°.
Example 6 Convert the given matrix into a quaternion and identify its function.
M =
⎡
⎣
0
0
1
0
1
0
−1
0
0
⎤
⎦
therefore,
s = 1
2

1 + a11 + a22 + a33
= 1
2
√
1 + 0 + 1 + 0 =
√
2
2

7.13
Worked Examples
129
x = 1
4s (a32 −a23)
=
√
2
4 (0 + 0) = 0
y = 1
4s (a13 −a31)
=
√
2
4 (1 + 1) =
√
2
2
z = 1
4s (a21 −a12)
=
√
2
4 (0 + 0) = 0
which is the quaternion [
√
2
2 ,
√
2
2 j] which is a rotation of 90° about the y-axis.


Chapter 8
Conclusion
If you have reached this chapter, having read the previous seven chapters, then
there is a good chance that you have understood what a quaternion is, and how
it is used to rotate vectors about an arbitrary axis. I deliberately played down the
four-dimensional side of quaternions, as this feature is not relevant to understanding
what they are, and how they are manipulated at an introductory level. You should
now be in a position to code up the operations and discover what beneﬁts quater-
nions bring to the stage of rotations. You should also be in a position to tackle more
advanced texts and discover other applications.
Very rarely, has any mathematician invented something that has taken the world
completely by surprise. For as we have seen with the invention of quaternions, Gauss
had played around with quadruples, but was too nervous to tell anyone. Similarly,
Grassmann had also been working on his own vector algebra and had written up his
ideas in two books, but his style of writing was too obscure, even for mathematicians
to understand! Rodrigues has been described as a ‘recreational’ mathematician, and
perhaps just for the fun of it, decided to analyse the algebra of rotations. In so doing,
he discovered a half-angle solution identical to that of the quaternion product, three
years ahead of Hamilton. But in the end, it was left to Hamilton to successfully
generalise complex numbers to a higher dimension. It took him over a decade to
discover the ﬁnal solution, and in spite of being a genius, he was unaware that a
triple could not be the answer. Fortunately, his tenacity and mathematical brilliance
shone through and won the day.
Although Hamilton thought that quaternions would become an important mathe-
matical tool for a wide range of scientiﬁc applications, they were ignored in favour
of the vector algebra described by Gibbs. Hamilton must have been disappointed
that quaternion algebra did not become the preferred vectorial system, but he should
have been extremely proud to have been responsible for the event that gave us to-
day’s vector algebra.
It is interesting that the computer age, and especially the subject of computer
graphics, has provided a useful application for quaternions. Perhaps we can at last
forget about Euler rotations and work with a mathematical tool that is intuitive, easy
to use and efﬁcient—quaternions!
J. Vince, Quaternions for Computer Graphics,
DOI 10.1007/978-0-85729-760-0_8, © Springer-Verlag London Limited 2011
131


Appendix
Eigenvectors and Eigenvalues
This appendix shows how to compute the eigenvector of a rotation matrix.
Given a square matrix A, a non-zero vector v is an eigenvector, and λ is the
corresponding eigenvalue if
Av = λv,
λ ∈R.
The German word eigen means characteristic, own, latent or special, and eigen-
vector means a special vector associated with a transform. The equation that deter-
mines the existence of any eigenvectors is called the characteristic equation of a
square matrix, and is given by
det(A −λI) = 0.
(A.1)
To illustrate how we solve the characteristic equation (A.1) we start with three si-
multaneous equations:
3x + z = 0
−x + 3y + 3z = 0
x + 3z = 0
which can be represented in matrix form as
⎡
⎣
3
0
1
−1
3
3
1
0
3
⎤
⎦
⎡
⎣
x
y
z
⎤
⎦=
⎡
⎣
0
0
0
⎤
⎦.
If
A =
⎡
⎣
3
0
1
−1
3
3
1
0
3
⎤
⎦
its characteristic equation is

3 −λ
0
1
−1
3 −λ
3
1
0
3 −λ

= 0.
J. Vince, Quaternions for Computer Graphics,
DOI 10.1007/978-0-85729-760-0, © Springer-Verlag London Limited 2011
133

134
Eigenvectors and Eigenvalues
Expanding the determinant using the top row we have
(3 −λ)

3 −λ
3
0
3 −λ
 −0 +

−1
3 −λ
1
0
 = 0
(3 −λ)(3 −λ)2 −(3 −λ) = 0
(3 −λ)

(3 −λ)2 −1

= 0
(3 −λ)
	
λ2 −6λ + 8

= 0
(3 −λ)(λ −4)(λ −2) = 0
which has solutions λ = 2,3,4. Let’s substitute these values of λ in the original
equations to reveal the eigenvectors.
⎧
⎨
⎩
(3 −λ)x
+
z = 0
−x + (3 −λ)y +
3z = 0
x
+ (3 −λ)z = 0.
With λ = 2 we have z = −x from the 1st equation. Substituting this in the 2nd
equation we have y = 4x, which permits us to state that the associated eigenvector
is of the form [k
4k
−k]T.
With λ = 3 we have z = 0 from the 1st equation, and x = 0 from the 3rd equation,
which permits us to state that the associated eigenvector is of the form [0
k
0]T.
With λ = 4 we have z = x from the 1st equation. Substituting this in the 2nd
equation we have y = 2x, which permits us to state that the associated eigenvector
is of the form [k
2k
k]T.
Therefore, the eigenvectors and eigenvalues are
[k
4k
−k]T
λ = 2
[0
k
0]T
λ = 3
[k
2k
k]T
λ = 4
where k ̸= 0.
The major problem with this technique is that it requires careful analysis to un-
tangle the eigenvector, and ideally, we require a deterministic algorithm to reveal
the result, which is covered next.
We begin with the fact that a rotation matrix always has a real eigenvalue λ = 1,
which permits us to write
Av = λv
Av = λIv = Iv
(A −I)v = 0
therefore,
⎡
⎣
(a11 −1)
a12
a13
a21
(a22 −1)
a23
a31
a32
(a33 −1)
⎤
⎦
⎡
⎣
xv
yv
zv
⎤
⎦=
⎡
⎣
0
0
0
⎤
⎦.
(A.2)

Eigenvectors and Eigenvalues
135
Expanding (A.2) we have
(a11 −1)xv + a12yv + a13zv = 0
a21xv + (a22 −1)yv + a23zv = 0
a31xv + a32yv + (a33 −1)zv = 0.
There exists a trivial solution where xv = yv = zv = 0, but to discover something
more useful we can relax any one of the v terms which gives us three equations in
two unknowns. Let’s make xv = 0:
a12yv + a13zv = −(a11 −1)
(A.3)
(a22 −1)yv + a23zv = −a21
(A.4)
a32yv + (a33 −1)zv = −a31.
(A.5)
We are now faced with choosing a pair of equations to isolate yv and zv. In fact, we
have to consider all three pairings because it is possible that a future rotation matrix
will contain a column with two zero elements, which could conﬂict with any pairing
we make at this stage.
Let’s begin by choosing (A.3) and (A.4). The solution employs the following
strategy: Given the following matrix equation
a1
b1
a2
b2
x
y

=
c1
c2

then
x

c1
b1
c2
b2

=
y

a1
c1
a2
c2

=
1

a1
b1
a2
b2

.
Therefore, using the 1st and 2nd equations (A.3) and (A.4) we have
yv

−(a11 −1)
a13
−a21
a23

=
zv

a12
−(a11 −1)
(a22 −1)
−a21

=
1

a12
a13
(a22 −1)
a23

xv = a12a23 −a13(a22 −1)
yv = a13a21 −a23(a11 −1)
zv = (a11 −1)(a22 −1) −a12a21.
Similarly, using the 1st and 3rd equations (A.3) and (A.5) we have
xv = a12(a33 −1) −a13a32
yv = a13a31 −(a11 −1)(a33 −1)
zv = a32(a11 −1) −a12a31
and using the 2nd and 3rd equations (A.4) and (A.5) we have

136
Eigenvectors and Eigenvalues
xv = (a22 −1)(a33 −1) −a23a32
yv = a23a31 −a21(a33 −1)
zv = a21a32 −a31(a22 −1).
Now we have nine equations to cope with any eventuality. In fact, there is nothing
to stop us from choosing any three that take our fancy, for example these three
equations look interesting and sound:
xv = (a22 −1)(a33 −1) −a23a32
(A.6)
yv = (a33 −1)(a11 −1) −a31a13
(A.7)
zv = (a11 −1)(a22 −1) −a12a21.
(A.8)
Therefore, the solution for the eigenvector is [xv
yv
zv]T. Note that the sign of
yv has been reversed to maintain symmetry.

References
1. Altmann, S.L.: Rotations, Quaternions and Double Groups. Dover, New York (2005). ISBN-
13: 978-0-486-44518-2 (1986)
2. Altmann, S.L.: Rotations, Quaternions and Double Groups. Dover, New York (2005). ISBN-
13: 978-0-486-44518-2, p. 16 (1986)
3. Altmann, S.L.: Rodrigues, and the quaternion scandal. Math. Mag. 62(5), 291–308 (1989)
4. Altmann, S.L.: Icons and Symmetries. Clarendon Press, Oxford (1992)
5. Altmann, S.L., Ortiz, E.L. (eds.): Mathematics and Social Utopias in France: Olinde Ro-
drigues and his Times. History of Mathematics, vol. 28. Am. Math. Soc., Providence (2005).
ISBN-10: 0-8218-3860-1, ISBN-13: 978-0-8218-3860-0
6. Argand, J.R.: http://www-history.mcs.st-andrews.ac.uk/Mathematicians/Argand.html
7. Argand, J.R.: Essai sur une manière de représenter les quantités imaginaires dans les construc-
tions géométriques, 2nd edn. Gauthier-Villars, Paris (1874)
8. Cayley, A.: The Collected Mathematical Papers, vol. I, p. 586 (1848). Note 20
9. Cheng, H., Gupta, K.C.: An historical note on ﬁnite rotations. Trans. ASME J. Appl. Mech.
56(1), 139–145 (1989)
10. Crowe, M.J.: A History of Vector Analysis. Dover, New York (1994)
11. Descartes, R.: La Géométrie (1637). There is an English translation by Michael Mahoney:
Dover, New York (1979).
12. Feynman, R.P.: Symmetry and physical laws. In: Feynman Lectures in Physics, vol. 1
13. Gauss, C.F.: Mutation des Raumes. In: Carl Friedrich Gauss Werke, Achter Band, pp. 357–
361. König. Gesell. Wissen. Göttingen (1900). (1819)
14. Hamilton, W.R.: In: Conway, A.W., Synge, J.L. (eds.) The Mathematical Papers of Sir William
Rowan Hamilton, vol. I, Geometrical Optics; Conway, A.W., McDonnell, A.J. (eds.) vol. II,
Dynamics; Halberstam, H., Ingram, R.E. (eds.) vol. III, Algebra, Cambridge University Press,
Cambridge (1931, 1940, 1967) (1833)
15. Hamilton, W.R.: http://www-history.mcs.st-andrews.ac.uk/Mathematicians/Hamilton.html
16. Hamilton, W.R.: On Quaternions: Or a New System of Imaginaries in Algebra. Phil. Mag. 3rd
ser. 25 (1844)
17. Hamilton, W.R.: Lectures on Quaternions. Hodges & Smith, Dublin (1853)
18. Hamilton, W.R.: Elements of Quaternions. 2nd edn. Longmans, Green & Co, London (1899–
1901) (Jolly, C.J. (ed.) 2 vols.)
19. Robinson, E.: Greek and English lexicon of the New Testament. http://books.google.co.uk
(1825)
20. Rodrigues, B.O.: Des lois géométriques qui régissent les déplacements d’un système solide
dans l’espace, et de la variation des coordonnées provent de ses déplacements considérés in-
dépendamment des causes qui peuvent les produire. J. Math. Pures Appl. 5, 380–440 (1840)
21. Tait, P.G.: Elementary Treatise on Quaternions. Cambridge University Press, Cambridge
(1867)
J. Vince, Quaternions for Computer Graphics,
DOI 10.1007/978-0-85729-760-0, © Springer-Verlag London Limited 2011
137

138
References
22. Wallis, J.: http://www-history.mcs.st-andrews.ac.uk/Mathematicians/Wallis.html
23. Wilson, E.B.: Vector Analysis. Yale University Press, New Haven (1901)

Index
A
Abel, Neils, 10
Abelian group, 10
Absolute value of a complex number, 17
Adding complex numbers, 16, 25
Adding quaternions, 57
Additive associativity, 11
Additive commutativity, 11
Additive form of a quaternion, 60
Additive inverse, 11
Altmann, Simon, 48, 49, 58
Argand, Jean-Robert, 33
Argand diagram, 34
Argument of a complex number, 37
Associative axiom, 5
Associative division algebras, 11
Associativity, 21
Axial vector, 58
Axioms, 5
B
Binary form of a quaternion, 60
C
Cantor, Georg, 4
Cayley, Arthur, 91
Cayley numbers, 68, 91
Characteristic equation, 133
Closed operation, 4
Closure, 21
Commutative axiom, 5
Complex conjugate, 18, 25
Complex number, 13, 15
Complex number as a rotor, 41
Complex plane, 33, 34
Composite rotations, 75
Composition algebra, 91
Couple, 7
D
Descartes, René, 13
Distributive axiom, 5
Distributivity, 11, 21
Division algebra, 68
Division ring, 10, 11
E
Eigenvalue, 110
Eigenvector, 110
Euler, Leonhard, 34
Euler angles, 120
Euler rotations, 73, 75
F
Feynman, Richard, 58
Field, 10, 21
Four-square law, 92
Frames of reference, 113
Français, Jacques, 34
Frobenius, Ferdinand Georg, 11
G
Gibbs, Josiah Willard, 47, 52
Gimbal lock, 75
Grassmann, Hermann Günter, 52
Graves, John Thomas, 91
Group, 8
H
Hamilton, William Rowan, 47
Hamilton’s rules, 49
Hurwitz, Adolf, 92
Hurwitz’s theorem, 92
I
Identity element, 21
J. Vince, Quaternions for Computer Graphics,
DOI 10.1007/978-0-85729-760-0, © Springer-Verlag London Limited 2011
139

140
Index
Identity matrix, 24
Imaginary number, 13
Inﬁnity, 4
Integers, 4
Interpolating quaternions, 114
Inverse, 21
Inverse of a complex number, 19, 26
Inverse quaternion, 65
J
Juel, Sophus Christian, 34
M
Matrices, 3, 67
Matrix for a complex number, 24
Member of a set, 3
Modulus of a complex number, 17
Multiplicative associativity, 11
Multiplicative identity, 11
Multiplicative inverse, 11
Multiplying complex numbers, 16
N
N-square identity, 92
Natural numbers, 3
Non-commutative, 6
Norm of a complex number, 17, 25, 37
Norm of a quaternion, 62
Norm of the quaternion product, 65
Normalised quaternion, 62
O
Octaves, 91
Octonion, 92
Ordered pair, 7, 21, 53, 56
Ordered triple, 7
Orthogonal matrix, 67
P
Polar form, 37
Polar vector, 58
Powers of i, 13
Product of complex numbers, 16, 25, 39
Pseudovector, 58
Pure quaternion, 58
Q
Quaternion, 8, 47, 89
Quaternion algebra, 68
Quaternion as a matrix, 67
Quaternion conjugate, 61
Quaternion matrix, 101
Quaternion product, 54, 63, 93
Quaternion units, 53
Quotient of complex numbers, 18, 26, 39, 40
R
2D rotation transform, 73
Rational numbers, 4
Real numbers, 3
Real quaternion, 57
Ring, 10
Rodrigues, Benjamin Olinde, 47
Rotating a complex number, 41
Rotating a point about an axis, 78
Rotation matrix, 24
Rotation transforms, 73
Rotors, 41
S
Scalar, 3
Servois, François-Joseph, 51
Set, 3
Spherical interpolant, 117
Square of a complex number, 17
Square of a quaternion, 64
Square-root of i, 19
Subtracting complex numbers, 16, 25
Subtracting quaternions, 57
T
3D transforms, 73
Tait, P.G., 34, 49
Tensor, 49
Transforms, 73
Two-square law, 92
U
Unit quaternion, 59
Unit-norm quaternion, 62
V
Vector, 49
Versor, 49
W
Wallis, John, 34
Wessel, Caspar, 34
Wilson, Edwin Bidwell, 52

