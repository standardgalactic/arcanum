I(z′ ∈told)wold
+ min

1, wold
wnew
 π(z′)
wold
I(z′ ∈told)wnew
+

1 −min

1, wold
wnew
 π(z′)
wnew
I(z′ ∈tnew)wnew
=
min
 wold
wnew
, 1

π(z′)I(z′ ∈tnew)
+

1 −min

1, wnew
wold

π(z′)I(z′ ∈told)
+ min
wnew
wold
, 1

π(z′)I(z′ ∈told)
+

1 −min

1, wold
wnew

π(z′)I(z′ ∈tnew)
= π(z′) I(z′ ∈told) + π(z′) I(z′ ∈tnew)
= π(z′) I(z′ ∈t).

A CONCEPTUAL INTRODUCTION TO HAMILTONIAN MONTE CARLO
55
A.4 Dynamic Implementations
No matter how eﬃcient we can make a static scheme, it will unfortunately be funda-
mentally limited. Aside from a few exceptionally simple problems, each energy level set
will require a diﬀerent integration time to achieve the same eﬀective exploration. Some
level sets can be surveyed with only short integration times, while others require very long
integration times. In order to ensure optimal performance of the Hamiltonian Monte Carlo
method we need dynamic implementations that can automatically tune the integration
time to approximate uniform exploration across all energy level sets.
Fortunately, the eﬃcient static schemes discussed in Section A.3 can be iterated to
achieve a dynamic implementation once we have chosen a criterion for determining when
a trajectory has grown long enough to satisfactory explore the corresponding energy level
set. We ﬁrst building an initial trajectory of a given length and then check the termination
criterion. If the criterion is not met, we expand the trajectory further and repeat, but if
the criterion is met then we return the trajectory and its corresponding sample.
Care must be taken, however, to ensure that such a dynamic scheme does not obstruct
the reversibility of the trajectory sampling and hence the desired invariance of the canon-
ical distribution. In this section I will ﬁrst demonstrate how naive dynamic schemes can
frustrate reversibility and what steps we have to take to avoid these problems. With a valid
dynamic implementation understood I will then review potential termination criteria.
A.4.1 Maintaining Reversibility The problem with the naive dynamic scheme discussed
above is that it can violate the reversibility condition,
T(t | z) = T(t | z′), t ∈TL
z,z′,
for the expanded trajectory, and hence the bias the stationary distribution of the resulting
Markov chain. In particular, if we initialize from a diﬀerent point in the ﬁnal trajectory
then the dynamic trajectory expansion might terminate prematurely before reaching the
ﬁnal trajectory, causing T(t | z) to vanish for some initial states but not others (Figure 39).
In order to equalize the transition probabilities we have to reject any trajectory expan-
sions that contains certain sub-trajectories satisfying the termination criterion and hence
states that would have prematurely terminated if we had instead begun there. For example,
if we expand the trajectories additively then we need to check the termination criterion for
the sub-trajectories beginning at every state in the old trajectory and ending at the single
state in the new trajectory, inducing a cost linear in the size of the old trajectory (Figure
40a). Doing this for each expansion results in a cost quadratic in the ﬁnal trajectory length.
If we expand the trajectories multiplicatively, however, then we need check only the sub-
trajectories equivalent to binary sub-trees of the new trajectory, at a cost just logarithmic
in the size of the old trajectory (Figure 40b) and a total cost quadratic only in the log of
ﬁnal trajectory length. Moreover, because the checks occur across sub-trees we can compute
them concurrently as we build the new trajectory. If any sub-tree satisﬁes the termination

56
BETANCOURT
z−2
z−1
z0
z1
z2
z3
z4
