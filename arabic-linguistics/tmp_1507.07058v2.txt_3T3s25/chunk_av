3. Calculate the total Shannon value of the white pieces and then the black pieces in both strings and get 
the average of each. Use these average values to determine the number of piece permutations (i.e. 
combinations of different pieces) that satisfy them. 
a. 
For example, an average value of 10 for white could mean having a bishop, two knights and a 
pawn whereas an average value of 9 for black could mean having just a queen. The total 
number of piece permutations possible for both the white and black pieces here is totaled.  
b. This total will equal the number of times the same pair of DSNS strings is used in attempting 
to generate a composition. So, in principle, every legal piece combination can be tested. 
4. Determine which permutations of pieces for both white and black satisfy (2) and are ‘reasonable’, i.e. 
in total, there are no more than 8 pieces – other than pawns – on the board. 
a. 
For example, if the range of pieces for white that can be used in the composition is between 4 
and 6, then permutations with only 3 pieces are excluded. 
b. ‘Reasonable’ means that the position should be realistic. Typically, only one or two of the 
pieces on the board for a particular color would have a pawn promoted to it. So, if the upper 
limit of the total number of white pieces allowed (as per (2)) is 12 and you have a possible 
permutation with one queen, four rooks, four bishops and a knight, this will be excluded 
because even though the total number of pieces is 10 (below 12), it is more than 8 pieces. On 
the other hand, one queen, three rooks, two bishops and two knights would be acceptable and 
more realistic. 
5. If no permutations for both white and black can be found that satisfy the requirements in (4), return to 
(1), otherwise use a random, valid one for each.  
6. Place the two kings on random squares on the board. Accept them so far as the resulting position is 
legal; otherwise, keep repeating the process. 
7. Choose at random one of six possibilities (i.e. the five remaining piece types and a ‘blank square’) 
based on equal probability (i.e. 1 in 6 or 16.67%). Alternate between white (first) and then black,. 
a. 
If a ‘blank’ is chosen (which could be for either white or black) return to (7) and choose for 
the opponent’s color instead. So a blank means one color misses its ‘turn’ and could therefore 
have fewer pieces on the board in the end. 
8. Choose a random square until one that is unoccupied is found. 
a. 
This is where, if a piece was chosen in (7), it will be placed. 
9. Determine, based on the two DSNS strings, which are the first and last pieces to have moved. 
10. If the piece chosen in (7) is not the same as any of the piece types determined in (9) and none of the 
latter are already on the board, set a 50% chance that the former will have to be chosen again. 
11. Place the chosen piece on the square determined in (8). 
12. Check the legality of the position in terms of chess rules, taking into account the constraints mentioned 
earlier. 
a. 
For example, having a pawn occupying the eighth rank is illegal. 
b. The possibility of castling was given a ‘neutral’ 50% random probability of being legal, 
assuming a king and one of its rooks happen to be on the right squares. Determination of 
legality based on retrograde analysis was considered too complicated and unnecessary for the 
purposes of this research. ‘Officially’, in compositions, castling in the key move is legal 
unless it can be proven otherwise. 
c. 
En passant captures, if plausible, default to illegal. En passant is considered legal only if it can 
be proven the last move by the opponent permitted it. 
13. If the position is illegal, remove the chosen piece from the board and return to (7). 
14. Determine if the material difference between white and black for the position at present exceeds the 
higher of the two Shannon material differences in the two DSNS strings. 

15. If (14) is true then clear the board and start composing a new problem; return to (3). 
a. 
The same DSNS strings are used but with a refreshed piece permutation array.  
16. Sum the sparsity values from both DSNS strings. 
17. If the total from (16) ≥ 1 (i.e. leaning toward a sparser position) then determine if the sparsity value of 
the present position is less than 0.25 (i.e. leaning toward density). If so, clear the board and start 
composing a new problem; return to (3). 
18. If the total from (16) < 1 (i.e. leaning toward a denser or crowded position) then determine if the 
sparsity value of the present position is more than 0.75 (i.e. leaning toward a sparser position). If so, 
clear the board and start composing a new problem; return to (3). 
19. Keep the piece chosen in (7) on the board and return to (7) to choose a new piece for the opponent’s 
army until all the constraints above have been satisfied.  
20. Test with a mate-solver engine to determine if the tentatively acceptable position generated has a 
forced mate-in-3 solution to it. If not, remove the last chosen piece from the board; return to (7). 
a. 
CHESTHETICA communicates with ChestUCI v5.2 for this purpose (5 second search limit). 
21. If there is such a solution, the position is ‘optimized’ as shown in the code below. This makes the 
composition more economical in form.  
a. 
FOR every square  
IF not occupied by a king and not empty THEN  
Remove piece  
IF forced mate-in-3 can still be found THEN  
Proceed  
        
ELSE  
          
        Return piece to its original location  
        
END IF  
        END IF  
NEXT 
 
b. To be thorough, optimization is performed three times, starting from the upper left to the 
lower right of the board; white pieces first, then black, and then white again. Fewer passes 
proved to be insufficient in certain positions. Optimization generally increases the aesthetic 
quality of a composition by removing unnecessary or passive pieces, but not always. 
c. 
Sometimes, optimization may not be possible. 
22. Test for conformity to composition conventions specified, if any. If there are any conventions specified 
not satisfied, pieces are added by returning to (7). 
a. 
In the case of the convention ‘no restricting enemy king movement in key move’, the piece 
chosen earlier is actually removed before returning to (7) to help avoid this problem the next 
time around. 
b. The constraints mentioned earlier on need not be re-applied after the optimization and 
