Linux is most different than your traditional networking within OSX or Windows.
Traditionally, with Linux servers, we don't have a GUI,
so we need to operate everything from a command line interface.
That makes troubleshooting a little bit more difficult.
When we're a Linux system administrator,
we may be asked to statically set information on the network
so that we can get to our server all the time.
While DHCP provides us an IP address right away every time,
it may provide us a different IP address every time.
So we need to configure the IP address from the command line
to ensure that we get the same IP address every time we try to access that server.
Let's look at both the GUI side and the command line interface.
Different distributions handle networking different ways.
Some call things certain ways, and some display information other ways.
So, in order to find the GUI configuration for networking,
you'll have to search for it.
In this case, it was under Settings and then Network.
This is the Network Manager, which is traditionally a piece of software
that is used in GUI to manage your interface connections.
In order to modify these, I'm going to click the wheel, go down to IPv4.
Notice that it's set to Automatic, the DHCP.
You may want to change the DNS address.
Here is where I'm going to change the static information for my server.
So I would type in the address, the net mask, and the gateway.
Now for the command line interface.
In order to see what the interface is called, I need to look at what we have in the system.
So I'm going to type in ifconfig, and you'll notice eno with the number after it.
This stands for Ethernet, on board, and then the arbitrary number after it.
Additionally, we have our loopback address, and we may have other different addresses in here for virtualization.
For example, if I were to modify this interface,
I'm going to type in sudo ifconfig, and then the IP address.
I need to have the IP address that I want to enter, plus my net mask.
Those two need to be known.
I also need to enter in the actual interface that I want to configure.
Once I hit the enter button, it's going to change the system.
The other thing that I need to do, and I'm not going to actually modify that,
the other thing I need to do is change the route.
The route allows us to have a way to get to the next hub.
I can change the route by typing route, add, and then the information that I want to,
the router information that I want to add, and the destination.
So if I want to change certain routes for certain interfaces,
I can do that by just typing the route, add, and then the information.
So if I wanted to add 192.168.122.1 for ENL16777736,
it's going to change the default, it's going to change the route for that interface.
However, I don't want to do that because it's working just fine right at the moment.
In order to see if things are working correctly, I'm going to ping resources.
So I'll type in ping, and then a name.
I should receive a response back, which means that both my route is working and my DNS is working.
If my DNS is not working, I can try just pinging the gateway and see if I get a response.
If I don't get a response from the gateway, then I know there is something wrong with my system.
Let's look at how we configure the network interface if we need it to be persistent.
The way I just showed you will reset once I restart the server.
So I need to have that information saved.
This is located in etc. sysconfig.network scripts.
And the interface that I need to configure.
So IFCFG-ENO, and then the number after it.
Here's the information on that interface.
If I needed to set a static address, I'm going to change the boot protocol from DHCP to static.
I'm also going to need to add the IP address information in netmask.
This is very easy, where I would just type in IP ADDR equals 192.168.0, let's say, .2.
And my netmask is 255.255.255.0.
However, since I don't want to modify this at this point, I'm going to quit out the drive and start it up the installation process.
Now let's say that we want to protect certain resources.
Within Linux, it's very easy to create another interface, especially virtual, and isolate certain resources.
I can do this with firewalls and my interfaces, and by modifying the routes.
You may see this in a more secure environment.
In conclusion, troubleshooting with Linux is not difficult.
However, you may have to learn additional commands in order to get familiar with the interface.
I can turn my network card on so it obtains an IP address.
Once the IP address has been obtained, I can go back into my time and date and select my time zone.
In this lesson, I will show you how to interact with the pseudowars file, grant pseudoprivileges to certain users, and allow them to execute privileged commands with or without a password.
Pseudowars is a program that allows users to run programs on behalf of another user, typically the superuser or root, and it can be configured by a pseudowars file that specifies how pseudowars is granted for a given user.
In order to view or modify the pseudowars file, you must have superuser or root privileges.
I'm using the Greg account so that it is not privileged at the moment.
In order to elevate my privileges, I'm going to log in as root.
Now I'm ready.
I'm going to scroll down here to where we actually modify parts of the pseudowars file to grant certain access.
This line right here where it says root all equals all in parentheses and then has a tab for the disk and it says all again means certain things.
This line means that any user with the username of root has access to execute all commands if the root password is entered.
Obviously, the root user should have those privileges already.
Each line should have the following elements.
First, the user the line applies to here is called root.
Next, the host, which the line can be applied to.
In this case, all.
This is useful if you're going to file from system to system.
Next, the equals all specifies the users which the person running the pseudowars command must be.
In this case, all users.
And finally, the commands which the specified user can run.
In this case, all commands.
Let's add a user here.
Let's press I for insert because I'm in VI.
I'm going to type in Greg underscore test.
I'm going to hit the tab button, not the space button.
Tabs must be used here instead of spaces in order for the file to work correctly.
So I'm going to execute the same commands.
All equals all in parentheses.
Tab.
All.
So let's break quit.
Now we better save the file.
Let's try to access VI sudo from what it just created.
Sudo or VI sudo is a privileged process.
So we need to execute it as a root, as sudo.
So su, Greg, underscore test.
The first time I log in, I'm now going to notice that my username is Greg underscore test.
So I'm going to use sudo VI sudo.
And make sure the keyboard is correct.
Enter my password again for Greg test.
Hit enter, and now I have access to the sudo or spa accounts.
Let's say that we don't want to have all the users use full super user privileges all the time.
So now let's modify Greg test 2 in order to run fdisk without a password.
Go down to the line that we created just a little bit.
Type in Greg test 2 all equals no p-a-s-s-w-d tab.
Remember the all, this third string here is for commands.
Type in s-bin-f-disk.
Now let's switch users.
The first string that comes up is the language string.
And see if we can't run that command.
The next string that comes up is the installation string.
So notice how I didn't have to enter a password.
Typically when you run sudo, we have to enter that password.
Now let's look at what sudo also provides.
sudo also provides information on what we just entered.
So let's look at sudo, or let's exit out of here.
And we'll exit out of Greg test.
And let's look at sudo tail-3 var log security.
Notice how all my commands are locked.
sudo provides information on everything that the user types in, as long as they are using sudo.
If we don't want them to sudo, then we have to not allow them to do that.
However, if they're in the sudoers file, we can lock those commands down as well.
In conclusion, sudo provides a way to provide access to users on behalf of the users.
This is important to do because sometimes we need to elevate privileges.
What this allows us to do as well is make sure security is still intact.
So what if we accidentally type something in?
Well, sudo prevents us from accidentally typing in a command that we may not have meant to type in.
So anytime we type in sudo space and then the privileged command, we're going to be prompted for the password.
And think about it once.
So in an enterprise environment, it's best to enable sudoers for your Linux systems.
So they have the ability to do administrative things.
However, log down the system to understand what they're doing, to know what they're doing.
Logging information is important as well.
If you select the name or volume, it's going to show you the changes that you have made.
I'll discuss SSH or SecureShift.
I'll discuss what SSH to do.
And now we can practically keep it safe for us.
SSH is turned on by people on most of the systems.
We can check this right here by typing in PS Office.
Correct SSH.
The SSH team that here located the user SSH team is running.
It's not easy for SSH to run by our locals.
It's so easy because typically SSH runs on 4.2.
We'll discuss how to secure it and with it.
SSH is ministered features built in.
SSH will show access to live-referred commands for a 480 tunnel, creating VPNs for a access
ways that we're doing, encrypting proxy browser via a software call, and mounting remote directories.
Typically, a system administrator is going to use SSH to copy files.
This comes in the form of SCP.
SCP works nearly the same way as SSH, but there's other things that we can do with SCP.
We can actually transfer files and zip them up at the same time over SCP.
I've done this with numerous systems, and it saves a lot of time in the long run if we're backing up systems.
The command SSH looks like this.
SSH username at hostname.
We can also issue command after if we want to.
So we can say, you know, that's got your help.
So we're going to have the square brackets on.
File copying would be a secure copy of SCP.
Is this simple?
It's like an SCP.
Finish the installation.
Define it.
User at closer.
Colon.
Home.
Or wherever you want.
Wherever your files are located.
Home.
User.
File name here.
This is based on secure file transfer protocol, or SFTP, but it's not meant to replace MarsTP.
Let's test this out.
We look at my IP address by getting IP to fit.
Here, my interface is 192.168.18.131.
Then go over to another distribution called Calumet.
Calumet is a secure distribution in the information testing.
Not sure you wipe your head.
So we're going to do SSH, right, at 192.168.18.131.
In this way, if the server can go on I, and just record me for the port, that SSH is running.
In order to do that, you can type in H underscore port, press office, grab SSH.
And see if it comes back.
However, there's nothing listening on the port.
We're still going in this case until we actually don't need to move out of fireball.
So I'm going to this called verification, where we're hiding things out of one second.
If you have SSH turned on on 422, my public idea of us, you probably noticed that you're going to attack quite a bit.
If you change the port on SSH, you'll now see that you're able to I, your port, and it's not going to get attacked.
Let's just make sure that we can actually SSH, next to that port, something to the SSH, dash key for port, and the port number is 22.17, right, at 192.168.18.131.
And notice that I can get in.
Understanding that you can hide SSH in terms of the script.
To make sure that your tax services look, changing port numbers will help you, not allow the factors you want to try and save the service over the normal generation.
In this case, changing port.
In this case, it's in the process of SSH.
SSH allows us to enter our access or use other SSH by our commands, and in order to use a minor of SSH,
that will be able to turn SSH into a lot more and steal users' credentials.
So it's important.
Also, all other technologies, such as student-backed documentation for SSH, this can be done.
The next screen that comes up is the installation summary screen.
In this lesson, I'm going to talk about the problem, the request of whether this is an artist you cannot use.
Why?
The idea is that of the DNA core periodal processing.
Within this, during general processing, it isn't necessary to make sure the system function correctly.
It's the underlying
However, it's the very best perception of the unconscious informative.
So I'm going to create a new concept, contrasting one of a configuration problem, that's not
what the power is in the process, then what time the data is in the process, and then
the next to the start indicates a minute, so that's 0 to 151, I could say, the next
is going to change now, the next is one, and the next is one, and the next is one, so I
agree with the result, where I'm going to choose oneette, that I have to use it to
Make sure that the system is required to access one-to-one.
And they're not going to be able to access one-to-one.
I'm going to call and send this email to the user-counters.
So in this case, because I'm rude,
and I edit my contact, I'm going to receive a lot of chance
to email from which we'll be able to set up.
If I want to receive email, I also need to type in an initial command.
And the next case, I'm going to delete.
And I'm going to save the standard output.
And actually, push that into what we call dev-node.
This can be done manually.
Or send it to the minus sign on the screen.
If the disk is new with no nature, I can select this one here,
which allows us to click here to create a lot of error.
Meaning this will set for the disk.
If you've selected manual volumes,
it's going to show you the changes that you have made to the disk.
Now that I've completed the basic installation options,
I can start the installation.
What this is doing in the background,
is it is installing the system.
It's installing all the software systems that we use
and it's figuring the system in here.
Because in the Glass, I feel like the existing system.
That's about this information.
Is it allows us to install and use.
This can be a provider.
So...
and the users and the users and the users and the users and the users agree to the terms of use and then
sorry
So here's the license information that's going to ask me to accept it.
Now the information that I've filled out for the user is already written.
So I'm going to use English as a language and make sure that I'm going to use my online account.
This system is ready to go.
Securing the users not only ensures that we are securing the user and making sure that they own files that are in need and looking out others that might have access to those files.
There are also modifying the rules so that we can let other users make changes to other users' referings or if they assume files, do us or not.
So people have other areas in other Google files.
We're just doing this.
We're just doing this.
We're just doing this.
We're just doing this.
We're just doing this.
We're just doing this.
We're just doing this.
Institution.
Distribution.
Distribution.
However, the tasks that involved are pretty pretty the same
...
...
The next screen that comes up is the installation summary screen.
The next screen comes with a new version.
There are options that I can use for various software to be installed in the system.
Each one of them on the screen allows me to select the different software packages.
So it's not all about next.
So when you can't have links in your environment only, that's typically not the way it was in Europe.
There are some people that might start getting so that they can say, okay, you know, I'm going to provide some peers, you know, I've read all my hand from, you know, do you want them to call me all the time to tell me how to figure out other people cannot be frustrated.
There's something happening in this situation.
For the actual, those who don't necessarily work on, like, software that should be running applications.
For the actual, those who don't necessarily work on, like, software that should be running applications.
For the actual, those who don't necessarily work on, like, to authenticate into a lot of different things.
Depending on what we get rated for things.
It serves for cloud sharing, you know, that runs off our Windows app.
Linux will be authenticated into the active directory domain or application in three different ways here.
So, first of all, LDAP, second is active directory, LDAP.
And the third one is active directory, LDAP, and Kerberos.
So Kerberos for Windows is the type of standard for application in your domain.
And we've seen where Linux, and we'll talk about this in a later video, we are able to have mobile application models for handloggers that utilize different services that integrate into different environments.
So there's a Kerberos in the RAM module that they use to connect into the active directory domain.
We also need to install other services that are going to do it.
So, Samba, for example, and WinBond.
Barlson says they're going to integrate the Linux system into an active directory domain.
There are plenty of tutorials on the internet.
And, one, that utilize different services that integrate into different environments.
So there's a Kerberos that utilize different services that integrate into different environments.
So, Samba, for example, and WinBond.
They're promoting fire cliff apps to integrate into variable settings and happily directly domain.
So, Samba, for example, and WinBond.
There are plenty of tutorials that are on the internet how to do it.
And one of them actually hasouts in the reichtons.
And we've seen, we're listed on Linux and I'll talk about this in a later video.
We are able to have mobile application models for handloggers that utilize different services that integrate into the cons康.
We also need to install weiter KirkATs within the portal for instance.
So Samba, for example, and WinBond.
Barlson says they're going to integrate the Linux system into an active directory domain.
There are many tutorials out there on the internet how to do it, and one of them actually
had a lecture in the reading towards you.
They probably want to do this.
Well, in an active directory environment, we can make sure that security is first informed.
So, if we're integrating users from an active directory domain to a Linux domain, it can
guarantee that if we shut the user account inside of that directory, that that person
is not going to have access to our Linux system.
We're violating this also necessary.
So, if we tie the two together, or tie multiple systems into Linux or Linux into multiple systems,
we can audit the entire environment and have a holistic picture of the Linux in line with
our environment.
Mobile accounts should not be used within Linux as an enterprise environment.
That's for security.
So, for example, if you're looking at this specialization from Coursera, we have a slump
in the volume.
So, I use LDAP or slump to authenticate my users in the active directory domain.
However, my slump is running on a web server.
So, software also may require slump type authentication to enter.
Same conclusion, while Linux can stand on its own, it may not be the best use case for a lot
of different things.
Perhaps, Linux is one that's used for web servers.
Or specialized .
It's probably not used very much in .
So, security is also a major consideration when we need to work with other systems.
So, we need a holistic picture for our entire environment to integrate all the sources,
such as .
and .
to automatically log in to certain accounts.
Now, the system is ready to go.
So, for example, if you have a compromised SSH process, for example, it might do other parts
of the system.
.
And the storage.
And the storage.
So, we need to discuss what .
We need to discuss what .
We need to discuss what .
We need to discuss what .
We need to just turn it off and .
We need to discuss .
The problems with traditional .
The first one is .
The first one is .
The user can not control whatever .
So, the user .
The user .
The DCL can't protect you .
So, read, write, execute all these .
Processes can also change the permissions of .
Which may be .
Compromised software.
They also have access to .
So, for example, if you have a compromised SSH process, for example, it might do other parts of the
system.
Any storage?
SNX was first designed by the .
It stands for .
And it's Linux .
Answer to .
Where we call .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
Our permissive mode says, allow everything but log and objects as well.
And then our point is to say, we don't want to set this at all.
We want to make sure that we have at least something that says,
here's what things I'm accessing, here's what we're doing to the system.
So what I'm going to say is that you might just turn it off.
So types of distortion.
There are really different types of distortion, as you might.
Primary control is going to be our type-based distortion,
and that's using hard-debated policies.
Next is role-based access control, and that's based on users.
So if users want to serve a group, let's say,
they want to be confidential.
Users of that group may be allowed to access certain content control marked.
The next is multi-level security, and in front of the multi-capital sector.
These two types of distortion aren't used as much,
but they provide multiple ways to enforce reintroduction on processes and models.
They're also used, again, to be targeted post.
The features and benefits are numerous, but more specifically,
the policies are separate from the enforcement.
We have red-locking enable machines that we can understand what users are doing,
and we can act upon enforcing the distribution.
Also, we have red-procering tools that allow us to see what's going on,
the small controls, much more.
So, SMX, many processes, and many trials,
they can eliminate control,
we can lock it down to the data that we need to have.
So figure out a big particular web search,
and we need certain access to security as well,
as we can capture e-cights to a breaking of that.
So mandatory access control to limit the data range that may happen.
The problems with SMX are also seen.
So mandatory access control takes time,
and again, if you're making many applications in the operating system,
like having files to add in the process,
SMX takes time to allow it for all the discussions we make.
It is complex.
There's a book on SMX that's up there.
It says, here's all the context that we need to think about
and change that we're going to be monitoring towards the operating system.
If we change to input request,
we still have to make sure that SMX knows that.
If we don't set permissions on our library process,
that's not going to be done.
Typically, we've seen this on web search,
we've seen it where we see our cloud source,
it's baked into all the newer website distributions
to provide that mandatory access control today,
but it comes only as it happens.
All the software that's needed based on the selections that we chose.
And...
We've seen it where we see our cloud source.
We've seen it on web search,
it's doing all the software that's needed based on the selections that we chose,
collections that we chose, and we need to have a security, however, it is complex.
One nice thing about this installation is it allows us to set up users' passwords for
those users while...
The next lesson is to assess negative-end security. We're going to assess what twice
we have, assess what items we need to install with, and understand there's no such thing
as a security here, even if it's virus. So the question I want to hear is, is like
secure? Well, nobody here is secure. So, computers need security at one specific
time. Plus, it depends on a bunch of different things. So it depends on how, where, the software
you have on it, a whole bunch of different things to make sure that your system is secure. So
we can configure that in a specific way to make sure that it is secure at one point in time. So
if my computer is web-secure, is completely on the network, and I have all these apps, so
or it's in a locked room, is it secure? Maybe, maybe not. Depends on what the rest
that it has against it. Maybe it's made a break in the door. But if I have a password, or the
hardware is not encrypted, I can fully bypass the security that applies to the net. So
it doesn't matter if it's on the network or not. It doesn't matter if it's locked in the room. So
I need to make sure that I have layers of security protecting my message. It's just
about the net system. It's no more secure than a Linux system. It's no more secure than a
Mac. Everything has viruses. Everything has problems with users and configuration, unless
I call it a grid of screens. Right? Linux can be configured in some way. Well, that you
might have, where you may be a lot of those security documents. There are also some pitfalls
that we have when dealing with Linux. Specifically, the benefits of Linux for security. Linux, because
it's open source, we don't see many viruses being developed. We've seen, Linux has a tendency
to have software installed that has vulnerabilities. But because Linux is only sourced, and has a
community of developers around it, the more high use of how on something, the greater security
has. So the Linux security, the open source of itself, is the greatest security. There's always something
that you can do with Linux. So Linux is very secure, from the standpoint of the software
execution, unless you make it as its privileges. Besides, Linux is smaller. Being in a community
where Linux is installed, it's smaller. So where Windows, for example, has millions of machines
running Windows versions, and they see very little of those machines actually running. And
we don't solve our software on these machines either, even though they're running a majority
of the large cameras across the Earth. There are four different areas of the
system administrators to be concerned with when looking at the Linux security. The first
one is software vulnerabilities, the second one is the configuration errors, the third
one is social engineering and the first in general, and the fourth one is so in the
. So the Linux law states basically given enough eyeballs, all bugs are shot
with, meaning that the more people that you have looking at code, developing that code, the
less chance to have that native vulnerabilities and those vulnerabilities becoming stronger.
Developers of custom software may not have to manage the software code or source of both
servers, or perhaps...
So we need to delete a configuration name, which means that you can find an R-RF-SKAR,
for example.
It's very important that you can, unlike Megatops or Linux, which is not the .
In order to set the time and date, I need to set this automatically.
In this lesson, I will discuss last Firewalls.
There are several software-based Firewalls within Linux.
Today we will discuss the Ubuntu version, called UFM.
We're going to discuss the new Firewall within 6OS and Red Hat systems, called Firewall-D,
and eventually where we came from.
So let's start out with Ubuntu.
The two most common software Firewalls out there are UW and Firewall-D.
Where we came from was what we call IT Filters.
IT Filters is an average packet-filtering software that can be configured for a variety of different
levels.
So we also then had IT Tapes, which carries a stable Firewall rule set into Linux systems.
However, IT Filters, IT Filters is still around and can still be limited.
It's still a global kernel module and can be implemented safely within Linux.
However, there have been problems with trying to configure IT Filters and IT Tapes.
They are very complicated to understand.
They have many interfaces, and that makes it difficult for a normal user to try to configure.
So the later Firewall versions of Ubuntu and Firewall-D allow us to really easily configure
Firewalls within Linux Tapes.
Firewalls are extremely important to understanding where our attacks come from within those attacks.
We can also walk the information that comes in from these attacks.
So let's look at Ubuntu first.
In Ubuntu, Ubuntu, Ubuntu, W stands for Uncomplicated Firewall.
It is named and disabled by default on Ubuntu systems, but also has packages for different
systems and art.
It is still a way to command IT Tapes just within Linux.
In order to get the status of what Ubuntu is doing at home, we're going to set in Ubuntu
with status.
Status is an act, so let's enable Ubuntu.
Anyway.
So now it says Firewalls have been enabled on system all startup.
So in Ubuntu, Ubuntu's status, again, we'll see that it's active, and let's look at the
same rules.
So Ubuntu, status, verbose.
See here?
Oh, 53, and, however, for IP tables, essentials, and a lot more rule, Ubuntu still manages IP
cases.
This is not the case in the new Firewall D.
The right hat catches this.
So let's switch over there.
And let's look at Firewall D.
We type in Firewall, dash, C and D.
State, we'll see that it's right, just like we did on, you know, the concept of zones,
which is similar to chains inside IP tables.
There are many different type of services.
Let's actually list this out here.
So there's 54 words overall.
One line, 54 words, 471 characters.
Now let's say that I wanted to add a service.
You want to have to add a service instead of taking Firewall.
Dash, command, dash, dash, zone, equals public.
Let's say in the server I wanted to add a web server.
Dash, dash, add, dash, service, equals HTTP.
It's not.
The only thing about that system is that can still enable IP tables if I want to, but I want
to be really, really granular with trying to put a firewall into my system.
However, with the new Firewall D, there's no need, and the Firewall D, where
let's come to make mistakes.
Firewalls.
Options.
I can store.
In this lesson, I will discuss, let's scan resources.
In this lesson, I will discuss, let's scan resources.
In this lesson, I will discuss, let's scan resources.
Let's start to software.
The resources that are not using is able to decrease the attacks.
But they are not, they are not, they are not using insulation.
The system is already installed.
The system is already installed.
I have never seen the conditions on the point of the input of the industry.
And the enterprise that we can use, the center of the system.
In this lesson, let's look at the first thing I have to understand, gently.
And notice that my remote load can never turn off from 2 to 5.
And let's turn that off in 100.
So check the page small of.
And I can do this with other services as well.
We're going to type in systemctl.
Systemctl gives us what services are currently loading in Chrome.
So things like Chrome processes.
Here's one for printing down below.
Process exchange or printing a service that we need to disable.
And let's look at other things.
Bluetooth principles that we don't need to.
These are all, quite a few of these are services that we need to be disabled to make sure
that we can increase.
Notice that there's 152.
And then we type in systemctl status and then service.
So let's turn this off.
Systemctl.
Bluetooth.
Press along.
Type in systemctl.
Disabled.
Bluetooth.
Now let's look at the front.
We're going to type this out again.
But it's overrun.
So you have to kill.
And that process is ready there.
It is.
And the key kill.
Bluetooth.
And then the process name is Bluetooth.
So consider the statement.
Such as Bluetooth.
Or you're doing for example.
So.
On first start, I will need to agree to the terms of use.
So here's the license information.
And it's going to ask me to accept it.
Now I'm going to finish the installation of Lex.
Notice how the information that I've filled out for the user name and password is already
ready for me the very first time I've moved the system.
The first time I log in, I'm going to get a couple of screens asking me how I want to use the system.
So I'm going to use English as the language.
And make sure the keyboard is correct.
I can connect my online accounts on this screen and automatically log in to certain accounts.
Now the system is ready to go.
