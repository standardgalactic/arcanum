We'll be right back.
We'll be right back.
We'll be right back.
We'll be right back.
We'll be right back.
We'll be right back.
We'll be right back.
We'll be right back.
We'll be right back.
We'll be right back.
We'll be right back.
All right.
Oh, that doesn't reset.
There you just lay back.
There we go.
Okay.
Cool.
Cool.
Well, hey, everybody.
Here we are.
We'll be right back.
We'll be right back.
We'll be right back.
We're going to be right back.
We're going to be right back.
We have David Craddock here to moderate this, and I think it's going to be some pretty cool discussion
with John here, John Carmack.
We have a bunch of people.
And we have a bunch of questions.
And we have a bunch of questions here.
And we'll be right back.
Some people will probably throw some extra questions in there.
We have some time.
Oh, Romero has audio on left only.
Sorry.
How about that?
Left channel Romero.
Nice.
Okay.
Am I not left channel?
It's always fun trying to set up a stream.
That's probably why you sounded quiet to us earlier.
Yeah.
Oh.
Yeah.
So it only comes up.
Romero in stereo.
When you go live, let me tell it to just go mono.
And there we go.
Okay.
There it is.
Okay.
All right.
Good.
Now I'm loud enough.
Great.
All right.
I guess we're ready to go.
Ready to roll.
Thank you.
So David, did you want to ask us some questions?
Oh, geez.
I didn't prepare for any of this.
Yes.
I have a number of questions for you both.
Thanks for letting me be here.
Let's start it off by saying we're going to do a follower only chat for the questions,
not to get subscriptions, but just because that'll kind of help our moderators be able
to stem the flow of all the questions we see already coming in a bit.
What I'll do for this, John and John, is for each question, I think I'll pose it to one of you, but both of you can answer.
I just figured I'll do that to keep us from stampeding over each other as we talk.
So to kick things off, obviously we're doing this on the 30th anniversary of Doom's release.
John Carmack, as you think back 30 years to this day, what are some of the first memories that come to mind for you?
So for this day, it was always Romero being in charge of getting the final, final build together, getting it all ready and getting it out to people.
But this was the culmination of almost a year of work at that point.
And we pretty much knew we were on the glide slope to this kind of explosive reception of this.
We had had early alphas and test things out that different people had seen and we knew what we had.
And it was kind of a triumphant moment for us because it was all together.
We were proud of what we had done and we knew it was going to land really well.
We probably couldn't have guessed that it landed as well as it did.
But there was no doubt in our mind that it was great at that point.
Yeah.
Yeah, it was.
I remember that last 30 hour day.
It was pretty crazy.
We had the last bug, which had to do with the timer overflowing or slash underflowing.
That was a pretty cool bug to solve because you thought about it for a minute.
Like, why would it be freezing up on some machines?
And you went over and looked at the code.
And when you fixed it, it was like, that's been in the game since day one.
When you put the timer interrupt in there.
And you know, there are related bugs to that that I still see to this day in programs where you see some games where some of the shader effects start getting a little hitchy if the game's been running for multiple days without a reset.
Just because floating point winds up starting to have issues when you keep time in seconds and never reset it.
So those let the game soak for multiple days at a time bugs still bite people to this day.
Yep.
So I think the...
Oh, Romero, I didn't mean to interrupt you.
Did you want to continue?
No, it was definitely a very low level bug.
And, you know, the whole game was tied to it.
But yeah, it was amazing to have the answer from a full year long project that quickly.
I think one of my favorite stories from this time is you've all talked about trying to upload the Doom files to, I believe it was the University of Wisconsin's servers, but there were too many people in.
Everybody had to go out and then they all came flooding back in and they finally had to leave so you could upload the game.
Was that your...
We'll start with John Romero for this one.
Was that the first time you'd ever seen sort of a live or live-ish reaction to one of your games being released?
That sort of response.
We, with Wolfenstein, we were up at four in the morning uploading it to a BBS.
And I think the only reaction we saw was when we log into the BBS, we saw Wolfenstein 3D scroll up in ASCII text.
And we're like, oh, right, it's something that people are going to be looking at.
We uploaded it and it was like, well, it's time to go to sleep now because we've been up all night.
But with Doom, it was the first time that we uploaded to the internet.
And it was Jay who did the uploading.
Like we started at 2 in the afternoon because, you know, we had to get that last bug fixed and tested.
And it was the first time we had people waiting like that.
In fact, I think within the week before, we had people calling the office randomly asking when it was going to go up.
And we're like, how do you guys even get through?
But it was, it was the first time we could actually like hear from people and see that people are really excited about something like live.
Yeah, now the 90s really was an era of technical scaling issues yet to be addressed where everything was very ad hoc.
And it's not like, you know, you really can't break YouTube or Facebook today.
But a lot of these things were a specific machine sitting in a specific office with a specific network connection.
And it was a time where everybody would find it's like, oh, you know, Doom blew this up or Slashdot blew this other thing up and finding all of those things.
You know, we're in an era standing on the shoulders of giants now, the fact that you can just drop worldwide releases that literally a billion people can get now.
But there was a lot of learning along the way.
You know, especially about networking, because that was when people first started getting network hardware at home and learning how it even worked, you know.
You know, and with Doom supporting, you know, IPX on a local area network, you know, that made a lot of people learn a lot of stuff pretty quickly.
I'm glad you mentioned networking, because that brought me to a question I wanted to ask.
We'll jump ahead here a little bit.
Obviously, Doom influenced many players to learn how to network their computers together to play Deathmatch.
That was a very new thing, but you couldn't have known at the time that you were releasing not only one of the greatest games ever, one of the most influential.
But there are a lot of people who, by playing Doom and learning how to network, that encouraged them to enter careers in game development and other IT fields.
I was wondering, we'll start with John Carmack.
When was the first time you realized that Doom in particular was influencing people beyond just, hey, I love this game and I love playing this game?
So, yeah, like you say, the networking was something where Doom encouraged a lot of people to figure out the hardware things, figure out how to upgrade their hardware, get the extra things installed.
And then especially the networking where we had only had a couple of years of going through from the earliest super janky networks.
You know, we had like parallel port network adapter things and we were trying to do things in the very earliest days.
And then finally getting the thin net coax Ethernet system set up.
It really was early days.
And a lot of people did wind up in sort of network administration posts and wiring up became the network guy in their office.
And many offices wound up having, you know, a suspect business case put forward for why they all needed networks shortly after Doom came out.
And, you know, it was interesting to contrast with I think Quake led a lot more people into software development careers where that level of programmability kind of launched a lot of game dev careers.
But Doom launched a lot of kind of like IT professional careers.
Yeah, I've heard I've heard that so many times people saying I got a job because of Doom.
I had to learn how to network the computers and install the drivers and everything.
And yeah, it was it's it.
And though I meet those people at tech conferences nowadays, you know, like we are developers in Berlin.
You know, there's so many so many people there and so many of them got their start because they needed to play Doom networked because it was cooler than a modem.
So for this one, I'll start with John Romero.
As I understand it, you two had a conversation somewhat recently where you realized there was something that would have been possible.
I believe in Wolfenstein 3D, but you didn't realize it until years later.
What was that?
Oh, that was when we were talking about it just had occurred to me that the push wall hack into the Wolfenstein engine that was inelegant actually could have been solved.
If we had treated the the secret doors as as regular doors, you know, secret walls as doors and just have them open like a door instead of having to like push, push a block through the matrix and everything.
That would have been an elegant design solution for something like that, like the way that the engine already operated and would not have caused headaches.
Although in the end, I do look back at that as one of those kind of growth moments for me because I was like, this is going to be a mess to put this in.
And I, you know, Romero and Tom were leaning on me about it.
And I finally was like, oh, all right. And it was absolutely the right thing to do.
The game was so limited. And yes, in hindsight, it would have been faster to just like have it be a sliding door on the front thing.
But the grinding push wall sound is pretty iconic for Wolfenstein in that era.
And, you know, I did have to go through this learning process about, you know, the clean code isn't the point.
The point is, you know, creating something of value for, you know, for all the users.
And sometimes you really should just suck it up and do something that's a little bit ugly because it's going to be awesome and it's going to be worth it.
Yep. And it was funny because before that, everything went so smoothly because, you know, the side scrolling engines, you know, you only needed so much functionality that could enable so much to happen.
So we didn't really need like, oh, I need you to do this crazy thing.
And, you know, in, in, in parallaxing or whatever we were doing in Keen, because there was plenty of functionality there.
And then, but when we got to that point, it was like, we're missing something and it's a secret.
And this is probably the best way to represent a secret in the world that we have here.
Yeah. And that really was something where Wolfenstein was done under these, you know, extreme, almost extraordinary design constraints.
There just wasn't that much you could do.
And that was where it was a clear sense of crossing a threshold with doom where you went from something where there was just this tiny puzzle box that you could mess with in the tile based Wolfenstein.
I rise of the triad, those types of games, but just the extra things that were enabled in doom opened up and pretty much unlimited creative box where again, we're still seeing levels out to this day where people are doing novel and interesting things with it.
And that's, that's kind of an interesting theoretical thing to contemplate.
I talk about kind of the Turing completeness of a creative expression where once you've got a certain set of tools, then you can build an unlimited number of things versus just more stuff that looks exactly the same.
Yep. And doom's still being pushed even today, even with the original, the original, um, data structure, uh, people are still hacking that data structure to do interesting things, which is, which is pretty, pretty cool.
I mean, I even did some new stuff with sigil that I hadn't seen in any wads.
It's like, it's just, it's up to, it's, it's like design can do this, you know?
And, uh, and there's so much that the engine did already that, uh, people are still less, I think that's one of the reasons why people are still making levels because it's the easiest way to make something that looks great.
Like if you want to get anything more complex than this, you're talking 10 times the work usually.
Yeah. It really was a, a painful step function for the kind of people approaching the creative threshold with quake, where it really was 10 times harder just to make something that looked decent versus doom was at this really sweet spot of, uh, everybody could draw in this 2d view.
I mean, maybe we could have done a few more things adding curves or something in, uh, in the view, but it was just this, this bad step function going to full general 3d.
Uh, it just made it not so much something everybody does just on a lark, but something you set out time to almost trace a career arc when you want to start building mods for the newer games.
Yeah.
That means it takes a really long time to use these engines today.
Yep.
Well, I have to say real quick, just as a player, um, I love that that worked out whenever I would find a secret in Wolfenstein 3d.
When I saw a chunk of the wall sliding back and hear that stone grinding on stone, I really felt like almost Indiana Jones, but with an SMG, like that sense of accomplishment and discovery was so strong because of that.
So I think it worked out for the best.
Yeah.
And those are the core game design development things where you want to envision what the player feels there.
And that was one of the great things for Wolfenstein.
That sense of you get up there, you're running around and then all of a sudden there is that slight movement on the screen and the grinding sound.
And that is just like directly punching the reward button on the player.
Yep.
It was funny.
It was, it was so funny how badly we knew we needed that too.
Cause making the levels for Wolfenstein had to be the most boring level design job ever.
Cause it was so simple.
You know, there was some fun functionality with making the characters, you know, moving in paths and stuff.
But, um, other than that, you know, keen was actually more rewarding to make levels for, but when we got the secret walls, that was more that, that became a little bit more interesting to a designer.
Yeah.
And that was an interesting thing actually where with doom, we had lost the kind of pathing enemies functionality.
And there was some interesting, you know, kind of emergent properties about how the level would play differently, uh, just based on how long you took in one place or another.
Yep.
Yep.
So, uh, quick plug for John Romero real quick.
This plucky upstart developer, uh, congratulations on the release of sigil two today.
I can't think of a more perfect occasion.
Do you want to tell people real quick if they haven't found it or played it yet where they can find out more about sigil two?
Yeah.
Um, so sigil, we said, we spell sigil three sixes in the middle of it to make it shorter.
It's a S I six I L.com.
Um, or if you just do a, do a search for doom sigil, you'll find the page and there's a midi version and it's free.
And then Jimmy Paddock did the midis for it.
Like he did for sigil one.
And he's, he's a really great musician.
Uh, and then there's a, on the same page, there's a link to get the, uh, MP3 version, which is made by Thor.
Uh, sigil one was bucket head.
Sigil two is Thor.
Who's a pretty new, uh, composer.
Who's just like, you're hearing it in the background here.
Um, and I mean, his, his stuff is really, really great.
So you can go there and just choose whichever version you want.
We also have big boxes.
Um, so you can actually buy a box again and for a game and not just a little DVD, you know, plastic case.
So, um, yeah, so we still kind of.
It is funny like mentioning, mentioning boxes there.
Remember like back in the days of doom and everything, we had all the discussions about packaging and it was so important how you sat on the game store shelves.
And there was that whole bit about, there are these big boxes that didn't store very well, but you're trying to push your competitors off the shelves and things there.
And I remember at the time, again, one of the things I look back is not, uh, not fully getting it.
And I was saying we could just sell this in a brown paper bag and it'll still sell it.
It'll be fine.
I, but of course there is this whole optimization process to the marketing and presentation.
And it's like something of sufficient value can succeed without it, but you might as well do a good job optimizing how your, you know, your company and your business presents everything.
And all that does matter.
And that is kind of a lost era of some of the displays and things where of course now everybody gets it just online.
And there's a lot to be said for it.
It's net positive.
There's more positives than negatives, but there are little bits of things that are lost from bygone ages.
Yeah.
Um, especially games that used to have the cool little, uh, plastic pieces in it.
Like little, little glowing stones.
All the maps were the thing that always stood out to me as the ultimate passion.
I actually have a signed, uh, Ultima two map on the wall behind me.
Cause those, those cloth maps were awesome.
And so we're all the, they called them feelies or tchotchkes or trinkets or whatever you want.
But those are the coolest ones.
And, uh, and also just like the books that were in there that made those boxes really heavy.
It's like, there's a reason why there's a box.
And then that just like everything became digital.
Um, so now like when we put out a box, we actually try and put stuff back into it, like fill it up with more stuff.
Um, just because it's for collectors.
Where, you know, back in the old days, we would think about how nobody reads the manuals, but now that games are super sophisticated.
And I look at things like, you know, Diablo or Minecraft or things like that.
And it's like, how do people learn everything about this game?
They have to troll it off of YouTube and figure out different things there.
Where in the old days we had these games that were, you know, tens or hundreds of kilobytes in some cases with like a fat old instruction manual in it.
Like the wizardry instruction manual or something.
It's funny how that's gone.
Yep.
Yeah.
Actually multiple manuals.
If you look at Ultima, like five or four, they had like four different books in there for different things.
Like the magic spells and stuff is pretty cool.
So we, uh, we're chat.
We're seeing your questions and I'm going to pluck a really good one from there.
And I'll direct this first at John Carmack.
Graphics have come a very long way, but what do you think about enemy AI and where that will go in the next or where it could go in the next five to 10 years?
So that's something that we, we did talk about it a lot in the days where we could have made enemies a lot smarter, uh, even with the constraints that we had back then.
But it is not as good of an idea as a lot of people might think because everything, the world has to feel like it revolves around the player for the types of games that we're doing.
I mean, there's something to be said for games where you're exploring a world that exists with or without you, but the enemies are mostly there to have an effect on the player, not to efficiently do something and not to go about their lives.
And, you know, I mean, Doom did get knocked for the enemy closets and things like that, where you're basically just throwing an enemy out at the player.
But, um, for the types of games that we were doing, you don't really want particularly smart enemies.
You don't want them to do pathologically dumb looking things that break the, you know, the player's kind of immersion in something, but you do not really want them taking a hiding spot, flanking the player and sniping them from behind.
That's not the enjoyable thing. Some people do, you know, do enjoy that like, okay, I'm going to take this hardest hardcore thing that you're throwing at me.
But most people want to go in and Rambo their way through everything. And that doesn't take a whole lot of intelligence with the enemies.
Now we are approaching a new era with the way the artificial intelligence stuff is going right now where the world of actual deep characters is going to be very different than it's been in the past years where you can create something today that does have entire deep backstories that, uh, that will for certain types of games be very transformative.
But I, you know, I did always fight about, uh, fight against doing a lot of depth to things because we were so constrained on the resources that we could put into this.
Uh, it was a very small team and a lot of times this option to do something more sophisticated or deeper.
Uh, nowadays you look at something like Diablo or one of the great things where they just have enough resources and enough people.
They can add depth to lots of things, but our tiny little team, if we went super deep on something, it would not have been the best use of all of our time because we had to be thinking about anything we do.
We want to make sure that most of the people playing the game actually get to experience.
We don't want to just do something that only a handful of people would go through.
And like, that was one of the things that John and I did always used to kind of argue about class based mechanics.
And obviously in the modern world, you've got the time to do all that.
It adds a lot to it.
But you know, in the early days I was always afraid that, well, if you spend a lot of time building four or six or eight different classes, then that's going to be a lot of work that most of the people that play through the games won't see it.
And can't we just find something else to do that everybody, everybody's going to get some value out of.
Um, and so yeah, the AI stuff is definitely, it's the future, but back then I think we did the right calls.
Yeah. In fact, even games today, having AI that, that easy is, is totally preferable to players.
You know, there's, there's some games that will add drones in as a, as a target and people hate that because they move all over the place.
And it's like, it's hard to aim, you know, people want to be able to aim at stuff.
Having more of something dumb is more preferable to having one super smart AI.
So, um, yeah, I think, you know, people, people are still trying to push the envelope on having smarter enemies.
And it's always like, well, that's too smart.
People want to turn it off.
So I think we made the right decision and doom having, having enemies that moved at the speed that they did, which was typically pretty slow.
Um, but we just had huge numbers of them and that was more interesting because they had to be more strategic.
And, uh, and that was something that we had to struggle back and forth as technology improved, where we, the enemy count went down a lot in Quake and the game was, you know, less fun in some ways because of that.
We had to try to crutch up for it there because of course, what you really wanted was that same walking into a room and mowing down complete hordes of enemies.
So you two are often referred to as the, the Lennon and McCartney of video games.
Um, John Romero, I'll start with you.
Why do you think that is?
Um, well, Lennon and McCartney were a really great creative team that made really popular music that everybody liked.
And I think, you know, a lot of our early games, uh, were very well liked because I think that we had, you know, there was push and pull on the creative side and the tech side.
Um, you know, we don't want to take forever writing something that, that, you know, writing tech that would have been not optimal for what, what we were going for.
And I think that a lot of our games focused on speed as, as like the goal when we started getting into, um, 3d, you know, we started focusing on what is, what is the thing that we can do really well that other people can't.
And it was, uh, just John's technical mastery over VGA is chain four mode.
And, uh, and, uh, just, you know, taking, writing a design, making it a game design around that speed and making something that was just increasingly more fun with each game.
And so I think, you know, we both, we both did what we did, uh, in the service of making a really great game.
And, and, uh, I think we also spoke the same language cause I, you know, I'm also programmed.
So it's like when you have a designer that can speak code, it is a lot easier to know what, what you need to compromise on instead of some coming up with a very unrealistic idea for a design thing that, you know, you know, a lot of times the designers don't know what can be done or even.
You know, a simple, a simple feature could be hugely complex, but change a couple of words.
And it's like, Oh, we can do that right now.
You know, it's like, unless you know, you know, so I think it's just that we, we both, you know, we both worked really well because we, we, we knew, we knew how to do our jobs pretty well and work together and make the right decisions.
Yeah.
And so I, I'm not really a music guy, so forgive me if I butcher this, but I did smile when I read some about the early history of the Beatles about how they might've looked like a blow up success, but they went through this long grinding period of mastering their craft.
You know, playing live and that was, I think some of the most valuable part of our early time where, you know, we cranked out all these games at soft disc, the monthly subscription software.
We went through so many iterations and this idea of, you know, you don't start out just with the perfect world changing breakout thing there.
You grind through a whole lot of process and you learn a whole lot while you're doing it.
Now, of course there are the, you know, the Beatles analogy there.
We were probably the first sort of rockstar game developers thing.
And it was like this novel, new thing.
And Romero leaned into it a bit and it was, you know, it was a thing that the world was fascinated with this video games were no longer just this, this Atari 2600 that you plugged into your, your game.
It was something that all of a sudden actually looked cool enough for mainstream press to be talking about.
And, you know, anytime the mainstream press is going to kind of turn the eye of Sauron on you, there's going to be the, the focus on the, the interpersonal drama and figuring out everything else that they can do to kind of make an interesting or exciting story about it.
And I think that just, it was almost inevitable and we were there at the right time.
Yeah.
Yeah.
Yeah.
Yeah.
Well, I, I just, you know, anecdotal for me as a, as a player, I remember, you know, reading magazines like Nintendo power, which was obviously very insular, but they would always talk about the companies like Konami's Ninja Turtles or Nintendo's Mario.
But I remember it was you two and maybe Ed Boone and John Tobias were the first time I kind of realized, oh, the people associated with the games.
You hadn't really seen links like that before, especially on magazines, your names run the magazines rather than just the studio as this kind of amorphous entity almost.
Well, I do still remember that classic electronic arts advertisement in the late eighties.
That was even, you know, kind of before our time when they first put the developers front and center.
And I, and yeah, Japan probably lagged, you know, the rest of the world by quite a bit with being company focused over kind of creator designer or developer.
It's even a weirder thing, the developer focus where the natural course of the world would have been to settle in on the designers like the film directors and, and the performers and so on.
But I, the fact that we were independent and we were bootstrapped gave us a lot of freedom and we made a lot of mistakes on things, but it did allow us to, to kind of evolve differently than coming up inside one of the big corporations.
Yeah.
Yeah.
It was treated kind of like books, you know, and, and music.
It's like, oh, this is another creative thing.
And, and we, you know, talk about the artists.
Trip Hawkins was all about putting artists front and center and, and even their marketing was like an album, you know, making album covers of, of the artists.
And, you know, we, um, I think, you know, our team was so small, you know, we shipped doom with six people at the very end, but it was five people, most of its development.
And, uh, and we did have a really small team.
Quake was like 10 people.
So, uh, so you could actually get somebody's name, but you know, teams are so big nowadays that, uh, there's so many people involved that you can't just say it's like one person, you know, because so many people make massive impacts on the game in lots of different ways.
So you could both made roughly 20 games or so before doom, but what was the impetus to, to change your entire development process for the game that would come to be known as doom.
John Carmack.
I'll start with you.
Can you just talk about what that change was and why it was implemented?
So there were a few things kind of pushing us along the way where we had just moved from DOS development to our next step workstations, which was a significant win for us.
We had like real software development, uh, capabilities, and then we knew that the next step in the graphics was going to be getting us away from this block level.
I mean, like John said, the, uh, you know, Wolfenstein was not a great thing from a creative design standpoint.
Uh, we, we learned the flow of a game and what we could do there, but it was very, very limiting.
And, uh, this pitch, and we had even seen that like the intermediate half step with shadow caster about, even if you add floors and ceilings and some other things to it, that the tile grid is just not really where you want to go.
So this next step was going towards this kind of cab like line development.
And that followed, you know, reasonably naturally out of just what we needed to do.
We knew we, the blocks were the tyranny that we needed to get away from.
So we needed something that was going to, to have this, uh, more analog like nature.
And so that pretty much decided what the, the kind of development flow was going to look like there.
We needed a fancy custom tool.
And then what we were doing with the workstations and cross development, I decided how much the flow went.
Although it was very interesting to see that once the open source stuff got out, the rest of the world did do just fine.
Developing a lot of things with more conventional DOS tools than we used.
Yeah.
And we not only changed the, the system that we coded on, which was next step.
Um, you know, DOS just became the target machine.
We just ran the game on.
We didn't really even do anything else on it.
All of the art was done, uh, obviously deluxe paint too, but, but it was rotoscoped and we'd never done that before.
It was like, let's do another, let's, let's try another way to get graphics into the computer because we're going to have even more than we had with Wolfenstein.
So it's like, what if we put a weapon up in front of a video camera?
And, you know, so we changed even that method that, that workflow was totally changed from, I'm just going to pixel art this from nothing.
And, uh, at one point we even just hired somebody to clean up pixels from the grabbing of, of stuff because there was a wall and we didn't have a green screen or anything.
So we just grabbed the wall and everything and just had somebody come in and start killing the pixel, you know, transparenting the pixels.
Um, that was really different.
Um, and even making levels in the way that we would, you know, having to write a tool, uh, on next step for level design.
That was, that was much easier to deal with than, uh, doing it in DOS and, uh, and what was useful about that workflow was, was being able to have the editor open on, on next step and having DOS running the game.
And if I see that there's a problem, I just leave it running and I just fix it on next step.
And I just keep going through a level and just fixing as, as I'm going through, it was like both of them are running.
And that was just like such a iterative speed.
You know, if you can increase iteration while you're developing in any, in any way, especially in a core loop, you know, you're, you're making, you can get through with stuff so much faster.
You can find that the problems and, and just solve things much, much quicker.
So I'm always focused on how long does it take?
Yeah.
That really hurt us in Quake.
The fact that, you know, taking that next step in graphics fidelity for the freedom, for the sixth degree of freedom stuff, the iteration times just sucked.
You know, it was really bad with the offline processing.
I mean, yes, we got the glorious looking lighting and we had our freedom to have relatively high performance, sixth degree of freedom.
But I, the developers were at least reasonably responsible in keeping them to like a half hour development, but a half hour processing times.
But I know many of our licensees, they built what they wanted and didn't pay attention.
And they had things that were running overnight for their processes, which just meant that tuning the levels was just ridiculously less efficient.
Yeah.
Yeah.
BSP and maps and lighting maps was, was super painful.
We even bought like alpha machines to just grind on these things.
I think it was smart.
It was the lighting in his, that was the thing.
Yeah.
Doom had BSP and that part only took a minute or two, even on the, the Quake levels.
And yeah, there was one period where I, it was kind of neat where I thought if we just doubled the size of our, at that point in SGI origin server, we would have squeaked into the top 500 supercomputers as a game development company.
But we were, you know, we were kind of leaders in being able to throw some of the hardware at a problem.
Yep.
Yeah.
And the, and it's interesting because we were talking about the fact that, you know, that big jump into 3D was, was one of the, was one of the things that kind of took its toll on the, on the, on the team just because of how long it took.
And that we could have actually done two games and taken two steps in tech instead of putting it all into one.
And yeah, that would, that actually would have been pretty interesting.
We could have been doing like, you know, internet gameplay with a, with the, you know, the Doom II engine, you know, plus, plus a little bit more tech in that before going full 3D with a game right after that, you know?
Yeah.
Yeah.
So there's, I, I like kind of this retrospective tech speculation about what we could have done, where we could have taken like the networking aspects and, or the, the modding, the Quake C aspects and basically done that in a Doom generation engine.
Or you could have added things like arbitrary 3D models still inside the Doom maps version of things, keeping the map development faster and not doing the kind of light map lighting.
And there's a couple of different steps that we could have taken there.
And I think we probably did not pick the optimal direction, but we kept wanting to make this just throw everything at it.
And the idea that if you can think about something that's going to be better, we should just strive our hardest to do that.
And it was, it was pretty rough where Doom came together.
It was kind of a perfect storm of pretty much everything went right with Doom.
Yep.
Yeah.
And I, I, when you look at the mountain, the Everest of Quake, I don't think people really appreciate the insane amount of technology that you took on with that.
I mean, even adding Quake C on top of internet client server on top of full 3D.
I mean, it was so much tech, you know, it was, it was a whole new engine, you know, it wasn't Doom at all.
It was none of it, you know, it was all brand new.
Yeah.
And that's one of the things that while I do look back and say how, how I could have made Doom more efficient or made Quake, like the real question was Quake technically ran on a 486.
But nobody could really play it well on a 486.
And you could have, we could have had a different tech stack that was more Doom like that could have played fluidly there.
But I have found over the years that as much as I might want to have made something more efficient, every time we really went out of our way with like the CGA versions of Keen or whatever.
It turned out that the market didn't really reward you for making things work better on less capable hardware.
And you were usually rewarded by going ahead and pushing in, let's go ahead and do the require an FPU, require a GPU, something like that.
And I still wonder in technical situations today where I kind of struggle with that about, do you ignore a giant user base and just concentrate on the cool, fun cutting edge stuff?
Or are you doing yourself or your user base a disservice?
And I'm honestly still not at peace with exactly what the right call for that is.
Yeah.
But, you know, I think at least between your engines and, and my designs that we did, that we did okay.
We did the best that we could.
We certainly did okay.
Yeah.
I'll start with John Carmack on this one.
Of course, one of the big advancements from Wolfenstein 3D to Doom was that rooms could be a variable height, there were lifts, there were stairs.
And that, of course, led to Doom's famous abstract level design.
I would love to hear from both of you.
And again, starting with Carmack, how did the engine make that design style possible?
What was the flow there?
So in terms of what we got out of it, I'm, you know, I do every few years, I'll go back and play Doom for some reason, most recently in virtual reality on one of the quest ports.
And, and I do always come back as going that episode one of Doom still holds up really well.
It's still like really feels great and, and it looks good for what it's doing.
But I did feel that like the second and third episode when we got more abstract and like going into hell and trying to, you know,
it felt more like Wolfenstein or Catacombs 3D trying to say that this block is a tree when it's, you know, it's just a block.
It's, it's really not a tree.
So that, that sort of industrial, industrial military complex stuff played very, very well to what the engine could do.
And I, I am happy still just seeing screenshots of the old stuff with good crisp graphics rendered out well.
And yeah, why you would have this weird zigzaggy passage in a, you know, in a military base, it doesn't actually make sense.
But somehow the design aesthetic I thought for the, the installation side still feels good and it's still, still held up.
And I don't know if I can kind of decompress and analyze that anymore, but we found something that worked well with the lighting, the combination of the geometry and the lighting.
And those were really the two aspects that balanced off against each other.
And then the dynamism, the fact that I, you know, we could just be moving these things continuously all around doing sort of crazy things like that.
Kind of it, I, you know, it found clearly a sweet spot that still feels pretty decent 30 years later.
Yeah, the, um, the, the, we did not think about the, the problem that we had to solve with the, uh, the, the, the ability that you gave us in the engine with the non-orthogonal walls and the heights and lighting control.
We didn't know that what we were trying, what we could make was something that no one had ever seen before because there was no game that was an example of what we could do all the way back to the seventies.
Every, every time you saw a 3d world, it was 90 degree walls and hallways.
They were all maze games, just like Wolfenstein was a maze game, you know?
Um, yeah, and, and Wolfenstein was so great because, you know, you could actually move around smoothly in real time.
And most games that were 3d like that were in chunk steps.
They moved you to the next matrix block.
So that was like the big breakthrough.
But with doom, it was like, we've got to make something that no one's ever seen before.
And it was really mentally, it was difficult because we'd never had an example.
And the, if you just, you know, just looking at the data structure of the line deaths and sector deaths, that is all the ability that that engine had, but it had massive amounts of ability in that.
And in it, and it took time that all of our earliest concepts of doom was 90 degree walls.
And like, you know, the, the first levels were the same height as Wolfenstein and they were bright and they just had better looking wall, you know, floors and ceilings.
But, you know, it took time to solve that problem.
And I remember when I was doing that on E1M2 and I was just like, okay, I'm done with doom ed and I need to make levels.
And we don't have anything that takes advantage of the engine yet.
It's just like reusing it, but it's not like, it's not next level.
It's not next gen.
It's not next gen.
So I made this room in E1M2 since that was kind of like the test bed level.
And, and it, and it wasn't, it wasn't even great looking like, like it looks much better on release.
But when I made it, it was just like, we knew what it meant, but like, I think anyone else looking in would be like, how's it, how, how's that really different from Wolfenstein?
It's like little subtle ways make, you can see the potentials there, you know?
And, um, yeah, so it was, it was, it was, uh, you know, that's how like basically all the games that came out after that could, could try and mimic worlds better than these 90 degree wall, uh, engines had, had done before that.
Um, but yeah, it was, it was, uh, and, and also E1M2 was the one that had the, uh, the, um, recursive stairway that, uh, that killed the sector list that you had.
And then you had to like, come up with BSPs.
Yeah.
Well, then it was interesting how the structure of the limitations of the system there did really turn out to be a sweet spot where lots of people could make levels in that.
And we really did see kind of painfully getting into Quake and beyond that there were a lot of potentially great game designers that just hit their limit in terms of compositional aesthetic.
Uh, in terms of like what something's going to look like when you've got the ability to do full six degree of freedom modeling, you not only need to be a game designer, you need to be an architect or a photographer working through your composition.
And the structure of doom was again, right at that sweet spot where it helped you along by keeping you from wasting time doing some crazy things that you would have had to be a master of a different craft actually make payoff.
Yeah.
Which is basically games that came after us had teams that had different phases of level development because they all recognize that that would make better levels.
Like dark forces had a lighting artist and they had artists that actually made the, the, you know, the level designers made the shapes and then the artists came in and textured the walls and then somebody else lit the areas.
It was like a proper workflow.
I'll, I'll aim this next one at John Romero.
Um, a lot of people ask me, you know, I've been doing narrative design as well as other types of writing kind of off and on for the last 15 years.
And they asked me, what do I need to know about writing to get a job in video games?
And I tell them, well, you need to know a lot about telling a story through environmental design because no one just wants to read a book in the middle of a video game.
And the example I always give them is the very first screen of doom where you start in this empty room, it's quiet.
And there's a corpse of a Marine whom you probably knew about a few seconds earlier and he's dead.
And that's a great story.
So John Romero, what went into designing the story of that one room, that first screen specifically?
Uh, so that, that level got done last, you know, it was, it was, it was important to, you know, after you learn everything about the game that you're making.
It's the smartest thing to do is to make sure that that first level has everything packed into it that, you know, the player needs to understand about getting through the rest of the game.
So even in one had gone through a lot of revision, the, you know, there were rooms like the, um, the computer room after the first door was completely different than, than the room that you see now and like 100% different.
And, uh, and it just needed more revision.
And at the very end, it was like, this is the last room.
Uh, originally we had a story where four Marines are around a poker table when pandemonium breaks out and it was going to be multiplayer and all that stuff.
Instead, um, I basically needed to, uh, what I wanted to show the player was you're, you're in a base, you're in, you know, this tech base that you can look outside and see that you're, you know, not on earth.
You can see that there's a sky, which was new tech, you know, for us, like we never had a sky in anything before.
So that was exciting to people.
Um, it was, it was, for me, it was like important to show that you can, you have a destination.
You can see out the window where you're going to go and where you want to go and that you can actually get attacked by a, by an imp from all the way across the level as well.
It's like, Oh, that's what those things do. Or there's something over there that's doing something towards me.
Um, and then having that ups ups, uh, you know, up the stairs on the left-hand side into that room where you can see outside again.
And, uh, it gives you just a good feeling for a space and it's not very big, but at that time people were just learning how to navigate 3d spaces.
So it couldn't really be too complex. Like that first door was a big deal to a lot of people. Like, how do I, what are the, it looks like a door. What do I do? You know?
Um, and then you open it up and there's two characters like firing at you and, uh, you know, just two puny humans, but still it was like, okay, now you, now you're going to press the button to, to, to shoot things.
So it was like, I'm trying to tell a story without like narrative. We had no, no, no text popping up on the screen saying you're in the hangar, you know, like none of that. Um, but it was, uh, you know, it's like you got some blue carpet, which is not something you see mostly in doom is that blue carpet. Like you see in that first room and maybe a few other ones. Um, but yeah, it was about, it was about teaching the player a bunch of the mechanics and the environment that they're going to be spending their time in.
And, uh, and it was a really good, just, you know, it was a good training wheels kind of room, that first room and that first level making it easy. Like here, here's only two enemies really. It's just those, the soldiers and the imp and the imp was like the big scary thing. So I put him up on a, on a ledge so he couldn't come and get you. Um, but yeah, the whole thing was baby steps through that first, the first, uh, the whole first level and kind of established my idea for a horseshoe design where you start here and you end up.
And, you know, basically just look to the right. You're going to be ending up over there. So it's not far.
Yeah. Gamers did not have, uh, you know, the rich history of what's expected in games that they have today. I mean, it is that thing about opening the door was a big problem challenge for a lot of people.
I remember Tim Willits, one of the later designers had commented about how he walked around that first room for a long time until finally we hit the right thing. And that door opened up and his world changed.
And that just, all we had was that one basic use action and it still took some education to get people on. And then when we went to in Quake with the full looking up and down, there were huge questions and debates about what people would be able to, to handle.
Because we would see people that would just get stuck looking at the floor or the ceiling and it would be horrible. And, uh, but now everybody does it. It's as natural as walking.
Yeah. It was mouse. Mouse look was turned off because, uh, I remember we spent almost the whole, almost the whole development of, of Quake, not having look up and down, be controlled by the mouse.
That way we had some automatic looking up and down. We went upstairs and downstairs and we use the, the page up and page down keys, like heretic to kind of look up and down.
And we're just trying to figure out how do we, how do we do this?
Until finally it was like.
By default with it spring loaded, you know, where you mouse look, look up and then, uh, have it snap back down and released.
Yeah.
As soon as you moved.
Because we were just so worried about that people stuck looking at the ceiling or the floor and we had seen it with our own eyes and it was bad for a user when that happened.
Yep. Yeah.
I remember, um, whenever you were looking up and down, when you had that control, as soon as you start moving, it started to move the camera back, back up, back to center, because it was such a problem with people not understanding.
Not understanding that they like, this is how you control your whole head, you know?
Um, but you know, it was, it was really like, the funny thing is it's not the very first mouse look game.
I thought it was, but, uh, Terminator Rampage actually had mouse look in it.
And, uh, and I was, I remember we had seen that game at some point.
It was a solid field polygon game.
I might've been the same year.
Yes.
Yes.
I remember critiquing all of the pixel cracks between everything and not having sub pixel accuracy on all the vertices and all this laundry list of stuff that I was going through that, that we do right in doom.
T junctions.
Yeah.
Yeah.
Yeah.
So just a note where, Oh, go ahead, John.
I was just gonna say, that was one of the, one of the things about our engine.
Um, and I don't even think that John and I had long discussions about it.
Cause I think we both just understood that the engine is the, you know, that's our, that's our world.
That's our world.
That's a player's world.
And you want it to feel as solid as possible.
Like it's, there's no texture shimmer in our games.
You don't walk up to a texture and watch it pixels stretch and you don't watch them shift around.
Like there's some bad math happening.
And, uh, and that made, it made it feel more solid and more immersive.
And, uh, and to us, I think it was just common sense.
Like, yeah, you just don't want technical problems in the engine at all.
Like to be able to tell that, you know, that there's anything wrong.
And I'm still making levels in my spare time for doom.
And it's just super, super solid.
It was such a solid engine and also quake.
Like when the grenade pounces off a wall, it, it feels like it's a real solid world.
You know, it's, it's not like just some little stick that's bouncing around somewhere with bad physics.
You know, it actually feels really good.
Yeah.
That was always a great deal of pride for me.
And this, the solidity of the worlds, the id games had a feel to them.
I mean, even in Wolfenstein where there's not many things going on, but that carried through from Wolfenstein to doom to quake,
where maybe there would be some more kind of flashy things you might do, but if they didn't feel solid, I didn't want to do them.
And in hindsight, you know, I, I was probably pushed a little bit further on that.
Then I, if I could go back, I would bend a little bit more for in the name of kind of cool flashy flash stuff.
Um, that might not be quite as solid, but it was, it was my look and my vibe for things.
And I, and it, it stood us well.
Yep.
So we're just about, we're, we're creeping up to the five minute marker before we have to wind down.
This hour obviously has been flying by, so I'll try to get in a couple more questions.
Um, I think the biggest one is, you know, doom means so much to many people.
You both made so many foundational foundational games from Keen, Wolfenstein, doom quake, but, um, doom seems to be maybe extra special.
I don't want to make you choose between your children or anything, but the community even today is still so active.
I wonder what is it about doom that is, that is so special to you, or maybe the first memory of doom's development that comes to mind.
And John Carmack, I'll start with you.
So, I mean, I would agree.
I think that doom is probably the most culturally iconic thing that we did where it did seem like this perfect storm of everything landing.
Right.
And there's everything can be improved.
I mean, I could have made everything better.
The graphics, the networking and the gameplay, and all of it could have been better.
But we talk about like S curves where you've got a sinusoidal improvement and doom is like way up on this curve where you could push a lot.
harder and not make much absolute difference in it.
It was, you know, as close to the perfect game as, you know, anything that I think that we made where Quake was much more ambitious and it did not reach all of its goals.
It probably did, like I said earlier, lead to more careers in software development.
There's more software developers and game developers that would look back on Quake as the thing that kind of pushed them into their life path.
But doom landed broader for, you know, for almost everyone.
Just like recently, I was talking to a musician.
He was like, oh, you made doom.
And that was something that had stuck with him.
And, you know, at this age now, 30 years on, everybody's aged up.
And of course, for the kids now, they've got their new generations of games.
But, you know, now you run into the CEOs of the major corporations that are like, oh, that was formative in my college years.
So it was something where it's rare to have things come together and probably exceed even your initial views form.
We didn't get all the things that we thought we wanted at the beginning, but the sum total impact of it really was greater than, you know, certainly I had high expectations for it.
And I think Doom as the full holistic release and culture around it exceeded anything that I imagined.
Yeah, I totally agree with that.
You know, I think one of the interesting differences with the Doom development or with Doom's development than any other game that we had made together was the earlier games were like training wheel games.
Like we were really making them fast.
Like these are games are being done in two months, sometimes one month.
And, you know, so we learned a lot there.
And with Wolfenstein, we finally had the time to just spend as much time as we wanted on a game.
And for us, four months to a shareware release was crazy time, you know, like it was twice as long as we ever spent before.
And with Doom, because I think just because of our ambitious start with this cross development next step systems and the scanning that we're going to do with all of the models and everything.
We for the only time really said this game has to be the best thing that we can imagine playing.
And that was, you know, multiplayer was one of those things that was like I've never made played a multiplayer game ever like Doom.
And that was one of those things that we didn't we didn't even put that in until late until October.
And I remember when it was in your office and I was like, oh, man, we don't have multiplayer yet.
And it was like, oh, shit, that's right.
I got to get that book out and learn IPX.
And that was so fast.
Like nowadays, if you're going to build a multiplayer game, you're doing it on day one.
Like you don't do it at the end of shipping the game.
But we had demos earlier.
And, you know, the multiplayer, if you could do demos in some ways, you could do the peer to peer networking.
So it's not as crazy, you know, as it would sound really starting in some massive established game engine, just hacking it in.
Because, yes, that's the that's the classic fan request for game developers.
It's like, oh, can't you add multiplayer now?
And that's a completely unfair thing to ever say to a game developer.
Yeah.
And the in the funny thing about the demos, which is like, I don't know if you've read like speed running has been a thing for a long time since Doom.
And the speed running history books are like Doom is what started speed running because you can now save and load your demos.
And I look back at that and I'm like, we could have just speed running could have started 1990 with Keen because we had all that.
Yeah, that whole looking back and saying when things that later became important could have been started, like so many of the multiplayer things we could have wound up doing in Doom if we had just kind of pushed on that.
But things that seem obvious decades later after somebody else has gone and made something a phenomena are not as obvious when you're in the thick of it.
But, yeah, we we went above and beyond what we had originally kind of hoped and targeted for for that.
But there is a lot more that could have been done.
And I think that's what's what's made it feel like it's gotten legs all of this time because we there was still untapped potential and things that that could still be done on top of it.
Yeah. And I think even though the game was moddable, which was critical to it staying alive for so long and people loving it because we embraced people, people's creativity to make the game what they wanted, that when the source code was released, that really made the game live until today still because it can be kept current on everything.
And as a side product, as a side effect, it's it can now run on everything like pianos and toasters and even CPU coolers, you name it.
Yeah, I wish I wish we had more time to talk about things like that, because that it was interesting where that was a significant debate about releasing the tools.
And I know once, you know, once we had the things that were sort of everyone's worst nightmare, like diesel and making more money than doing to basically all the mods of our games and the struggles in there.
But clearly it helped so much through all of this, but it's still far from a standard.
You know, you do not see game companies nowadays releasing the releasing the source code or even releasing most of the modding stuff.
The modders have better tools to reverse engineer everything, but it's really not with the help and support of the studios.
And that's still kind of a shame.
Yep. Yep.
I do remember that getting, you know, getting the game running and seeing the 3D world in Doom and how it was going to look better than Wolfenstein.
Like it was, it was going to be amazing. The impact of seeing multiplayer running on your computer for the first time when you got the two computers going.
I remember that this day.
Oh my God. And I'm, and I like, the funny thing is like, I went into my office and I was, I was making the E1M7 at the time.
And I was just imagining this, like, I'm looking out the window and I'm seeing two characters fighting, like rockets are flying up, up at a high window and someone else is plasma gunning the other guy.
I'm just like, this is going to be the coolest fucking game the planet has ever seen.
Oh my God. I can't wait to play that. You know, it was awesome.
So, um, yeah, I think, uh, what is it? It's nine. Did you, uh, well, yeah, I would just want to say a quick word as we wind down here.
These guys have gracious me, uh, graciously allowed me to insert a quick plug for a project that I have coming out.
And it's in the vein of what we've been talking about. I'm partnering with boss fight books to release a book called, but does it run doom?
Uh, I'll be, I'll be writing about some of the conventional ports, such as super Nintendo port PlayStation, but also some of the more out of left field ports, uh, such as on pregnancy tests on the sheep and Minecraft.
So, um, look for that, uh, at bus fight at boss fight books on Twitter, boss fight books.com. We'll have information coming out.
And, uh, finally, I just want to thank you both for letting me be a part of this. I'm right with chat. I've just been having a great time just listening to these stories.
Um, thank you both for your time. Thank you everyone for joining us. And was there anything you two wanted to say as we, uh, close up shop here?
Yeah. Uh, first I, oh yeah, go ahead, John, you go, you go, and then I'll go.
So it's been, uh, it's been kind of a happy year for me with, uh, the legacy stuff here where I had a few tense years within software over corporate stuff and we've made up now.
And I was at QuakeCon this year, bringing back some good memories and then being able to do this.
I I've said before that I'm not a very sentimental person that I don't spend a lot of time kind of, uh, reminiscing about the good old days, but, but they were really quite good.
And I am very proud of the things that we built back then and that they have this legacy that has lasted to this day.
So I'm super happy we're able to pull this together.
Yeah. Yeah. Thanks for coming on. Uh, and thanks, just thanks a lot, John.
We've really gave a lot of people a lot of fun for a long time and it was really great to talk to you and it was really great to work together with you.
And I'm really glad that we did all the things that we did.
It would have been awesome if you could have made it out to QuakeCon this year with us.
We've, we should do that some point in the future.
Totally. I mean, I, I, I will absolutely do that because I really love QuakeCon and, uh, you know, it's, it's community and I really want to thank everybody in the Doom community, you know, for, for keeping this game alive.
And, uh, and really just thanks for playing our games, everybody.
All right.
All right. We will see you all later.
It's been a fun time. Doom's 30th.
Take it easy.
All right. Bye-bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
Bye.
