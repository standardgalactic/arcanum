by a letter some fixed number of positions down the alphabet.4 The Roman
historian Suetonius (ca. 69–after 122) wrote about Caesar as follows in The
Twelve Caesars:
If he had anything confidential to say, he wrote it in cipher, that is, by so changing the order of the
letters of the alphabet that not a word could be made out. If anyone wishes to decipher these, and get
at their meaning, he must substitute the fourth letter of the alphabet, namely D, for A, and so with the
others.
This encryption scheme is shown in figure 8.33. Each letter in the plaintext is
shifted three positions further down the alphabet.
Figure 8.33.
To illustrate how the algorithm works, let us encrypt the message “rerum
omnium magister usus,” a quote by Julius Caesar, which translates to
“experience is the teacher of all things”:
RERUM OMNIUM MAGISTER USUS = UHUXP RPQLXP PDJLVWHU
XVXV
We look up the first letter of the plaintext, R, in the first row of figure 8.33,
and replace it by the letter directly below, U. The same procedure is applied to
the rest of the plaintext, resulting in the ciphertext “uhuxp rpqlxp pdjlvwhu
xvxv.” To decrypt or decipher this message, you have to apply the reverse
operation, that is, shift each letter three positions up the alphabet. If you know
the essential mechanism behind this decryption technique, it is actually not too
difficult to “crack the code,” since there are only twenty-five different
possibilities of shifting each letter a fixed number of positions in the alphabet.

The strategy is simple: Just try all possible shifts and you will eventually recover
the plaintext. If the ciphertext is long enough, the frequency of the occurrence of
certain letters may provide an “educated guess” for the shift value. For instance,
in the English language, the letter E occurs quite frequently, while Q or Z may
give you a hard time in a Scrabble game. If you decrypt a (sufficiently long)
message written in English by using Caesar's cipher, then there is a good chance
that the most frequent letter in the ciphertext will be the one that replaced every
E in the plaintext. This tells you the value of the shift, which is basically the
“key” necessary to decrypt the message.
A more-sophisticated cipher was first described by Giovan Battista Bellaso
(1505–?), but it was reinvented and refined by Blaise de Vigenère (1523–1596),
and therefore it is known today as the “Vigenère cipher.” Although the basic
principle is again shifting letters up or down the alphabet, the Vigenère cipher is
a much safer way of protecting messages than Caesar's cipher. To encrypt a
message, you use a so-called Vigenère table, which is simply a square of shifted
alphabets, as shown in figure 8.34, and, as the second ingredient, a secret
keyword.
Figure 8.34.
The essential idea is to pair each letter in the plaintext with a letter in the

keyword to generate the ciphertext. If the message is longer than the keyword,
then the keyword is repeated again and again. Let us demonstrate the scheme in
an example. Suppose our keyword is “peanut” and the plaintext of our message
is “The cake is in the drawer.” The first row of figure 8.35 contains the plaintext,
and the second row contains the repeated keyword. Now we use the Vigenère
table to encrypt the message.
Figure 8.35.
Any pair of two letters can be thought of as a pair of coordinates on the
Vigenère table. For instance, interpreting the letters in the plaintext as
“horizontal” coordinates and the letters in the keyword as the “vertical”
coordinates, the first pair of letters, consisting of one letter from the plaintext
and one from the keyword, (T, P), yields the letter I, since this is the letter at the
intersection cell of column T and row P in the Vigenère table (see figure 8.34).
The next pair, (H, E), gives L, and so on (see the third row in figure 8.35). In this
way, we obtain a ciphertext, which is much harder to decrypt than the simple
Caesar's cipher, as we are actually using several Caesar's ciphers with different
shift values. Moreover, the shift values depend on both the plaintext and the
keyword. To decrypt and encrypt a message, the keyword must be known.
Hence, before two people, say, Lisa and David, can communicate through
encrypted messages, they have to exchange a keyword, or, more generally, a
“key string” of letters. This might as well be the sequence of letters in a certain
book they both possess, making it very hard for a third person (an eavesdropper)
to decrypt their messages. But before any secure communication between two
parties can start, they must somehow exchange keys. However, if a third party
finds out the key (by spying, for instance), the communication is no longer
secure. That's why the key has to be changed from time to time (similar to how it
is recommended that you renew your passwords for online services at regular
intervals). It is not very practical if Lisa and David have to meet in person every
time they want to renew their key, and, even then, there is always a risk that an
eavesdropper is watching or listening in on the exchange. Exchanging the key is
actually the crucial point in setting up a secure communication channel. No
matter how complex the decryption algorithm is, the communication between
Lisa and David will only be secure as long as the key is not known by anyone
else. But how can they be sure that their key has not yet been discovered by a

third party? Well, it has long been thought that they can never be sure, and, thus,
any cryptographic system can be broken, because there is no way to exchange a
key without leaving at least a tiny loophole for potential eavesdroppers.
Surprisingly, there exist two wonderful solutions to the problem of secure key
exchange: one is based on an ingenious mathematical idea, and one is provided
by quantum physics. We will not delve into the latter, but we will try to explain
the brilliant mathematical idea underlying what is now known as the “Diffie-
Hellman-Merkle key exchange.” In short, the method allows two parties to
jointly establish a shared secret key over an insecure channel. There is no need
to use secure communication, or institute any other measures of security in the
key-exchange process, since the key itself is not actually exchanged, at least not
in the usual sense. Both parties create their joint key “at home,” and the only
information they need to exchange for this purpose can even be transmitted over
a public channel, or, for example, even on a public website. So, how does this
work?
Let us first consider a simple, but insecure, method of how Lisa and David can
create a joint key without having to transmit the key itself. Lisa and David agree
on an arbitrary integer, g. Then Lisa chooses an integer a, computes ga, and
sends this number to David. Then David chooses an integer, b, computes gb, and
sends the result to Lisa, who then takes the a-th power of the number she
received, obtaining (gb)a = gb∙a. Continuing along, David, on the other hand,
